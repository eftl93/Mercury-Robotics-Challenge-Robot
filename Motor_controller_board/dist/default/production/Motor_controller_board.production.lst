

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Sep 01 18:04:47 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Version 2.35
    40                           ; Generated 05/05/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000000                     _TRISC	set	3988
    75   000000                     _TRISB	set	3987
    76   000000                     _TRISD	set	3989
    77   000000                     _SSP1CON1bits	set	4038
    78   000000                     _TRISAbits	set	3986
    79   000000                     _TRISBbits	set	3987
    80   000000                     _TRISCbits	set	3988
    81   000000                     _TRISDbits	set	3989
    82   000000                     _GIE	set	32663
    83   000000                     _PEIE	set	32662
    84   000000                     _VREFCON1	set	3905
    85   000000                     _VREFCON0	set	3906
    86   000000                     _CTMUCONH	set	3909
    87   000000                     _SSP2CON1	set	3948
    88   000000                     _SSP1CON1	set	4038
    89   000000                     _ANSELE	set	3900
    90   000000                     _ANSELD	set	3899
    91   000000                     _ANSELC	set	3898
    92   000000                     _ANSELB	set	3897
    93   000000                     _ANSELA	set	3896
    94   000000                     _RCON	set	4048
    95   000000                     _INTCON	set	4082
    96   000000                     _SSP1BUF	set	4041
    97   000000                     _SSP1CON3	set	4043
    98   000000                     _SSP1STATbits	set	4039
    99   000000                     _CM2CON0	set	3960
   100   000000                     _CM1CON0	set	3961
   101   000000                     _PORTAbits	set	3968
   102   000000                     _PORTBbits	set	3969
   103   000000                     _PORTCbits	set	3970
   104   000000                     _TRISA	set	3986
   105   000000                     _HLVDCON	set	3996
   106   000000                     _SRCON0	set	3911
   107   000000                     _PIR1bits	set	3998
   108   000000                     _ADCON1	set	4033
   109   000000                     _ADCON0	set	4034
   110   000000                     _SSP1IE	set	31979
   111   000000                     _PORTDbits	set	3971
   112                           
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116   0017B6                     __pcinit:
   117                           	callstack 0
   118   0017B6                     start_initialization:
   119                           	callstack 0
   120   0017B6                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Clear objects allocated to COMRAM (13 bytes)
   124   0017B6  EE00  F014         	lfsr	0,__pbssCOMRAM
   125   0017BA  0E0D               	movlw	13
   126   0017BC                     clear_0:
   127   0017BC  6AEE               	clrf	postinc0,c
   128   0017BE  06E8               	decf	wreg,f,c
   129   0017C0  E1FD               	bnz	clear_0
   130   0017C2                     end_of_initialization:
   131                           	callstack 0
   132   0017C2                     __end_of__initialization:
   133                           	callstack 0
   134   0017C2  9021               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135   0017C4  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136   0017C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   137   0017C8  6EF8               	movwf	tblptru,c
   138   0017CA  0100               	movlb	0
   139   0017CC  EFAF  F009         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMRAM
   142   000014                     __pbssCOMRAM:
   143                           	callstack 0
   144   000014                     _spi_str_interrupt:
   145                           	callstack 0
   146   000014                     	ds	2
   147   000016                     _recording_on:
   148                           	callstack 0
   149   000016                     	ds	1
   150   000017                     _spi_read_data:
   151                           	callstack 0
   152   000017                     	ds	1
   153   000018                     _signal_distribution_packet:
   154                           	callstack 0
   155   000018                     	ds	9
   156                           
   157                           	psect	cstackCOMRAM
   158   000001                     __pcstackCOMRAM:
   159                           	callstack 0
   160   000001                     ??_SPI_ISR:
   161                           
   162                           ; 1 bytes @ 0x0
   163   000001                     	ds	6
   164   000007                     DATABUS_DIR@dir:
   165                           	callstack 0
   166   000007                     DATABUS@byte0:
   167                           	callstack 0
   168   000007                     chip_select@chip:
   169                           	callstack 0
   170   000007                     spi_data@tx_data:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x6
   174   000007                     	ds	1
   175   000008                     ??_DATABUS:
   176                           
   177                           ; 1 bytes @ 0x7
   178   000008                     	ds	2
   179   00000A                     DATABUS@dir1:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x9
   183   00000A                     	ds	1
   184   00000B                     DATABUS@x:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0xA
   188   00000B                     	ds	1
   189   00000C                     read_status@status:
   190                           	callstack 0
   191   00000C                     write_data@byte2:
   192                           	callstack 0
   193   00000C                     write_command@command:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0xB
   197   00000C                     	ds	1
   198   00000D                     check_busy@x:
   199                           	callstack 0
   200   00000D                     write_data@byte1:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0xC
   204   00000D                     	ds	1
   205   00000E                     ??_LM629_init:
   206   00000E                     
   207                           ; 1 bytes @ 0xD
   208   00000E                     	ds	1
   209   00000F                     LM629_init@x:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0xE
   213   00000F                     	ds	1
   214   000010                     ??_main:
   215                           
   216                           ; 1 bytes @ 0xF
   217   000010                     	ds	2
   218   000012                     main@dummy_data:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x11
   222   000012                     	ds	1
   223   000013                     main@received_data:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x12
   227   000013                     	ds	1
   228                           
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 130 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  received_dat    1   18[COMRAM] unsigned char 
   239 ;;  dummy_data      1   17[COMRAM] unsigned char 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;Total ram usage:        4 bytes
   254 ;; Hardware stack levels required when called: 6
   255 ;; This function calls:
   256 ;;		_LM629_init
   257 ;;		_all_break
   258 ;;		_all_off
   259 ;;		_forward
   260 ;;		_forward_left
   261 ;;		_forward_right
   262 ;;		_left
   263 ;;		_reverse
   264 ;;		_reverse_left
   265 ;;		_reverse_right
   266 ;;		_right
   267 ;;		_spi_data
   268 ;;		_spi_slave_init
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text0
   275   00135E                     __ptext0:
   276                           	callstack 0
   277   00135E                     _main:
   278                           	callstack 25
   279   00135E                     
   280                           ;main.c: 135:     dummy_data = 0x55;
   281   00135E  0E55               	movlw	85
   282   001360  6E12               	movwf	main@dummy_data^0,c
   283   001362                     
   284                           ;main.c: 136:     RCON &= 0x7F;
   285   001362  9ED0               	bcf	208,7,c	;volatile
   286   001364                     
   287                           ;main.c: 137:     INTCON=0;
   288   001364  0E00               	movlw	0
   289   001366  6EF2               	movwf	242,c	;volatile
   290   001368                     
   291                           ;main.c: 138:     ANSELA=0;
   292   001368  0E00               	movlw	0
   293   00136A  010F               	movlb	15	; () banked
   294   00136C  6F38               	movwf	56,b	;volatile
   295   00136E                     
   296                           ; BSR set to: 15
   297                           ;main.c: 139:     ANSELB=0;
   298   00136E  0E00               	movlw	0
   299   001370  6F39               	movwf	57,b	;volatile
   300   001372                     
   301                           ; BSR set to: 15
   302                           ;main.c: 140:     ANSELC=0;
   303   001372  0E00               	movlw	0
   304   001374  6F3A               	movwf	58,b	;volatile
   305   001376                     
   306                           ; BSR set to: 15
   307                           ;main.c: 141:     ANSELD=0;
   308   001376  0E00               	movlw	0
   309   001378  6F3B               	movwf	59,b	;volatile
   310   00137A                     
   311                           ; BSR set to: 15
   312                           ;main.c: 142:     ANSELE=0;
   313   00137A  0E00               	movlw	0
   314   00137C  6F3C               	movwf	60,b	;volatile
   315   00137E                     
   316                           ; BSR set to: 15
   317                           ;main.c: 143:     SSP1CON1=0x00;
   318   00137E  0E00               	movlw	0
   319   001380  6EC6               	movwf	198,c	;volatile
   320   001382                     
   321                           ; BSR set to: 15
   322                           ;main.c: 144:     SSP2CON1=0x00;
   323   001382  0E00               	movlw	0
   324   001384  6E6C               	movwf	108,c	;volatile
   325   001386                     
   326                           ; BSR set to: 15
   327                           ;main.c: 145:     CM1CON0=0b00000000;
   328   001386  0E00               	movlw	0
   329   001388  6E79               	movwf	121,c	;volatile
   330   00138A                     
   331                           ; BSR set to: 15
   332                           ;main.c: 146:     CM2CON0=0b00000000;
   333   00138A  0E00               	movlw	0
   334   00138C  6E78               	movwf	120,c	;volatile
   335   00138E                     
   336                           ; BSR set to: 15
   337                           ;main.c: 147:     TRISA=0xFF;
   338   00138E  6892               	setf	146,c	;volatile
   339   001390                     
   340                           ; BSR set to: 15
   341                           ;main.c: 148:     TRISD=0xFF;
   342   001390  6895               	setf	149,c	;volatile
   343   001392                     
   344                           ; BSR set to: 15
   345                           ;main.c: 149:     TRISB=0xFF;
   346   001392  6893               	setf	147,c	;volatile
   347   001394                     
   348                           ; BSR set to: 15
   349                           ;main.c: 150:     TRISC=0xFF;
   350   001394  6894               	setf	148,c	;volatile
   351   001396                     
   352                           ; BSR set to: 15
   353                           ;main.c: 151:     CTMUCONH=0x00;
   354   001396  0E00               	movlw	0
   355   001398  6F45               	movwf	69,b	;volatile
   356   00139A                     
   357                           ; BSR set to: 15
   358                           ;main.c: 152:     SRCON0=0x00;
   359   00139A  0E00               	movlw	0
   360   00139C  6F47               	movwf	71,b	;volatile
   361   00139E                     
   362                           ; BSR set to: 15
   363                           ;main.c: 153:     VREFCON0=0x00;
   364   00139E  0E00               	movlw	0
   365   0013A0  6F42               	movwf	66,b	;volatile
   366   0013A2                     
   367                           ; BSR set to: 15
   368                           ;main.c: 154:     VREFCON1=0x00;
   369   0013A2  0E00               	movlw	0
   370   0013A4  6F41               	movwf	65,b	;volatile
   371   0013A6                     
   372                           ; BSR set to: 15
   373                           ;main.c: 155:     HLVDCON=0x00;
   374   0013A6  0E00               	movlw	0
   375   0013A8  6E9C               	movwf	156,c	;volatile
   376   0013AA                     
   377                           ; BSR set to: 15
   378                           ;main.c: 156:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   379   0013AA  0E52               	movlw	82
   380   0013AC  6E11               	movwf	(??_main+1)^0,c
   381   0013AE  0E2B               	movlw	43
   382   0013B0  6E10               	movwf	??_main^0,c
   383   0013B2  0E00               	movlw	0
   384   0013B4                     u997:
   385   0013B4  2EE8               	decfsz	wreg,f,c
   386   0013B6  D7FE               	bra	u997
   387   0013B8  2E10               	decfsz	??_main^0,f,c
   388   0013BA  D7FC               	bra	u997
   389   0013BC  2E11               	decfsz	(??_main+1)^0,f,c
   390   0013BE  D7FA               	bra	u997
   391   0013C0  D000               	nop2	
   392   0013C2                     
   393                           ;main.c: 157:     LM629_init();
   394   0013C2  EC72  F000         	call	_LM629_init	;wreg free
   395   0013C6                     
   396                           ;main.c: 158:     spi_slave_init();
   397   0013C6  EC77  F00B         	call	_spi_slave_init	;wreg free
   398   0013CA                     
   399                           ;main.c: 159:     spi_data(dummy_data);
   400   0013CA  0E55               	movlw	85
   401   0013CC  ECF3  F00B         	call	_spi_data
   402   0013D0                     l1830:
   403                           
   404                           ;main.c: 168:     {;main.c: 169:         received_data = spi_read_data;
   405   0013D0  C017  F013         	movff	_spi_read_data,main@received_data	;volatile
   406   0013D4                     
   407                           ;main.c: 171:         if(received_data==0x77)
   408   0013D4  0E77               	movlw	119
   409   0013D6  1813               	xorwf	main@received_data^0,w,c
   410   0013D8  A4D8               	btfss	status,2,c
   411   0013DA  EFF1  F009         	goto	u861
   412   0013DE  EFF3  F009         	goto	u860
   413   0013E2                     u861:
   414   0013E2  EFF9  F009         	goto	l1836
   415   0013E6                     u860:
   416   0013E6                     
   417                           ;main.c: 172:         {;main.c: 173:             all_off();
   418   0013E6  EC8D  F00B         	call	_all_off	;wreg free
   419                           
   420                           ;main.c: 174:             forward();
   421   0013EA  ECD2  F008         	call	_forward	;wreg free
   422                           
   423                           ;main.c: 175:         }
   424   0013EE  EFE8  F009         	goto	l1830
   425   0013F2                     l1836:
   426   0013F2  0E73               	movlw	115
   427   0013F4  1813               	xorwf	main@received_data^0,w,c
   428   0013F6  A4D8               	btfss	status,2,c
   429   0013F8  EF00  F00A         	goto	u871
   430   0013FC  EF02  F00A         	goto	u870
   431   001400                     u871:
   432   001400  EF08  F00A         	goto	l1840
   433   001404                     u870:
   434   001404                     
   435                           ;main.c: 178:         {;main.c: 179:             all_off();
   436   001404  EC8D  F00B         	call	_all_off	;wreg free
   437                           
   438                           ;main.c: 180:             reverse();
   439   001408  EC5E  F005         	call	_reverse	;wreg free
   440                           
   441                           ;main.c: 181:         }
   442   00140C  EFE8  F009         	goto	l1830
   443   001410                     l1840:
   444   001410  0E61               	movlw	97
   445   001412  1813               	xorwf	main@received_data^0,w,c
   446   001414  A4D8               	btfss	status,2,c
   447   001416  EF0F  F00A         	goto	u881
   448   00141A  EF11  F00A         	goto	u880
   449   00141E                     u881:
   450   00141E  EF17  F00A         	goto	l1844
   451   001422                     u880:
   452   001422                     
   453                           ;main.c: 184:         {;main.c: 185:             all_off();
   454   001422  EC8D  F00B         	call	_all_off	;wreg free
   455                           
   456                           ;main.c: 186:             left();
   457   001426  EC3B  F006         	call	_left	;wreg free
   458                           
   459                           ;main.c: 187:         }
   460   00142A  EFE8  F009         	goto	l1830
   461   00142E                     l1844:
   462   00142E  0E64               	movlw	100
   463   001430  1813               	xorwf	main@received_data^0,w,c
   464   001432  A4D8               	btfss	status,2,c
   465   001434  EF1E  F00A         	goto	u891
   466   001438  EF20  F00A         	goto	u890
   467   00143C                     u891:
   468   00143C  EF26  F00A         	goto	l1848
   469   001440                     u890:
   470   001440                     
   471                           ;main.c: 190:         {;main.c: 191:             all_off();
   472   001440  EC8D  F00B         	call	_all_off	;wreg free
   473                           
   474                           ;main.c: 192:             right();
   475   001444  ECC7  F002         	call	_right	;wreg free
   476                           
   477                           ;main.c: 193:         }
   478   001448  EFE8  F009         	goto	l1830
   479   00144C                     l1848:
   480   00144C  0E62               	movlw	98
   481   00144E  1813               	xorwf	main@received_data^0,w,c
   482   001450  A4D8               	btfss	status,2,c
   483   001452  EF2D  F00A         	goto	u901
   484   001456  EF2F  F00A         	goto	u900
   485   00145A                     u901:
   486   00145A  EF33  F00A         	goto	l1852
   487   00145E                     u900:
   488   00145E                     
   489                           ;main.c: 201:         {;main.c: 202:             all_break();
   490   00145E  ECA2  F00B         	call	_all_break	;wreg free
   491                           
   492                           ;main.c: 203:         }
   493   001462  EFE8  F009         	goto	l1830
   494   001466                     l1852:
   495   001466  0E30               	movlw	48
   496   001468  1813               	xorwf	main@received_data^0,w,c
   497   00146A  A4D8               	btfss	status,2,c
   498   00146C  EF3A  F00A         	goto	u911
   499   001470  EF3C  F00A         	goto	u910
   500   001474                     u911:
   501   001474  EF40  F00A         	goto	l1856
   502   001478                     u910:
   503   001478                     
   504                           ;main.c: 206:         {;main.c: 207:             all_off();
   505   001478  EC8D  F00B         	call	_all_off	;wreg free
   506                           
   507                           ;main.c: 208:         }
   508   00147C  EFE8  F009         	goto	l1830
   509   001480                     l1856:
   510   001480  0E34               	movlw	52
   511   001482  1813               	xorwf	main@received_data^0,w,c
   512   001484  A4D8               	btfss	status,2,c
   513   001486  EF47  F00A         	goto	u921
   514   00148A  EF49  F00A         	goto	u920
   515   00148E                     u921:
   516   00148E  EF4F  F00A         	goto	l1860
   517   001492                     u920:
   518   001492                     
   519                           ;main.c: 211:         {;main.c: 212:             all_off();
   520   001492  EC8D  F00B         	call	_all_off	;wreg free
   521                           
   522                           ;main.c: 213:             forward_right();
   523   001496  EC18  F007         	call	_forward_right	;wreg free
   524                           
   525                           ;main.c: 214:         }
   526   00149A  EFE8  F009         	goto	l1830
   527   00149E                     l1860:
   528   00149E  0E31               	movlw	49
   529   0014A0  1813               	xorwf	main@received_data^0,w,c
   530   0014A2  A4D8               	btfss	status,2,c
   531   0014A4  EF56  F00A         	goto	u931
   532   0014A8  EF58  F00A         	goto	u930
   533   0014AC                     u931:
   534   0014AC  EF5E  F00A         	goto	l1864
   535   0014B0                     u930:
   536   0014B0                     
   537                           ;main.c: 217:         {;main.c: 218:             all_off();
   538   0014B0  EC8D  F00B         	call	_all_off	;wreg free
   539                           
   540                           ;main.c: 219:             forward_left();
   541   0014B4  ECF5  F007         	call	_forward_left	;wreg free
   542                           
   543                           ;main.c: 220:         }
   544   0014B8  EFE8  F009         	goto	l1830
   545   0014BC                     l1864:
   546   0014BC  0E32               	movlw	50
   547   0014BE  1813               	xorwf	main@received_data^0,w,c
   548   0014C0  A4D8               	btfss	status,2,c
   549   0014C2  EF65  F00A         	goto	u941
   550   0014C6  EF67  F00A         	goto	u940
   551   0014CA                     u941:
   552   0014CA  EF6D  F00A         	goto	l1868
   553   0014CE                     u940:
   554   0014CE                     
   555                           ;main.c: 223:         {;main.c: 224:             all_off();
   556   0014CE  EC8D  F00B         	call	_all_off	;wreg free
   557                           
   558                           ;main.c: 225:             reverse_left();
   559   0014D2  EC81  F004         	call	_reverse_left	;wreg free
   560                           
   561                           ;main.c: 226:         }
   562   0014D6  EFE8  F009         	goto	l1830
   563   0014DA                     l1868:
   564   0014DA  0E33               	movlw	51
   565   0014DC  1813               	xorwf	main@received_data^0,w,c
   566   0014DE  A4D8               	btfss	status,2,c
   567   0014E0  EF74  F00A         	goto	u951
   568   0014E4  EF76  F00A         	goto	u950
   569   0014E8                     u951:
   570   0014E8  EF7C  F00A         	goto	l91
   571   0014EC                     u950:
   572   0014EC                     
   573                           ;main.c: 229:         {;main.c: 230:             all_off();
   574   0014EC  EC8D  F00B         	call	_all_off	;wreg free
   575                           
   576                           ;main.c: 231:             reverse_right();
   577   0014F0  ECA4  F003         	call	_reverse_right	;wreg free
   578   0014F4  EFE8  F009         	goto	l1830
   579   0014F8                     l91:
   580   0014F8  EFE8  F009         	goto	l1830
   581   0014FC  EF70  F000         	goto	start
   582   001500                     __end_of_main:
   583                           	callstack 0
   584                           
   585 ;; *************** function _spi_slave_init *****************
   586 ;; Defined at:
   587 ;;		line 16 in file "spi.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used: 1
   607 ;; Hardware stack levels required when called: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text1
   616   0016EE                     __ptext1:
   617                           	callstack 0
   618   0016EE                     _spi_slave_init:
   619                           	callstack 29
   620   0016EE                     
   621                           ;spi.c: 18:     SSP1STATbits.SMP = 0;
   622   0016EE  9EC7               	bcf	199,7,c	;volatile
   623                           
   624                           ;spi.c: 19:     SSP1STATbits.CKE = 1;
   625   0016F0  8CC7               	bsf	199,6,c	;volatile
   626                           
   627                           ;spi.c: 20:     SSP1CON1bits.CKP = 0;
   628   0016F2  98C6               	bcf	198,4,c	;volatile
   629   0016F4                     
   630                           ;spi.c: 21:     SSP1CON1bits.SSPM = 0x04;
   631   0016F4  50C6               	movf	198,w,c	;volatile
   632   0016F6  0BF0               	andlw	-16
   633   0016F8  0904               	iorlw	4
   634   0016FA  6EC6               	movwf	198,c	;volatile
   635                           
   636                           ;spi.c: 22:     SSP1CON3 = 0b00010000;
   637   0016FC  0E10               	movlw	16
   638   0016FE  6ECB               	movwf	203,c	;volatile
   639                           
   640                           ;spi.c: 23:     ADCON0 = 0x00;
   641   001700  0E00               	movlw	0
   642   001702  6EC2               	movwf	194,c	;volatile
   643                           
   644                           ;spi.c: 24:     ADCON1 = 0x00;
   645   001704  0E00               	movlw	0
   646   001706  6EC1               	movwf	193,c	;volatile
   647   001708                     
   648                           ;spi.c: 25:     TRISAbits.RA5 = 1;
   649   001708  8A92               	bsf	146,5,c	;volatile
   650   00170A                     
   651                           ;spi.c: 26:     TRISCbits.RC3 = 1;
   652   00170A  8694               	bsf	148,3,c	;volatile
   653   00170C                     
   654                           ;spi.c: 27:     TRISCbits.RC5 = 0;
   655   00170C  9A94               	bcf	148,5,c	;volatile
   656   00170E                     
   657                           ;spi.c: 28:     TRISCbits.RC4 = 1;
   658   00170E  8894               	bsf	148,4,c	;volatile
   659   001710                     
   660                           ;spi.c: 29:     SSP1IE=1;
   661   001710  869D               	bsf	3997,3,c	;volatile
   662   001712                     
   663                           ;spi.c: 30:     PEIE=1;
   664   001712  8CF2               	bsf	4082,6,c	;volatile
   665   001714                     
   666                           ;spi.c: 31:     GIE=1;
   667   001714  8EF2               	bsf	4082,7,c	;volatile
   668   001716                     
   669                           ;spi.c: 32:     SSP1CON1bits.SSPEN = 1;
   670   001716  8AC6               	bsf	198,5,c	;volatile
   671   001718  0012               	return		;funcret
   672   00171A                     __end_of_spi_slave_init:
   673                           	callstack 0
   674                           
   675 ;; *************** function _spi_data *****************
   676 ;; Defined at:
   677 ;;		line 35 in file "spi.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  tx_data         1    wreg     unsigned char 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  tx_data         1    6[COMRAM] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        1 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text2
   706   0017E6                     __ptext2:
   707                           	callstack 0
   708   0017E6                     _spi_data:
   709                           	callstack 29
   710                           
   711                           ;incstack = 0
   712                           ;spi_data@tx_data stored from wreg
   713   0017E6  6E07               	movwf	spi_data@tx_data^0,c
   714   0017E8                     
   715                           ;spi.c: 35: void spi_data(unsigned char tx_data);spi.c: 36: {;spi.c: 37:     SSP1BUF=tx_
      +                          data;
   716   0017E8  C007  FFC9         	movff	spi_data@tx_data,4041	;volatile
   717   0017EC  0012               	return		;funcret
   718   0017EE                     __end_of_spi_data:
   719                           	callstack 0
   720                           
   721 ;; *************** function _right *****************
   722 ;; Defined at:
   723 ;;		line 631 in file "lm629.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;		None
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, status,2, status,0, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;Total ram usage:        0 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 5
   744 ;; This function calls:
   745 ;;		_check_busy
   746 ;;		_chip_select
   747 ;;		_motor_off
   748 ;;		_write_command
   749 ;;		_write_data
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text3
   756   00058E                     __ptext3:
   757                           	callstack 0
   758   00058E                     _right:
   759                           	callstack 25
   760   00058E                     
   761                           ;lm629.c: 633:     chip_select(0);
   762   00058E  0E00               	movlw	0
   763   000590  EC80  F00A         	call	_chip_select
   764                           
   765                           ;lm629.c: 634:     check_busy();
   766   000594  ECE8  F00B         	call	_check_busy	;wreg free
   767                           
   768                           ;lm629.c: 635:     motor_off();
   769   000598  ECB7  F00B         	call	_motor_off	;wreg free
   770                           
   771                           ;lm629.c: 636:     write_command(0x1F);
   772   00059C  0E1F               	movlw	31
   773   00059E  EC40  F00B         	call	_write_command
   774                           
   775                           ;lm629.c: 637:     check_busy();
   776   0005A2  ECE8  F00B         	call	_check_busy	;wreg free
   777                           
   778                           ;lm629.c: 638:     write_data(0x08,0x28);
   779   0005A6  0E28               	movlw	40
   780   0005A8  6E0C               	movwf	write_data@byte2^0,c
   781   0005AA  0E08               	movlw	8
   782   0005AC  ECF2  F00A         	call	_write_data
   783                           
   784                           ;lm629.c: 639:     check_busy();
   785   0005B0  ECE8  F00B         	call	_check_busy	;wreg free
   786                           
   787                           ;lm629.c: 641:     write_data(0x00,0x00);
   788   0005B4  0E00               	movlw	0
   789   0005B6  6E0C               	movwf	write_data@byte2^0,c
   790   0005B8  0E00               	movlw	0
   791   0005BA  ECF2  F00A         	call	_write_data
   792                           
   793                           ;lm629.c: 642:     check_busy();
   794   0005BE  ECE8  F00B         	call	_check_busy	;wreg free
   795                           
   796                           ;lm629.c: 643:     write_data(0x00,0x48);
   797   0005C2  0E48               	movlw	72
   798   0005C4  6E0C               	movwf	write_data@byte2^0,c
   799   0005C6  0E00               	movlw	0
   800   0005C8  ECF2  F00A         	call	_write_data
   801                           
   802                           ;lm629.c: 644:     check_busy();
   803   0005CC  ECE8  F00B         	call	_check_busy	;wreg free
   804                           
   805                           ;lm629.c: 646:     write_data(0x00,0x01);
   806   0005D0  0E01               	movlw	1
   807   0005D2  6E0C               	movwf	write_data@byte2^0,c
   808   0005D4  0E00               	movlw	0
   809   0005D6  ECF2  F00A         	call	_write_data
   810                           
   811                           ;lm629.c: 647:     check_busy();
   812   0005DA  ECE8  F00B         	call	_check_busy	;wreg free
   813                           
   814                           ;lm629.c: 648:     write_data(0xFA,0xD0);
   815   0005DE  0ED0               	movlw	208
   816   0005E0  6E0C               	movwf	write_data@byte2^0,c
   817   0005E2  0EFA               	movlw	250
   818   0005E4  ECF2  F00A         	call	_write_data
   819                           
   820                           ;lm629.c: 649:     check_busy();
   821   0005E8  ECE8  F00B         	call	_check_busy	;wreg free
   822                           
   823                           ;lm629.c: 652:     chip_select(1);
   824   0005EC  0E01               	movlw	1
   825   0005EE  EC80  F00A         	call	_chip_select
   826                           
   827                           ;lm629.c: 653:     check_busy();
   828   0005F2  ECE8  F00B         	call	_check_busy	;wreg free
   829                           
   830                           ;lm629.c: 654:     motor_off();
   831   0005F6  ECB7  F00B         	call	_motor_off	;wreg free
   832                           
   833                           ;lm629.c: 655:     write_command(0x1F);
   834   0005FA  0E1F               	movlw	31
   835   0005FC  EC40  F00B         	call	_write_command
   836                           
   837                           ;lm629.c: 656:     check_busy();
   838   000600  ECE8  F00B         	call	_check_busy	;wreg free
   839                           
   840                           ;lm629.c: 657:     write_data(0x08,0x28);
   841   000604  0E28               	movlw	40
   842   000606  6E0C               	movwf	write_data@byte2^0,c
   843   000608  0E08               	movlw	8
   844   00060A  ECF2  F00A         	call	_write_data
   845                           
   846                           ;lm629.c: 658:     check_busy();
   847   00060E  ECE8  F00B         	call	_check_busy	;wreg free
   848                           
   849                           ;lm629.c: 660:     write_data(0x00,0x00);
   850   000612  0E00               	movlw	0
   851   000614  6E0C               	movwf	write_data@byte2^0,c
   852   000616  0E00               	movlw	0
   853   000618  ECF2  F00A         	call	_write_data
   854                           
   855                           ;lm629.c: 661:     check_busy();
   856   00061C  ECE8  F00B         	call	_check_busy	;wreg free
   857                           
   858                           ;lm629.c: 662:     write_data(0x00,0x48);
   859   000620  0E48               	movlw	72
   860   000622  6E0C               	movwf	write_data@byte2^0,c
   861   000624  0E00               	movlw	0
   862   000626  ECF2  F00A         	call	_write_data
   863                           
   864                           ;lm629.c: 663:     check_busy();
   865   00062A  ECE8  F00B         	call	_check_busy	;wreg free
   866                           
   867                           ;lm629.c: 665:     write_data(0x00,0x01);
   868   00062E  0E01               	movlw	1
   869   000630  6E0C               	movwf	write_data@byte2^0,c
   870   000632  0E00               	movlw	0
   871   000634  ECF2  F00A         	call	_write_data
   872                           
   873                           ;lm629.c: 666:     check_busy();
   874   000638  ECE8  F00B         	call	_check_busy	;wreg free
   875                           
   876                           ;lm629.c: 667:     write_data(0xFA,0xD0);
   877   00063C  0ED0               	movlw	208
   878   00063E  6E0C               	movwf	write_data@byte2^0,c
   879   000640  0EFA               	movlw	250
   880   000642  ECF2  F00A         	call	_write_data
   881                           
   882                           ;lm629.c: 668:     check_busy();
   883   000646  ECE8  F00B         	call	_check_busy	;wreg free
   884                           
   885                           ;lm629.c: 671:     chip_select(2);
   886   00064A  0E02               	movlw	2
   887   00064C  EC80  F00A         	call	_chip_select
   888                           
   889                           ;lm629.c: 672:     check_busy();
   890   000650  ECE8  F00B         	call	_check_busy	;wreg free
   891                           
   892                           ;lm629.c: 673:     motor_off();
   893   000654  ECB7  F00B         	call	_motor_off	;wreg free
   894                           
   895                           ;lm629.c: 674:     write_command(0x1F);
   896   000658  0E1F               	movlw	31
   897   00065A  EC40  F00B         	call	_write_command
   898                           
   899                           ;lm629.c: 675:     check_busy();
   900   00065E  ECE8  F00B         	call	_check_busy	;wreg free
   901                           
   902                           ;lm629.c: 676:     write_data(0x08,0x28);
   903   000662  0E28               	movlw	40
   904   000664  6E0C               	movwf	write_data@byte2^0,c
   905   000666  0E08               	movlw	8
   906   000668  ECF2  F00A         	call	_write_data
   907                           
   908                           ;lm629.c: 677:     check_busy();
   909   00066C  ECE8  F00B         	call	_check_busy	;wreg free
   910                           
   911                           ;lm629.c: 679:     write_data(0x00,0x00);
   912   000670  0E00               	movlw	0
   913   000672  6E0C               	movwf	write_data@byte2^0,c
   914   000674  0E00               	movlw	0
   915   000676  ECF2  F00A         	call	_write_data
   916                           
   917                           ;lm629.c: 680:     check_busy();
   918   00067A  ECE8  F00B         	call	_check_busy	;wreg free
   919                           
   920                           ;lm629.c: 681:     write_data(0x00,0x48);
   921   00067E  0E48               	movlw	72
   922   000680  6E0C               	movwf	write_data@byte2^0,c
   923   000682  0E00               	movlw	0
   924   000684  ECF2  F00A         	call	_write_data
   925                           
   926                           ;lm629.c: 682:     check_busy();
   927   000688  ECE8  F00B         	call	_check_busy	;wreg free
   928                           
   929                           ;lm629.c: 684:     write_data(0x00,0x01);
   930   00068C  0E01               	movlw	1
   931   00068E  6E0C               	movwf	write_data@byte2^0,c
   932   000690  0E00               	movlw	0
   933   000692  ECF2  F00A         	call	_write_data
   934                           
   935                           ;lm629.c: 685:     check_busy();
   936   000696  ECE8  F00B         	call	_check_busy	;wreg free
   937                           
   938                           ;lm629.c: 686:     write_data(0xFA,0xD0);
   939   00069A  0ED0               	movlw	208
   940   00069C  6E0C               	movwf	write_data@byte2^0,c
   941   00069E  0EFA               	movlw	250
   942   0006A0  ECF2  F00A         	call	_write_data
   943                           
   944                           ;lm629.c: 687:     check_busy();
   945   0006A4  ECE8  F00B         	call	_check_busy	;wreg free
   946                           
   947                           ;lm629.c: 690:     chip_select(3);
   948   0006A8  0E03               	movlw	3
   949   0006AA  EC80  F00A         	call	_chip_select
   950                           
   951                           ;lm629.c: 691:     check_busy();
   952   0006AE  ECE8  F00B         	call	_check_busy	;wreg free
   953                           
   954                           ;lm629.c: 692:     motor_off();
   955   0006B2  ECB7  F00B         	call	_motor_off	;wreg free
   956                           
   957                           ;lm629.c: 693:     write_command(0x1F);
   958   0006B6  0E1F               	movlw	31
   959   0006B8  EC40  F00B         	call	_write_command
   960                           
   961                           ;lm629.c: 694:     check_busy();
   962   0006BC  ECE8  F00B         	call	_check_busy	;wreg free
   963                           
   964                           ;lm629.c: 695:     write_data(0x08,0x28);
   965   0006C0  0E28               	movlw	40
   966   0006C2  6E0C               	movwf	write_data@byte2^0,c
   967   0006C4  0E08               	movlw	8
   968   0006C6  ECF2  F00A         	call	_write_data
   969                           
   970                           ;lm629.c: 696:     check_busy();
   971   0006CA  ECE8  F00B         	call	_check_busy	;wreg free
   972                           
   973                           ;lm629.c: 698:     write_data(0x00,0x00);
   974   0006CE  0E00               	movlw	0
   975   0006D0  6E0C               	movwf	write_data@byte2^0,c
   976   0006D2  0E00               	movlw	0
   977   0006D4  ECF2  F00A         	call	_write_data
   978                           
   979                           ;lm629.c: 699:     check_busy();
   980   0006D8  ECE8  F00B         	call	_check_busy	;wreg free
   981                           
   982                           ;lm629.c: 700:     write_data(0x00,0x48);
   983   0006DC  0E48               	movlw	72
   984   0006DE  6E0C               	movwf	write_data@byte2^0,c
   985   0006E0  0E00               	movlw	0
   986   0006E2  ECF2  F00A         	call	_write_data
   987                           
   988                           ;lm629.c: 701:     check_busy();
   989   0006E6  ECE8  F00B         	call	_check_busy	;wreg free
   990                           
   991                           ;lm629.c: 703:     write_data(0x00,0x01);
   992   0006EA  0E01               	movlw	1
   993   0006EC  6E0C               	movwf	write_data@byte2^0,c
   994   0006EE  0E00               	movlw	0
   995   0006F0  ECF2  F00A         	call	_write_data
   996                           
   997                           ;lm629.c: 704:     check_busy();
   998   0006F4  ECE8  F00B         	call	_check_busy	;wreg free
   999                           
  1000                           ;lm629.c: 705:     write_data(0xFA,0xD0);
  1001   0006F8  0ED0               	movlw	208
  1002   0006FA  6E0C               	movwf	write_data@byte2^0,c
  1003   0006FC  0EFA               	movlw	250
  1004   0006FE  ECF2  F00A         	call	_write_data
  1005                           
  1006                           ;lm629.c: 706:     check_busy();
  1007   000702  ECE8  F00B         	call	_check_busy	;wreg free
  1008                           
  1009                           ;lm629.c: 709:     chip_select(0);
  1010   000706  0E00               	movlw	0
  1011   000708  EC80  F00A         	call	_chip_select
  1012                           
  1013                           ;lm629.c: 710:     write_command(0x01);
  1014   00070C  0E01               	movlw	1
  1015   00070E  EC40  F00B         	call	_write_command
  1016                           
  1017                           ;lm629.c: 711:     check_busy();
  1018   000712  ECE8  F00B         	call	_check_busy	;wreg free
  1019                           
  1020                           ;lm629.c: 713:     chip_select(2);
  1021   000716  0E02               	movlw	2
  1022   000718  EC80  F00A         	call	_chip_select
  1023                           
  1024                           ;lm629.c: 714:     write_command(0x01);
  1025   00071C  0E01               	movlw	1
  1026   00071E  EC40  F00B         	call	_write_command
  1027                           
  1028                           ;lm629.c: 715:     check_busy();
  1029   000722  ECE8  F00B         	call	_check_busy	;wreg free
  1030                           
  1031                           ;lm629.c: 717:     chip_select(1);
  1032   000726  0E01               	movlw	1
  1033   000728  EC80  F00A         	call	_chip_select
  1034                           
  1035                           ;lm629.c: 718:     write_command(0x01);
  1036   00072C  0E01               	movlw	1
  1037   00072E  EC40  F00B         	call	_write_command
  1038                           
  1039                           ;lm629.c: 719:     check_busy();
  1040   000732  ECE8  F00B         	call	_check_busy	;wreg free
  1041                           
  1042                           ;lm629.c: 721:     chip_select(3);
  1043   000736  0E03               	movlw	3
  1044   000738  EC80  F00A         	call	_chip_select
  1045                           
  1046                           ;lm629.c: 722:     write_command(0x01);
  1047   00073C  0E01               	movlw	1
  1048   00073E  EC40  F00B         	call	_write_command
  1049                           
  1050                           ;lm629.c: 723:     check_busy();
  1051   000742  ECE8  F00B         	call	_check_busy	;wreg free
  1052   000746  0012               	return		;funcret
  1053   000748                     __end_of_right:
  1054                           	callstack 0
  1055                           
  1056 ;; *************** function _reverse_right *****************
  1057 ;; Defined at:
  1058 ;;		line 1105 in file "lm629.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1076 ;;Total ram usage:        0 bytes
  1077 ;; Hardware stack levels used: 1
  1078 ;; Hardware stack levels required when called: 5
  1079 ;; This function calls:
  1080 ;;		_check_busy
  1081 ;;		_chip_select
  1082 ;;		_motor_off
  1083 ;;		_write_command
  1084 ;;		_write_data
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text4
  1091   000748                     __ptext4:
  1092                           	callstack 0
  1093   000748                     _reverse_right:
  1094                           	callstack 25
  1095   000748                     
  1096                           ;lm629.c: 1107:     chip_select(1);
  1097   000748  0E01               	movlw	1
  1098   00074A  EC80  F00A         	call	_chip_select
  1099                           
  1100                           ;lm629.c: 1108:     check_busy();
  1101   00074E  ECE8  F00B         	call	_check_busy	;wreg free
  1102                           
  1103                           ;lm629.c: 1109:     motor_off();
  1104   000752  ECB7  F00B         	call	_motor_off	;wreg free
  1105                           
  1106                           ;lm629.c: 1110:     write_command(0x1F);
  1107   000756  0E1F               	movlw	31
  1108   000758  EC40  F00B         	call	_write_command
  1109                           
  1110                           ;lm629.c: 1111:     check_busy();
  1111   00075C  ECE8  F00B         	call	_check_busy	;wreg free
  1112                           
  1113                           ;lm629.c: 1112:     write_data(0x18,0x28);
  1114   000760  0E28               	movlw	40
  1115   000762  6E0C               	movwf	write_data@byte2^0,c
  1116   000764  0E18               	movlw	24
  1117   000766  ECF2  F00A         	call	_write_data
  1118                           
  1119                           ;lm629.c: 1113:     check_busy();
  1120   00076A  ECE8  F00B         	call	_check_busy	;wreg free
  1121                           
  1122                           ;lm629.c: 1115:     write_data(0x00,0x00);
  1123   00076E  0E00               	movlw	0
  1124   000770  6E0C               	movwf	write_data@byte2^0,c
  1125   000772  0E00               	movlw	0
  1126   000774  ECF2  F00A         	call	_write_data
  1127                           
  1128                           ;lm629.c: 1116:     check_busy();
  1129   000778  ECE8  F00B         	call	_check_busy	;wreg free
  1130                           
  1131                           ;lm629.c: 1117:     write_data(0x00,0x48);
  1132   00077C  0E48               	movlw	72
  1133   00077E  6E0C               	movwf	write_data@byte2^0,c
  1134   000780  0E00               	movlw	0
  1135   000782  ECF2  F00A         	call	_write_data
  1136                           
  1137                           ;lm629.c: 1118:     check_busy();
  1138   000786  ECE8  F00B         	call	_check_busy	;wreg free
  1139                           
  1140                           ;lm629.c: 1120:     write_data(0x00,0x00);
  1141   00078A  0E00               	movlw	0
  1142   00078C  6E0C               	movwf	write_data@byte2^0,c
  1143   00078E  0E00               	movlw	0
  1144   000790  ECF2  F00A         	call	_write_data
  1145                           
  1146                           ;lm629.c: 1121:     check_busy();
  1147   000794  ECE8  F00B         	call	_check_busy	;wreg free
  1148                           
  1149                           ;lm629.c: 1122:     write_data(0xFD,0x68);
  1150   000798  0E68               	movlw	104
  1151   00079A  6E0C               	movwf	write_data@byte2^0,c
  1152   00079C  0EFD               	movlw	253
  1153   00079E  ECF2  F00A         	call	_write_data
  1154                           
  1155                           ;lm629.c: 1123:     check_busy();
  1156   0007A2  ECE8  F00B         	call	_check_busy	;wreg free
  1157                           
  1158                           ;lm629.c: 1126:     chip_select(0);
  1159   0007A6  0E00               	movlw	0
  1160   0007A8  EC80  F00A         	call	_chip_select
  1161                           
  1162                           ;lm629.c: 1127:     check_busy();
  1163   0007AC  ECE8  F00B         	call	_check_busy	;wreg free
  1164                           
  1165                           ;lm629.c: 1128:     motor_off();
  1166   0007B0  ECB7  F00B         	call	_motor_off	;wreg free
  1167                           
  1168                           ;lm629.c: 1129:     write_command(0x1F);
  1169   0007B4  0E1F               	movlw	31
  1170   0007B6  EC40  F00B         	call	_write_command
  1171                           
  1172                           ;lm629.c: 1130:     check_busy();
  1173   0007BA  ECE8  F00B         	call	_check_busy	;wreg free
  1174                           
  1175                           ;lm629.c: 1131:     write_data(0x08,0x28);
  1176   0007BE  0E28               	movlw	40
  1177   0007C0  6E0C               	movwf	write_data@byte2^0,c
  1178   0007C2  0E08               	movlw	8
  1179   0007C4  ECF2  F00A         	call	_write_data
  1180                           
  1181                           ;lm629.c: 1132:     check_busy();
  1182   0007C8  ECE8  F00B         	call	_check_busy	;wreg free
  1183                           
  1184                           ;lm629.c: 1134:     write_data(0x00,0x00);
  1185   0007CC  0E00               	movlw	0
  1186   0007CE  6E0C               	movwf	write_data@byte2^0,c
  1187   0007D0  0E00               	movlw	0
  1188   0007D2  ECF2  F00A         	call	_write_data
  1189                           
  1190                           ;lm629.c: 1135:     check_busy();
  1191   0007D6  ECE8  F00B         	call	_check_busy	;wreg free
  1192                           
  1193                           ;lm629.c: 1136:     write_data(0x00,0x48);
  1194   0007DA  0E48               	movlw	72
  1195   0007DC  6E0C               	movwf	write_data@byte2^0,c
  1196   0007DE  0E00               	movlw	0
  1197   0007E0  ECF2  F00A         	call	_write_data
  1198                           
  1199                           ;lm629.c: 1137:     check_busy();
  1200   0007E4  ECE8  F00B         	call	_check_busy	;wreg free
  1201                           
  1202                           ;lm629.c: 1139:     write_data(0x00,0x01);
  1203   0007E8  0E01               	movlw	1
  1204   0007EA  6E0C               	movwf	write_data@byte2^0,c
  1205   0007EC  0E00               	movlw	0
  1206   0007EE  ECF2  F00A         	call	_write_data
  1207                           
  1208                           ;lm629.c: 1140:     check_busy();
  1209   0007F2  ECE8  F00B         	call	_check_busy	;wreg free
  1210                           
  1211                           ;lm629.c: 1141:     write_data(0xFA,0xD0);
  1212   0007F6  0ED0               	movlw	208
  1213   0007F8  6E0C               	movwf	write_data@byte2^0,c
  1214   0007FA  0EFA               	movlw	250
  1215   0007FC  ECF2  F00A         	call	_write_data
  1216                           
  1217                           ;lm629.c: 1142:     check_busy();
  1218   000800  ECE8  F00B         	call	_check_busy	;wreg free
  1219                           
  1220                           ;lm629.c: 1146:     chip_select(3);
  1221   000804  0E03               	movlw	3
  1222   000806  EC80  F00A         	call	_chip_select
  1223                           
  1224                           ;lm629.c: 1147:     check_busy();
  1225   00080A  ECE8  F00B         	call	_check_busy	;wreg free
  1226                           
  1227                           ;lm629.c: 1148:     motor_off();
  1228   00080E  ECB7  F00B         	call	_motor_off	;wreg free
  1229                           
  1230                           ;lm629.c: 1149:     write_command(0x1F);
  1231   000812  0E1F               	movlw	31
  1232   000814  EC40  F00B         	call	_write_command
  1233                           
  1234                           ;lm629.c: 1150:     check_busy();
  1235   000818  ECE8  F00B         	call	_check_busy	;wreg free
  1236                           
  1237                           ;lm629.c: 1151:     write_data(0x08,0x28);
  1238   00081C  0E28               	movlw	40
  1239   00081E  6E0C               	movwf	write_data@byte2^0,c
  1240   000820  0E08               	movlw	8
  1241   000822  ECF2  F00A         	call	_write_data
  1242                           
  1243                           ;lm629.c: 1152:     check_busy();
  1244   000826  ECE8  F00B         	call	_check_busy	;wreg free
  1245                           
  1246                           ;lm629.c: 1154:     write_data(0x00,0x00);
  1247   00082A  0E00               	movlw	0
  1248   00082C  6E0C               	movwf	write_data@byte2^0,c
  1249   00082E  0E00               	movlw	0
  1250   000830  ECF2  F00A         	call	_write_data
  1251                           
  1252                           ;lm629.c: 1155:     check_busy();
  1253   000834  ECE8  F00B         	call	_check_busy	;wreg free
  1254                           
  1255                           ;lm629.c: 1156:     write_data(0x00,0x48);
  1256   000838  0E48               	movlw	72
  1257   00083A  6E0C               	movwf	write_data@byte2^0,c
  1258   00083C  0E00               	movlw	0
  1259   00083E  ECF2  F00A         	call	_write_data
  1260                           
  1261                           ;lm629.c: 1157:     check_busy();
  1262   000842  ECE8  F00B         	call	_check_busy	;wreg free
  1263                           
  1264                           ;lm629.c: 1159:     write_data(0x00,0x01);
  1265   000846  0E01               	movlw	1
  1266   000848  6E0C               	movwf	write_data@byte2^0,c
  1267   00084A  0E00               	movlw	0
  1268   00084C  ECF2  F00A         	call	_write_data
  1269                           
  1270                           ;lm629.c: 1160:     check_busy();
  1271   000850  ECE8  F00B         	call	_check_busy	;wreg free
  1272                           
  1273                           ;lm629.c: 1161:     write_data(0xFA,0xD0);
  1274   000854  0ED0               	movlw	208
  1275   000856  6E0C               	movwf	write_data@byte2^0,c
  1276   000858  0EFA               	movlw	250
  1277   00085A  ECF2  F00A         	call	_write_data
  1278                           
  1279                           ;lm629.c: 1162:     check_busy();
  1280   00085E  ECE8  F00B         	call	_check_busy	;wreg free
  1281                           
  1282                           ;lm629.c: 1164:     chip_select(2);
  1283   000862  0E02               	movlw	2
  1284   000864  EC80  F00A         	call	_chip_select
  1285                           
  1286                           ;lm629.c: 1165:     check_busy();
  1287   000868  ECE8  F00B         	call	_check_busy	;wreg free
  1288                           
  1289                           ;lm629.c: 1166:     motor_off();
  1290   00086C  ECB7  F00B         	call	_motor_off	;wreg free
  1291                           
  1292                           ;lm629.c: 1167:     write_command(0x1F);
  1293   000870  0E1F               	movlw	31
  1294   000872  EC40  F00B         	call	_write_command
  1295                           
  1296                           ;lm629.c: 1168:     check_busy();
  1297   000876  ECE8  F00B         	call	_check_busy	;wreg free
  1298                           
  1299                           ;lm629.c: 1169:     write_data(0x18,0x28);
  1300   00087A  0E28               	movlw	40
  1301   00087C  6E0C               	movwf	write_data@byte2^0,c
  1302   00087E  0E18               	movlw	24
  1303   000880  ECF2  F00A         	call	_write_data
  1304                           
  1305                           ;lm629.c: 1170:     check_busy();
  1306   000884  ECE8  F00B         	call	_check_busy	;wreg free
  1307                           
  1308                           ;lm629.c: 1172:     write_data(0x00,0x00);
  1309   000888  0E00               	movlw	0
  1310   00088A  6E0C               	movwf	write_data@byte2^0,c
  1311   00088C  0E00               	movlw	0
  1312   00088E  ECF2  F00A         	call	_write_data
  1313                           
  1314                           ;lm629.c: 1173:     check_busy();
  1315   000892  ECE8  F00B         	call	_check_busy	;wreg free
  1316                           
  1317                           ;lm629.c: 1174:     write_data(0x00,0x48);
  1318   000896  0E48               	movlw	72
  1319   000898  6E0C               	movwf	write_data@byte2^0,c
  1320   00089A  0E00               	movlw	0
  1321   00089C  ECF2  F00A         	call	_write_data
  1322                           
  1323                           ;lm629.c: 1175:     check_busy();
  1324   0008A0  ECE8  F00B         	call	_check_busy	;wreg free
  1325                           
  1326                           ;lm629.c: 1177:     write_data(0x00,0x00);
  1327   0008A4  0E00               	movlw	0
  1328   0008A6  6E0C               	movwf	write_data@byte2^0,c
  1329   0008A8  0E00               	movlw	0
  1330   0008AA  ECF2  F00A         	call	_write_data
  1331                           
  1332                           ;lm629.c: 1178:     check_busy();
  1333   0008AE  ECE8  F00B         	call	_check_busy	;wreg free
  1334                           
  1335                           ;lm629.c: 1179:     write_data(0xFD,0x68);
  1336   0008B2  0E68               	movlw	104
  1337   0008B4  6E0C               	movwf	write_data@byte2^0,c
  1338   0008B6  0EFD               	movlw	253
  1339   0008B8  ECF2  F00A         	call	_write_data
  1340                           
  1341                           ;lm629.c: 1180:     check_busy();
  1342   0008BC  ECE8  F00B         	call	_check_busy	;wreg free
  1343                           
  1344                           ;lm629.c: 1183:     chip_select(0);
  1345   0008C0  0E00               	movlw	0
  1346   0008C2  EC80  F00A         	call	_chip_select
  1347                           
  1348                           ;lm629.c: 1184:     write_command(0x01);
  1349   0008C6  0E01               	movlw	1
  1350   0008C8  EC40  F00B         	call	_write_command
  1351                           
  1352                           ;lm629.c: 1185:     check_busy();
  1353   0008CC  ECE8  F00B         	call	_check_busy	;wreg free
  1354                           
  1355                           ;lm629.c: 1187:     chip_select(2);
  1356   0008D0  0E02               	movlw	2
  1357   0008D2  EC80  F00A         	call	_chip_select
  1358                           
  1359                           ;lm629.c: 1188:     write_command(0x01);
  1360   0008D6  0E01               	movlw	1
  1361   0008D8  EC40  F00B         	call	_write_command
  1362                           
  1363                           ;lm629.c: 1189:     check_busy();
  1364   0008DC  ECE8  F00B         	call	_check_busy	;wreg free
  1365                           
  1366                           ;lm629.c: 1191:     chip_select(1);
  1367   0008E0  0E01               	movlw	1
  1368   0008E2  EC80  F00A         	call	_chip_select
  1369                           
  1370                           ;lm629.c: 1192:     write_command(0x01);
  1371   0008E6  0E01               	movlw	1
  1372   0008E8  EC40  F00B         	call	_write_command
  1373                           
  1374                           ;lm629.c: 1193:     check_busy();
  1375   0008EC  ECE8  F00B         	call	_check_busy	;wreg free
  1376                           
  1377                           ;lm629.c: 1195:     chip_select(3);
  1378   0008F0  0E03               	movlw	3
  1379   0008F2  EC80  F00A         	call	_chip_select
  1380                           
  1381                           ;lm629.c: 1196:     write_command(0x01);
  1382   0008F6  0E01               	movlw	1
  1383   0008F8  EC40  F00B         	call	_write_command
  1384                           
  1385                           ;lm629.c: 1197:     check_busy();
  1386   0008FC  ECE8  F00B         	call	_check_busy	;wreg free
  1387   000900  0012               	return		;funcret
  1388   000902                     __end_of_reverse_right:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _reverse_left *****************
  1392 ;; Defined at:
  1393 ;;		line 1010 in file "lm629.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 5
  1414 ;; This function calls:
  1415 ;;		_check_busy
  1416 ;;		_chip_select
  1417 ;;		_motor_off
  1418 ;;		_write_command
  1419 ;;		_write_data
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text5
  1426   000902                     __ptext5:
  1427                           	callstack 0
  1428   000902                     _reverse_left:
  1429                           	callstack 25
  1430   000902                     
  1431                           ;lm629.c: 1012:     chip_select(1);
  1432   000902  0E01               	movlw	1
  1433   000904  EC80  F00A         	call	_chip_select
  1434                           
  1435                           ;lm629.c: 1013:     check_busy();
  1436   000908  ECE8  F00B         	call	_check_busy	;wreg free
  1437                           
  1438                           ;lm629.c: 1014:     motor_off();
  1439   00090C  ECB7  F00B         	call	_motor_off	;wreg free
  1440                           
  1441                           ;lm629.c: 1015:     write_command(0x1F);
  1442   000910  0E1F               	movlw	31
  1443   000912  EC40  F00B         	call	_write_command
  1444                           
  1445                           ;lm629.c: 1016:     check_busy();
  1446   000916  ECE8  F00B         	call	_check_busy	;wreg free
  1447                           
  1448                           ;lm629.c: 1017:     write_data(0x18,0x28);
  1449   00091A  0E28               	movlw	40
  1450   00091C  6E0C               	movwf	write_data@byte2^0,c
  1451   00091E  0E18               	movlw	24
  1452   000920  ECF2  F00A         	call	_write_data
  1453                           
  1454                           ;lm629.c: 1018:     check_busy();
  1455   000924  ECE8  F00B         	call	_check_busy	;wreg free
  1456                           
  1457                           ;lm629.c: 1020:     write_data(0x00,0x00);
  1458   000928  0E00               	movlw	0
  1459   00092A  6E0C               	movwf	write_data@byte2^0,c
  1460   00092C  0E00               	movlw	0
  1461   00092E  ECF2  F00A         	call	_write_data
  1462                           
  1463                           ;lm629.c: 1021:     check_busy();
  1464   000932  ECE8  F00B         	call	_check_busy	;wreg free
  1465                           
  1466                           ;lm629.c: 1022:     write_data(0x00,0x48);
  1467   000936  0E48               	movlw	72
  1468   000938  6E0C               	movwf	write_data@byte2^0,c
  1469   00093A  0E00               	movlw	0
  1470   00093C  ECF2  F00A         	call	_write_data
  1471                           
  1472                           ;lm629.c: 1023:     check_busy();
  1473   000940  ECE8  F00B         	call	_check_busy	;wreg free
  1474                           
  1475                           ;lm629.c: 1025:     write_data(0x00,0x01);
  1476   000944  0E01               	movlw	1
  1477   000946  6E0C               	movwf	write_data@byte2^0,c
  1478   000948  0E00               	movlw	0
  1479   00094A  ECF2  F00A         	call	_write_data
  1480                           
  1481                           ;lm629.c: 1026:     check_busy();
  1482   00094E  ECE8  F00B         	call	_check_busy	;wreg free
  1483                           
  1484                           ;lm629.c: 1027:     write_data(0xFA,0xD0);
  1485   000952  0ED0               	movlw	208
  1486   000954  6E0C               	movwf	write_data@byte2^0,c
  1487   000956  0EFA               	movlw	250
  1488   000958  ECF2  F00A         	call	_write_data
  1489                           
  1490                           ;lm629.c: 1028:     check_busy();
  1491   00095C  ECE8  F00B         	call	_check_busy	;wreg free
  1492                           
  1493                           ;lm629.c: 1031:     chip_select(0);
  1494   000960  0E00               	movlw	0
  1495   000962  EC80  F00A         	call	_chip_select
  1496                           
  1497                           ;lm629.c: 1032:     check_busy();
  1498   000966  ECE8  F00B         	call	_check_busy	;wreg free
  1499                           
  1500                           ;lm629.c: 1033:     motor_off();
  1501   00096A  ECB7  F00B         	call	_motor_off	;wreg free
  1502                           
  1503                           ;lm629.c: 1034:     write_command(0x1F);
  1504   00096E  0E1F               	movlw	31
  1505   000970  EC40  F00B         	call	_write_command
  1506                           
  1507                           ;lm629.c: 1035:     check_busy();
  1508   000974  ECE8  F00B         	call	_check_busy	;wreg free
  1509                           
  1510                           ;lm629.c: 1036:     write_data(0x08,0x28);
  1511   000978  0E28               	movlw	40
  1512   00097A  6E0C               	movwf	write_data@byte2^0,c
  1513   00097C  0E08               	movlw	8
  1514   00097E  ECF2  F00A         	call	_write_data
  1515                           
  1516                           ;lm629.c: 1037:     check_busy();
  1517   000982  ECE8  F00B         	call	_check_busy	;wreg free
  1518                           
  1519                           ;lm629.c: 1039:     write_data(0x00,0x00);
  1520   000986  0E00               	movlw	0
  1521   000988  6E0C               	movwf	write_data@byte2^0,c
  1522   00098A  0E00               	movlw	0
  1523   00098C  ECF2  F00A         	call	_write_data
  1524                           
  1525                           ;lm629.c: 1040:     check_busy();
  1526   000990  ECE8  F00B         	call	_check_busy	;wreg free
  1527                           
  1528                           ;lm629.c: 1041:     write_data(0x00,0x48);
  1529   000994  0E48               	movlw	72
  1530   000996  6E0C               	movwf	write_data@byte2^0,c
  1531   000998  0E00               	movlw	0
  1532   00099A  ECF2  F00A         	call	_write_data
  1533                           
  1534                           ;lm629.c: 1042:     check_busy();
  1535   00099E  ECE8  F00B         	call	_check_busy	;wreg free
  1536                           
  1537                           ;lm629.c: 1044:     write_data(0x00,0x00);
  1538   0009A2  0E00               	movlw	0
  1539   0009A4  6E0C               	movwf	write_data@byte2^0,c
  1540   0009A6  0E00               	movlw	0
  1541   0009A8  ECF2  F00A         	call	_write_data
  1542                           
  1543                           ;lm629.c: 1045:     check_busy();
  1544   0009AC  ECE8  F00B         	call	_check_busy	;wreg free
  1545                           
  1546                           ;lm629.c: 1046:     write_data(0xFD,0x68);
  1547   0009B0  0E68               	movlw	104
  1548   0009B2  6E0C               	movwf	write_data@byte2^0,c
  1549   0009B4  0EFD               	movlw	253
  1550   0009B6  ECF2  F00A         	call	_write_data
  1551                           
  1552                           ;lm629.c: 1047:     check_busy();
  1553   0009BA  ECE8  F00B         	call	_check_busy	;wreg free
  1554                           
  1555                           ;lm629.c: 1051:     chip_select(3);
  1556   0009BE  0E03               	movlw	3
  1557   0009C0  EC80  F00A         	call	_chip_select
  1558                           
  1559                           ;lm629.c: 1052:     check_busy();
  1560   0009C4  ECE8  F00B         	call	_check_busy	;wreg free
  1561                           
  1562                           ;lm629.c: 1053:     motor_off();
  1563   0009C8  ECB7  F00B         	call	_motor_off	;wreg free
  1564                           
  1565                           ;lm629.c: 1054:     write_command(0x1F);
  1566   0009CC  0E1F               	movlw	31
  1567   0009CE  EC40  F00B         	call	_write_command
  1568                           
  1569                           ;lm629.c: 1055:     check_busy();
  1570   0009D2  ECE8  F00B         	call	_check_busy	;wreg free
  1571                           
  1572                           ;lm629.c: 1056:     write_data(0x08,0x28);
  1573   0009D6  0E28               	movlw	40
  1574   0009D8  6E0C               	movwf	write_data@byte2^0,c
  1575   0009DA  0E08               	movlw	8
  1576   0009DC  ECF2  F00A         	call	_write_data
  1577                           
  1578                           ;lm629.c: 1057:     check_busy();
  1579   0009E0  ECE8  F00B         	call	_check_busy	;wreg free
  1580                           
  1581                           ;lm629.c: 1059:     write_data(0x00,0x00);
  1582   0009E4  0E00               	movlw	0
  1583   0009E6  6E0C               	movwf	write_data@byte2^0,c
  1584   0009E8  0E00               	movlw	0
  1585   0009EA  ECF2  F00A         	call	_write_data
  1586                           
  1587                           ;lm629.c: 1060:     check_busy();
  1588   0009EE  ECE8  F00B         	call	_check_busy	;wreg free
  1589                           
  1590                           ;lm629.c: 1061:     write_data(0x00,0x48);
  1591   0009F2  0E48               	movlw	72
  1592   0009F4  6E0C               	movwf	write_data@byte2^0,c
  1593   0009F6  0E00               	movlw	0
  1594   0009F8  ECF2  F00A         	call	_write_data
  1595                           
  1596                           ;lm629.c: 1062:     check_busy();
  1597   0009FC  ECE8  F00B         	call	_check_busy	;wreg free
  1598                           
  1599                           ;lm629.c: 1064:     write_data(0x00,0x00);
  1600   000A00  0E00               	movlw	0
  1601   000A02  6E0C               	movwf	write_data@byte2^0,c
  1602   000A04  0E00               	movlw	0
  1603   000A06  ECF2  F00A         	call	_write_data
  1604                           
  1605                           ;lm629.c: 1065:     check_busy();
  1606   000A0A  ECE8  F00B         	call	_check_busy	;wreg free
  1607                           
  1608                           ;lm629.c: 1066:     write_data(0xFD,0x68);
  1609   000A0E  0E68               	movlw	104
  1610   000A10  6E0C               	movwf	write_data@byte2^0,c
  1611   000A12  0EFD               	movlw	253
  1612   000A14  ECF2  F00A         	call	_write_data
  1613                           
  1614                           ;lm629.c: 1067:     check_busy();
  1615   000A18  ECE8  F00B         	call	_check_busy	;wreg free
  1616                           
  1617                           ;lm629.c: 1069:     chip_select(2);
  1618   000A1C  0E02               	movlw	2
  1619   000A1E  EC80  F00A         	call	_chip_select
  1620                           
  1621                           ;lm629.c: 1070:     check_busy();
  1622   000A22  ECE8  F00B         	call	_check_busy	;wreg free
  1623                           
  1624                           ;lm629.c: 1071:     motor_off();
  1625   000A26  ECB7  F00B         	call	_motor_off	;wreg free
  1626                           
  1627                           ;lm629.c: 1072:     write_command(0x1F);
  1628   000A2A  0E1F               	movlw	31
  1629   000A2C  EC40  F00B         	call	_write_command
  1630                           
  1631                           ;lm629.c: 1073:     check_busy();
  1632   000A30  ECE8  F00B         	call	_check_busy	;wreg free
  1633                           
  1634                           ;lm629.c: 1074:     write_data(0x18,0x28);
  1635   000A34  0E28               	movlw	40
  1636   000A36  6E0C               	movwf	write_data@byte2^0,c
  1637   000A38  0E18               	movlw	24
  1638   000A3A  ECF2  F00A         	call	_write_data
  1639                           
  1640                           ;lm629.c: 1075:     check_busy();
  1641   000A3E  ECE8  F00B         	call	_check_busy	;wreg free
  1642                           
  1643                           ;lm629.c: 1077:     write_data(0x00,0x00);
  1644   000A42  0E00               	movlw	0
  1645   000A44  6E0C               	movwf	write_data@byte2^0,c
  1646   000A46  0E00               	movlw	0
  1647   000A48  ECF2  F00A         	call	_write_data
  1648                           
  1649                           ;lm629.c: 1078:     check_busy();
  1650   000A4C  ECE8  F00B         	call	_check_busy	;wreg free
  1651                           
  1652                           ;lm629.c: 1079:     write_data(0x00,0x48);
  1653   000A50  0E48               	movlw	72
  1654   000A52  6E0C               	movwf	write_data@byte2^0,c
  1655   000A54  0E00               	movlw	0
  1656   000A56  ECF2  F00A         	call	_write_data
  1657                           
  1658                           ;lm629.c: 1080:     check_busy();
  1659   000A5A  ECE8  F00B         	call	_check_busy	;wreg free
  1660                           
  1661                           ;lm629.c: 1082:     write_data(0x00,0x01);
  1662   000A5E  0E01               	movlw	1
  1663   000A60  6E0C               	movwf	write_data@byte2^0,c
  1664   000A62  0E00               	movlw	0
  1665   000A64  ECF2  F00A         	call	_write_data
  1666                           
  1667                           ;lm629.c: 1083:     check_busy();
  1668   000A68  ECE8  F00B         	call	_check_busy	;wreg free
  1669                           
  1670                           ;lm629.c: 1084:     write_data(0xFA,0xD0);
  1671   000A6C  0ED0               	movlw	208
  1672   000A6E  6E0C               	movwf	write_data@byte2^0,c
  1673   000A70  0EFA               	movlw	250
  1674   000A72  ECF2  F00A         	call	_write_data
  1675                           
  1676                           ;lm629.c: 1085:     check_busy();
  1677   000A76  ECE8  F00B         	call	_check_busy	;wreg free
  1678                           
  1679                           ;lm629.c: 1088:     chip_select(0);
  1680   000A7A  0E00               	movlw	0
  1681   000A7C  EC80  F00A         	call	_chip_select
  1682                           
  1683                           ;lm629.c: 1089:     write_command(0x01);
  1684   000A80  0E01               	movlw	1
  1685   000A82  EC40  F00B         	call	_write_command
  1686                           
  1687                           ;lm629.c: 1090:     check_busy();
  1688   000A86  ECE8  F00B         	call	_check_busy	;wreg free
  1689                           
  1690                           ;lm629.c: 1092:     chip_select(2);
  1691   000A8A  0E02               	movlw	2
  1692   000A8C  EC80  F00A         	call	_chip_select
  1693                           
  1694                           ;lm629.c: 1093:     write_command(0x01);
  1695   000A90  0E01               	movlw	1
  1696   000A92  EC40  F00B         	call	_write_command
  1697                           
  1698                           ;lm629.c: 1094:     check_busy();
  1699   000A96  ECE8  F00B         	call	_check_busy	;wreg free
  1700                           
  1701                           ;lm629.c: 1096:     chip_select(1);
  1702   000A9A  0E01               	movlw	1
  1703   000A9C  EC80  F00A         	call	_chip_select
  1704                           
  1705                           ;lm629.c: 1097:     write_command(0x01);
  1706   000AA0  0E01               	movlw	1
  1707   000AA2  EC40  F00B         	call	_write_command
  1708                           
  1709                           ;lm629.c: 1098:     check_busy();
  1710   000AA6  ECE8  F00B         	call	_check_busy	;wreg free
  1711                           
  1712                           ;lm629.c: 1100:     chip_select(3);
  1713   000AAA  0E03               	movlw	3
  1714   000AAC  EC80  F00A         	call	_chip_select
  1715                           
  1716                           ;lm629.c: 1101:     write_command(0x01);
  1717   000AB0  0E01               	movlw	1
  1718   000AB2  EC40  F00B         	call	_write_command
  1719                           
  1720                           ;lm629.c: 1102:     check_busy();
  1721   000AB6  ECE8  F00B         	call	_check_busy	;wreg free
  1722   000ABA  0012               	return		;funcret
  1723   000ABC                     __end_of_reverse_left:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _reverse *****************
  1727 ;; Defined at:
  1728 ;;		line 536 in file "lm629.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 5
  1749 ;; This function calls:
  1750 ;;		_check_busy
  1751 ;;		_chip_select
  1752 ;;		_motor_off
  1753 ;;		_write_command
  1754 ;;		_write_data
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text6
  1761   000ABC                     __ptext6:
  1762                           	callstack 0
  1763   000ABC                     _reverse:
  1764                           	callstack 25
  1765   000ABC                     
  1766                           ;lm629.c: 538:     chip_select(1);
  1767   000ABC  0E01               	movlw	1
  1768   000ABE  EC80  F00A         	call	_chip_select
  1769                           
  1770                           ;lm629.c: 539:     check_busy();
  1771   000AC2  ECE8  F00B         	call	_check_busy	;wreg free
  1772                           
  1773                           ;lm629.c: 540:     motor_off();
  1774   000AC6  ECB7  F00B         	call	_motor_off	;wreg free
  1775                           
  1776                           ;lm629.c: 541:     write_command(0x1F);
  1777   000ACA  0E1F               	movlw	31
  1778   000ACC  EC40  F00B         	call	_write_command
  1779                           
  1780                           ;lm629.c: 542:     check_busy();
  1781   000AD0  ECE8  F00B         	call	_check_busy	;wreg free
  1782                           
  1783                           ;lm629.c: 543:     write_data(0x18,0x28);
  1784   000AD4  0E28               	movlw	40
  1785   000AD6  6E0C               	movwf	write_data@byte2^0,c
  1786   000AD8  0E18               	movlw	24
  1787   000ADA  ECF2  F00A         	call	_write_data
  1788                           
  1789                           ;lm629.c: 544:     check_busy();
  1790   000ADE  ECE8  F00B         	call	_check_busy	;wreg free
  1791                           
  1792                           ;lm629.c: 546:     write_data(0x00,0x00);
  1793   000AE2  0E00               	movlw	0
  1794   000AE4  6E0C               	movwf	write_data@byte2^0,c
  1795   000AE6  0E00               	movlw	0
  1796   000AE8  ECF2  F00A         	call	_write_data
  1797                           
  1798                           ;lm629.c: 547:     check_busy();
  1799   000AEC  ECE8  F00B         	call	_check_busy	;wreg free
  1800                           
  1801                           ;lm629.c: 548:     write_data(0x00,0x48);
  1802   000AF0  0E48               	movlw	72
  1803   000AF2  6E0C               	movwf	write_data@byte2^0,c
  1804   000AF4  0E00               	movlw	0
  1805   000AF6  ECF2  F00A         	call	_write_data
  1806                           
  1807                           ;lm629.c: 549:     check_busy();
  1808   000AFA  ECE8  F00B         	call	_check_busy	;wreg free
  1809                           
  1810                           ;lm629.c: 551:     write_data(0x00,0x01);
  1811   000AFE  0E01               	movlw	1
  1812   000B00  6E0C               	movwf	write_data@byte2^0,c
  1813   000B02  0E00               	movlw	0
  1814   000B04  ECF2  F00A         	call	_write_data
  1815                           
  1816                           ;lm629.c: 552:     check_busy();
  1817   000B08  ECE8  F00B         	call	_check_busy	;wreg free
  1818                           
  1819                           ;lm629.c: 553:     write_data(0xFA,0xD0);
  1820   000B0C  0ED0               	movlw	208
  1821   000B0E  6E0C               	movwf	write_data@byte2^0,c
  1822   000B10  0EFA               	movlw	250
  1823   000B12  ECF2  F00A         	call	_write_data
  1824                           
  1825                           ;lm629.c: 554:     check_busy();
  1826   000B16  ECE8  F00B         	call	_check_busy	;wreg free
  1827                           
  1828                           ;lm629.c: 557:     chip_select(0);
  1829   000B1A  0E00               	movlw	0
  1830   000B1C  EC80  F00A         	call	_chip_select
  1831                           
  1832                           ;lm629.c: 558:     check_busy();
  1833   000B20  ECE8  F00B         	call	_check_busy	;wreg free
  1834                           
  1835                           ;lm629.c: 559:     motor_off();
  1836   000B24  ECB7  F00B         	call	_motor_off	;wreg free
  1837                           
  1838                           ;lm629.c: 560:     write_command(0x1F);
  1839   000B28  0E1F               	movlw	31
  1840   000B2A  EC40  F00B         	call	_write_command
  1841                           
  1842                           ;lm629.c: 561:     check_busy();
  1843   000B2E  ECE8  F00B         	call	_check_busy	;wreg free
  1844                           
  1845                           ;lm629.c: 562:     write_data(0x08,0x28);
  1846   000B32  0E28               	movlw	40
  1847   000B34  6E0C               	movwf	write_data@byte2^0,c
  1848   000B36  0E08               	movlw	8
  1849   000B38  ECF2  F00A         	call	_write_data
  1850                           
  1851                           ;lm629.c: 563:     check_busy();
  1852   000B3C  ECE8  F00B         	call	_check_busy	;wreg free
  1853                           
  1854                           ;lm629.c: 565:     write_data(0x00,0x00);
  1855   000B40  0E00               	movlw	0
  1856   000B42  6E0C               	movwf	write_data@byte2^0,c
  1857   000B44  0E00               	movlw	0
  1858   000B46  ECF2  F00A         	call	_write_data
  1859                           
  1860                           ;lm629.c: 566:     check_busy();
  1861   000B4A  ECE8  F00B         	call	_check_busy	;wreg free
  1862                           
  1863                           ;lm629.c: 567:     write_data(0x00,0x48);
  1864   000B4E  0E48               	movlw	72
  1865   000B50  6E0C               	movwf	write_data@byte2^0,c
  1866   000B52  0E00               	movlw	0
  1867   000B54  ECF2  F00A         	call	_write_data
  1868                           
  1869                           ;lm629.c: 568:     check_busy();
  1870   000B58  ECE8  F00B         	call	_check_busy	;wreg free
  1871                           
  1872                           ;lm629.c: 570:     write_data(0x00,0x01);
  1873   000B5C  0E01               	movlw	1
  1874   000B5E  6E0C               	movwf	write_data@byte2^0,c
  1875   000B60  0E00               	movlw	0
  1876   000B62  ECF2  F00A         	call	_write_data
  1877                           
  1878                           ;lm629.c: 571:     check_busy();
  1879   000B66  ECE8  F00B         	call	_check_busy	;wreg free
  1880                           
  1881                           ;lm629.c: 572:     write_data(0xFA,0xD0);
  1882   000B6A  0ED0               	movlw	208
  1883   000B6C  6E0C               	movwf	write_data@byte2^0,c
  1884   000B6E  0EFA               	movlw	250
  1885   000B70  ECF2  F00A         	call	_write_data
  1886                           
  1887                           ;lm629.c: 573:     check_busy();
  1888   000B74  ECE8  F00B         	call	_check_busy	;wreg free
  1889                           
  1890                           ;lm629.c: 577:     chip_select(3);
  1891   000B78  0E03               	movlw	3
  1892   000B7A  EC80  F00A         	call	_chip_select
  1893                           
  1894                           ;lm629.c: 578:     check_busy();
  1895   000B7E  ECE8  F00B         	call	_check_busy	;wreg free
  1896                           
  1897                           ;lm629.c: 579:     motor_off();
  1898   000B82  ECB7  F00B         	call	_motor_off	;wreg free
  1899                           
  1900                           ;lm629.c: 580:     write_command(0x1F);
  1901   000B86  0E1F               	movlw	31
  1902   000B88  EC40  F00B         	call	_write_command
  1903                           
  1904                           ;lm629.c: 581:     check_busy();
  1905   000B8C  ECE8  F00B         	call	_check_busy	;wreg free
  1906                           
  1907                           ;lm629.c: 582:     write_data(0x08,0x28);
  1908   000B90  0E28               	movlw	40
  1909   000B92  6E0C               	movwf	write_data@byte2^0,c
  1910   000B94  0E08               	movlw	8
  1911   000B96  ECF2  F00A         	call	_write_data
  1912                           
  1913                           ;lm629.c: 583:     check_busy();
  1914   000B9A  ECE8  F00B         	call	_check_busy	;wreg free
  1915                           
  1916                           ;lm629.c: 585:     write_data(0x00,0x00);
  1917   000B9E  0E00               	movlw	0
  1918   000BA0  6E0C               	movwf	write_data@byte2^0,c
  1919   000BA2  0E00               	movlw	0
  1920   000BA4  ECF2  F00A         	call	_write_data
  1921                           
  1922                           ;lm629.c: 586:     check_busy();
  1923   000BA8  ECE8  F00B         	call	_check_busy	;wreg free
  1924                           
  1925                           ;lm629.c: 587:     write_data(0x00,0x48);
  1926   000BAC  0E48               	movlw	72
  1927   000BAE  6E0C               	movwf	write_data@byte2^0,c
  1928   000BB0  0E00               	movlw	0
  1929   000BB2  ECF2  F00A         	call	_write_data
  1930                           
  1931                           ;lm629.c: 588:     check_busy();
  1932   000BB6  ECE8  F00B         	call	_check_busy	;wreg free
  1933                           
  1934                           ;lm629.c: 590:     write_data(0x00,0x01);
  1935   000BBA  0E01               	movlw	1
  1936   000BBC  6E0C               	movwf	write_data@byte2^0,c
  1937   000BBE  0E00               	movlw	0
  1938   000BC0  ECF2  F00A         	call	_write_data
  1939                           
  1940                           ;lm629.c: 591:     check_busy();
  1941   000BC4  ECE8  F00B         	call	_check_busy	;wreg free
  1942                           
  1943                           ;lm629.c: 592:     write_data(0xFA,0xD0);
  1944   000BC8  0ED0               	movlw	208
  1945   000BCA  6E0C               	movwf	write_data@byte2^0,c
  1946   000BCC  0EFA               	movlw	250
  1947   000BCE  ECF2  F00A         	call	_write_data
  1948                           
  1949                           ;lm629.c: 593:     check_busy();
  1950   000BD2  ECE8  F00B         	call	_check_busy	;wreg free
  1951                           
  1952                           ;lm629.c: 595:     chip_select(2);
  1953   000BD6  0E02               	movlw	2
  1954   000BD8  EC80  F00A         	call	_chip_select
  1955                           
  1956                           ;lm629.c: 596:     check_busy();
  1957   000BDC  ECE8  F00B         	call	_check_busy	;wreg free
  1958                           
  1959                           ;lm629.c: 597:     motor_off();
  1960   000BE0  ECB7  F00B         	call	_motor_off	;wreg free
  1961                           
  1962                           ;lm629.c: 598:     write_command(0x1F);
  1963   000BE4  0E1F               	movlw	31
  1964   000BE6  EC40  F00B         	call	_write_command
  1965                           
  1966                           ;lm629.c: 599:     check_busy();
  1967   000BEA  ECE8  F00B         	call	_check_busy	;wreg free
  1968                           
  1969                           ;lm629.c: 600:     write_data(0x18,0x28);
  1970   000BEE  0E28               	movlw	40
  1971   000BF0  6E0C               	movwf	write_data@byte2^0,c
  1972   000BF2  0E18               	movlw	24
  1973   000BF4  ECF2  F00A         	call	_write_data
  1974                           
  1975                           ;lm629.c: 601:     check_busy();
  1976   000BF8  ECE8  F00B         	call	_check_busy	;wreg free
  1977                           
  1978                           ;lm629.c: 603:     write_data(0x00,0x00);
  1979   000BFC  0E00               	movlw	0
  1980   000BFE  6E0C               	movwf	write_data@byte2^0,c
  1981   000C00  0E00               	movlw	0
  1982   000C02  ECF2  F00A         	call	_write_data
  1983                           
  1984                           ;lm629.c: 604:     check_busy();
  1985   000C06  ECE8  F00B         	call	_check_busy	;wreg free
  1986                           
  1987                           ;lm629.c: 605:     write_data(0x00,0x48);
  1988   000C0A  0E48               	movlw	72
  1989   000C0C  6E0C               	movwf	write_data@byte2^0,c
  1990   000C0E  0E00               	movlw	0
  1991   000C10  ECF2  F00A         	call	_write_data
  1992                           
  1993                           ;lm629.c: 606:     check_busy();
  1994   000C14  ECE8  F00B         	call	_check_busy	;wreg free
  1995                           
  1996                           ;lm629.c: 608:     write_data(0x00,0x01);
  1997   000C18  0E01               	movlw	1
  1998   000C1A  6E0C               	movwf	write_data@byte2^0,c
  1999   000C1C  0E00               	movlw	0
  2000   000C1E  ECF2  F00A         	call	_write_data
  2001                           
  2002                           ;lm629.c: 609:     check_busy();
  2003   000C22  ECE8  F00B         	call	_check_busy	;wreg free
  2004                           
  2005                           ;lm629.c: 610:     write_data(0xFA,0xD0);
  2006   000C26  0ED0               	movlw	208
  2007   000C28  6E0C               	movwf	write_data@byte2^0,c
  2008   000C2A  0EFA               	movlw	250
  2009   000C2C  ECF2  F00A         	call	_write_data
  2010                           
  2011                           ;lm629.c: 611:     check_busy();
  2012   000C30  ECE8  F00B         	call	_check_busy	;wreg free
  2013                           
  2014                           ;lm629.c: 614:     chip_select(0);
  2015   000C34  0E00               	movlw	0
  2016   000C36  EC80  F00A         	call	_chip_select
  2017                           
  2018                           ;lm629.c: 615:     write_command(0x01);
  2019   000C3A  0E01               	movlw	1
  2020   000C3C  EC40  F00B         	call	_write_command
  2021                           
  2022                           ;lm629.c: 616:     check_busy();
  2023   000C40  ECE8  F00B         	call	_check_busy	;wreg free
  2024                           
  2025                           ;lm629.c: 618:     chip_select(2);
  2026   000C44  0E02               	movlw	2
  2027   000C46  EC80  F00A         	call	_chip_select
  2028                           
  2029                           ;lm629.c: 619:     write_command(0x01);
  2030   000C4A  0E01               	movlw	1
  2031   000C4C  EC40  F00B         	call	_write_command
  2032                           
  2033                           ;lm629.c: 620:     check_busy();
  2034   000C50  ECE8  F00B         	call	_check_busy	;wreg free
  2035                           
  2036                           ;lm629.c: 622:     chip_select(1);
  2037   000C54  0E01               	movlw	1
  2038   000C56  EC80  F00A         	call	_chip_select
  2039                           
  2040                           ;lm629.c: 623:     write_command(0x01);
  2041   000C5A  0E01               	movlw	1
  2042   000C5C  EC40  F00B         	call	_write_command
  2043                           
  2044                           ;lm629.c: 624:     check_busy();
  2045   000C60  ECE8  F00B         	call	_check_busy	;wreg free
  2046                           
  2047                           ;lm629.c: 626:     chip_select(3);
  2048   000C64  0E03               	movlw	3
  2049   000C66  EC80  F00A         	call	_chip_select
  2050                           
  2051                           ;lm629.c: 627:     write_command(0x01);
  2052   000C6A  0E01               	movlw	1
  2053   000C6C  EC40  F00B         	call	_write_command
  2054                           
  2055                           ;lm629.c: 628:     check_busy();
  2056   000C70  ECE8  F00B         	call	_check_busy	;wreg free
  2057   000C74  0012               	return		;funcret
  2058   000C76                     __end_of_reverse:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _left *****************
  2062 ;; Defined at:
  2063 ;;		line 726 in file "lm629.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 5
  2084 ;; This function calls:
  2085 ;;		_check_busy
  2086 ;;		_chip_select
  2087 ;;		_motor_off
  2088 ;;		_write_command
  2089 ;;		_write_data
  2090 ;; This function is called by:
  2091 ;;		_main
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text7
  2096   000C76                     __ptext7:
  2097                           	callstack 0
  2098   000C76                     _left:
  2099                           	callstack 25
  2100   000C76                     
  2101                           ;lm629.c: 728:     chip_select(0);
  2102   000C76  0E00               	movlw	0
  2103   000C78  EC80  F00A         	call	_chip_select
  2104                           
  2105                           ;lm629.c: 729:     check_busy();
  2106   000C7C  ECE8  F00B         	call	_check_busy	;wreg free
  2107                           
  2108                           ;lm629.c: 730:     motor_off();
  2109   000C80  ECB7  F00B         	call	_motor_off	;wreg free
  2110                           
  2111                           ;lm629.c: 731:     write_command(0x1F);
  2112   000C84  0E1F               	movlw	31
  2113   000C86  EC40  F00B         	call	_write_command
  2114                           
  2115                           ;lm629.c: 732:     check_busy();
  2116   000C8A  ECE8  F00B         	call	_check_busy	;wreg free
  2117                           
  2118                           ;lm629.c: 733:     write_data(0x18,0x28);
  2119   000C8E  0E28               	movlw	40
  2120   000C90  6E0C               	movwf	write_data@byte2^0,c
  2121   000C92  0E18               	movlw	24
  2122   000C94  ECF2  F00A         	call	_write_data
  2123                           
  2124                           ;lm629.c: 734:     check_busy();
  2125   000C98  ECE8  F00B         	call	_check_busy	;wreg free
  2126                           
  2127                           ;lm629.c: 736:     write_data(0x00,0x00);
  2128   000C9C  0E00               	movlw	0
  2129   000C9E  6E0C               	movwf	write_data@byte2^0,c
  2130   000CA0  0E00               	movlw	0
  2131   000CA2  ECF2  F00A         	call	_write_data
  2132                           
  2133                           ;lm629.c: 737:     check_busy();
  2134   000CA6  ECE8  F00B         	call	_check_busy	;wreg free
  2135                           
  2136                           ;lm629.c: 738:     write_data(0x00,0x48);
  2137   000CAA  0E48               	movlw	72
  2138   000CAC  6E0C               	movwf	write_data@byte2^0,c
  2139   000CAE  0E00               	movlw	0
  2140   000CB0  ECF2  F00A         	call	_write_data
  2141                           
  2142                           ;lm629.c: 739:     check_busy();
  2143   000CB4  ECE8  F00B         	call	_check_busy	;wreg free
  2144                           
  2145                           ;lm629.c: 741:     write_data(0x00,0x01);
  2146   000CB8  0E01               	movlw	1
  2147   000CBA  6E0C               	movwf	write_data@byte2^0,c
  2148   000CBC  0E00               	movlw	0
  2149   000CBE  ECF2  F00A         	call	_write_data
  2150                           
  2151                           ;lm629.c: 742:     check_busy();
  2152   000CC2  ECE8  F00B         	call	_check_busy	;wreg free
  2153                           
  2154                           ;lm629.c: 743:     write_data(0xFA,0xD0);
  2155   000CC6  0ED0               	movlw	208
  2156   000CC8  6E0C               	movwf	write_data@byte2^0,c
  2157   000CCA  0EFA               	movlw	250
  2158   000CCC  ECF2  F00A         	call	_write_data
  2159                           
  2160                           ;lm629.c: 744:     check_busy();
  2161   000CD0  ECE8  F00B         	call	_check_busy	;wreg free
  2162                           
  2163                           ;lm629.c: 746:     chip_select(1);
  2164   000CD4  0E01               	movlw	1
  2165   000CD6  EC80  F00A         	call	_chip_select
  2166                           
  2167                           ;lm629.c: 747:     check_busy();
  2168   000CDA  ECE8  F00B         	call	_check_busy	;wreg free
  2169                           
  2170                           ;lm629.c: 748:     motor_off();
  2171   000CDE  ECB7  F00B         	call	_motor_off	;wreg free
  2172                           
  2173                           ;lm629.c: 749:     write_command(0x1F);
  2174   000CE2  0E1F               	movlw	31
  2175   000CE4  EC40  F00B         	call	_write_command
  2176                           
  2177                           ;lm629.c: 750:     check_busy();
  2178   000CE8  ECE8  F00B         	call	_check_busy	;wreg free
  2179                           
  2180                           ;lm629.c: 751:     write_data(0x18,0x28);
  2181   000CEC  0E28               	movlw	40
  2182   000CEE  6E0C               	movwf	write_data@byte2^0,c
  2183   000CF0  0E18               	movlw	24
  2184   000CF2  ECF2  F00A         	call	_write_data
  2185                           
  2186                           ;lm629.c: 752:     check_busy();
  2187   000CF6  ECE8  F00B         	call	_check_busy	;wreg free
  2188                           
  2189                           ;lm629.c: 754:     write_data(0x00,0x00);
  2190   000CFA  0E00               	movlw	0
  2191   000CFC  6E0C               	movwf	write_data@byte2^0,c
  2192   000CFE  0E00               	movlw	0
  2193   000D00  ECF2  F00A         	call	_write_data
  2194                           
  2195                           ;lm629.c: 755:     check_busy();
  2196   000D04  ECE8  F00B         	call	_check_busy	;wreg free
  2197                           
  2198                           ;lm629.c: 756:     write_data(0x00,0x48);
  2199   000D08  0E48               	movlw	72
  2200   000D0A  6E0C               	movwf	write_data@byte2^0,c
  2201   000D0C  0E00               	movlw	0
  2202   000D0E  ECF2  F00A         	call	_write_data
  2203                           
  2204                           ;lm629.c: 757:     check_busy();
  2205   000D12  ECE8  F00B         	call	_check_busy	;wreg free
  2206                           
  2207                           ;lm629.c: 759:     write_data(0x00,0x01);
  2208   000D16  0E01               	movlw	1
  2209   000D18  6E0C               	movwf	write_data@byte2^0,c
  2210   000D1A  0E00               	movlw	0
  2211   000D1C  ECF2  F00A         	call	_write_data
  2212                           
  2213                           ;lm629.c: 760:     check_busy();
  2214   000D20  ECE8  F00B         	call	_check_busy	;wreg free
  2215                           
  2216                           ;lm629.c: 761:     write_data(0xFA,0xD0);
  2217   000D24  0ED0               	movlw	208
  2218   000D26  6E0C               	movwf	write_data@byte2^0,c
  2219   000D28  0EFA               	movlw	250
  2220   000D2A  ECF2  F00A         	call	_write_data
  2221                           
  2222                           ;lm629.c: 762:     check_busy();
  2223   000D2E  ECE8  F00B         	call	_check_busy	;wreg free
  2224                           
  2225                           ;lm629.c: 765:     chip_select(2);
  2226   000D32  0E02               	movlw	2
  2227   000D34  EC80  F00A         	call	_chip_select
  2228                           
  2229                           ;lm629.c: 766:     check_busy();
  2230   000D38  ECE8  F00B         	call	_check_busy	;wreg free
  2231                           
  2232                           ;lm629.c: 767:     motor_off();
  2233   000D3C  ECB7  F00B         	call	_motor_off	;wreg free
  2234                           
  2235                           ;lm629.c: 768:     write_command(0x1F);
  2236   000D40  0E1F               	movlw	31
  2237   000D42  EC40  F00B         	call	_write_command
  2238                           
  2239                           ;lm629.c: 769:     check_busy();
  2240   000D46  ECE8  F00B         	call	_check_busy	;wreg free
  2241                           
  2242                           ;lm629.c: 770:     write_data(0x18,0x28);
  2243   000D4A  0E28               	movlw	40
  2244   000D4C  6E0C               	movwf	write_data@byte2^0,c
  2245   000D4E  0E18               	movlw	24
  2246   000D50  ECF2  F00A         	call	_write_data
  2247                           
  2248                           ;lm629.c: 771:     check_busy();
  2249   000D54  ECE8  F00B         	call	_check_busy	;wreg free
  2250                           
  2251                           ;lm629.c: 773:     write_data(0x00,0x00);
  2252   000D58  0E00               	movlw	0
  2253   000D5A  6E0C               	movwf	write_data@byte2^0,c
  2254   000D5C  0E00               	movlw	0
  2255   000D5E  ECF2  F00A         	call	_write_data
  2256                           
  2257                           ;lm629.c: 774:     check_busy();
  2258   000D62  ECE8  F00B         	call	_check_busy	;wreg free
  2259                           
  2260                           ;lm629.c: 775:     write_data(0x00,0x48);
  2261   000D66  0E48               	movlw	72
  2262   000D68  6E0C               	movwf	write_data@byte2^0,c
  2263   000D6A  0E00               	movlw	0
  2264   000D6C  ECF2  F00A         	call	_write_data
  2265                           
  2266                           ;lm629.c: 776:     check_busy();
  2267   000D70  ECE8  F00B         	call	_check_busy	;wreg free
  2268                           
  2269                           ;lm629.c: 778:     write_data(0x00,0x01);
  2270   000D74  0E01               	movlw	1
  2271   000D76  6E0C               	movwf	write_data@byte2^0,c
  2272   000D78  0E00               	movlw	0
  2273   000D7A  ECF2  F00A         	call	_write_data
  2274                           
  2275                           ;lm629.c: 779:     check_busy();
  2276   000D7E  ECE8  F00B         	call	_check_busy	;wreg free
  2277                           
  2278                           ;lm629.c: 780:     write_data(0xFA,0xD0);
  2279   000D82  0ED0               	movlw	208
  2280   000D84  6E0C               	movwf	write_data@byte2^0,c
  2281   000D86  0EFA               	movlw	250
  2282   000D88  ECF2  F00A         	call	_write_data
  2283                           
  2284                           ;lm629.c: 781:     check_busy();
  2285   000D8C  ECE8  F00B         	call	_check_busy	;wreg free
  2286                           
  2287                           ;lm629.c: 784:     chip_select(3);
  2288   000D90  0E03               	movlw	3
  2289   000D92  EC80  F00A         	call	_chip_select
  2290                           
  2291                           ;lm629.c: 785:     check_busy();
  2292   000D96  ECE8  F00B         	call	_check_busy	;wreg free
  2293                           
  2294                           ;lm629.c: 786:     motor_off();
  2295   000D9A  ECB7  F00B         	call	_motor_off	;wreg free
  2296                           
  2297                           ;lm629.c: 787:     write_command(0x1F);
  2298   000D9E  0E1F               	movlw	31
  2299   000DA0  EC40  F00B         	call	_write_command
  2300                           
  2301                           ;lm629.c: 788:     check_busy();
  2302   000DA4  ECE8  F00B         	call	_check_busy	;wreg free
  2303                           
  2304                           ;lm629.c: 789:     write_data(0x18,0x28);
  2305   000DA8  0E28               	movlw	40
  2306   000DAA  6E0C               	movwf	write_data@byte2^0,c
  2307   000DAC  0E18               	movlw	24
  2308   000DAE  ECF2  F00A         	call	_write_data
  2309                           
  2310                           ;lm629.c: 790:     check_busy();
  2311   000DB2  ECE8  F00B         	call	_check_busy	;wreg free
  2312                           
  2313                           ;lm629.c: 792:     write_data(0x00,0x00);
  2314   000DB6  0E00               	movlw	0
  2315   000DB8  6E0C               	movwf	write_data@byte2^0,c
  2316   000DBA  0E00               	movlw	0
  2317   000DBC  ECF2  F00A         	call	_write_data
  2318                           
  2319                           ;lm629.c: 793:     check_busy();
  2320   000DC0  ECE8  F00B         	call	_check_busy	;wreg free
  2321                           
  2322                           ;lm629.c: 794:     write_data(0x00,0x48);
  2323   000DC4  0E48               	movlw	72
  2324   000DC6  6E0C               	movwf	write_data@byte2^0,c
  2325   000DC8  0E00               	movlw	0
  2326   000DCA  ECF2  F00A         	call	_write_data
  2327                           
  2328                           ;lm629.c: 795:     check_busy();
  2329   000DCE  ECE8  F00B         	call	_check_busy	;wreg free
  2330                           
  2331                           ;lm629.c: 797:     write_data(0x00,0x01);
  2332   000DD2  0E01               	movlw	1
  2333   000DD4  6E0C               	movwf	write_data@byte2^0,c
  2334   000DD6  0E00               	movlw	0
  2335   000DD8  ECF2  F00A         	call	_write_data
  2336                           
  2337                           ;lm629.c: 798:     check_busy();
  2338   000DDC  ECE8  F00B         	call	_check_busy	;wreg free
  2339                           
  2340                           ;lm629.c: 799:     write_data(0xFA,0xD0);
  2341   000DE0  0ED0               	movlw	208
  2342   000DE2  6E0C               	movwf	write_data@byte2^0,c
  2343   000DE4  0EFA               	movlw	250
  2344   000DE6  ECF2  F00A         	call	_write_data
  2345                           
  2346                           ;lm629.c: 800:     check_busy();
  2347   000DEA  ECE8  F00B         	call	_check_busy	;wreg free
  2348                           
  2349                           ;lm629.c: 803:     chip_select(0);
  2350   000DEE  0E00               	movlw	0
  2351   000DF0  EC80  F00A         	call	_chip_select
  2352                           
  2353                           ;lm629.c: 804:     write_command(0x01);
  2354   000DF4  0E01               	movlw	1
  2355   000DF6  EC40  F00B         	call	_write_command
  2356                           
  2357                           ;lm629.c: 805:     check_busy();
  2358   000DFA  ECE8  F00B         	call	_check_busy	;wreg free
  2359                           
  2360                           ;lm629.c: 807:     chip_select(2);
  2361   000DFE  0E02               	movlw	2
  2362   000E00  EC80  F00A         	call	_chip_select
  2363                           
  2364                           ;lm629.c: 808:     write_command(0x01);
  2365   000E04  0E01               	movlw	1
  2366   000E06  EC40  F00B         	call	_write_command
  2367                           
  2368                           ;lm629.c: 809:     check_busy();
  2369   000E0A  ECE8  F00B         	call	_check_busy	;wreg free
  2370                           
  2371                           ;lm629.c: 811:     chip_select(1);
  2372   000E0E  0E01               	movlw	1
  2373   000E10  EC80  F00A         	call	_chip_select
  2374                           
  2375                           ;lm629.c: 812:     write_command(0x01);
  2376   000E14  0E01               	movlw	1
  2377   000E16  EC40  F00B         	call	_write_command
  2378                           
  2379                           ;lm629.c: 813:     check_busy();
  2380   000E1A  ECE8  F00B         	call	_check_busy	;wreg free
  2381                           
  2382                           ;lm629.c: 815:     chip_select(3);
  2383   000E1E  0E03               	movlw	3
  2384   000E20  EC80  F00A         	call	_chip_select
  2385                           
  2386                           ;lm629.c: 816:     write_command(0x01);
  2387   000E24  0E01               	movlw	1
  2388   000E26  EC40  F00B         	call	_write_command
  2389                           
  2390                           ;lm629.c: 817:     check_busy();
  2391   000E2A  ECE8  F00B         	call	_check_busy	;wreg free
  2392   000E2E  0012               	return		;funcret
  2393   000E30                     __end_of_left:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _forward_right *****************
  2397 ;; Defined at:
  2398 ;;		line 915 in file "lm629.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 5
  2419 ;; This function calls:
  2420 ;;		_check_busy
  2421 ;;		_chip_select
  2422 ;;		_motor_off
  2423 ;;		_write_command
  2424 ;;		_write_data
  2425 ;; This function is called by:
  2426 ;;		_main
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text8
  2431   000E30                     __ptext8:
  2432                           	callstack 0
  2433   000E30                     _forward_right:
  2434                           	callstack 25
  2435   000E30                     
  2436                           ;lm629.c: 917:     chip_select(0);
  2437   000E30  0E00               	movlw	0
  2438   000E32  EC80  F00A         	call	_chip_select
  2439                           
  2440                           ;lm629.c: 918:     check_busy();
  2441   000E36  ECE8  F00B         	call	_check_busy	;wreg free
  2442                           
  2443                           ;lm629.c: 919:     motor_off();
  2444   000E3A  ECB7  F00B         	call	_motor_off	;wreg free
  2445                           
  2446                           ;lm629.c: 920:     write_command(0x1F);
  2447   000E3E  0E1F               	movlw	31
  2448   000E40  EC40  F00B         	call	_write_command
  2449                           
  2450                           ;lm629.c: 921:     check_busy();
  2451   000E44  ECE8  F00B         	call	_check_busy	;wreg free
  2452                           
  2453                           ;lm629.c: 922:     write_data(0x18,0x28);
  2454   000E48  0E28               	movlw	40
  2455   000E4A  6E0C               	movwf	write_data@byte2^0,c
  2456   000E4C  0E18               	movlw	24
  2457   000E4E  ECF2  F00A         	call	_write_data
  2458                           
  2459                           ;lm629.c: 923:     check_busy();
  2460   000E52  ECE8  F00B         	call	_check_busy	;wreg free
  2461                           
  2462                           ;lm629.c: 925:     write_data(0x00,0x00);
  2463   000E56  0E00               	movlw	0
  2464   000E58  6E0C               	movwf	write_data@byte2^0,c
  2465   000E5A  0E00               	movlw	0
  2466   000E5C  ECF2  F00A         	call	_write_data
  2467                           
  2468                           ;lm629.c: 926:     check_busy();
  2469   000E60  ECE8  F00B         	call	_check_busy	;wreg free
  2470                           
  2471                           ;lm629.c: 927:     write_data(0x00,0x48);
  2472   000E64  0E48               	movlw	72
  2473   000E66  6E0C               	movwf	write_data@byte2^0,c
  2474   000E68  0E00               	movlw	0
  2475   000E6A  ECF2  F00A         	call	_write_data
  2476                           
  2477                           ;lm629.c: 928:     check_busy();
  2478   000E6E  ECE8  F00B         	call	_check_busy	;wreg free
  2479                           
  2480                           ;lm629.c: 930:     write_data(0x00,0x00);
  2481   000E72  0E00               	movlw	0
  2482   000E74  6E0C               	movwf	write_data@byte2^0,c
  2483   000E76  0E00               	movlw	0
  2484   000E78  ECF2  F00A         	call	_write_data
  2485                           
  2486                           ;lm629.c: 931:     check_busy();
  2487   000E7C  ECE8  F00B         	call	_check_busy	;wreg free
  2488                           
  2489                           ;lm629.c: 932:     write_data(0xFD,0x68);
  2490   000E80  0E68               	movlw	104
  2491   000E82  6E0C               	movwf	write_data@byte2^0,c
  2492   000E84  0EFD               	movlw	253
  2493   000E86  ECF2  F00A         	call	_write_data
  2494                           
  2495                           ;lm629.c: 933:     check_busy();
  2496   000E8A  ECE8  F00B         	call	_check_busy	;wreg free
  2497                           
  2498                           ;lm629.c: 936:     chip_select(1);
  2499   000E8E  0E01               	movlw	1
  2500   000E90  EC80  F00A         	call	_chip_select
  2501                           
  2502                           ;lm629.c: 937:     check_busy();
  2503   000E94  ECE8  F00B         	call	_check_busy	;wreg free
  2504                           
  2505                           ;lm629.c: 938:     motor_off();
  2506   000E98  ECB7  F00B         	call	_motor_off	;wreg free
  2507                           
  2508                           ;lm629.c: 939:     write_command(0x1F);
  2509   000E9C  0E1F               	movlw	31
  2510   000E9E  EC40  F00B         	call	_write_command
  2511                           
  2512                           ;lm629.c: 940:     check_busy();
  2513   000EA2  ECE8  F00B         	call	_check_busy	;wreg free
  2514                           
  2515                           ;lm629.c: 941:     write_data(0x08,0x28);
  2516   000EA6  0E28               	movlw	40
  2517   000EA8  6E0C               	movwf	write_data@byte2^0,c
  2518   000EAA  0E08               	movlw	8
  2519   000EAC  ECF2  F00A         	call	_write_data
  2520                           
  2521                           ;lm629.c: 942:     check_busy();
  2522   000EB0  ECE8  F00B         	call	_check_busy	;wreg free
  2523                           
  2524                           ;lm629.c: 944:     write_data(0x00,0x00);
  2525   000EB4  0E00               	movlw	0
  2526   000EB6  6E0C               	movwf	write_data@byte2^0,c
  2527   000EB8  0E00               	movlw	0
  2528   000EBA  ECF2  F00A         	call	_write_data
  2529                           
  2530                           ;lm629.c: 945:     check_busy();
  2531   000EBE  ECE8  F00B         	call	_check_busy	;wreg free
  2532                           
  2533                           ;lm629.c: 946:     write_data(0x00,0x48);
  2534   000EC2  0E48               	movlw	72
  2535   000EC4  6E0C               	movwf	write_data@byte2^0,c
  2536   000EC6  0E00               	movlw	0
  2537   000EC8  ECF2  F00A         	call	_write_data
  2538                           
  2539                           ;lm629.c: 947:     check_busy();
  2540   000ECC  ECE8  F00B         	call	_check_busy	;wreg free
  2541                           
  2542                           ;lm629.c: 949:     write_data(0x00,0x01);
  2543   000ED0  0E01               	movlw	1
  2544   000ED2  6E0C               	movwf	write_data@byte2^0,c
  2545   000ED4  0E00               	movlw	0
  2546   000ED6  ECF2  F00A         	call	_write_data
  2547                           
  2548                           ;lm629.c: 950:     check_busy();
  2549   000EDA  ECE8  F00B         	call	_check_busy	;wreg free
  2550                           
  2551                           ;lm629.c: 951:     write_data(0xFA,0xD0);
  2552   000EDE  0ED0               	movlw	208
  2553   000EE0  6E0C               	movwf	write_data@byte2^0,c
  2554   000EE2  0EFA               	movlw	250
  2555   000EE4  ECF2  F00A         	call	_write_data
  2556                           
  2557                           ;lm629.c: 952:     check_busy();
  2558   000EE8  ECE8  F00B         	call	_check_busy	;wreg free
  2559                           
  2560                           ;lm629.c: 955:     chip_select(2);
  2561   000EEC  0E02               	movlw	2
  2562   000EEE  EC80  F00A         	call	_chip_select
  2563                           
  2564                           ;lm629.c: 956:     check_busy();
  2565   000EF2  ECE8  F00B         	call	_check_busy	;wreg free
  2566                           
  2567                           ;lm629.c: 957:     motor_off();
  2568   000EF6  ECB7  F00B         	call	_motor_off	;wreg free
  2569                           
  2570                           ;lm629.c: 958:     write_command(0x1F);
  2571   000EFA  0E1F               	movlw	31
  2572   000EFC  EC40  F00B         	call	_write_command
  2573                           
  2574                           ;lm629.c: 959:     check_busy();
  2575   000F00  ECE8  F00B         	call	_check_busy	;wreg free
  2576                           
  2577                           ;lm629.c: 960:     write_data(0x08,0x28);
  2578   000F04  0E28               	movlw	40
  2579   000F06  6E0C               	movwf	write_data@byte2^0,c
  2580   000F08  0E08               	movlw	8
  2581   000F0A  ECF2  F00A         	call	_write_data
  2582                           
  2583                           ;lm629.c: 961:     check_busy();
  2584   000F0E  ECE8  F00B         	call	_check_busy	;wreg free
  2585                           
  2586                           ;lm629.c: 963:     write_data(0x00,0x00);
  2587   000F12  0E00               	movlw	0
  2588   000F14  6E0C               	movwf	write_data@byte2^0,c
  2589   000F16  0E00               	movlw	0
  2590   000F18  ECF2  F00A         	call	_write_data
  2591                           
  2592                           ;lm629.c: 964:     check_busy();
  2593   000F1C  ECE8  F00B         	call	_check_busy	;wreg free
  2594                           
  2595                           ;lm629.c: 965:     write_data(0x00,0x48);
  2596   000F20  0E48               	movlw	72
  2597   000F22  6E0C               	movwf	write_data@byte2^0,c
  2598   000F24  0E00               	movlw	0
  2599   000F26  ECF2  F00A         	call	_write_data
  2600                           
  2601                           ;lm629.c: 966:     check_busy();
  2602   000F2A  ECE8  F00B         	call	_check_busy	;wreg free
  2603                           
  2604                           ;lm629.c: 968:     write_data(0x00,0x01);
  2605   000F2E  0E01               	movlw	1
  2606   000F30  6E0C               	movwf	write_data@byte2^0,c
  2607   000F32  0E00               	movlw	0
  2608   000F34  ECF2  F00A         	call	_write_data
  2609                           
  2610                           ;lm629.c: 969:     check_busy();
  2611   000F38  ECE8  F00B         	call	_check_busy	;wreg free
  2612                           
  2613                           ;lm629.c: 970:     write_data(0xFA,0xD0);
  2614   000F3C  0ED0               	movlw	208
  2615   000F3E  6E0C               	movwf	write_data@byte2^0,c
  2616   000F40  0EFA               	movlw	250
  2617   000F42  ECF2  F00A         	call	_write_data
  2618                           
  2619                           ;lm629.c: 971:     check_busy();
  2620   000F46  ECE8  F00B         	call	_check_busy	;wreg free
  2621                           
  2622                           ;lm629.c: 974:     chip_select(3);
  2623   000F4A  0E03               	movlw	3
  2624   000F4C  EC80  F00A         	call	_chip_select
  2625                           
  2626                           ;lm629.c: 975:     check_busy();
  2627   000F50  ECE8  F00B         	call	_check_busy	;wreg free
  2628                           
  2629                           ;lm629.c: 976:     motor_off();
  2630   000F54  ECB7  F00B         	call	_motor_off	;wreg free
  2631                           
  2632                           ;lm629.c: 977:     write_command(0x1F);
  2633   000F58  0E1F               	movlw	31
  2634   000F5A  EC40  F00B         	call	_write_command
  2635                           
  2636                           ;lm629.c: 978:     check_busy();
  2637   000F5E  ECE8  F00B         	call	_check_busy	;wreg free
  2638                           
  2639                           ;lm629.c: 979:     write_data(0x18,0x28);
  2640   000F62  0E28               	movlw	40
  2641   000F64  6E0C               	movwf	write_data@byte2^0,c
  2642   000F66  0E18               	movlw	24
  2643   000F68  ECF2  F00A         	call	_write_data
  2644                           
  2645                           ;lm629.c: 980:     check_busy();
  2646   000F6C  ECE8  F00B         	call	_check_busy	;wreg free
  2647                           
  2648                           ;lm629.c: 982:     write_data(0x00,0x00);
  2649   000F70  0E00               	movlw	0
  2650   000F72  6E0C               	movwf	write_data@byte2^0,c
  2651   000F74  0E00               	movlw	0
  2652   000F76  ECF2  F00A         	call	_write_data
  2653                           
  2654                           ;lm629.c: 983:     check_busy();
  2655   000F7A  ECE8  F00B         	call	_check_busy	;wreg free
  2656                           
  2657                           ;lm629.c: 984:     write_data(0x00,0x48);
  2658   000F7E  0E48               	movlw	72
  2659   000F80  6E0C               	movwf	write_data@byte2^0,c
  2660   000F82  0E00               	movlw	0
  2661   000F84  ECF2  F00A         	call	_write_data
  2662                           
  2663                           ;lm629.c: 985:     check_busy();
  2664   000F88  ECE8  F00B         	call	_check_busy	;wreg free
  2665                           
  2666                           ;lm629.c: 987:     write_data(0x00,0x00);
  2667   000F8C  0E00               	movlw	0
  2668   000F8E  6E0C               	movwf	write_data@byte2^0,c
  2669   000F90  0E00               	movlw	0
  2670   000F92  ECF2  F00A         	call	_write_data
  2671                           
  2672                           ;lm629.c: 988:     check_busy();
  2673   000F96  ECE8  F00B         	call	_check_busy	;wreg free
  2674                           
  2675                           ;lm629.c: 989:     write_data(0xFD,0x68);
  2676   000F9A  0E68               	movlw	104
  2677   000F9C  6E0C               	movwf	write_data@byte2^0,c
  2678   000F9E  0EFD               	movlw	253
  2679   000FA0  ECF2  F00A         	call	_write_data
  2680                           
  2681                           ;lm629.c: 990:     check_busy();
  2682   000FA4  ECE8  F00B         	call	_check_busy	;wreg free
  2683                           
  2684                           ;lm629.c: 993:     chip_select(0);
  2685   000FA8  0E00               	movlw	0
  2686   000FAA  EC80  F00A         	call	_chip_select
  2687                           
  2688                           ;lm629.c: 994:     write_command(0x01);
  2689   000FAE  0E01               	movlw	1
  2690   000FB0  EC40  F00B         	call	_write_command
  2691                           
  2692                           ;lm629.c: 995:     check_busy();
  2693   000FB4  ECE8  F00B         	call	_check_busy	;wreg free
  2694                           
  2695                           ;lm629.c: 997:     chip_select(2);
  2696   000FB8  0E02               	movlw	2
  2697   000FBA  EC80  F00A         	call	_chip_select
  2698                           
  2699                           ;lm629.c: 998:     write_command(0x01);
  2700   000FBE  0E01               	movlw	1
  2701   000FC0  EC40  F00B         	call	_write_command
  2702                           
  2703                           ;lm629.c: 999:     check_busy();
  2704   000FC4  ECE8  F00B         	call	_check_busy	;wreg free
  2705                           
  2706                           ;lm629.c: 1001:     chip_select(1);
  2707   000FC8  0E01               	movlw	1
  2708   000FCA  EC80  F00A         	call	_chip_select
  2709                           
  2710                           ;lm629.c: 1002:     write_command(0x01);
  2711   000FCE  0E01               	movlw	1
  2712   000FD0  EC40  F00B         	call	_write_command
  2713                           
  2714                           ;lm629.c: 1003:     check_busy();
  2715   000FD4  ECE8  F00B         	call	_check_busy	;wreg free
  2716                           
  2717                           ;lm629.c: 1005:     chip_select(3);
  2718   000FD8  0E03               	movlw	3
  2719   000FDA  EC80  F00A         	call	_chip_select
  2720                           
  2721                           ;lm629.c: 1006:     write_command(0x01);
  2722   000FDE  0E01               	movlw	1
  2723   000FE0  EC40  F00B         	call	_write_command
  2724                           
  2725                           ;lm629.c: 1007:     check_busy();
  2726   000FE4  ECE8  F00B         	call	_check_busy	;wreg free
  2727   000FE8  0012               	return		;funcret
  2728   000FEA                     __end_of_forward_right:
  2729                           	callstack 0
  2730                           
  2731 ;; *************** function _forward_left *****************
  2732 ;; Defined at:
  2733 ;;		line 820 in file "lm629.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0, cstack
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;Total ram usage:        0 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 5
  2754 ;; This function calls:
  2755 ;;		_check_busy
  2756 ;;		_chip_select
  2757 ;;		_motor_off
  2758 ;;		_write_command
  2759 ;;		_write_data
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text9
  2766   000FEA                     __ptext9:
  2767                           	callstack 0
  2768   000FEA                     _forward_left:
  2769                           	callstack 25
  2770   000FEA                     
  2771                           ;lm629.c: 822:     chip_select(0);
  2772   000FEA  0E00               	movlw	0
  2773   000FEC  EC80  F00A         	call	_chip_select
  2774                           
  2775                           ;lm629.c: 823:     check_busy();
  2776   000FF0  ECE8  F00B         	call	_check_busy	;wreg free
  2777                           
  2778                           ;lm629.c: 824:     motor_off();
  2779   000FF4  ECB7  F00B         	call	_motor_off	;wreg free
  2780                           
  2781                           ;lm629.c: 825:     write_command(0x1F);
  2782   000FF8  0E1F               	movlw	31
  2783   000FFA  EC40  F00B         	call	_write_command
  2784                           
  2785                           ;lm629.c: 826:     check_busy();
  2786   000FFE  ECE8  F00B         	call	_check_busy	;wreg free
  2787                           
  2788                           ;lm629.c: 827:     write_data(0x18,0x28);
  2789   001002  0E28               	movlw	40
  2790   001004  6E0C               	movwf	write_data@byte2^0,c
  2791   001006  0E18               	movlw	24
  2792   001008  ECF2  F00A         	call	_write_data
  2793                           
  2794                           ;lm629.c: 828:     check_busy();
  2795   00100C  ECE8  F00B         	call	_check_busy	;wreg free
  2796                           
  2797                           ;lm629.c: 830:     write_data(0x00,0x00);
  2798   001010  0E00               	movlw	0
  2799   001012  6E0C               	movwf	write_data@byte2^0,c
  2800   001014  0E00               	movlw	0
  2801   001016  ECF2  F00A         	call	_write_data
  2802                           
  2803                           ;lm629.c: 831:     check_busy();
  2804   00101A  ECE8  F00B         	call	_check_busy	;wreg free
  2805                           
  2806                           ;lm629.c: 832:     write_data(0x00,0x48);
  2807   00101E  0E48               	movlw	72
  2808   001020  6E0C               	movwf	write_data@byte2^0,c
  2809   001022  0E00               	movlw	0
  2810   001024  ECF2  F00A         	call	_write_data
  2811                           
  2812                           ;lm629.c: 833:     check_busy();
  2813   001028  ECE8  F00B         	call	_check_busy	;wreg free
  2814                           
  2815                           ;lm629.c: 835:     write_data(0x00,0x01);
  2816   00102C  0E01               	movlw	1
  2817   00102E  6E0C               	movwf	write_data@byte2^0,c
  2818   001030  0E00               	movlw	0
  2819   001032  ECF2  F00A         	call	_write_data
  2820                           
  2821                           ;lm629.c: 836:     check_busy();
  2822   001036  ECE8  F00B         	call	_check_busy	;wreg free
  2823                           
  2824                           ;lm629.c: 837:     write_data(0xFA,0xD0);
  2825   00103A  0ED0               	movlw	208
  2826   00103C  6E0C               	movwf	write_data@byte2^0,c
  2827   00103E  0EFA               	movlw	250
  2828   001040  ECF2  F00A         	call	_write_data
  2829                           
  2830                           ;lm629.c: 838:     check_busy();
  2831   001044  ECE8  F00B         	call	_check_busy	;wreg free
  2832                           
  2833                           ;lm629.c: 841:     chip_select(1);
  2834   001048  0E01               	movlw	1
  2835   00104A  EC80  F00A         	call	_chip_select
  2836                           
  2837                           ;lm629.c: 842:     check_busy();
  2838   00104E  ECE8  F00B         	call	_check_busy	;wreg free
  2839                           
  2840                           ;lm629.c: 843:     motor_off();
  2841   001052  ECB7  F00B         	call	_motor_off	;wreg free
  2842                           
  2843                           ;lm629.c: 844:     write_command(0x1F);
  2844   001056  0E1F               	movlw	31
  2845   001058  EC40  F00B         	call	_write_command
  2846                           
  2847                           ;lm629.c: 845:     check_busy();
  2848   00105C  ECE8  F00B         	call	_check_busy	;wreg free
  2849                           
  2850                           ;lm629.c: 846:     write_data(0x08,0x28);
  2851   001060  0E28               	movlw	40
  2852   001062  6E0C               	movwf	write_data@byte2^0,c
  2853   001064  0E08               	movlw	8
  2854   001066  ECF2  F00A         	call	_write_data
  2855                           
  2856                           ;lm629.c: 847:     check_busy();
  2857   00106A  ECE8  F00B         	call	_check_busy	;wreg free
  2858                           
  2859                           ;lm629.c: 849:     write_data(0x00,0x00);
  2860   00106E  0E00               	movlw	0
  2861   001070  6E0C               	movwf	write_data@byte2^0,c
  2862   001072  0E00               	movlw	0
  2863   001074  ECF2  F00A         	call	_write_data
  2864                           
  2865                           ;lm629.c: 850:     check_busy();
  2866   001078  ECE8  F00B         	call	_check_busy	;wreg free
  2867                           
  2868                           ;lm629.c: 851:     write_data(0x00,0x48);
  2869   00107C  0E48               	movlw	72
  2870   00107E  6E0C               	movwf	write_data@byte2^0,c
  2871   001080  0E00               	movlw	0
  2872   001082  ECF2  F00A         	call	_write_data
  2873                           
  2874                           ;lm629.c: 852:     check_busy();
  2875   001086  ECE8  F00B         	call	_check_busy	;wreg free
  2876                           
  2877                           ;lm629.c: 854:     write_data(0x00,0x00);
  2878   00108A  0E00               	movlw	0
  2879   00108C  6E0C               	movwf	write_data@byte2^0,c
  2880   00108E  0E00               	movlw	0
  2881   001090  ECF2  F00A         	call	_write_data
  2882                           
  2883                           ;lm629.c: 855:     check_busy();
  2884   001094  ECE8  F00B         	call	_check_busy	;wreg free
  2885                           
  2886                           ;lm629.c: 856:     write_data(0xFD,0x68);
  2887   001098  0E68               	movlw	104
  2888   00109A  6E0C               	movwf	write_data@byte2^0,c
  2889   00109C  0EFD               	movlw	253
  2890   00109E  ECF2  F00A         	call	_write_data
  2891                           
  2892                           ;lm629.c: 857:     check_busy();
  2893   0010A2  ECE8  F00B         	call	_check_busy	;wreg free
  2894                           
  2895                           ;lm629.c: 860:     chip_select(2);
  2896   0010A6  0E02               	movlw	2
  2897   0010A8  EC80  F00A         	call	_chip_select
  2898                           
  2899                           ;lm629.c: 861:     check_busy();
  2900   0010AC  ECE8  F00B         	call	_check_busy	;wreg free
  2901                           
  2902                           ;lm629.c: 862:     motor_off();
  2903   0010B0  ECB7  F00B         	call	_motor_off	;wreg free
  2904                           
  2905                           ;lm629.c: 863:     write_command(0x1F);
  2906   0010B4  0E1F               	movlw	31
  2907   0010B6  EC40  F00B         	call	_write_command
  2908                           
  2909                           ;lm629.c: 864:     check_busy();
  2910   0010BA  ECE8  F00B         	call	_check_busy	;wreg free
  2911                           
  2912                           ;lm629.c: 865:     write_data(0x08,0x28);
  2913   0010BE  0E28               	movlw	40
  2914   0010C0  6E0C               	movwf	write_data@byte2^0,c
  2915   0010C2  0E08               	movlw	8
  2916   0010C4  ECF2  F00A         	call	_write_data
  2917                           
  2918                           ;lm629.c: 866:     check_busy();
  2919   0010C8  ECE8  F00B         	call	_check_busy	;wreg free
  2920                           
  2921                           ;lm629.c: 868:     write_data(0x00,0x00);
  2922   0010CC  0E00               	movlw	0
  2923   0010CE  6E0C               	movwf	write_data@byte2^0,c
  2924   0010D0  0E00               	movlw	0
  2925   0010D2  ECF2  F00A         	call	_write_data
  2926                           
  2927                           ;lm629.c: 869:     check_busy();
  2928   0010D6  ECE8  F00B         	call	_check_busy	;wreg free
  2929                           
  2930                           ;lm629.c: 870:     write_data(0x00,0x48);
  2931   0010DA  0E48               	movlw	72
  2932   0010DC  6E0C               	movwf	write_data@byte2^0,c
  2933   0010DE  0E00               	movlw	0
  2934   0010E0  ECF2  F00A         	call	_write_data
  2935                           
  2936                           ;lm629.c: 871:     check_busy();
  2937   0010E4  ECE8  F00B         	call	_check_busy	;wreg free
  2938                           
  2939                           ;lm629.c: 873:     write_data(0x00,0x00);
  2940   0010E8  0E00               	movlw	0
  2941   0010EA  6E0C               	movwf	write_data@byte2^0,c
  2942   0010EC  0E00               	movlw	0
  2943   0010EE  ECF2  F00A         	call	_write_data
  2944                           
  2945                           ;lm629.c: 874:     check_busy();
  2946   0010F2  ECE8  F00B         	call	_check_busy	;wreg free
  2947                           
  2948                           ;lm629.c: 875:     write_data(0xFD,0x68);
  2949   0010F6  0E68               	movlw	104
  2950   0010F8  6E0C               	movwf	write_data@byte2^0,c
  2951   0010FA  0EFD               	movlw	253
  2952   0010FC  ECF2  F00A         	call	_write_data
  2953                           
  2954                           ;lm629.c: 876:     check_busy();
  2955   001100  ECE8  F00B         	call	_check_busy	;wreg free
  2956                           
  2957                           ;lm629.c: 879:     chip_select(3);
  2958   001104  0E03               	movlw	3
  2959   001106  EC80  F00A         	call	_chip_select
  2960                           
  2961                           ;lm629.c: 880:     check_busy();
  2962   00110A  ECE8  F00B         	call	_check_busy	;wreg free
  2963                           
  2964                           ;lm629.c: 881:     motor_off();
  2965   00110E  ECB7  F00B         	call	_motor_off	;wreg free
  2966                           
  2967                           ;lm629.c: 882:     write_command(0x1F);
  2968   001112  0E1F               	movlw	31
  2969   001114  EC40  F00B         	call	_write_command
  2970                           
  2971                           ;lm629.c: 883:     check_busy();
  2972   001118  ECE8  F00B         	call	_check_busy	;wreg free
  2973                           
  2974                           ;lm629.c: 884:     write_data(0x18,0x28);
  2975   00111C  0E28               	movlw	40
  2976   00111E  6E0C               	movwf	write_data@byte2^0,c
  2977   001120  0E18               	movlw	24
  2978   001122  ECF2  F00A         	call	_write_data
  2979                           
  2980                           ;lm629.c: 885:     check_busy();
  2981   001126  ECE8  F00B         	call	_check_busy	;wreg free
  2982                           
  2983                           ;lm629.c: 887:     write_data(0x00,0x00);
  2984   00112A  0E00               	movlw	0
  2985   00112C  6E0C               	movwf	write_data@byte2^0,c
  2986   00112E  0E00               	movlw	0
  2987   001130  ECF2  F00A         	call	_write_data
  2988                           
  2989                           ;lm629.c: 888:     check_busy();
  2990   001134  ECE8  F00B         	call	_check_busy	;wreg free
  2991                           
  2992                           ;lm629.c: 889:     write_data(0x00,0x48);
  2993   001138  0E48               	movlw	72
  2994   00113A  6E0C               	movwf	write_data@byte2^0,c
  2995   00113C  0E00               	movlw	0
  2996   00113E  ECF2  F00A         	call	_write_data
  2997                           
  2998                           ;lm629.c: 890:     check_busy();
  2999   001142  ECE8  F00B         	call	_check_busy	;wreg free
  3000                           
  3001                           ;lm629.c: 892:     write_data(0x00,0x01);
  3002   001146  0E01               	movlw	1
  3003   001148  6E0C               	movwf	write_data@byte2^0,c
  3004   00114A  0E00               	movlw	0
  3005   00114C  ECF2  F00A         	call	_write_data
  3006                           
  3007                           ;lm629.c: 893:     check_busy();
  3008   001150  ECE8  F00B         	call	_check_busy	;wreg free
  3009                           
  3010                           ;lm629.c: 894:     write_data(0xFA,0xD0);
  3011   001154  0ED0               	movlw	208
  3012   001156  6E0C               	movwf	write_data@byte2^0,c
  3013   001158  0EFA               	movlw	250
  3014   00115A  ECF2  F00A         	call	_write_data
  3015                           
  3016                           ;lm629.c: 895:     check_busy();
  3017   00115E  ECE8  F00B         	call	_check_busy	;wreg free
  3018                           
  3019                           ;lm629.c: 898:     chip_select(0);
  3020   001162  0E00               	movlw	0
  3021   001164  EC80  F00A         	call	_chip_select
  3022                           
  3023                           ;lm629.c: 899:     write_command(0x01);
  3024   001168  0E01               	movlw	1
  3025   00116A  EC40  F00B         	call	_write_command
  3026                           
  3027                           ;lm629.c: 900:     check_busy();
  3028   00116E  ECE8  F00B         	call	_check_busy	;wreg free
  3029                           
  3030                           ;lm629.c: 902:     chip_select(2);
  3031   001172  0E02               	movlw	2
  3032   001174  EC80  F00A         	call	_chip_select
  3033                           
  3034                           ;lm629.c: 903:     write_command(0x01);
  3035   001178  0E01               	movlw	1
  3036   00117A  EC40  F00B         	call	_write_command
  3037                           
  3038                           ;lm629.c: 904:     check_busy();
  3039   00117E  ECE8  F00B         	call	_check_busy	;wreg free
  3040                           
  3041                           ;lm629.c: 906:     chip_select(1);
  3042   001182  0E01               	movlw	1
  3043   001184  EC80  F00A         	call	_chip_select
  3044                           
  3045                           ;lm629.c: 907:     write_command(0x01);
  3046   001188  0E01               	movlw	1
  3047   00118A  EC40  F00B         	call	_write_command
  3048                           
  3049                           ;lm629.c: 908:     check_busy();
  3050   00118E  ECE8  F00B         	call	_check_busy	;wreg free
  3051                           
  3052                           ;lm629.c: 910:     chip_select(3);
  3053   001192  0E03               	movlw	3
  3054   001194  EC80  F00A         	call	_chip_select
  3055                           
  3056                           ;lm629.c: 911:     write_command(0x01);
  3057   001198  0E01               	movlw	1
  3058   00119A  EC40  F00B         	call	_write_command
  3059                           
  3060                           ;lm629.c: 912:     check_busy();
  3061   00119E  ECE8  F00B         	call	_check_busy	;wreg free
  3062   0011A2  0012               	return		;funcret
  3063   0011A4                     __end_of_forward_left:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _forward *****************
  3067 ;; Defined at:
  3068 ;;		line 440 in file "lm629.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 5
  3089 ;; This function calls:
  3090 ;;		_check_busy
  3091 ;;		_chip_select
  3092 ;;		_motor_off
  3093 ;;		_write_command
  3094 ;;		_write_data
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text10
  3101   0011A4                     __ptext10:
  3102                           	callstack 0
  3103   0011A4                     _forward:
  3104                           	callstack 25
  3105   0011A4                     
  3106                           ;lm629.c: 442:     chip_select(0);
  3107   0011A4  0E00               	movlw	0
  3108   0011A6  EC80  F00A         	call	_chip_select
  3109                           
  3110                           ;lm629.c: 443:     check_busy();
  3111   0011AA  ECE8  F00B         	call	_check_busy	;wreg free
  3112                           
  3113                           ;lm629.c: 444:     motor_off();
  3114   0011AE  ECB7  F00B         	call	_motor_off	;wreg free
  3115                           
  3116                           ;lm629.c: 445:     write_command(0x1F);
  3117   0011B2  0E1F               	movlw	31
  3118   0011B4  EC40  F00B         	call	_write_command
  3119                           
  3120                           ;lm629.c: 446:     check_busy();
  3121   0011B8  ECE8  F00B         	call	_check_busy	;wreg free
  3122                           
  3123                           ;lm629.c: 447:     write_data(0x18,0x28);
  3124   0011BC  0E28               	movlw	40
  3125   0011BE  6E0C               	movwf	write_data@byte2^0,c
  3126   0011C0  0E18               	movlw	24
  3127   0011C2  ECF2  F00A         	call	_write_data
  3128                           
  3129                           ;lm629.c: 448:     check_busy();
  3130   0011C6  ECE8  F00B         	call	_check_busy	;wreg free
  3131                           
  3132                           ;lm629.c: 450:     write_data(0x00,0x00);
  3133   0011CA  0E00               	movlw	0
  3134   0011CC  6E0C               	movwf	write_data@byte2^0,c
  3135   0011CE  0E00               	movlw	0
  3136   0011D0  ECF2  F00A         	call	_write_data
  3137                           
  3138                           ;lm629.c: 451:     check_busy();
  3139   0011D4  ECE8  F00B         	call	_check_busy	;wreg free
  3140                           
  3141                           ;lm629.c: 452:     write_data(0x00,0x48);
  3142   0011D8  0E48               	movlw	72
  3143   0011DA  6E0C               	movwf	write_data@byte2^0,c
  3144   0011DC  0E00               	movlw	0
  3145   0011DE  ECF2  F00A         	call	_write_data
  3146                           
  3147                           ;lm629.c: 453:     check_busy();
  3148   0011E2  ECE8  F00B         	call	_check_busy	;wreg free
  3149                           
  3150                           ;lm629.c: 455:     write_data(0x00,0x01);
  3151   0011E6  0E01               	movlw	1
  3152   0011E8  6E0C               	movwf	write_data@byte2^0,c
  3153   0011EA  0E00               	movlw	0
  3154   0011EC  ECF2  F00A         	call	_write_data
  3155                           
  3156                           ;lm629.c: 456:     check_busy();
  3157   0011F0  ECE8  F00B         	call	_check_busy	;wreg free
  3158                           
  3159                           ;lm629.c: 457:     write_data(0xFA,0xD0);
  3160   0011F4  0ED0               	movlw	208
  3161   0011F6  6E0C               	movwf	write_data@byte2^0,c
  3162   0011F8  0EFA               	movlw	250
  3163   0011FA  ECF2  F00A         	call	_write_data
  3164                           
  3165                           ;lm629.c: 458:     check_busy();
  3166   0011FE  ECE8  F00B         	call	_check_busy	;wreg free
  3167                           
  3168                           ;lm629.c: 461:     chip_select(1);
  3169   001202  0E01               	movlw	1
  3170   001204  EC80  F00A         	call	_chip_select
  3171                           
  3172                           ;lm629.c: 462:     check_busy();
  3173   001208  ECE8  F00B         	call	_check_busy	;wreg free
  3174                           
  3175                           ;lm629.c: 463:     motor_off();
  3176   00120C  ECB7  F00B         	call	_motor_off	;wreg free
  3177                           
  3178                           ;lm629.c: 464:     write_command(0x1F);
  3179   001210  0E1F               	movlw	31
  3180   001212  EC40  F00B         	call	_write_command
  3181                           
  3182                           ;lm629.c: 465:     check_busy();
  3183   001216  ECE8  F00B         	call	_check_busy	;wreg free
  3184                           
  3185                           ;lm629.c: 466:     write_data(0x08,0x28);
  3186   00121A  0E28               	movlw	40
  3187   00121C  6E0C               	movwf	write_data@byte2^0,c
  3188   00121E  0E08               	movlw	8
  3189   001220  ECF2  F00A         	call	_write_data
  3190                           
  3191                           ;lm629.c: 467:     check_busy();
  3192   001224  ECE8  F00B         	call	_check_busy	;wreg free
  3193                           
  3194                           ;lm629.c: 469:     write_data(0x00,0x00);
  3195   001228  0E00               	movlw	0
  3196   00122A  6E0C               	movwf	write_data@byte2^0,c
  3197   00122C  0E00               	movlw	0
  3198   00122E  ECF2  F00A         	call	_write_data
  3199                           
  3200                           ;lm629.c: 470:     check_busy();
  3201   001232  ECE8  F00B         	call	_check_busy	;wreg free
  3202                           
  3203                           ;lm629.c: 471:     write_data(0x00,0x48);
  3204   001236  0E48               	movlw	72
  3205   001238  6E0C               	movwf	write_data@byte2^0,c
  3206   00123A  0E00               	movlw	0
  3207   00123C  ECF2  F00A         	call	_write_data
  3208                           
  3209                           ;lm629.c: 472:     check_busy();
  3210   001240  ECE8  F00B         	call	_check_busy	;wreg free
  3211                           
  3212                           ;lm629.c: 474:     write_data(0x00,0x01);
  3213   001244  0E01               	movlw	1
  3214   001246  6E0C               	movwf	write_data@byte2^0,c
  3215   001248  0E00               	movlw	0
  3216   00124A  ECF2  F00A         	call	_write_data
  3217                           
  3218                           ;lm629.c: 475:     check_busy();
  3219   00124E  ECE8  F00B         	call	_check_busy	;wreg free
  3220                           
  3221                           ;lm629.c: 476:     write_data(0xFA,0xD0);
  3222   001252  0ED0               	movlw	208
  3223   001254  6E0C               	movwf	write_data@byte2^0,c
  3224   001256  0EFA               	movlw	250
  3225   001258  ECF2  F00A         	call	_write_data
  3226                           
  3227                           ;lm629.c: 477:     check_busy();
  3228   00125C  ECE8  F00B         	call	_check_busy	;wreg free
  3229                           
  3230                           ;lm629.c: 480:     chip_select(2);
  3231   001260  0E02               	movlw	2
  3232   001262  EC80  F00A         	call	_chip_select
  3233                           
  3234                           ;lm629.c: 481:     check_busy();
  3235   001266  ECE8  F00B         	call	_check_busy	;wreg free
  3236                           
  3237                           ;lm629.c: 482:     motor_off();
  3238   00126A  ECB7  F00B         	call	_motor_off	;wreg free
  3239                           
  3240                           ;lm629.c: 483:     write_command(0x1F);
  3241   00126E  0E1F               	movlw	31
  3242   001270  EC40  F00B         	call	_write_command
  3243                           
  3244                           ;lm629.c: 484:     check_busy();
  3245   001274  ECE8  F00B         	call	_check_busy	;wreg free
  3246                           
  3247                           ;lm629.c: 485:     write_data(0x08,0x28);
  3248   001278  0E28               	movlw	40
  3249   00127A  6E0C               	movwf	write_data@byte2^0,c
  3250   00127C  0E08               	movlw	8
  3251   00127E  ECF2  F00A         	call	_write_data
  3252                           
  3253                           ;lm629.c: 486:     check_busy();
  3254   001282  ECE8  F00B         	call	_check_busy	;wreg free
  3255                           
  3256                           ;lm629.c: 488:     write_data(0x00,0x00);
  3257   001286  0E00               	movlw	0
  3258   001288  6E0C               	movwf	write_data@byte2^0,c
  3259   00128A  0E00               	movlw	0
  3260   00128C  ECF2  F00A         	call	_write_data
  3261                           
  3262                           ;lm629.c: 489:     check_busy();
  3263   001290  ECE8  F00B         	call	_check_busy	;wreg free
  3264                           
  3265                           ;lm629.c: 490:     write_data(0x00,0x48);
  3266   001294  0E48               	movlw	72
  3267   001296  6E0C               	movwf	write_data@byte2^0,c
  3268   001298  0E00               	movlw	0
  3269   00129A  ECF2  F00A         	call	_write_data
  3270                           
  3271                           ;lm629.c: 491:     check_busy();
  3272   00129E  ECE8  F00B         	call	_check_busy	;wreg free
  3273                           
  3274                           ;lm629.c: 493:     write_data(0x00,0x01);
  3275   0012A2  0E01               	movlw	1
  3276   0012A4  6E0C               	movwf	write_data@byte2^0,c
  3277   0012A6  0E00               	movlw	0
  3278   0012A8  ECF2  F00A         	call	_write_data
  3279                           
  3280                           ;lm629.c: 494:     check_busy();
  3281   0012AC  ECE8  F00B         	call	_check_busy	;wreg free
  3282                           
  3283                           ;lm629.c: 495:     write_data(0xFA,0xD0);
  3284   0012B0  0ED0               	movlw	208
  3285   0012B2  6E0C               	movwf	write_data@byte2^0,c
  3286   0012B4  0EFA               	movlw	250
  3287   0012B6  ECF2  F00A         	call	_write_data
  3288                           
  3289                           ;lm629.c: 496:     check_busy();
  3290   0012BA  ECE8  F00B         	call	_check_busy	;wreg free
  3291                           
  3292                           ;lm629.c: 499:     chip_select(3);
  3293   0012BE  0E03               	movlw	3
  3294   0012C0  EC80  F00A         	call	_chip_select
  3295                           
  3296                           ;lm629.c: 500:     check_busy();
  3297   0012C4  ECE8  F00B         	call	_check_busy	;wreg free
  3298                           
  3299                           ;lm629.c: 501:     motor_off();
  3300   0012C8  ECB7  F00B         	call	_motor_off	;wreg free
  3301                           
  3302                           ;lm629.c: 502:     write_command(0x1F);
  3303   0012CC  0E1F               	movlw	31
  3304   0012CE  EC40  F00B         	call	_write_command
  3305                           
  3306                           ;lm629.c: 503:     check_busy();
  3307   0012D2  ECE8  F00B         	call	_check_busy	;wreg free
  3308                           
  3309                           ;lm629.c: 504:     write_data(0x18,0x28);
  3310   0012D6  0E28               	movlw	40
  3311   0012D8  6E0C               	movwf	write_data@byte2^0,c
  3312   0012DA  0E18               	movlw	24
  3313   0012DC  ECF2  F00A         	call	_write_data
  3314                           
  3315                           ;lm629.c: 505:     check_busy();
  3316   0012E0  ECE8  F00B         	call	_check_busy	;wreg free
  3317                           
  3318                           ;lm629.c: 507:     write_data(0x00,0x00);
  3319   0012E4  0E00               	movlw	0
  3320   0012E6  6E0C               	movwf	write_data@byte2^0,c
  3321   0012E8  0E00               	movlw	0
  3322   0012EA  ECF2  F00A         	call	_write_data
  3323                           
  3324                           ;lm629.c: 508:     check_busy();
  3325   0012EE  ECE8  F00B         	call	_check_busy	;wreg free
  3326                           
  3327                           ;lm629.c: 509:     write_data(0x00,0x48);
  3328   0012F2  0E48               	movlw	72
  3329   0012F4  6E0C               	movwf	write_data@byte2^0,c
  3330   0012F6  0E00               	movlw	0
  3331   0012F8  ECF2  F00A         	call	_write_data
  3332                           
  3333                           ;lm629.c: 510:     check_busy();
  3334   0012FC  ECE8  F00B         	call	_check_busy	;wreg free
  3335                           
  3336                           ;lm629.c: 512:     write_data(0x00,0x01);
  3337   001300  0E01               	movlw	1
  3338   001302  6E0C               	movwf	write_data@byte2^0,c
  3339   001304  0E00               	movlw	0
  3340   001306  ECF2  F00A         	call	_write_data
  3341                           
  3342                           ;lm629.c: 513:     check_busy();
  3343   00130A  ECE8  F00B         	call	_check_busy	;wreg free
  3344                           
  3345                           ;lm629.c: 514:     write_data(0xFA,0xD0);
  3346   00130E  0ED0               	movlw	208
  3347   001310  6E0C               	movwf	write_data@byte2^0,c
  3348   001312  0EFA               	movlw	250
  3349   001314  ECF2  F00A         	call	_write_data
  3350                           
  3351                           ;lm629.c: 515:     check_busy();
  3352   001318  ECE8  F00B         	call	_check_busy	;wreg free
  3353                           
  3354                           ;lm629.c: 518:     chip_select(0);
  3355   00131C  0E00               	movlw	0
  3356   00131E  EC80  F00A         	call	_chip_select
  3357                           
  3358                           ;lm629.c: 519:     write_command(0x01);
  3359   001322  0E01               	movlw	1
  3360   001324  EC40  F00B         	call	_write_command
  3361                           
  3362                           ;lm629.c: 520:     check_busy();
  3363   001328  ECE8  F00B         	call	_check_busy	;wreg free
  3364                           
  3365                           ;lm629.c: 522:     chip_select(2);
  3366   00132C  0E02               	movlw	2
  3367   00132E  EC80  F00A         	call	_chip_select
  3368                           
  3369                           ;lm629.c: 523:     write_command(0x01);
  3370   001332  0E01               	movlw	1
  3371   001334  EC40  F00B         	call	_write_command
  3372                           
  3373                           ;lm629.c: 524:     check_busy();
  3374   001338  ECE8  F00B         	call	_check_busy	;wreg free
  3375                           
  3376                           ;lm629.c: 526:     chip_select(1);
  3377   00133C  0E01               	movlw	1
  3378   00133E  EC80  F00A         	call	_chip_select
  3379                           
  3380                           ;lm629.c: 527:     write_command(0x01);
  3381   001342  0E01               	movlw	1
  3382   001344  EC40  F00B         	call	_write_command
  3383                           
  3384                           ;lm629.c: 528:     check_busy();
  3385   001348  ECE8  F00B         	call	_check_busy	;wreg free
  3386                           
  3387                           ;lm629.c: 530:     chip_select(3);
  3388   00134C  0E03               	movlw	3
  3389   00134E  EC80  F00A         	call	_chip_select
  3390                           
  3391                           ;lm629.c: 531:     write_command(0x01);
  3392   001352  0E01               	movlw	1
  3393   001354  EC40  F00B         	call	_write_command
  3394                           
  3395                           ;lm629.c: 532:     check_busy();
  3396   001358  ECE8  F00B         	call	_check_busy	;wreg free
  3397   00135C  0012               	return		;funcret
  3398   00135E                     __end_of_forward:
  3399                           	callstack 0
  3400                           
  3401 ;; *************** function _all_off *****************
  3402 ;; Defined at:
  3403 ;;		line 362 in file "lm629.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 5
  3424 ;; This function calls:
  3425 ;;		_chip_select
  3426 ;;		_motor_off
  3427 ;; This function is called by:
  3428 ;;		_main
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text11
  3433   00171A                     __ptext11:
  3434                           	callstack 0
  3435   00171A                     _all_off:
  3436                           	callstack 25
  3437   00171A                     
  3438                           ;lm629.c: 364:     chip_select(0);
  3439   00171A  0E00               	movlw	0
  3440   00171C  EC80  F00A         	call	_chip_select
  3441                           
  3442                           ;lm629.c: 365:     motor_off();
  3443   001720  ECB7  F00B         	call	_motor_off	;wreg free
  3444                           
  3445                           ;lm629.c: 366:     chip_select(1);
  3446   001724  0E01               	movlw	1
  3447   001726  EC80  F00A         	call	_chip_select
  3448                           
  3449                           ;lm629.c: 367:     motor_off();
  3450   00172A  ECB7  F00B         	call	_motor_off	;wreg free
  3451                           
  3452                           ;lm629.c: 368:     chip_select(2);
  3453   00172E  0E02               	movlw	2
  3454   001730  EC80  F00A         	call	_chip_select
  3455                           
  3456                           ;lm629.c: 369:     motor_off();
  3457   001734  ECB7  F00B         	call	_motor_off	;wreg free
  3458                           
  3459                           ;lm629.c: 370:     chip_select(3);
  3460   001738  0E03               	movlw	3
  3461   00173A  EC80  F00A         	call	_chip_select
  3462                           
  3463                           ;lm629.c: 371:     motor_off();
  3464   00173E  ECB7  F00B         	call	_motor_off	;wreg free
  3465   001742  0012               	return		;funcret
  3466   001744                     __end_of_all_off:
  3467                           	callstack 0
  3468                           
  3469 ;; *************** function _motor_off *****************
  3470 ;; Defined at:
  3471 ;;		line 330 in file "lm629.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;		None
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;		None
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0, cstack
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;Total ram usage:        0 bytes
  3490 ;; Hardware stack levels used: 1
  3491 ;; Hardware stack levels required when called: 4
  3492 ;; This function calls:
  3493 ;;		_check_busy
  3494 ;;		_write_command
  3495 ;;		_write_data
  3496 ;; This function is called by:
  3497 ;;		_all_off
  3498 ;;		_forward
  3499 ;;		_reverse
  3500 ;;		_right
  3501 ;;		_left
  3502 ;;		_forward_left
  3503 ;;		_forward_right
  3504 ;;		_reverse_left
  3505 ;;		_reverse_right
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text12
  3510   00176E                     __ptext12:
  3511                           	callstack 0
  3512   00176E                     _motor_off:
  3513                           	callstack 25
  3514   00176E                     
  3515                           ;lm629.c: 332:     write_command(0x1F);
  3516   00176E  0E1F               	movlw	31
  3517   001770  EC40  F00B         	call	_write_command
  3518                           
  3519                           ;lm629.c: 333:     check_busy();
  3520   001774  ECE8  F00B         	call	_check_busy	;wreg free
  3521                           
  3522                           ;lm629.c: 334:     write_data(0x01,0x00);
  3523   001778  0E00               	movlw	0
  3524   00177A  6E0C               	movwf	write_data@byte2^0,c
  3525   00177C  0E01               	movlw	1
  3526   00177E  ECF2  F00A         	call	_write_data
  3527                           
  3528                           ;lm629.c: 335:     check_busy();
  3529   001782  ECE8  F00B         	call	_check_busy	;wreg free
  3530                           
  3531                           ;lm629.c: 336:     write_command(0x01);
  3532   001786  0E01               	movlw	1
  3533   001788  EC40  F00B         	call	_write_command
  3534                           
  3535                           ;lm629.c: 337:     check_busy();
  3536   00178C  ECE8  F00B         	call	_check_busy	;wreg free
  3537   001790  0012               	return		;funcret
  3538   001792                     __end_of_motor_off:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _all_break *****************
  3542 ;; Defined at:
  3543 ;;		line 350 in file "lm629.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, status,2, status,0, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used: 1
  3563 ;; Hardware stack levels required when called: 5
  3564 ;; This function calls:
  3565 ;;		_chip_select
  3566 ;;		_motor_break
  3567 ;; This function is called by:
  3568 ;;		_main
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text13
  3573   001744                     __ptext13:
  3574                           	callstack 0
  3575   001744                     _all_break:
  3576                           	callstack 25
  3577   001744                     
  3578                           ;lm629.c: 352:     chip_select(0);
  3579   001744  0E00               	movlw	0
  3580   001746  EC80  F00A         	call	_chip_select
  3581                           
  3582                           ;lm629.c: 353:     motor_break();
  3583   00174A  ECC9  F00B         	call	_motor_break	;wreg free
  3584                           
  3585                           ;lm629.c: 354:     chip_select(1);
  3586   00174E  0E01               	movlw	1
  3587   001750  EC80  F00A         	call	_chip_select
  3588                           
  3589                           ;lm629.c: 355:     motor_break();
  3590   001754  ECC9  F00B         	call	_motor_break	;wreg free
  3591                           
  3592                           ;lm629.c: 356:     chip_select(2);
  3593   001758  0E02               	movlw	2
  3594   00175A  EC80  F00A         	call	_chip_select
  3595                           
  3596                           ;lm629.c: 357:     motor_break();
  3597   00175E  ECC9  F00B         	call	_motor_break	;wreg free
  3598                           
  3599                           ;lm629.c: 358:     chip_select(3);
  3600   001762  0E03               	movlw	3
  3601   001764  EC80  F00A         	call	_chip_select
  3602                           
  3603                           ;lm629.c: 359:     motor_break();
  3604   001768  ECC9  F00B         	call	_motor_break	;wreg free
  3605   00176C  0012               	return		;funcret
  3606   00176E                     __end_of_all_break:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _motor_break *****************
  3610 ;; Defined at:
  3611 ;;		line 340 in file "lm629.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 4
  3632 ;; This function calls:
  3633 ;;		_check_busy
  3634 ;;		_write_command
  3635 ;;		_write_data
  3636 ;; This function is called by:
  3637 ;;		_all_break
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text14
  3642   001792                     __ptext14:
  3643                           	callstack 0
  3644   001792                     _motor_break:
  3645                           	callstack 25
  3646   001792                     
  3647                           ;lm629.c: 342:     write_command(0x1F);
  3648   001792  0E1F               	movlw	31
  3649   001794  EC40  F00B         	call	_write_command
  3650                           
  3651                           ;lm629.c: 343:     check_busy();
  3652   001798  ECE8  F00B         	call	_check_busy	;wreg free
  3653                           
  3654                           ;lm629.c: 344:     write_data(0x02,0x00);
  3655   00179C  0E00               	movlw	0
  3656   00179E  6E0C               	movwf	write_data@byte2^0,c
  3657   0017A0  0E02               	movlw	2
  3658   0017A2  ECF2  F00A         	call	_write_data
  3659                           
  3660                           ;lm629.c: 345:     check_busy();
  3661   0017A6  ECE8  F00B         	call	_check_busy	;wreg free
  3662                           
  3663                           ;lm629.c: 346:     write_command(0x01);
  3664   0017AA  0E01               	movlw	1
  3665   0017AC  EC40  F00B         	call	_write_command
  3666                           
  3667                           ;lm629.c: 347:     check_busy();
  3668   0017B0  ECE8  F00B         	call	_check_busy	;wreg free
  3669   0017B4  0012               	return		;funcret
  3670   0017B6                     __end_of_motor_break:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _LM629_init *****************
  3674 ;; Defined at:
  3675 ;;		line 105 in file "lm629.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;		None
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  x               1   14[COMRAM] unsigned char 
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;Total ram usage:        2 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 5
  3696 ;; This function calls:
  3697 ;;		_check_busy
  3698 ;;		_chip_select
  3699 ;;		_filter_module
  3700 ;;		_read_status
  3701 ;;		_write_command
  3702 ;;		_write_data
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text15
  3709   0000E4                     __ptext15:
  3710                           	callstack 0
  3711   0000E4                     _LM629_init:
  3712                           	callstack 25
  3713   0000E4                     
  3714                           ;lm629.c: 109:     TRISDbits.TRISD2 = 0;
  3715   0000E4  9495               	bcf	149,2,c	;volatile
  3716   0000E6                     
  3717                           ;lm629.c: 110:     TRISCbits.TRISC2 = 0;
  3718   0000E6  9494               	bcf	148,2,c	;volatile
  3719   0000E8                     
  3720                           ;lm629.c: 111:     TRISDbits.TRISD1 = 0;
  3721   0000E8  9295               	bcf	149,1,c	;volatile
  3722   0000EA                     
  3723                           ;lm629.c: 112:     TRISBbits.TRISB5= 0;
  3724   0000EA  9A93               	bcf	147,5,c	;volatile
  3725   0000EC                     
  3726                           ;lm629.c: 113:     TRISDbits.TRISD3 = 0;
  3727   0000EC  9695               	bcf	149,3,c	;volatile
  3728   0000EE                     
  3729                           ;lm629.c: 114:     TRISBbits.TRISB2 = 0;
  3730   0000EE  9493               	bcf	147,2,c	;volatile
  3731   0000F0                     
  3732                           ;lm629.c: 115:     TRISAbits.TRISA0 = 0;
  3733   0000F0  9092               	bcf	146,0,c	;volatile
  3734   0000F2                     
  3735                           ;lm629.c: 116:     TRISBbits.TRISB4 = 0;
  3736   0000F2  9893               	bcf	147,4,c	;volatile
  3737   0000F4                     
  3738                           ;lm629.c: 117:  PORTCbits.RC2=1;
  3739   0000F4  8482               	bsf	130,2,c	;volatile
  3740   0000F6                     
  3741                           ;lm629.c: 118:  PORTDbits.RD2=1;
  3742   0000F6  8483               	bsf	131,2,c	;volatile
  3743   0000F8                     
  3744                           ;lm629.c: 119:  PORTDbits.RD1=1;
  3745   0000F8  8283               	bsf	131,1,c	;volatile
  3746   0000FA                     
  3747                           ;lm629.c: 120:  PORTBbits.RB5=1;
  3748   0000FA  8A81               	bsf	129,5,c	;volatile
  3749   0000FC                     
  3750                           ;lm629.c: 121:  chip_select(0);
  3751   0000FC  0E00               	movlw	0
  3752   0000FE  EC80  F00A         	call	_chip_select
  3753   000102                     l1618:
  3754                           
  3755                           ;lm629.c: 123:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3756   000102  0E35               	movlw	53
  3757   000104                     u1007:
  3758   000104  2EE8               	decfsz	wreg,f,c
  3759   000106  D7FE               	bra	u1007
  3760   000108  F000               	nop	
  3761   00010A                     
  3762                           ;lm629.c: 124:  PORTBbits.RB5=0;
  3763   00010A  9A81               	bcf	129,5,c	;volatile
  3764   00010C                     
  3765                           ;lm629.c: 125:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  3766   00010C  0E40               	movlw	64
  3767   00010E                     u1017:
  3768   00010E  2EE8               	decfsz	wreg,f,c
  3769   000110  D7FE               	bra	u1017
  3770   000112                     
  3771                           ;lm629.c: 126:  PORTBbits.RB5=1;
  3772   000112  8A81               	bsf	129,5,c	;volatile
  3773   000114                     
  3774                           ;lm629.c: 127:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3775   000114  0E2A               	movlw	42
  3776   000116  6E0E               	movwf	??_LM629_init^0,c
  3777   000118  0E8E               	movlw	142
  3778   00011A                     u1027:
  3779   00011A  2EE8               	decfsz	wreg,f,c
  3780   00011C  D7FE               	bra	u1027
  3781   00011E  2E0E               	decfsz	??_LM629_init^0,f,c
  3782   000120  D7FC               	bra	u1027
  3783   000122                     
  3784                           ;lm629.c: 128:  x=read_status();
  3785   000122  EC5C  F00B         	call	_read_status	;wreg free
  3786   000126  6E0F               	movwf	LM629_init@x^0,c
  3787   000128                     
  3788                           ;lm629.c: 129:  if(!(x==0xC4 || x==0x84))
  3789   000128  0EC4               	movlw	196
  3790   00012A  180F               	xorwf	LM629_init@x^0,w,c
  3791   00012C  B4D8               	btfsc	status,2,c
  3792   00012E  EF9B  F000         	goto	u701
  3793   000132  EF9D  F000         	goto	u700
  3794   000136                     u701:
  3795   000136  EFA8  F000         	goto	l1638
  3796   00013A                     u700:
  3797   00013A  0E84               	movlw	132
  3798   00013C  180F               	xorwf	LM629_init@x^0,w,c
  3799   00013E  B4D8               	btfsc	status,2,c
  3800   000140  EFA4  F000         	goto	u711
  3801   000144  EFA6  F000         	goto	u710
  3802   000148                     u711:
  3803   000148  EFA8  F000         	goto	l1638
  3804   00014C                     u710:
  3805   00014C  EF81  F000         	goto	l1618
  3806   000150                     l1638:
  3807                           
  3808                           ;lm629.c: 134:   {;lm629.c: 135:    check_busy();
  3809   000150  ECE8  F00B         	call	_check_busy	;wreg free
  3810                           
  3811                           ;lm629.c: 136:    write_command(0x1D);
  3812   000154  0E1D               	movlw	29
  3813   000156  EC40  F00B         	call	_write_command
  3814                           
  3815                           ;lm629.c: 137:          check_busy();
  3816   00015A  ECE8  F00B         	call	_check_busy	;wreg free
  3817                           
  3818                           ;lm629.c: 138:    write_data(0x00,0x00);
  3819   00015E  0E00               	movlw	0
  3820   000160  6E0C               	movwf	write_data@byte2^0,c
  3821   000162  0E00               	movlw	0
  3822   000164  ECF2  F00A         	call	_write_data
  3823                           
  3824                           ;lm629.c: 139:    check_busy();
  3825   000168  ECE8  F00B         	call	_check_busy	;wreg free
  3826                           
  3827                           ;lm629.c: 140:    x=read_status();
  3828   00016C  EC5C  F00B         	call	_read_status	;wreg free
  3829   000170  6E0F               	movwf	LM629_init@x^0,c
  3830   000172                     
  3831                           ;lm629.c: 141:             if(!(x==0xC0 || x==0x80))
  3832   000172  0EC0               	movlw	192
  3833   000174  180F               	xorwf	LM629_init@x^0,w,c
  3834   000176  B4D8               	btfsc	status,2,c
  3835   000178  EFC0  F000         	goto	u721
  3836   00017C  EFC2  F000         	goto	u720
  3837   000180                     u721:
  3838   000180  EFCD  F000         	goto	l1646
  3839   000184                     u720:
  3840   000184  0E80               	movlw	128
  3841   000186  180F               	xorwf	LM629_init@x^0,w,c
  3842   000188  B4D8               	btfsc	status,2,c
  3843   00018A  EFC9  F000         	goto	u731
  3844   00018E  EFCB  F000         	goto	u730
  3845   000192                     u731:
  3846   000192  EFCD  F000         	goto	l1646
  3847   000196                     u730:
  3848   000196  EF81  F000         	goto	l1618
  3849   00019A                     l1646:
  3850                           
  3851                           ;lm629.c: 147:  chip_select(1);
  3852   00019A  0E01               	movlw	1
  3853   00019C  EC80  F00A         	call	_chip_select
  3854   0001A0                     l1648:
  3855                           
  3856                           ;lm629.c: 149:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3857   0001A0  0E35               	movlw	53
  3858   0001A2                     u1037:
  3859   0001A2  2EE8               	decfsz	wreg,f,c
  3860   0001A4  D7FE               	bra	u1037
  3861   0001A6  F000               	nop	
  3862   0001A8                     
  3863                           ;lm629.c: 150:  PORTBbits.RB5=0;
  3864   0001A8  9A81               	bcf	129,5,c	;volatile
  3865   0001AA                     
  3866                           ;lm629.c: 151:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  3867   0001AA  0E40               	movlw	64
  3868   0001AC                     u1047:
  3869   0001AC  2EE8               	decfsz	wreg,f,c
  3870   0001AE  D7FE               	bra	u1047
  3871   0001B0                     
  3872                           ;lm629.c: 152:  PORTBbits.RB5=1;
  3873   0001B0  8A81               	bsf	129,5,c	;volatile
  3874   0001B2                     
  3875                           ;lm629.c: 153:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3876   0001B2  0E2A               	movlw	42
  3877   0001B4  6E0E               	movwf	??_LM629_init^0,c
  3878   0001B6  0E8E               	movlw	142
  3879   0001B8                     u1057:
  3880   0001B8  2EE8               	decfsz	wreg,f,c
  3881   0001BA  D7FE               	bra	u1057
  3882   0001BC  2E0E               	decfsz	??_LM629_init^0,f,c
  3883   0001BE  D7FC               	bra	u1057
  3884   0001C0                     
  3885                           ;lm629.c: 154:  x=read_status();
  3886   0001C0  EC5C  F00B         	call	_read_status	;wreg free
  3887   0001C4  6E0F               	movwf	LM629_init@x^0,c
  3888   0001C6                     
  3889                           ;lm629.c: 155:  if(!(x==0xC4 || x==0x84))
  3890   0001C6  0EC4               	movlw	196
  3891   0001C8  180F               	xorwf	LM629_init@x^0,w,c
  3892   0001CA  B4D8               	btfsc	status,2,c
  3893   0001CC  EFEA  F000         	goto	u741
  3894   0001D0  EFEC  F000         	goto	u740
  3895   0001D4                     u741:
  3896   0001D4  EFF7  F000         	goto	l1668
  3897   0001D8                     u740:
  3898   0001D8  0E84               	movlw	132
  3899   0001DA  180F               	xorwf	LM629_init@x^0,w,c
  3900   0001DC  B4D8               	btfsc	status,2,c
  3901   0001DE  EFF3  F000         	goto	u751
  3902   0001E2  EFF5  F000         	goto	u750
  3903   0001E6                     u751:
  3904   0001E6  EFF7  F000         	goto	l1668
  3905   0001EA                     u750:
  3906   0001EA  EFD0  F000         	goto	l1648
  3907   0001EE                     l1668:
  3908                           
  3909                           ;lm629.c: 160:   {;lm629.c: 161:    check_busy();
  3910   0001EE  ECE8  F00B         	call	_check_busy	;wreg free
  3911                           
  3912                           ;lm629.c: 162:    write_command(0x1D);
  3913   0001F2  0E1D               	movlw	29
  3914   0001F4  EC40  F00B         	call	_write_command
  3915                           
  3916                           ;lm629.c: 163:          check_busy();
  3917   0001F8  ECE8  F00B         	call	_check_busy	;wreg free
  3918                           
  3919                           ;lm629.c: 164:    write_data(0x00,0x00);
  3920   0001FC  0E00               	movlw	0
  3921   0001FE  6E0C               	movwf	write_data@byte2^0,c
  3922   000200  0E00               	movlw	0
  3923   000202  ECF2  F00A         	call	_write_data
  3924                           
  3925                           ;lm629.c: 165:    check_busy();
  3926   000206  ECE8  F00B         	call	_check_busy	;wreg free
  3927                           
  3928                           ;lm629.c: 166:    x=read_status();
  3929   00020A  EC5C  F00B         	call	_read_status	;wreg free
  3930   00020E  6E0F               	movwf	LM629_init@x^0,c
  3931   000210                     
  3932                           ;lm629.c: 167:             if(!(x==0xC0 || x==0x80))
  3933   000210  0EC0               	movlw	192
  3934   000212  180F               	xorwf	LM629_init@x^0,w,c
  3935   000214  B4D8               	btfsc	status,2,c
  3936   000216  EF0F  F001         	goto	u761
  3937   00021A  EF11  F001         	goto	u760
  3938   00021E                     u761:
  3939   00021E  EF1C  F001         	goto	l1676
  3940   000222                     u760:
  3941   000222  0E80               	movlw	128
  3942   000224  180F               	xorwf	LM629_init@x^0,w,c
  3943   000226  B4D8               	btfsc	status,2,c
  3944   000228  EF18  F001         	goto	u771
  3945   00022C  EF1A  F001         	goto	u770
  3946   000230                     u771:
  3947   000230  EF1C  F001         	goto	l1676
  3948   000234                     u770:
  3949   000234  EFD0  F000         	goto	l1648
  3950   000238                     l1676:
  3951                           
  3952                           ;lm629.c: 173:      chip_select(2);
  3953   000238  0E02               	movlw	2
  3954   00023A  EC80  F00A         	call	_chip_select
  3955   00023E                     l1678:
  3956                           
  3957                           ;lm629.c: 175:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3958   00023E  0E35               	movlw	53
  3959   000240                     u1067:
  3960   000240  2EE8               	decfsz	wreg,f,c
  3961   000242  D7FE               	bra	u1067
  3962   000244  F000               	nop	
  3963   000246                     
  3964                           ;lm629.c: 176:  PORTBbits.RB5=0;
  3965   000246  9A81               	bcf	129,5,c	;volatile
  3966   000248                     
  3967                           ;lm629.c: 177:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  3968   000248  0E40               	movlw	64
  3969   00024A                     u1077:
  3970   00024A  2EE8               	decfsz	wreg,f,c
  3971   00024C  D7FE               	bra	u1077
  3972   00024E                     
  3973                           ;lm629.c: 178:  PORTBbits.RB5=1;
  3974   00024E  8A81               	bsf	129,5,c	;volatile
  3975   000250                     
  3976                           ;lm629.c: 179:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3977   000250  0E2A               	movlw	42
  3978   000252  6E0E               	movwf	??_LM629_init^0,c
  3979   000254  0E8E               	movlw	142
  3980   000256                     u1087:
  3981   000256  2EE8               	decfsz	wreg,f,c
  3982   000258  D7FE               	bra	u1087
  3983   00025A  2E0E               	decfsz	??_LM629_init^0,f,c
  3984   00025C  D7FC               	bra	u1087
  3985   00025E                     
  3986                           ;lm629.c: 180:  x=read_status();
  3987   00025E  EC5C  F00B         	call	_read_status	;wreg free
  3988   000262  6E0F               	movwf	LM629_init@x^0,c
  3989   000264                     
  3990                           ;lm629.c: 181:  if(!(x==0xC4 || x==0x84))
  3991   000264  0EC4               	movlw	196
  3992   000266  180F               	xorwf	LM629_init@x^0,w,c
  3993   000268  B4D8               	btfsc	status,2,c
  3994   00026A  EF39  F001         	goto	u781
  3995   00026E  EF3B  F001         	goto	u780
  3996   000272                     u781:
  3997   000272  EF46  F001         	goto	l1698
  3998   000276                     u780:
  3999   000276  0E84               	movlw	132
  4000   000278  180F               	xorwf	LM629_init@x^0,w,c
  4001   00027A  B4D8               	btfsc	status,2,c
  4002   00027C  EF42  F001         	goto	u791
  4003   000280  EF44  F001         	goto	u790
  4004   000284                     u791:
  4005   000284  EF46  F001         	goto	l1698
  4006   000288                     u790:
  4007   000288  EF1F  F001         	goto	l1678
  4008   00028C                     l1698:
  4009                           
  4010                           ;lm629.c: 186:   {;lm629.c: 187:    check_busy();
  4011   00028C  ECE8  F00B         	call	_check_busy	;wreg free
  4012                           
  4013                           ;lm629.c: 188:    write_command(0x1D);
  4014   000290  0E1D               	movlw	29
  4015   000292  EC40  F00B         	call	_write_command
  4016                           
  4017                           ;lm629.c: 189:          check_busy();
  4018   000296  ECE8  F00B         	call	_check_busy	;wreg free
  4019                           
  4020                           ;lm629.c: 190:    write_data(0x00,0x00);
  4021   00029A  0E00               	movlw	0
  4022   00029C  6E0C               	movwf	write_data@byte2^0,c
  4023   00029E  0E00               	movlw	0
  4024   0002A0  ECF2  F00A         	call	_write_data
  4025                           
  4026                           ;lm629.c: 191:    check_busy();
  4027   0002A4  ECE8  F00B         	call	_check_busy	;wreg free
  4028                           
  4029                           ;lm629.c: 192:    x=read_status();
  4030   0002A8  EC5C  F00B         	call	_read_status	;wreg free
  4031   0002AC  6E0F               	movwf	LM629_init@x^0,c
  4032   0002AE                     
  4033                           ;lm629.c: 193:             if(!(x==0xC0 || x==0x80))
  4034   0002AE  0EC0               	movlw	192
  4035   0002B0  180F               	xorwf	LM629_init@x^0,w,c
  4036   0002B2  B4D8               	btfsc	status,2,c
  4037   0002B4  EF5E  F001         	goto	u801
  4038   0002B8  EF60  F001         	goto	u800
  4039   0002BC                     u801:
  4040   0002BC  EF6B  F001         	goto	l1706
  4041   0002C0                     u800:
  4042   0002C0  0E80               	movlw	128
  4043   0002C2  180F               	xorwf	LM629_init@x^0,w,c
  4044   0002C4  B4D8               	btfsc	status,2,c
  4045   0002C6  EF67  F001         	goto	u811
  4046   0002CA  EF69  F001         	goto	u810
  4047   0002CE                     u811:
  4048   0002CE  EF6B  F001         	goto	l1706
  4049   0002D2                     u810:
  4050   0002D2  EF1F  F001         	goto	l1678
  4051   0002D6                     l1706:
  4052                           
  4053                           ;lm629.c: 199:  chip_select(3);
  4054   0002D6  0E03               	movlw	3
  4055   0002D8  EC80  F00A         	call	_chip_select
  4056   0002DC                     l1708:
  4057                           
  4058                           ;lm629.c: 201:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  4059   0002DC  0E35               	movlw	53
  4060   0002DE                     u1097:
  4061   0002DE  2EE8               	decfsz	wreg,f,c
  4062   0002E0  D7FE               	bra	u1097
  4063   0002E2  F000               	nop	
  4064   0002E4                     
  4065                           ;lm629.c: 202:  PORTBbits.RB5=0;
  4066   0002E4  9A81               	bcf	129,5,c	;volatile
  4067   0002E6                     
  4068                           ;lm629.c: 203:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  4069   0002E6  0E40               	movlw	64
  4070   0002E8                     u1107:
  4071   0002E8  2EE8               	decfsz	wreg,f,c
  4072   0002EA  D7FE               	bra	u1107
  4073   0002EC                     
  4074                           ;lm629.c: 204:  PORTBbits.RB5=1;
  4075   0002EC  8A81               	bsf	129,5,c	;volatile
  4076   0002EE                     
  4077                           ;lm629.c: 205:  _delay((unsigned long)((2)*(64000000/4000.0)));
  4078   0002EE  0E2A               	movlw	42
  4079   0002F0  6E0E               	movwf	??_LM629_init^0,c
  4080   0002F2  0E8E               	movlw	142
  4081   0002F4                     u1117:
  4082   0002F4  2EE8               	decfsz	wreg,f,c
  4083   0002F6  D7FE               	bra	u1117
  4084   0002F8  2E0E               	decfsz	??_LM629_init^0,f,c
  4085   0002FA  D7FC               	bra	u1117
  4086   0002FC                     
  4087                           ;lm629.c: 206:  x=read_status();
  4088   0002FC  EC5C  F00B         	call	_read_status	;wreg free
  4089   000300  6E0F               	movwf	LM629_init@x^0,c
  4090   000302                     
  4091                           ;lm629.c: 207:  if(!(x==0xC4 || x==0x84))
  4092   000302  0EC4               	movlw	196
  4093   000304  180F               	xorwf	LM629_init@x^0,w,c
  4094   000306  B4D8               	btfsc	status,2,c
  4095   000308  EF88  F001         	goto	u821
  4096   00030C  EF8A  F001         	goto	u820
  4097   000310                     u821:
  4098   000310  EF95  F001         	goto	l1728
  4099   000314                     u820:
  4100   000314  0E84               	movlw	132
  4101   000316  180F               	xorwf	LM629_init@x^0,w,c
  4102   000318  B4D8               	btfsc	status,2,c
  4103   00031A  EF91  F001         	goto	u831
  4104   00031E  EF93  F001         	goto	u830
  4105   000322                     u831:
  4106   000322  EF95  F001         	goto	l1728
  4107   000326                     u830:
  4108   000326  EF6E  F001         	goto	l1708
  4109   00032A                     l1728:
  4110                           
  4111                           ;lm629.c: 212:   {;lm629.c: 213:    check_busy();
  4112   00032A  ECE8  F00B         	call	_check_busy	;wreg free
  4113                           
  4114                           ;lm629.c: 214:    write_command(0x1D);
  4115   00032E  0E1D               	movlw	29
  4116   000330  EC40  F00B         	call	_write_command
  4117                           
  4118                           ;lm629.c: 215:          check_busy();
  4119   000334  ECE8  F00B         	call	_check_busy	;wreg free
  4120                           
  4121                           ;lm629.c: 216:    write_data(0x00,0x00);
  4122   000338  0E00               	movlw	0
  4123   00033A  6E0C               	movwf	write_data@byte2^0,c
  4124   00033C  0E00               	movlw	0
  4125   00033E  ECF2  F00A         	call	_write_data
  4126                           
  4127                           ;lm629.c: 217:    check_busy();
  4128   000342  ECE8  F00B         	call	_check_busy	;wreg free
  4129                           
  4130                           ;lm629.c: 218:    x=read_status();
  4131   000346  EC5C  F00B         	call	_read_status	;wreg free
  4132   00034A  6E0F               	movwf	LM629_init@x^0,c
  4133   00034C                     
  4134                           ;lm629.c: 219:             if(!(x==0xC0 || x==0x80))
  4135   00034C  0EC0               	movlw	192
  4136   00034E  180F               	xorwf	LM629_init@x^0,w,c
  4137   000350  B4D8               	btfsc	status,2,c
  4138   000352  EFAD  F001         	goto	u841
  4139   000356  EFAF  F001         	goto	u840
  4140   00035A                     u841:
  4141   00035A  EFBA  F001         	goto	l1736
  4142   00035E                     u840:
  4143   00035E  0E80               	movlw	128
  4144   000360  180F               	xorwf	LM629_init@x^0,w,c
  4145   000362  B4D8               	btfsc	status,2,c
  4146   000364  EFB6  F001         	goto	u851
  4147   000368  EFB8  F001         	goto	u850
  4148   00036C                     u851:
  4149   00036C  EFBA  F001         	goto	l1736
  4150   000370                     u850:
  4151   000370  EF6E  F001         	goto	l1708
  4152   000374                     l1736:
  4153                           
  4154                           ;lm629.c: 224: chip_select(0);
  4155   000374  0E00               	movlw	0
  4156   000376  EC80  F00A         	call	_chip_select
  4157                           
  4158                           ;lm629.c: 225: filter_module();
  4159   00037A  ECC4  F00A         	call	_filter_module	;wreg free
  4160                           
  4161                           ;lm629.c: 226: chip_select(1);
  4162   00037E  0E01               	movlw	1
  4163   000380  EC80  F00A         	call	_chip_select
  4164                           
  4165                           ;lm629.c: 227: filter_module();
  4166   000384  ECC4  F00A         	call	_filter_module	;wreg free
  4167                           
  4168                           ;lm629.c: 228: chip_select(2);
  4169   000388  0E02               	movlw	2
  4170   00038A  EC80  F00A         	call	_chip_select
  4171                           
  4172                           ;lm629.c: 229: filter_module();
  4173   00038E  ECC4  F00A         	call	_filter_module	;wreg free
  4174                           
  4175                           ;lm629.c: 230: chip_select(3);
  4176   000392  0E03               	movlw	3
  4177   000394  EC80  F00A         	call	_chip_select
  4178                           
  4179                           ;lm629.c: 231: filter_module();
  4180   000398  ECC4  F00A         	call	_filter_module	;wreg free
  4181   00039C  0012               	return		;funcret
  4182   00039E                     __end_of_LM629_init:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _filter_module *****************
  4186 ;; Defined at:
  4187 ;;		line 374 in file "lm629.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;Total ram usage:        0 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; Hardware stack levels required when called: 4
  4208 ;; This function calls:
  4209 ;;		_check_busy
  4210 ;;		_write_command
  4211 ;;		_write_data
  4212 ;; This function is called by:
  4213 ;;		_LM629_init
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217                           	psect	text16
  4218   001588                     __ptext16:
  4219                           	callstack 0
  4220   001588                     _filter_module:
  4221                           	callstack 25
  4222   001588                     
  4223                           ;lm629.c: 376:     write_command(0x1E);
  4224   001588  0E1E               	movlw	30
  4225   00158A  EC40  F00B         	call	_write_command
  4226                           
  4227                           ;lm629.c: 377:     check_busy();
  4228   00158E  ECE8  F00B         	call	_check_busy	;wreg free
  4229                           
  4230                           ;lm629.c: 378:     write_data(0x00,0x0F);
  4231   001592  0E0F               	movlw	15
  4232   001594  6E0C               	movwf	write_data@byte2^0,c
  4233   001596  0E00               	movlw	0
  4234   001598  ECF2  F00A         	call	_write_data
  4235                           
  4236                           ;lm629.c: 379:     check_busy();
  4237   00159C  ECE8  F00B         	call	_check_busy	;wreg free
  4238                           
  4239                           ;lm629.c: 380:     write_data(0x01,0x0F);
  4240   0015A0  0E0F               	movlw	15
  4241   0015A2  6E0C               	movwf	write_data@byte2^0,c
  4242   0015A4  0E01               	movlw	1
  4243   0015A6  ECF2  F00A         	call	_write_data
  4244                           
  4245                           ;lm629.c: 381:     check_busy();
  4246   0015AA  ECE8  F00B         	call	_check_busy	;wreg free
  4247                           
  4248                           ;lm629.c: 382:     write_data(0x00,0x04);
  4249   0015AE  0E04               	movlw	4
  4250   0015B0  6E0C               	movwf	write_data@byte2^0,c
  4251   0015B2  0E00               	movlw	0
  4252   0015B4  ECF2  F00A         	call	_write_data
  4253                           
  4254                           ;lm629.c: 383:     check_busy();
  4255   0015B8  ECE8  F00B         	call	_check_busy	;wreg free
  4256                           
  4257                           ;lm629.c: 384:     write_data(0x7F,0xFF);
  4258   0015BC  0EFF               	movlw	255
  4259   0015BE  6E0C               	movwf	write_data@byte2^0,c
  4260   0015C0  0E7F               	movlw	127
  4261   0015C2  ECF2  F00A         	call	_write_data
  4262                           
  4263                           ;lm629.c: 385:     check_busy();
  4264   0015C6  ECE8  F00B         	call	_check_busy	;wreg free
  4265                           
  4266                           ;lm629.c: 386:     write_data(0x00,0xFF);
  4267   0015CA  0EFF               	movlw	255
  4268   0015CC  6E0C               	movwf	write_data@byte2^0,c
  4269   0015CE  0E00               	movlw	0
  4270   0015D0  ECF2  F00A         	call	_write_data
  4271                           
  4272                           ;lm629.c: 387:     check_busy();
  4273   0015D4  ECE8  F00B         	call	_check_busy	;wreg free
  4274                           
  4275                           ;lm629.c: 388:     write_command(0x04);
  4276   0015D8  0E04               	movlw	4
  4277   0015DA  EC40  F00B         	call	_write_command
  4278                           
  4279                           ;lm629.c: 389:     check_busy();
  4280   0015DE  ECE8  F00B         	call	_check_busy	;wreg free
  4281   0015E2  0012               	return		;funcret
  4282   0015E4                     __end_of_filter_module:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _write_data *****************
  4286 ;; Defined at:
  4287 ;;		line 67 in file "lm629.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  byte1           1    wreg     unsigned char 
  4290 ;;  byte2           1   11[COMRAM] unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  byte1           1   12[COMRAM] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4302 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;Total ram usage:        2 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 2
  4309 ;; This function calls:
  4310 ;;		_DATABUS
  4311 ;;		_DATABUS_DIR
  4312 ;; This function is called by:
  4313 ;;		_LM629_init
  4314 ;;		_motor_off
  4315 ;;		_motor_break
  4316 ;;		_filter_module
  4317 ;;		_forward
  4318 ;;		_reverse
  4319 ;;		_right
  4320 ;;		_left
  4321 ;;		_forward_left
  4322 ;;		_forward_right
  4323 ;;		_reverse_left
  4324 ;;		_reverse_right
  4325 ;;		_simple_absolute_position
  4326 ;;		_simple_relative_position
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text17
  4331   0015E4                     __ptext17:
  4332                           	callstack 0
  4333   0015E4                     _write_data:
  4334                           	callstack 27
  4335                           
  4336                           ;incstack = 0
  4337                           ;write_data@byte1 stored from wreg
  4338   0015E4  6E0D               	movwf	write_data@byte1^0,c
  4339   0015E6                     
  4340                           ;lm629.c: 67: void write_data( unsigned char byte1, unsigned char byte2);lm629.c: 68: {;
      +                          lm629.c: 69:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4341   0015E6  0E05               	movlw	5
  4342   0015E8                     u1127:
  4343   0015E8  2EE8               	decfsz	wreg,f,c
  4344   0015EA  D7FE               	bra	u1127
  4345   0015EC  F000               	nop	
  4346   0015EE                     
  4347                           ;lm629.c: 70:  DATABUS_DIR(0);
  4348   0015EE  0E00               	movlw	0
  4349   0015F0  EC20  F00B         	call	_DATABUS_DIR
  4350   0015F4                     
  4351                           ;lm629.c: 71:  PORTCbits.RC2=1;
  4352   0015F4  8482               	bsf	130,2,c	;volatile
  4353   0015F6                     
  4354                           ;lm629.c: 72:  _delay(3);
  4355   0015F6  D000               	nop2		;2 cycle nop
  4356   0015F8  F000               	nop	
  4357   0015FA                     
  4358                           ;lm629.c: 73:  PORTDbits.RD1=0;
  4359   0015FA  9283               	bcf	131,1,c	;volatile
  4360   0015FC                     
  4361                           ;lm629.c: 74:  _delay(8);
  4362   0015FC  D000               	nop2		;2 cycle nop
  4363   0015FE  D000               	nop2		;2 cycle nop
  4364   001600  D000               	nop2		;2 cycle nop
  4365   001602  D000               	nop2		;2 cycle nop
  4366   001604                     
  4367                           ;lm629.c: 75:  DATABUS(0,byte1);
  4368   001604  C00D  F007         	movff	write_data@byte1,DATABUS@byte0
  4369   001608  0E00               	movlw	0
  4370   00160A  ECCF  F001         	call	_DATABUS
  4371   00160E                     
  4372                           ;lm629.c: 76:  _delay(5);
  4373   00160E  D000               	nop2		;2 cycle nop
  4374   001610  D000               	nop2		;2 cycle nop
  4375   001612  F000               	nop	
  4376   001614                     
  4377                           ;lm629.c: 77:  PORTDbits.RD1=1;
  4378   001614  8283               	bsf	131,1,c	;volatile
  4379   001616                     
  4380                           ;lm629.c: 78:  _delay(10);
  4381   001616  0E03               	movlw	3
  4382   001618                     u1137:
  4383   001618  2EE8               	decfsz	wreg,f,c
  4384   00161A  D7FE               	bra	u1137
  4385   00161C  F000               	nop	
  4386   00161E                     
  4387                           ;lm629.c: 79:  PORTDbits.RD1=0;
  4388   00161E  9283               	bcf	131,1,c	;volatile
  4389   001620                     
  4390                           ;lm629.c: 80:  _delay(5);
  4391   001620  D000               	nop2		;2 cycle nop
  4392   001622  D000               	nop2		;2 cycle nop
  4393   001624  F000               	nop	
  4394   001626                     
  4395                           ;lm629.c: 81:  DATABUS(0,byte2);
  4396   001626  C00C  F007         	movff	write_data@byte2,DATABUS@byte0
  4397   00162A  0E00               	movlw	0
  4398   00162C  ECCF  F001         	call	_DATABUS
  4399   001630                     
  4400                           ;lm629.c: 82:  _delay(5);
  4401   001630  D000               	nop2		;2 cycle nop
  4402   001632  D000               	nop2		;2 cycle nop
  4403   001634  F000               	nop	
  4404   001636                     
  4405                           ;lm629.c: 83:  PORTDbits.RD1=1;
  4406   001636  8283               	bsf	131,1,c	;volatile
  4407   001638                     
  4408                           ;lm629.c: 84:  _delay(3);
  4409   001638  D000               	nop2		;2 cycle nop
  4410   00163A  F000               	nop	
  4411   00163C                     
  4412                           ;lm629.c: 85:  PORTCbits.RC2=1;
  4413   00163C  8482               	bsf	130,2,c	;volatile
  4414   00163E  0012               	return		;funcret
  4415   001640                     __end_of_write_data:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _write_command *****************
  4419 ;; Defined at:
  4420 ;;		line 89 in file "lm629.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  command         1    wreg     unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  command         1   11[COMRAM] unsigned char 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;Total ram usage:        1 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 2
  4441 ;; This function calls:
  4442 ;;		_DATABUS
  4443 ;;		_DATABUS_DIR
  4444 ;; This function is called by:
  4445 ;;		_LM629_init
  4446 ;;		_motor_off
  4447 ;;		_motor_break
  4448 ;;		_filter_module
  4449 ;;		_forward
  4450 ;;		_reverse
  4451 ;;		_right
  4452 ;;		_left
  4453 ;;		_forward_left
  4454 ;;		_forward_right
  4455 ;;		_reverse_left
  4456 ;;		_reverse_right
  4457 ;;		_simple_absolute_position
  4458 ;;		_simple_relative_position
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text18
  4463   001680                     __ptext18:
  4464                           	callstack 0
  4465   001680                     _write_command:
  4466                           	callstack 27
  4467                           
  4468                           ;incstack = 0
  4469                           ;write_command@command stored from wreg
  4470   001680  6E0C               	movwf	write_command@command^0,c
  4471   001682                     
  4472                           ;lm629.c: 89: void write_command(unsigned char command);lm629.c: 90: {;lm629.c: 91:  DAT
      +                          ABUS_DIR(0);
  4473   001682  0E00               	movlw	0
  4474   001684  EC20  F00B         	call	_DATABUS_DIR
  4475   001688                     
  4476                           ;lm629.c: 92:  PORTCbits.RC2=0;
  4477   001688  9482               	bcf	130,2,c	;volatile
  4478   00168A                     
  4479                           ;lm629.c: 93:  _delay(3);
  4480   00168A  D000               	nop2		;2 cycle nop
  4481   00168C  F000               	nop	
  4482   00168E                     
  4483                           ;lm629.c: 94:  PORTDbits.RD1=0;
  4484   00168E  9283               	bcf	131,1,c	;volatile
  4485   001690                     
  4486                           ;lm629.c: 95:  _delay(5);
  4487   001690  D000               	nop2		;2 cycle nop
  4488   001692  D000               	nop2		;2 cycle nop
  4489   001694  F000               	nop	
  4490                           
  4491                           ;lm629.c: 96:  DATABUS(0,command);
  4492   001696  C00C  F007         	movff	write_command@command,DATABUS@byte0
  4493   00169A  0E00               	movlw	0
  4494   00169C  ECCF  F001         	call	_DATABUS
  4495   0016A0                     
  4496                           ;lm629.c: 97:  _delay(5);
  4497   0016A0  D000               	nop2		;2 cycle nop
  4498   0016A2  D000               	nop2		;2 cycle nop
  4499   0016A4  F000               	nop	
  4500   0016A6                     
  4501                           ;lm629.c: 98:  PORTDbits.RD1=1;
  4502   0016A6  8283               	bsf	131,1,c	;volatile
  4503   0016A8                     
  4504                           ;lm629.c: 99:  _delay(3);
  4505   0016A8  D000               	nop2		;2 cycle nop
  4506   0016AA  F000               	nop	
  4507   0016AC                     
  4508                           ;lm629.c: 100:  PORTCbits.RC2=1;
  4509   0016AC  8482               	bsf	130,2,c	;volatile
  4510   0016AE                     
  4511                           ;lm629.c: 101:  _delay(11);
  4512   0016AE  0E03               	movlw	3
  4513   0016B0                     u1147:
  4514   0016B0  2EE8               	decfsz	wreg,f,c
  4515   0016B2  D7FE               	bra	u1147
  4516   0016B4  D000               	nop2	
  4517   0016B6  0012               	return		;funcret
  4518   0016B8                     __end_of_write_command:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _check_busy *****************
  4522 ;; Defined at:
  4523 ;;		line 15 in file "lm629.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  x               1   12[COMRAM] unsigned char 
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0, cstack
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;Total ram usage:        1 bytes
  4542 ;; Hardware stack levels used: 1
  4543 ;; Hardware stack levels required when called: 3
  4544 ;; This function calls:
  4545 ;;		_read_status
  4546 ;; This function is called by:
  4547 ;;		_LM629_init
  4548 ;;		_motor_off
  4549 ;;		_motor_break
  4550 ;;		_filter_module
  4551 ;;		_forward
  4552 ;;		_reverse
  4553 ;;		_right
  4554 ;;		_left
  4555 ;;		_forward_left
  4556 ;;		_forward_right
  4557 ;;		_reverse_left
  4558 ;;		_reverse_right
  4559 ;;		_simple_absolute_position
  4560 ;;		_simple_relative_position
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text19
  4565   0017D0                     __ptext19:
  4566                           	callstack 0
  4567   0017D0                     _check_busy:
  4568                           	callstack 25
  4569   0017D0                     l1506:
  4570                           
  4571                           ;lm629.c: 17:  unsigned char x;;lm629.c: 18:  x=read_status();
  4572   0017D0  EC5C  F00B         	call	_read_status	;wreg free
  4573   0017D4  6E0D               	movwf	check_busy@x^0,c
  4574   0017D6                     
  4575                           ;lm629.c: 19:  while (x & 0x01)
  4576   0017D6  B00D               	btfsc	check_busy@x^0,0,c
  4577   0017D8  EFF0  F00B         	goto	u651
  4578   0017DC  EFF2  F00B         	goto	u650
  4579   0017E0                     u651:
  4580   0017E0  EFE8  F00B         	goto	l1506
  4581   0017E4                     u650:
  4582   0017E4  0012               	return		;funcret
  4583   0017E6                     __end_of_check_busy:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function _read_status *****************
  4587 ;; Defined at:
  4588 ;;		line 25 in file "lm629.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  status          1   11[COMRAM] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      unsigned char 
  4595 ;; Registers used:
  4596 ;;		wreg, status,2, status,0, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;Total ram usage:        1 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 2
  4609 ;; This function calls:
  4610 ;;		_DATABUS
  4611 ;;		_DATABUS_DIR
  4612 ;; This function is called by:
  4613 ;;		_check_busy
  4614 ;;		_LM629_init
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text20
  4619   0016B8                     __ptext20:
  4620                           	callstack 0
  4621   0016B8                     _read_status:
  4622                           	callstack 25
  4623   0016B8                     
  4624                           ;lm629.c: 27:  unsigned char status;;lm629.c: 28:  DATABUS_DIR(0xFF);
  4625   0016B8  0EFF               	movlw	255
  4626   0016BA  EC20  F00B         	call	_DATABUS_DIR
  4627   0016BE                     
  4628                           ;lm629.c: 29:  PORTCbits.RC2=0;
  4629   0016BE  9482               	bcf	130,2,c	;volatile
  4630   0016C0                     
  4631                           ;lm629.c: 30:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4632   0016C0  0E05               	movlw	5
  4633   0016C2                     u1157:
  4634   0016C2  2EE8               	decfsz	wreg,f,c
  4635   0016C4  D7FE               	bra	u1157
  4636   0016C6  F000               	nop	
  4637   0016C8                     
  4638                           ;lm629.c: 31:  PORTDbits.RD2=0;
  4639   0016C8  9483               	bcf	131,2,c	;volatile
  4640   0016CA                     
  4641                           ;lm629.c: 32:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4642   0016CA  0E05               	movlw	5
  4643   0016CC                     u1167:
  4644   0016CC  2EE8               	decfsz	wreg,f,c
  4645   0016CE  D7FE               	bra	u1167
  4646   0016D0  F000               	nop	
  4647                           
  4648                           ;lm629.c: 33:  status=DATABUS(0xFF,0);
  4649   0016D2  0E00               	movlw	0
  4650   0016D4  6E07               	movwf	DATABUS@byte0^0,c
  4651   0016D6  0EFF               	movlw	255
  4652   0016D8  ECCF  F001         	call	_DATABUS
  4653   0016DC  6E0C               	movwf	read_status@status^0,c
  4654   0016DE                     
  4655                           ;lm629.c: 34:  PORTDbits.RD2=1;
  4656   0016DE  8483               	bsf	131,2,c	;volatile
  4657   0016E0                     
  4658                           ;lm629.c: 35:  _delay((unsigned long)((5)*(64000000/4000000.0)));
  4659   0016E0  0E1A               	movlw	26
  4660   0016E2                     u1177:
  4661   0016E2  2EE8               	decfsz	wreg,f,c
  4662   0016E4  D7FE               	bra	u1177
  4663   0016E6  D000               	nop2	
  4664   0016E8                     
  4665                           ;lm629.c: 36:  PORTCbits.RC2=1;
  4666   0016E8  8482               	bsf	130,2,c	;volatile
  4667   0016EA                     
  4668                           ;lm629.c: 38: return status;
  4669   0016EA  500C               	movf	read_status@status^0,w,c
  4670   0016EC  0012               	return		;funcret
  4671   0016EE                     __end_of_read_status:
  4672                           	callstack 0
  4673                           
  4674 ;; *************** function _DATABUS_DIR *****************
  4675 ;; Defined at:
  4676 ;;		line 239 in file "lm629.c"
  4677 ;; Parameters:    Size  Location     Type
  4678 ;;  dir             1    wreg     unsigned char 
  4679 ;; Auto vars:     Size  Location     Type
  4680 ;;  dir             1    6[COMRAM] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      void 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;Total ram usage:        1 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 1
  4697 ;; This function calls:
  4698 ;;		Nothing
  4699 ;; This function is called by:
  4700 ;;		_read_status
  4701 ;;		_write_data
  4702 ;;		_write_command
  4703 ;;		_read_data
  4704 ;; This function uses a non-reentrant model
  4705 ;;
  4706                           
  4707                           	psect	text21
  4708   001640                     __ptext21:
  4709                           	callstack 0
  4710   001640                     _DATABUS_DIR:
  4711                           	callstack 27
  4712                           
  4713                           ;incstack = 0
  4714                           ;DATABUS_DIR@dir stored from wreg
  4715   001640  6E07               	movwf	DATABUS_DIR@dir^0,c
  4716   001642                     
  4717                           ;lm629.c: 239: void DATABUS_DIR(unsigned char dir);lm629.c: 240: {;lm629.c: 241:     if(
      +                          dir==0)
  4718   001642  5007               	movf	DATABUS_DIR@dir^0,w,c
  4719   001644  A4D8               	btfss	status,2,c
  4720   001646  EF27  F00B         	goto	u501
  4721   00164A  EF29  F00B         	goto	u500
  4722   00164E                     u501:
  4723   00164E  EF31  F00B         	goto	l1468
  4724   001652                     u500:
  4725   001652                     
  4726                           ;lm629.c: 242:     {;lm629.c: 243:         TRISC&=0b00111111;
  4727   001652  0E3F               	movlw	63
  4728   001654  1694               	andwf	148,f,c	;volatile
  4729                           
  4730                           ;lm629.c: 244:         TRISD&=0b00001111;
  4731   001656  0E0F               	movlw	15
  4732   001658  1695               	andwf	149,f,c	;volatile
  4733                           
  4734                           ;lm629.c: 245:         TRISB&=0b11111100;
  4735   00165A  0EFC               	movlw	252
  4736   00165C  1693               	andwf	147,f,c	;volatile
  4737                           
  4738                           ;lm629.c: 246:     }
  4739   00165E  EF3F  F00B         	goto	l176
  4740   001662                     l1468:
  4741   001662  2807               	incf	DATABUS_DIR@dir^0,w,c
  4742   001664  A4D8               	btfss	status,2,c
  4743   001666  EF37  F00B         	goto	u511
  4744   00166A  EF39  F00B         	goto	u510
  4745   00166E                     u511:
  4746   00166E  EF3F  F00B         	goto	l176
  4747   001672                     u510:
  4748   001672                     
  4749                           ;lm629.c: 248:     {;lm629.c: 249:         TRISC|=0b11000000;
  4750   001672  0EC0               	movlw	192
  4751   001674  1294               	iorwf	148,f,c	;volatile
  4752                           
  4753                           ;lm629.c: 250:         TRISD|=0b11110000;
  4754   001676  0EF0               	movlw	240
  4755   001678  1295               	iorwf	149,f,c	;volatile
  4756                           
  4757                           ;lm629.c: 251:         TRISB|=0b00000011;
  4758   00167A  0E03               	movlw	3
  4759   00167C  1293               	iorwf	147,f,c	;volatile
  4760   00167E                     l176:
  4761   00167E  0012               	return		;funcret
  4762   001680                     __end_of_DATABUS_DIR:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function _DATABUS *****************
  4766 ;; Defined at:
  4767 ;;		line 258 in file "lm629.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  dir1            1    wreg     unsigned char 
  4770 ;;  byte0           1    6[COMRAM] unsigned char 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  dir1            1    9[COMRAM] unsigned char 
  4773 ;;  x               1   10[COMRAM] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      unsigned char 
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4783 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4784 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;Total ram usage:        5 bytes
  4788 ;; Hardware stack levels used: 1
  4789 ;; Hardware stack levels required when called: 1
  4790 ;; This function calls:
  4791 ;;		Nothing
  4792 ;; This function is called by:
  4793 ;;		_read_status
  4794 ;;		_write_data
  4795 ;;		_write_command
  4796 ;;		_read_data
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text22
  4801   00039E                     __ptext22:
  4802                           	callstack 0
  4803   00039E                     _DATABUS:
  4804                           	callstack 27
  4805                           
  4806                           ;incstack = 0
  4807                           ;DATABUS@dir1 stored from wreg
  4808   00039E  6E0A               	movwf	DATABUS@dir1^0,c
  4809   0003A0                     
  4810                           ;lm629.c: 258: unsigned char DATABUS(unsigned char dir1, unsigned char byte0);lm629.c: 2
      +                          59: {;lm629.c: 260: unsigned char x;;lm629.c: 261: if(dir1==0)
  4811   0003A0  500A               	movf	DATABUS@dir1^0,w,c
  4812   0003A2  A4D8               	btfss	status,2,c
  4813   0003A4  EFD6  F001         	goto	u521
  4814   0003A8  EFD8  F001         	goto	u520
  4815   0003AC                     u521:
  4816   0003AC  EF51  F002         	goto	l1478
  4817   0003B0                     u520:
  4818   0003B0                     
  4819                           ;lm629.c: 262: {;lm629.c: 263:     PORTCbits.RC6 = ((byte0 & 0x01) >> 0);
  4820   0003B0  C007  F008         	movff	DATABUS@byte0,??_DATABUS
  4821   0003B4  0E01               	movlw	1
  4822   0003B6  1608               	andwf	??_DATABUS^0,f,c
  4823   0003B8  3A08               	swapf	??_DATABUS^0,f,c
  4824   0003BA  4608               	rlncf	??_DATABUS^0,f,c
  4825   0003BC  4608               	rlncf	??_DATABUS^0,f,c
  4826   0003BE  5082               	movf	130,w,c	;volatile
  4827   0003C0  1808               	xorwf	??_DATABUS^0,w,c
  4828   0003C2  0BBF               	andlw	-65
  4829   0003C4  1808               	xorwf	??_DATABUS^0,w,c
  4830   0003C6  6E82               	movwf	130,c	;volatile
  4831                           
  4832                           ;lm629.c: 264:     PORTCbits.RC7 = ((byte0 & 0x02) >> 1);
  4833   0003C8  C007  F008         	movff	DATABUS@byte0,??_DATABUS
  4834   0003CC  90D8               	bcf	status,0,c
  4835   0003CE  3208               	rrcf	??_DATABUS^0,f,c
  4836   0003D0  0E01               	movlw	1
  4837   0003D2  1608               	andwf	??_DATABUS^0,f,c
  4838   0003D4  3208               	rrcf	??_DATABUS^0,f,c
  4839   0003D6  3208               	rrcf	??_DATABUS^0,f,c
  4840   0003D8  5082               	movf	130,w,c	;volatile
  4841   0003DA  1808               	xorwf	??_DATABUS^0,w,c
  4842   0003DC  0B7F               	andlw	-129
  4843   0003DE  1808               	xorwf	??_DATABUS^0,w,c
  4844   0003E0  6E82               	movwf	130,c	;volatile
  4845                           
  4846                           ;lm629.c: 265:     PORTDbits.RD4 = ((byte0 & 0x04) >> 2);
  4847   0003E2  C007  F008         	movff	DATABUS@byte0,??_DATABUS
  4848   0003E6  90D8               	bcf	status,0,c
  4849   0003E8  3208               	rrcf	??_DATABUS^0,f,c
  4850   0003EA  90D8               	bcf	status,0,c
  4851   0003EC  3208               	rrcf	??_DATABUS^0,f,c
  4852   0003EE  0E01               	movlw	1
  4853   0003F0  1608               	andwf	??_DATABUS^0,f,c
  4854   0003F2  3A08               	swapf	??_DATABUS^0,f,c
  4855   0003F4  5083               	movf	131,w,c	;volatile
  4856   0003F6  1808               	xorwf	??_DATABUS^0,w,c
  4857   0003F8  0BEF               	andlw	-17
  4858   0003FA  1808               	xorwf	??_DATABUS^0,w,c
  4859   0003FC  6E83               	movwf	131,c	;volatile
  4860                           
  4861                           ;lm629.c: 266:     PORTDbits.RD5 = ((byte0 & 0x08) >> 3);
  4862   0003FE  C007  F008         	movff	DATABUS@byte0,??_DATABUS
  4863   000402  90D8               	bcf	status,0,c
  4864   000404  3208               	rrcf	??_DATABUS^0,f,c
  4865   000406  90D8               	bcf	status,0,c
  4866   000408  3208               	rrcf	??_DATABUS^0,f,c
  4867   00040A  90D8               	bcf	status,0,c
  4868   00040C  3208               	rrcf	??_DATABUS^0,f,c
  4869   00040E  0E01               	movlw	1
  4870   000410  1608               	andwf	??_DATABUS^0,f,c
  4871   000412  3A08               	swapf	??_DATABUS^0,f,c
  4872   000414  4608               	rlncf	??_DATABUS^0,f,c
  4873   000416  5083               	movf	131,w,c	;volatile
  4874   000418  1808               	xorwf	??_DATABUS^0,w,c
  4875   00041A  0BDF               	andlw	-33
  4876   00041C  1808               	xorwf	??_DATABUS^0,w,c
  4877   00041E  6E83               	movwf	131,c	;volatile
  4878                           
  4879                           ;lm629.c: 267:     PORTDbits.RD6 = ((byte0 & 0x10) >> 4);
  4880   000420  C007  F008         	movff	DATABUS@byte0,??_DATABUS
  4881   000424  3A08               	swapf	??_DATABUS^0,f,c
  4882   000426  0E0F               	movlw	15
  4883   000428  1608               	andwf	??_DATABUS^0,f,c
  4884   00042A  0E01               	movlw	1
  4885   00042C  1608               	andwf	??_DATABUS^0,f,c
  4886   00042E  3A08               	swapf	??_DATABUS^0,f,c
  4887   000430  4608               	rlncf	??_DATABUS^0,f,c
  4888   000432  4608               	rlncf	??_DATABUS^0,f,c
  4889   000434  5083               	movf	131,w,c	;volatile
  4890   000436  1808               	xorwf	??_DATABUS^0,w,c
  4891   000438  0BBF               	andlw	-65
  4892   00043A  1808               	xorwf	??_DATABUS^0,w,c
  4893   00043C  6E83               	movwf	131,c	;volatile
  4894                           
  4895                           ;lm629.c: 268:     PORTDbits.RD7 = ((byte0 & 0x20) >> 5);
  4896   00043E  C007  F008         	movff	DATABUS@byte0,??_DATABUS
  4897   000442  0E05               	movlw	5
  4898   000444  6E09               	movwf	(??_DATABUS+1)^0,c
  4899   000446                     u535:
  4900   000446  90D8               	bcf	status,0,c
  4901   000448  3208               	rrcf	??_DATABUS^0,f,c
  4902   00044A  2E09               	decfsz	(??_DATABUS+1)^0,f,c
  4903   00044C  EF23  F002         	goto	u535
  4904   000450  0E01               	movlw	1
  4905   000452  1608               	andwf	??_DATABUS^0,f,c
  4906   000454  3208               	rrcf	??_DATABUS^0,f,c
  4907   000456  3208               	rrcf	??_DATABUS^0,f,c
  4908   000458  5083               	movf	131,w,c	;volatile
  4909   00045A  1808               	xorwf	??_DATABUS^0,w,c
  4910   00045C  0B7F               	andlw	-129
  4911   00045E  1808               	xorwf	??_DATABUS^0,w,c
  4912   000460  6E83               	movwf	131,c	;volatile
  4913                           
  4914                           ;lm629.c: 269:     PORTBbits.RB0 = ((byte0 & 0x40) >> 6);
  4915   000462  C007  F008         	movff	DATABUS@byte0,??_DATABUS
  4916   000466  0E06               	movlw	6
  4917   000468  6E09               	movwf	(??_DATABUS+1)^0,c
  4918   00046A                     u545:
  4919   00046A  90D8               	bcf	status,0,c
  4920   00046C  3208               	rrcf	??_DATABUS^0,f,c
  4921   00046E  2E09               	decfsz	(??_DATABUS+1)^0,f,c
  4922   000470  EF35  F002         	goto	u545
  4923   000474  0E01               	movlw	1
  4924   000476  1608               	andwf	??_DATABUS^0,f,c
  4925   000478  5081               	movf	129,w,c	;volatile
  4926   00047A  1808               	xorwf	??_DATABUS^0,w,c
  4927   00047C  0BFE               	andlw	-2
  4928   00047E  1808               	xorwf	??_DATABUS^0,w,c
  4929   000480  6E81               	movwf	129,c	;volatile
  4930                           
  4931                           ;lm629.c: 270:     PORTBbits.RB1 = ((byte0 & 0x80) >> 7);
  4932   000482  6A08               	clrf	??_DATABUS^0,c
  4933   000484  AE07               	btfss	DATABUS@byte0^0,7,c
  4934   000486  D001               	bra	u555
  4935   000488  2A08               	incf	??_DATABUS^0,f,c
  4936   00048A                     u555:
  4937   00048A  0E01               	movlw	1
  4938   00048C  1608               	andwf	??_DATABUS^0,f,c
  4939   00048E  4608               	rlncf	??_DATABUS^0,f,c
  4940   000490  5081               	movf	129,w,c	;volatile
  4941   000492  1808               	xorwf	??_DATABUS^0,w,c
  4942   000494  0BFD               	andlw	-3
  4943   000496  1808               	xorwf	??_DATABUS^0,w,c
  4944   000498  6E81               	movwf	129,c	;volatile
  4945   00049A                     
  4946                           ;lm629.c: 271:     x=0;
  4947   00049A  0E00               	movlw	0
  4948   00049C  6E0B               	movwf	DATABUS@x^0,c
  4949                           
  4950                           ;lm629.c: 272: }
  4951   00049E  EFC5  F002         	goto	l1482
  4952   0004A2                     l1478:
  4953   0004A2  280A               	incf	DATABUS@dir1^0,w,c
  4954   0004A4  A4D8               	btfss	status,2,c
  4955   0004A6  EF57  F002         	goto	u561
  4956   0004AA  EF59  F002         	goto	u560
  4957   0004AE                     u561:
  4958   0004AE  EFC5  F002         	goto	l1482
  4959   0004B2                     u560:
  4960   0004B2                     
  4961                           ;lm629.c: 275: {;lm629.c: 277:     x |= PORTBbits.RB1;
  4962   0004B2  B281               	btfsc	129,1,c	;volatile
  4963   0004B4  EF5E  F002         	goto	u571
  4964   0004B8  EF61  F002         	goto	u570
  4965   0004BC                     u571:
  4966   0004BC  0E01               	movlw	1
  4967   0004BE  EF62  F002         	goto	u576
  4968   0004C2                     u570:
  4969   0004C2  0E00               	movlw	0
  4970   0004C4                     u576:
  4971   0004C4  120B               	iorwf	DATABUS@x^0,f,c
  4972                           
  4973                           ;lm629.c: 278:     x = (x<<1) | PORTBbits.RB0;
  4974   0004C6  B081               	btfsc	129,0,c	;volatile
  4975   0004C8  EF68  F002         	goto	u581
  4976   0004CC  EF6C  F002         	goto	u580
  4977   0004D0                     u581:
  4978   0004D0  6A08               	clrf	??_DATABUS^0,c
  4979   0004D2  2A08               	incf	??_DATABUS^0,f,c
  4980   0004D4  EF6D  F002         	goto	u588
  4981   0004D8                     u580:
  4982   0004D8  6A08               	clrf	??_DATABUS^0,c
  4983   0004DA                     u588:
  4984   0004DA  500B               	movf	DATABUS@x^0,w,c
  4985   0004DC  240B               	addwf	DATABUS@x^0,w,c
  4986   0004DE  1008               	iorwf	??_DATABUS^0,w,c
  4987   0004E0  6E0B               	movwf	DATABUS@x^0,c
  4988                           
  4989                           ;lm629.c: 279:     x = (x<<1) | PORTDbits.RD7;
  4990   0004E2  BE83               	btfsc	131,7,c	;volatile
  4991   0004E4  EF76  F002         	goto	u591
  4992   0004E8  EF7A  F002         	goto	u590
  4993   0004EC                     u591:
  4994   0004EC  6A08               	clrf	??_DATABUS^0,c
  4995   0004EE  2A08               	incf	??_DATABUS^0,f,c
  4996   0004F0  EF7B  F002         	goto	u598
  4997   0004F4                     u590:
  4998   0004F4  6A08               	clrf	??_DATABUS^0,c
  4999   0004F6                     u598:
  5000   0004F6  500B               	movf	DATABUS@x^0,w,c
  5001   0004F8  240B               	addwf	DATABUS@x^0,w,c
  5002   0004FA  1008               	iorwf	??_DATABUS^0,w,c
  5003   0004FC  6E0B               	movwf	DATABUS@x^0,c
  5004                           
  5005                           ;lm629.c: 280:     x = (x<<1) | PORTDbits.RD6;
  5006   0004FE  BC83               	btfsc	131,6,c	;volatile
  5007   000500  EF84  F002         	goto	u601
  5008   000504  EF88  F002         	goto	u600
  5009   000508                     u601:
  5010   000508  6A08               	clrf	??_DATABUS^0,c
  5011   00050A  2A08               	incf	??_DATABUS^0,f,c
  5012   00050C  EF89  F002         	goto	u608
  5013   000510                     u600:
  5014   000510  6A08               	clrf	??_DATABUS^0,c
  5015   000512                     u608:
  5016   000512  500B               	movf	DATABUS@x^0,w,c
  5017   000514  240B               	addwf	DATABUS@x^0,w,c
  5018   000516  1008               	iorwf	??_DATABUS^0,w,c
  5019   000518  6E0B               	movwf	DATABUS@x^0,c
  5020                           
  5021                           ;lm629.c: 281:     x = (x<<1) | PORTDbits.RD5;
  5022   00051A  BA83               	btfsc	131,5,c	;volatile
  5023   00051C  EF92  F002         	goto	u611
  5024   000520  EF96  F002         	goto	u610
  5025   000524                     u611:
  5026   000524  6A08               	clrf	??_DATABUS^0,c
  5027   000526  2A08               	incf	??_DATABUS^0,f,c
  5028   000528  EF97  F002         	goto	u618
  5029   00052C                     u610:
  5030   00052C  6A08               	clrf	??_DATABUS^0,c
  5031   00052E                     u618:
  5032   00052E  500B               	movf	DATABUS@x^0,w,c
  5033   000530  240B               	addwf	DATABUS@x^0,w,c
  5034   000532  1008               	iorwf	??_DATABUS^0,w,c
  5035   000534  6E0B               	movwf	DATABUS@x^0,c
  5036                           
  5037                           ;lm629.c: 282:     x = (x<<1) | PORTDbits.RD4;
  5038   000536  B883               	btfsc	131,4,c	;volatile
  5039   000538  EFA0  F002         	goto	u621
  5040   00053C  EFA4  F002         	goto	u620
  5041   000540                     u621:
  5042   000540  6A08               	clrf	??_DATABUS^0,c
  5043   000542  2A08               	incf	??_DATABUS^0,f,c
  5044   000544  EFA5  F002         	goto	u628
  5045   000548                     u620:
  5046   000548  6A08               	clrf	??_DATABUS^0,c
  5047   00054A                     u628:
  5048   00054A  500B               	movf	DATABUS@x^0,w,c
  5049   00054C  240B               	addwf	DATABUS@x^0,w,c
  5050   00054E  1008               	iorwf	??_DATABUS^0,w,c
  5051   000550  6E0B               	movwf	DATABUS@x^0,c
  5052                           
  5053                           ;lm629.c: 283:     x = (x<<1) | PORTCbits.RC7;
  5054   000552  BE82               	btfsc	130,7,c	;volatile
  5055   000554  EFAE  F002         	goto	u631
  5056   000558  EFB2  F002         	goto	u630
  5057   00055C                     u631:
  5058   00055C  6A08               	clrf	??_DATABUS^0,c
  5059   00055E  2A08               	incf	??_DATABUS^0,f,c
  5060   000560  EFB3  F002         	goto	u638
  5061   000564                     u630:
  5062   000564  6A08               	clrf	??_DATABUS^0,c
  5063   000566                     u638:
  5064   000566  500B               	movf	DATABUS@x^0,w,c
  5065   000568  240B               	addwf	DATABUS@x^0,w,c
  5066   00056A  1008               	iorwf	??_DATABUS^0,w,c
  5067   00056C  6E0B               	movwf	DATABUS@x^0,c
  5068                           
  5069                           ;lm629.c: 284:     x = (x<<1) | PORTCbits.RC6;
  5070   00056E  BC82               	btfsc	130,6,c	;volatile
  5071   000570  EFBC  F002         	goto	u641
  5072   000574  EFC0  F002         	goto	u640
  5073   000578                     u641:
  5074   000578  6A08               	clrf	??_DATABUS^0,c
  5075   00057A  2A08               	incf	??_DATABUS^0,f,c
  5076   00057C  EFC1  F002         	goto	u648
  5077   000580                     u640:
  5078   000580  6A08               	clrf	??_DATABUS^0,c
  5079   000582                     u648:
  5080   000582  500B               	movf	DATABUS@x^0,w,c
  5081   000584  240B               	addwf	DATABUS@x^0,w,c
  5082   000586  1008               	iorwf	??_DATABUS^0,w,c
  5083   000588  6E0B               	movwf	DATABUS@x^0,c
  5084   00058A                     l1482:
  5085                           
  5086                           ;lm629.c: 286: return x;
  5087   00058A  500B               	movf	DATABUS@x^0,w,c
  5088   00058C  0012               	return		;funcret
  5089   00058E                     __end_of_DATABUS:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _chip_select *****************
  5093 ;; Defined at:
  5094 ;;		line 289 in file "lm629.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  chip            1    wreg     unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  chip            1    6[COMRAM] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        1 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_LM629_init
  5119 ;;		_all_break
  5120 ;;		_all_off
  5121 ;;		_forward
  5122 ;;		_reverse
  5123 ;;		_right
  5124 ;;		_left
  5125 ;;		_forward_left
  5126 ;;		_forward_right
  5127 ;;		_reverse_left
  5128 ;;		_reverse_right
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text23
  5133   001500                     __ptext23:
  5134                           	callstack 0
  5135   001500                     _chip_select:
  5136                           	callstack 28
  5137                           
  5138                           ;incstack = 0
  5139                           ;chip_select@chip stored from wreg
  5140   001500  6E07               	movwf	chip_select@chip^0,c
  5141   001502                     
  5142                           ;lm629.c: 289: void chip_select(unsigned char chip);lm629.c: 290: {;lm629.c: 291:  if(ch
      +                          ip==0)
  5143   001502  5007               	movf	chip_select@chip^0,w,c
  5144   001504  A4D8               	btfss	status,2,c
  5145   001506  EF87  F00A         	goto	u661
  5146   00150A  EF89  F00A         	goto	u660
  5147   00150E                     u661:
  5148   00150E  EF8F  F00A         	goto	l1570
  5149   001512                     u660:
  5150   001512                     
  5151                           ;lm629.c: 292:  {;lm629.c: 293:   PORTDbits.RD3=0;
  5152   001512  9683               	bcf	131,3,c	;volatile
  5153                           
  5154                           ;lm629.c: 294:   PORTBbits.RB2=1;
  5155   001514  8481               	bsf	129,2,c	;volatile
  5156                           
  5157                           ;lm629.c: 295:   PORTAbits.RA0=1;
  5158   001516  8080               	bsf	128,0,c	;volatile
  5159                           
  5160                           ;lm629.c: 296:   PORTBbits.RB4=1;
  5161   001518  8881               	bsf	129,4,c	;volatile
  5162                           
  5163                           ;lm629.c: 297:  }
  5164   00151A  EFBF  F00A         	goto	l1582
  5165   00151E                     l1570:
  5166   00151E  0407               	decf	chip_select@chip^0,w,c
  5167   001520  A4D8               	btfss	status,2,c
  5168   001522  EF95  F00A         	goto	u671
  5169   001526  EF97  F00A         	goto	u670
  5170   00152A                     u671:
  5171   00152A  EF9D  F00A         	goto	l1574
  5172   00152E                     u670:
  5173   00152E                     
  5174                           ;lm629.c: 299:  {;lm629.c: 300:   PORTDbits.RD3=1;
  5175   00152E  8683               	bsf	131,3,c	;volatile
  5176                           
  5177                           ;lm629.c: 301:   PORTBbits.RB2=0;
  5178   001530  9481               	bcf	129,2,c	;volatile
  5179                           
  5180                           ;lm629.c: 302:   PORTAbits.RA0=1;
  5181   001532  8080               	bsf	128,0,c	;volatile
  5182                           
  5183                           ;lm629.c: 303:   PORTBbits.RB4=1;
  5184   001534  8881               	bsf	129,4,c	;volatile
  5185                           
  5186                           ;lm629.c: 304:  }
  5187   001536  EFBF  F00A         	goto	l1582
  5188   00153A                     l1574:
  5189   00153A  0E02               	movlw	2
  5190   00153C  1807               	xorwf	chip_select@chip^0,w,c
  5191   00153E  A4D8               	btfss	status,2,c
  5192   001540  EFA4  F00A         	goto	u681
  5193   001544  EFA6  F00A         	goto	u680
  5194   001548                     u681:
  5195   001548  EFAC  F00A         	goto	l1578
  5196   00154C                     u680:
  5197   00154C                     
  5198                           ;lm629.c: 306:  {;lm629.c: 307:   PORTDbits.RD3=1;
  5199   00154C  8683               	bsf	131,3,c	;volatile
  5200                           
  5201                           ;lm629.c: 308:   PORTBbits.RB2=1;
  5202   00154E  8481               	bsf	129,2,c	;volatile
  5203                           
  5204                           ;lm629.c: 309:   PORTAbits.RA0=0;
  5205   001550  9080               	bcf	128,0,c	;volatile
  5206                           
  5207                           ;lm629.c: 310:   PORTBbits.RB4=1;
  5208   001552  8881               	bsf	129,4,c	;volatile
  5209                           
  5210                           ;lm629.c: 311:  }
  5211   001554  EFBF  F00A         	goto	l1582
  5212   001558                     l1578:
  5213   001558  0E03               	movlw	3
  5214   00155A  1807               	xorwf	chip_select@chip^0,w,c
  5215   00155C  A4D8               	btfss	status,2,c
  5216   00155E  EFB3  F00A         	goto	u691
  5217   001562  EFB5  F00A         	goto	u690
  5218   001566                     u691:
  5219   001566  EFBB  F00A         	goto	l191
  5220   00156A                     u690:
  5221   00156A                     
  5222                           ;lm629.c: 313:  {;lm629.c: 314:   PORTDbits.RD3=1;
  5223   00156A  8683               	bsf	131,3,c	;volatile
  5224                           
  5225                           ;lm629.c: 315:   PORTBbits.RB2=1;
  5226   00156C  8481               	bsf	129,2,c	;volatile
  5227                           
  5228                           ;lm629.c: 316:   PORTAbits.RA0=1;
  5229   00156E  8080               	bsf	128,0,c	;volatile
  5230                           
  5231                           ;lm629.c: 317:   PORTBbits.RB4=0;
  5232   001570  9881               	bcf	129,4,c	;volatile
  5233                           
  5234                           ;lm629.c: 318:  }
  5235   001572  EFBF  F00A         	goto	l1582
  5236   001576                     l191:
  5237                           
  5238                           ;lm629.c: 320:  {;lm629.c: 321:   PORTDbits.RD3=1;
  5239   001576  8683               	bsf	131,3,c	;volatile
  5240                           
  5241                           ;lm629.c: 322:   PORTBbits.RB2=1;
  5242   001578  8481               	bsf	129,2,c	;volatile
  5243                           
  5244                           ;lm629.c: 323:   PORTAbits.RA0=1;
  5245   00157A  8080               	bsf	128,0,c	;volatile
  5246                           
  5247                           ;lm629.c: 324:   PORTBbits.RB4=1;
  5248   00157C  8881               	bsf	129,4,c	;volatile
  5249   00157E                     l1582:
  5250                           
  5251                           ;lm629.c: 327:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  5252   00157E  0E35               	movlw	53
  5253   001580                     u1187:
  5254   001580  2EE8               	decfsz	wreg,f,c
  5255   001582  D7FE               	bra	u1187
  5256   001584  F000               	nop	
  5257   001586  0012               	return		;funcret
  5258   001588                     __end_of_chip_select:
  5259                           	callstack 0
  5260                           
  5261 ;; *************** function _SPI_ISR *****************
  5262 ;; Defined at:
  5263 ;;		line 40 in file "spi.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;Total ram usage:        6 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		Interrupt level 2
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	intcode
  5291   000008                     __pintcode:
  5292                           	callstack 0
  5293   000008                     _SPI_ISR:
  5294                           	callstack 25
  5295                           
  5296                           ;incstack = 0
  5297   000008  8221               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5298   00000A  CFE1 F003          	movff	fsr1l,??_SPI_ISR+2
  5299   00000E  CFE2 F004          	movff	fsr1h,??_SPI_ISR+3
  5300   000012  CFD9 F005          	movff	fsr2l,??_SPI_ISR+4
  5301   000016  CFDA F006          	movff	fsr2h,??_SPI_ISR+5
  5302   00001A                     
  5303                           ;spi.c: 42:     if(PIR1bits.SSP1IF)
  5304   00001A  A69E               	btfss	158,3,c	;volatile
  5305   00001C  EF12  F000         	goto	i2u96_41
  5306   000020  EF14  F000         	goto	i2u96_40
  5307   000024                     i2u96_41:
  5308   000024  EF66  F000         	goto	i2l294
  5309   000028                     i2u96_40:
  5310   000028                     
  5311                           ;spi.c: 43:     {;spi.c: 44:         spi_read_data=SSP1BUF;
  5312   000028  CFC9 F017          	movff	4041,_spi_read_data	;volatile
  5313   00002C                     
  5314                           ;spi.c: 45:         if(spi_read_data == 'z')
  5315   00002C  0E7A               	movlw	122
  5316   00002E  1817               	xorwf	_spi_read_data^0,w,c	;volatile
  5317   000030  A4D8               	btfss	status,2,c
  5318   000032  EF1D  F000         	goto	i2u97_41
  5319   000036  EF1F  F000         	goto	i2u97_40
  5320   00003A                     i2u97_41:
  5321   00003A  EF23  F000         	goto	i2l1916
  5322   00003E                     i2u97_40:
  5323   00003E                     
  5324                           ;spi.c: 46:         {;spi.c: 47:             recording_on = 1;
  5325   00003E  0E01               	movlw	1
  5326   000040  6E16               	movwf	_recording_on^0,c	;volatile
  5327                           
  5328                           ;spi.c: 48:         }
  5329   000042  EF4E  F000         	goto	i2l1930
  5330   000046                     i2l1916:
  5331   000046  0E79               	movlw	121
  5332   000048  1817               	xorwf	_spi_read_data^0,w,c	;volatile
  5333   00004A  A4D8               	btfss	status,2,c
  5334   00004C  EF2A  F000         	goto	i2u98_41
  5335   000050  EF2C  F000         	goto	i2u98_40
  5336   000054                     i2u98_41:
  5337   000054  EF30  F000         	goto	i2l286
  5338   000058                     i2u98_40:
  5339   000058                     
  5340                           ;spi.c: 50:         {;spi.c: 51:             recording_on = 0;
  5341   000058  0E00               	movlw	0
  5342   00005A  6E16               	movwf	_recording_on^0,c	;volatile
  5343                           
  5344                           ;spi.c: 52:         }
  5345   00005C  EF4E  F000         	goto	i2l1930
  5346   000060                     i2l286:
  5347                           
  5348                           ;spi.c: 58:         switch(recording_on)
  5349   000060  EF4E  F000         	goto	i2l1930
  5350   000064                     i2l1920:
  5351                           
  5352                           ;spi.c: 61:                 spi_str_interrupt = &signal_distribution_packet;
  5353   000064  0E18               	movlw	low _signal_distribution_packet
  5354   000066  6E14               	movwf	_spi_str_interrupt^0,c
  5355   000068  0E00               	movlw	high _signal_distribution_packet
  5356   00006A  6E15               	movwf	(_spi_str_interrupt+1)^0,c
  5357                           
  5358                           ;spi.c: 62:                 break;
  5359   00006C  EF63  F000         	goto	i2l291
  5360   000070                     i2l1922:
  5361                           
  5362                           ;spi.c: 64:                 *spi_str_interrupt++ = spi_read_data;
  5363   000070  C014  FFD9         	movff	_spi_str_interrupt,fsr2l
  5364   000074  C015  FFDA         	movff	_spi_str_interrupt+1,fsr2h
  5365   000078  C017  FFDF         	movff	_spi_read_data,indf2	;volatile
  5366   00007C  4A14               	infsnz	_spi_str_interrupt^0,f,c
  5367   00007E  2A15               	incf	(_spi_str_interrupt+1)^0,f,c
  5368                           
  5369                           ;spi.c: 65:                 break;
  5370   000080  EF63  F000         	goto	i2l291
  5371   000084                     i2l1926:
  5372                           
  5373                           ;spi.c: 67:                 *spi_str_interrupt = *spi_str_interrupt;
  5374   000084  C014  FFD9         	movff	_spi_str_interrupt,fsr2l
  5375   000088  C015  FFDA         	movff	_spi_str_interrupt+1,fsr2h
  5376   00008C  C014  FFE1         	movff	_spi_str_interrupt,fsr1l
  5377   000090  C015  FFE2         	movff	_spi_str_interrupt+1,fsr1h
  5378   000094  CFDF FFE7          	movff	indf2,indf1
  5379                           
  5380                           ;spi.c: 68:                 break;
  5381   000098  EF63  F000         	goto	i2l291
  5382   00009C                     i2l1930:
  5383   00009C  5016               	movf	_recording_on^0,w,c	;volatile
  5384   00009E  6E01               	movwf	??_SPI_ISR^0,c
  5385   0000A0  6A02               	clrf	(??_SPI_ISR+1)^0,c
  5386                           
  5387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5388                           ; Switch size 1, requested type "simple"
  5389                           ; Number of cases is 1, Range of values is 0 to 0
  5390                           ; switch strategies available:
  5391                           ; Name         Instructions Cycles
  5392                           ; simple_byte            4     3 (average)
  5393                           ;	Chosen strategy is simple_byte
  5394   0000A2  5002               	movf	(??_SPI_ISR+1)^0,w,c
  5395   0000A4  0A00               	xorlw	0	; case 0
  5396   0000A6  B4D8               	btfsc	status,2,c
  5397   0000A8  EF58  F000         	goto	i2l1958
  5398   0000AC  EF42  F000         	goto	i2l1926
  5399   0000B0                     i2l1958:
  5400                           
  5401                           ; Switch size 1, requested type "simple"
  5402                           ; Number of cases is 2, Range of values is 0 to 1
  5403                           ; switch strategies available:
  5404                           ; Name         Instructions Cycles
  5405                           ; simple_byte            7     4 (average)
  5406                           ;	Chosen strategy is simple_byte
  5407   0000B0  5001               	movf	??_SPI_ISR^0,w,c
  5408   0000B2  0A00               	xorlw	0	; case 0
  5409   0000B4  B4D8               	btfsc	status,2,c
  5410   0000B6  EF32  F000         	goto	i2l1920
  5411   0000BA  0A01               	xorlw	1	; case 1
  5412   0000BC  B4D8               	btfsc	status,2,c
  5413   0000BE  EF38  F000         	goto	i2l1922
  5414   0000C2  EF42  F000         	goto	i2l1926
  5415   0000C6                     i2l291:
  5416                           
  5417                           ;spi.c: 70:         PIR1bits.SSP1IF=0;
  5418   0000C6  969E               	bcf	158,3,c	;volatile
  5419   0000C8                     
  5420                           ;spi.c: 71:         SSP1BUF = 0x55;
  5421   0000C8  0E55               	movlw	85
  5422   0000CA  6EC9               	movwf	201,c	;volatile
  5423   0000CC                     i2l294:
  5424   0000CC  C006  FFDA         	movff	??_SPI_ISR+5,fsr2h
  5425   0000D0  C005  FFD9         	movff	??_SPI_ISR+4,fsr2l
  5426   0000D4  C004  FFE2         	movff	??_SPI_ISR+3,fsr1h
  5427   0000D8  C003  FFE1         	movff	??_SPI_ISR+2,fsr1l
  5428   0000DC  9221               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5429   0000DE  0011               	retfie		f
  5430   0000E0                     __end_of_SPI_ISR:
  5431                           	callstack 0
  5432   000000                     
  5433                           	psect	rparam
  5434   000000                     
  5435                           	psect	temp
  5436   000021                     btemp:
  5437                           	callstack 0
  5438   000021                     	ds	1
  5439   000000                     int$flags	set	btemp
  5440   000000                     wtemp8	set	btemp+1
  5441   000000                     ttemp5	set	btemp+1
  5442   000000                     ttemp6	set	btemp+4
  5443   000000                     ttemp7	set	btemp+8
  5444                           
  5445                           	psect	idloc
  5446                           
  5447                           ;Config register IDLOC0 @ 0x200000
  5448                           ;	unspecified, using default values
  5449   200000                     	org	2097152
  5450   200000  FF                 	db	255
  5451                           
  5452                           ;Config register IDLOC1 @ 0x200001
  5453                           ;	unspecified, using default values
  5454   200001                     	org	2097153
  5455   200001  FF                 	db	255
  5456                           
  5457                           ;Config register IDLOC2 @ 0x200002
  5458                           ;	unspecified, using default values
  5459   200002                     	org	2097154
  5460   200002  FF                 	db	255
  5461                           
  5462                           ;Config register IDLOC3 @ 0x200003
  5463                           ;	unspecified, using default values
  5464   200003                     	org	2097155
  5465   200003  FF                 	db	255
  5466                           
  5467                           ;Config register IDLOC4 @ 0x200004
  5468                           ;	unspecified, using default values
  5469   200004                     	org	2097156
  5470   200004  FF                 	db	255
  5471                           
  5472                           ;Config register IDLOC5 @ 0x200005
  5473                           ;	unspecified, using default values
  5474   200005                     	org	2097157
  5475   200005  FF                 	db	255
  5476                           
  5477                           ;Config register IDLOC6 @ 0x200006
  5478                           ;	unspecified, using default values
  5479   200006                     	org	2097158
  5480   200006  FF                 	db	255
  5481                           
  5482                           ;Config register IDLOC7 @ 0x200007
  5483                           ;	unspecified, using default values
  5484   200007                     	org	2097159
  5485   200007  FF                 	db	255
  5486                           
  5487                           	psect	config
  5488                           
  5489                           ; Padding undefined space
  5490   300000                     	org	3145728
  5491   300000  FF                 	db	255
  5492                           
  5493                           ;Config register CONFIG1H @ 0x300001
  5494                           ;	Oscillator Selection bits
  5495                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  5496                           ;	4X PLL Enable
  5497                           ;	PLLCFG = ON, Oscillator multiplied by 4
  5498                           ;	Primary clock enable bit
  5499                           ;	PRICLKEN = ON, Primary clock is always enabled
  5500                           ;	Fail-Safe Clock Monitor Enable bit
  5501                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5502                           ;	Internal/External Oscillator Switchover bit
  5503                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5504   300001                     	org	3145729
  5505   300001  32                 	db	50
  5506                           
  5507                           ;Config register CONFIG2L @ 0x300002
  5508                           ;	Power-up Timer Enable bit
  5509                           ;	PWRTEN = OFF, Power up timer disabled
  5510                           ;	Brown-out Reset Enable bits
  5511                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5512                           ;	Brown Out Reset Voltage bits
  5513                           ;	BORV = 0x3, unprogrammed default
  5514   300002                     	org	3145730
  5515   300002  19                 	db	25
  5516                           
  5517                           ;Config register CONFIG2H @ 0x300003
  5518                           ;	Watchdog Timer Enable bits
  5519                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5520                           ;	Watchdog Timer Postscale Select bits
  5521                           ;	WDTPS = 0xF, unprogrammed default
  5522   300003                     	org	3145731
  5523   300003  3C                 	db	60
  5524                           
  5525                           ; Padding undefined space
  5526   300004                     	org	3145732
  5527   300004  FF                 	db	255
  5528                           
  5529                           ;Config register CONFIG3H @ 0x300005
  5530                           ;	CCP2 MUX bit
  5531                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5532                           ;	PORTB A/D Enable bit
  5533                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  5534                           ;	P3A/CCP3 Mux bit
  5535                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  5536                           ;	HFINTOSC Fast Start-up
  5537                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  5538                           ;	Timer3 Clock input mux bit
  5539                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5540                           ;	ECCP2 B output mux bit
  5541                           ;	P2BMX = PORTC0, P2B is on RC0
  5542                           ;	MCLR Pin Enable bit
  5543                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5544   300005                     	org	3145733
  5545   300005  91                 	db	145
  5546                           
  5547                           ;Config register CONFIG4L @ 0x300006
  5548                           ;	Stack Full/Underflow Reset Enable bit
  5549                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5550                           ;	Single-Supply ICSP Enable bit
  5551                           ;	LVP = OFF, Single-Supply ICSP disabled
  5552                           ;	Extended Instruction Set Enable bit
  5553                           ;	XINST = 0x0, unprogrammed default
  5554                           ;	Background Debug
  5555                           ;	DEBUG = OFF, Disabled
  5556   300006                     	org	3145734
  5557   300006  81                 	db	129
  5558                           
  5559                           ; Padding undefined space
  5560   300007                     	org	3145735
  5561   300007  FF                 	db	255
  5562                           
  5563                           ;Config register CONFIG5L @ 0x300008
  5564                           ;	Code Protection Block 0
  5565                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5566                           ;	Code Protection Block 1
  5567                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5568                           ;	Code Protection Block 2
  5569                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5570                           ;	Code Protection Block 3
  5571                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5572   300008                     	org	3145736
  5573   300008  0F                 	db	15
  5574                           
  5575                           ;Config register CONFIG5H @ 0x300009
  5576                           ;	Boot Block Code Protection bit
  5577                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5578                           ;	Data EEPROM Code Protection bit
  5579                           ;	CPD = OFF, Data EEPROM not code-protected
  5580   300009                     	org	3145737
  5581   300009  C0                 	db	192
  5582                           
  5583                           ;Config register CONFIG6L @ 0x30000A
  5584                           ;	Write Protection Block 0
  5585                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5586                           ;	Write Protection Block 1
  5587                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5588                           ;	Write Protection Block 2
  5589                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5590                           ;	Write Protection Block 3
  5591                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5592   30000A                     	org	3145738
  5593   30000A  0F                 	db	15
  5594                           
  5595                           ;Config register CONFIG6H @ 0x30000B
  5596                           ;	Configuration Register Write Protection bit
  5597                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5598                           ;	Boot Block Write Protection bit
  5599                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5600                           ;	Data EEPROM Write Protection bit
  5601                           ;	WRTD = OFF, Data EEPROM not write-protected
  5602   30000B                     	org	3145739
  5603   30000B  E0                 	db	224
  5604                           
  5605                           ;Config register CONFIG7L @ 0x30000C
  5606                           ;	Table Read Protection Block 0
  5607                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5608                           ;	Table Read Protection Block 1
  5609                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5610                           ;	Table Read Protection Block 2
  5611                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5612                           ;	Table Read Protection Block 3
  5613                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5614   30000C                     	org	3145740
  5615   30000C  0F                 	db	15
  5616                           
  5617                           ;Config register CONFIG7H @ 0x30000D
  5618                           ;	Boot Block Table Read Protection bit
  5619                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5620   30000D                     	org	3145741
  5621   30000D  40                 	db	64
  5622                           tosu	equ	0xFFF
  5623                           tosh	equ	0xFFE
  5624                           tosl	equ	0xFFD
  5625                           stkptr	equ	0xFFC
  5626                           pclatu	equ	0xFFB
  5627                           pclath	equ	0xFFA
  5628                           pcl	equ	0xFF9
  5629                           tblptru	equ	0xFF8
  5630                           tblptrh	equ	0xFF7
  5631                           tblptrl	equ	0xFF6
  5632                           tablat	equ	0xFF5
  5633                           prodh	equ	0xFF4
  5634                           prodl	equ	0xFF3
  5635                           indf0	equ	0xFEF
  5636                           postinc0	equ	0xFEE
  5637                           postdec0	equ	0xFED
  5638                           preinc0	equ	0xFEC
  5639                           plusw0	equ	0xFEB
  5640                           fsr0h	equ	0xFEA
  5641                           fsr0l	equ	0xFE9
  5642                           wreg	equ	0xFE8
  5643                           indf1	equ	0xFE7
  5644                           postinc1	equ	0xFE6
  5645                           postdec1	equ	0xFE5
  5646                           preinc1	equ	0xFE4
  5647                           plusw1	equ	0xFE3
  5648                           fsr1h	equ	0xFE2
  5649                           fsr1l	equ	0xFE1
  5650                           bsr	equ	0xFE0
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           postdec2	equ	0xFDD
  5654                           preinc2	equ	0xFDC
  5655                           plusw2	equ	0xFDB
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    spi_str_interrupt	PTR volatile unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), signal_distribution_packet(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_LM629_init
    _right->_check_busy
    _right->_write_data
    _reverse_right->_check_busy
    _reverse_right->_write_data
    _reverse_left->_check_busy
    _reverse_left->_write_data
    _reverse->_check_busy
    _reverse->_write_data
    _left->_check_busy
    _left->_write_data
    _forward_right->_check_busy
    _forward_right->_write_data
    _forward_left->_check_busy
    _forward_left->_write_data
    _forward->_check_busy
    _forward->_write_data
    _motor_off->_check_busy
    _motor_off->_write_data
    _motor_break->_check_busy
    _motor_break->_write_data
    _LM629_init->_check_busy
    _LM629_init->_write_data
    _filter_module->_check_busy
    _filter_module->_write_data
    _write_data->_DATABUS
    _write_command->_DATABUS
    _check_busy->_read_status
    _read_status->_DATABUS

Critical Paths under _SPI_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SPI_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SPI_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SPI_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SPI_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SPI_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SPI_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SPI_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SPI_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SPI_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SPI_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SPI_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SPI_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  340284
                                             15 COMRAM     4     4      0
                         _LM629_init
                          _all_break
                            _all_off
                            _forward
                       _forward_left
                      _forward_right
                               _left
                            _reverse
                       _reverse_left
                      _reverse_right
                              _right
                           _spi_data
                     _spi_slave_init
 ---------------------------------------------------------------------------------
 (1) _spi_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _right                                                0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_right                                        0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_left                                         0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse                                              0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _left                                                 0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_right                                        0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_left                                         0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_off                                              0     0      0   16976
                        _chip_select
                          _motor_off
 ---------------------------------------------------------------------------------
 (2) _motor_off                                            0     0      0   16888
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_break                                            0     0      0   16976
                        _chip_select
                        _motor_break
 ---------------------------------------------------------------------------------
 (2) _motor_break                                          0     0      0   16888
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _LM629_init                                           2     2      0   35153
                                             13 COMRAM     2     2      0
                         _check_busy
                        _chip_select
                      _filter_module
                        _read_status
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _filter_module                                        0     0      0   16888
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           2     1      1   15009
                                             11 COMRAM     2     1      1
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (2) _write_command                                        1     1      0     927
                                             11 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _check_busy                                           1     1      0     952
                                             12 COMRAM     1     1      0
                        _read_status
 ---------------------------------------------------------------------------------
 (4) _read_status                                          1     1      0     928
                                             11 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _DATABUS_DIR                                          1     1      0      44
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATABUS                                              5     4      1     861
                                              6 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _chip_select                                          1     1      0      88
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SPI_ISR                                              6     6      0       0
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM629_init
     _check_busy
       _read_status
         _DATABUS
         _DATABUS_DIR
     _chip_select
     _filter_module
       _check_busy
       _write_command
         _DATABUS
         _DATABUS_DIR
       _write_data
         _DATABUS
         _DATABUS_DIR
     _read_status
     _write_command
     _write_data
   _all_break
     _chip_select
     _motor_break
       _check_busy
       _write_command
       _write_data
   _all_off
     _chip_select
     _motor_off
       _check_busy
       _write_command
       _write_data
   _forward
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _spi_data
   _spi_slave_init

 _SPI_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     13      20       1       34.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlllhh      24      0       0      48        0.0%
BITBIGSFRllhhhh     22      0       0      43        0.0%
BITBIGSFRhl         21      0       0      38        0.0%
BITBIGSFRllhhlh      E      0       0      45        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhl        B      0       0      47        0.0%
BITBIGSFRllhhhh      6      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRlhh         4      0       0      39        0.0%
BITBIGSFRlllll       4      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRllllh       2      0       0      50        0.0%
BITBIGSFRlhlh        1      0       0      40        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRlhll        1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      33        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Sep 01 18:04:47 2022

                        l91 14F8               _filter_module 1588                         l202 176C  
                       l220 135C                         l205 1742                         l142 16EC  
                       l151 16B6                         l223 0C74                         l208 15E2  
                       l232 11A2                         l241 0900                         l170 039C  
                       l226 0746                         l139 17E4                         l235 0FE8  
                       l148 163E                         l229 0E2E                         l182 058C  
                       l238 0ABA                         l191 1576                         l176 167E  
                       l193 1586                         l196 1790                         l276 1718  
                       l199 17B4                         l279 17EC                         _GIE 007F97  
                       u500 1652                         u501 164E                         u510 1672  
                       u511 166E                         u600 0510                         u520 03B0  
                       u601 0508                         u521 03AC                         u610 052C  
                       u611 0524                         u620 0548                         u700 013A  
                       u621 0540                         u701 0136                         u630 0564  
                       u710 014C                         u631 055C                         u535 0446  
                       u711 0148                         u640 0580                         u608 0512  
                       u560 04B2                         u800 02C0                         u720 0184  
                       u641 0578                         u561 04AE                         u545 046A  
                       u801 02BC                         u721 0180                         u618 052E  
                       u570 04C2                         u650 17E4                         u810 02D2  
                       u730 0196                         u571 04BC                         u555 048A  
                       u651 17E0                         u811 02CE                         u731 0192  
                       u660 1512                         u628 054A                         u580 04D8  
                       u820 0314                         u740 01D8                         u900 145E  
                       u661 150E                         u581 04D0                         u821 0310  
                       u741 01D4                         u901 145A                         u670 152E  
                       u638 0566                         u590 04F4                         u830 0326  
                       u750 01EA                         u910 1478                         u671 152A  
                       u591 04EC                         u831 0322                         u751 01E6  
                       u911 1474                         u680 154C                         u648 0582  
                       u576 04C4                         u840 035E                         u760 0222  
                       u920 1492                         u681 1548                         u841 035A  
                       u761 021E                         u921 148E                         u690 156A  
                       u850 0370                         u770 0234                         u930 14B0  
                       u691 1566                         u851 036C                         u771 0230  
                       u931 14AC                         u588 04DA                         u780 0276  
                       u940 14CE                         u860 13E6                         u781 0272  
                       u941 14CA                         u861 13E2                         u598 04F6  
                       u790 0288                         u950 14EC                         u870 1404  
                       u791 0284                         u951 14E8                         u871 1400  
                       u880 1422                         u881 141E                         u890 1440  
                       u891 143C                         u997 13B4             __end_of_DATABUS 058E  
                       wreg 000FE8                        l1500 16E8                        l1502 16EA  
                      l1510 17D6                        l1520 15FA                        l1512 15E6  
                      l1600 00EC                        l1506 17D0                        l1530 1616  
                      l1522 15FC                        l1514 15EE                        l1610 00F6  
                      l1602 00EE                        l1540 1636                        l1532 161E  
                      l1524 1604                        l1516 15F4                        l1700 02AE  
                      l1620 010A                        l1612 00F8                        l1604 00F0  
                      l1470 1672                        l1550 168A                        l1542 1638  
                      l1534 1620                        l1526 160E                        l1518 15F6  
                      l1710 02E4                        l1702 02C0                        l1630 0128  
                      l1622 010C                        l1614 00FA                        l1606 00F2  
                      l1480 04B2                        l1472 03A0                        l1464 1642  
                      l1560 16A8                        l1552 168E                        l1544 163C  
                      l1536 1626                        l1528 1614                        l1720 0302  
                      l1712 02E6                        l1640 0172                        l1632 013A  
                      l1624 0112                        l1616 00FC                        l1608 00F4  
                      l1800 1386                        l1570 151E                        l1482 058A  
                      l1474 03B0                        l1466 1652                        l1490 16C0  
                      l1562 16AC                        l1554 1690                        l1546 1682  
                      l1538 1630                        l1730 034C                        l1722 0314  
                      l1714 02EC                        l1706 02D6                        l1650 01A8  
                      l1642 0184                        l1626 0114                        l1618 0102  
                      l1810 1394                        l1802 138A                        l1580 156A  
                      l1572 152E                        l1476 049A                        l1468 1662  
                      l1492 16C8                        l1564 16AE                        l1556 16A0  
                      l1548 1688                        l1732 035E                        l1716 02EE  
                      l1708 02DC                        l1660 01C6                        l1652 01AA  
                      l1628 0122                        l1740 16F4                        l1820 13A6  
                      l1812 1396                        l1804 138E                        l1574 153A  
                      l1582 157E                        l1566 1502                        l1478 04A2  
                      l1494 16CA                        l1486 16B8                        l1558 16A6  
                      l1718 02FC                        l1670 0210                        l1662 01D8  
                      l1654 01B0                        l1646 019A                        l1638 0150  
                      l1590 00E4                        l1750 1710                        l1742 1708  
                      l1830 13D0                        l1822 13AA                        l1814 139A  
                      l1806 1390                        l1576 154C                        l1568 1512  
                      l1496 16DE                        l1488 16BE                        l1584 1588  
                      l1736 0374                        l1728 032A                        l1680 0246  
                      l1672 0222                        l1656 01B2                        l1648 01A0  
                      l1592 00E4                        l1760 171A                        l1752 1712  
                      l1744 170A                        l1840 1410                        l1832 13D4  
                      l1824 13C2                        l1816 139E                        l1808 1392  
                      l1578 1558                        l1498 16E0                        l1690 0264  
                      l1682 0248                        l1658 01C0                        l1594 00E6  
                      l1770 1744                        l1586 176E                        l1762 11A4  
                      l1754 1714                        l1746 170C                        l1738 16EE  
                      l1850 145E                        l1842 1422                        l1834 13E6  
                      l1826 13C6                        l1818 13A2                        l1692 0276  
                      l1684 024E                        l1676 0238                        l1668 01EE  
                      l1596 00E8                        l1588 1792                        l1772 0E30  
                      l1764 0ABC                        l1756 1716                        l1748 170E  
                      l1860 149E                        l1852 1466                        l1844 142E  
                      l1836 13F2                        l1828 13CA                        l1780 135E  
           ?_spi_slave_init 0001                        l1686 0250                        l1678 023E  
                      l1598 00EA                        l1774 0FEA                        l1766 0C76  
                      l1758 17E8                        l1870 14EC                        l1862 14B0  
                      l1854 1478                        l1846 1440                        l1838 1404  
                      l1790 1372                        l1782 1362                        l1688 025E  
                      l1776 0902                        l1768 058E                        l1864 14BC  
                      l1856 1480                        l1848 144C                        l1792 1376  
                      l1784 1364                        l1698 028C                        l1778 0748  
                      l1866 14CE                        l1858 1492                        l1794 137A  
                      l1786 1368                        l1868 14DA                        l1796 137E  
                      l1788 136E                        l1798 1382                        u1007 0104  
                      u1017 010E                        u1107 02E8                        u1027 011A  
                      u1117 02F4                        u1037 01A2                        u1127 15E8  
                      u1047 01AC                        u1137 1618                        u1057 01B8  
                      u1147 16B0                        u1067 0240                        u1157 16C2  
                      u1077 024A                        u1167 16CC                        u1087 0256  
                      u1177 16E2                        u1097 02DE                        u1187 1580  
                      _PEIE 007F96                        _RCON 000FD0                        _main 135E  
                      _left 0C76             __end_of_SPI_ISR 00E0                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf1 000FE7                        indf2 000FDF  
                      fsr1l 000FE1                        fsr2l 000FD9                        btemp 0021  
                      start 00E0                ___param_bank 000000             spi_data@tx_data 0007  
            ?_filter_module 0001                       ?_main 0001                       ?_left 0001  
                     i2l291 00C6                       i2l286 0060                       i2l294 00CC  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISD 000F95             __end_of_all_off 1744             __end_of_forward 135E  
                     _right 058E                ?_read_status 0001             __end_of_reverse 0C76  
                     ttemp5 0022                       ttemp6 0025                       ttemp7 0029  
                     status 000FD8                       wtemp8 0022             write_data@byte1 000D  
           write_data@byte2 000C             __initialization 17B6                __end_of_main 1500  
              __end_of_left 0E30                   ??_DATABUS 0008                      ??_main 0010  
                    ??_left 000E               __activetblptr 000002           main@received_data 0013  
                    _ADCON0 000FC2                      _ADCON1 000FC1                   ??_SPI_ISR 0001  
                    ?_right 0001                      _ANSELA 000F38                      _ANSELB 000F39  
                    _ANSELC 000F3A                      _ANSELD 000F3B                      _ANSELE 000F3C  
                    i2l1910 0028                      i2l1920 0064                      i2l1912 002C  
                    i2l1922 0070                      i2l1930 009C                      i2l1914 003E  
                    i2l1932 00C8                      i2l1924 007C                      i2l1916 0046  
                    i2l1908 001A                      i2l1926 0084                      i2l1918 0058  
                    i2l1958 00B0                      _INTCON 000FF2           read_status@status 000C  
                    _SRCON0 000F47                      _SSP1IE 007CEB               ?_forward_left 0001  
           ??_filter_module 000E                      clear_0 17BC                   ??_all_off 000E  
                    isa$std 000001                ?_motor_break 0001                ??_LM629_init 000E  
                 ??_forward 000E            __end_of_spi_data 17EE                      tblptru 000FF8  
                 ??_reverse 000E                  __accesstop 0060     __end_of__initialization 17C2  
      write_command@command 000C               ___rparam_used 000001              ??_forward_left 000E  
            __pcstackCOMRAM 0001          __end_of_LM629_init 039E               __end_of_right 0748  
          ??_spi_slave_init 0007                     ??_right 000E                  _check_busy 17D0  
     __end_of_reverse_right 0902               _forward_right 0E30                     _CM1CON0 000F79  
                   _CM2CON0 000F78                     _DATABUS 039E                     _HLVDCON 000F9C  
             ??_DATABUS_DIR 0007                     i2u96_40 0028                     i2u96_41 0024  
                   i2u97_40 003E                     i2u97_41 003A                     i2u98_40 0058  
                   i2u98_41 0054                     _SSP1BUF 000FC9                     _SPI_ISR 0008  
            main@dummy_data 0012           __end_of_all_break 176E               _write_command 1680  
            ?_forward_right 0001                     __Hparam 0000                     __Lparam 0000  
                 ?_spi_data 0001                DATABUS@byte0 0007                     __pcinit 17B6  
                   _all_off 171A                     __ramtop 1000                     __ptext0 135E  
                   __ptext1 16EE                     __ptext2 17E6                     __ptext3 058E  
                   __ptext4 0748                     __ptext5 0902                     __ptext6 0ABC  
                   __ptext7 0C76                     __ptext8 0E30                     __ptext9 0FEA  
                   _forward 11A4               ?_reverse_left 0001        __end_of_forward_left 11A4  
                   _reverse 0ABC        end_of_initialization 17C2                 ?_check_busy 0001  
       __end_of_DATABUS_DIR 1680              ?_write_command 0001               __Lmediumconst 0000  
         __end_of_motor_off 1792               ??_chip_select 0007                  ??_spi_data 0007  
                   postinc0 000FEE                   _PORTAbits 000F80                   _PORTBbits 000F81  
                 _PORTCbits 000F82                   _PORTDbits 000F83              ??_reverse_left 000E  
           chip_select@chip 0007                   _TRISAbits 000F92                   _TRISBbits 000F93  
                 _TRISCbits 000F94                   _TRISDbits 000F95             ??_forward_right 000E  
                _write_data 15E4       __end_of_filter_module 15E4         __end_of_chip_select 1588  
       start_initialization 17B6                 _DATABUS_DIR 1640             ??_write_command 000C  
                  DATABUS@x 000B                    ?_DATABUS 0007                 __pbssCOMRAM 0014  
             ??_read_status 000C                    ?_SPI_ISR 0001              DATABUS_DIR@dir 0007  
      __end_of_reverse_left 0ABC                   _all_break 1744                _forward_left 0FEA  
               _chip_select 1500                   __pintcode 0008                 ?_write_data 000C  
                  ?_all_off 0001                    ?_forward 0001                    ?_reverse 0001  
               DATABUS@dir1 000A                ??_check_busy 000D                    _CTMUCONH 000F45  
       __end_of_read_status 16EE                  ?_all_break 0001                    _PIR1bits 000F9E  
                 _motor_off 176E                    _SSP1CON1 000FC6                    _SSP1CON3 000FCB  
                  _SSP2CON1 000F6C                    _VREFCON0 000F42                    _VREFCON1 000F41  
             ??_motor_break 000E          __end_of_check_busy 17E6           _spi_str_interrupt 0014  
              _recording_on 0016  _signal_distribution_packet 0018                    __Hrparam 0000  
             _reverse_right 0748                    __Lrparam 0000                  ?_motor_off 0001  
               check_busy@x 000D                  _LM629_init 00E4         __end_of_motor_break 17B6  
              ?_DATABUS_DIR 0001                    __ptext10 11A4                    __ptext11 171A  
                  __ptext20 16B8                    __ptext12 176E                    __ptext21 1640  
                  __ptext13 1744                    __ptext22 039E                    __ptext14 1792  
                  __ptext23 1500                    __ptext15 00E4                    __ptext16 1588  
                  __ptext17 15E4                    __ptext18 1680                    __ptext19 17D0  
              _SSP1CON1bits 000FC6                 _read_status 16B8              ?_reverse_right 0001  
     __end_of_forward_right 0FEA                 ??_all_break 000E                    isa$xinst 000000  
                  _spi_data 17E6                    int$flags 0021                 LM629_init@x 000F  
              _SSP1STATbits 000FC7                _reverse_left 0902                    intlevel2 0000  
            _spi_slave_init 16EE       __end_of_write_command 16B8               _spi_read_data 0017  
              ?_chip_select 0001                 ??_motor_off 000E                ??_write_data 000D  
               _motor_break 1792                 ?_LM629_init 0001      __end_of_spi_slave_init 171A  
           ??_reverse_right 000E          __end_of_write_data 1640  
