

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jul 20 19:59:34 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.35
    40                           ; Generated 05/05/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISB	set	3987
    76  0000                     _TRISD	set	3989
    77  0000                     _TRISCbits	set	3988
    78  0000                     _TRISAbits	set	3986
    79  0000                     _SSPCON1	set	4038
    80  0000                     _SSP1IF	set	31987
    81  0000                     _GIE	set	32663
    82  0000                     _PEIE	set	32662
    83  0000                     _VREFCON1	set	3905
    84  0000                     _VREFCON0	set	3906
    85  0000                     _CTMUCONH	set	3909
    86  0000                     _SSP2CON1	set	3948
    87  0000                     _SSP1CON1	set	4038
    88  0000                     _ANSELE	set	3900
    89  0000                     _ANSELD	set	3899
    90  0000                     _ANSELC	set	3898
    91  0000                     _ANSELB	set	3897
    92  0000                     _ANSELA	set	3896
    93  0000                     _RCON	set	4048
    94  0000                     _INTCON	set	4082
    95  0000                     _SSP1BUF	set	4041
    96  0000                     _SSP1CON3	set	4043
    97  0000                     _SSPSTAT	set	4039
    98  0000                     _CM2CON0	set	3960
    99  0000                     _CM1CON0	set	3961
   100  0000                     _PORTAbits	set	3968
   101  0000                     _PORTBbits	set	3969
   102  0000                     _PORTCbits	set	3970
   103  0000                     _TRISA	set	3986
   104  0000                     _HLVDCON	set	3996
   105  0000                     _SRCON0	set	3911
   106  0000                     _ADCON1	set	4033
   107  0000                     _ADCON0	set	4034
   108  0000                     _SSPIF	set	31987
   109  0000                     _SSP1IE	set	31979
   110  0000                     _PORTDbits	set	3971
   111                           
   112                           ; #config settings
   113                           
   114                           	psect	cinit
   115  00146A                     __pcinit:
   116                           	callstack 0
   117  00146A                     start_initialization:
   118                           	callstack 0
   119  00146A                     __initialization:
   120                           	callstack 0
   121                           
   122                           ; Clear objects allocated to COMRAM (1 bytes)
   123  00146A  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   124  00146C                     end_of_initialization:
   125                           	callstack 0
   126  00146C                     __end_of__initialization:
   127                           	callstack 0
   128  00146C  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   129  00146E  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   130  001470  0100               	movlb	0
   131  001472  EF85  F008         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMRAM
   134  00000B                     __pbssCOMRAM:
   135                           	callstack 0
   136  00000B                     _spi_read_data:
   137                           	callstack 0
   138  00000B                     	ds	1
   139                           
   140                           	psect	cstackCOMRAM
   141  000001                     __pcstackCOMRAM:
   142                           	callstack 0
   143  000001                     DATABUS_DIR@dir:
   144                           	callstack 0
   145  000001                     DATABUS@byte0:
   146                           	callstack 0
   147  000001                     chip_select@chip:
   148                           	callstack 0
   149  000001                     spi_data@tx_data:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x0
   153  000001                     	ds	1
   154  000002                     ??_DATABUS:
   155                           
   156                           ; 1 bytes @ 0x1
   157  000002                     	ds	2
   158  000004                     DATABUS@dir1:
   159                           	callstack 0
   160                           
   161                           ; 1 bytes @ 0x3
   162  000004                     	ds	1
   163  000005                     DATABUS@x:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x4
   167  000005                     	ds	1
   168  000006                     read_status@status:
   169                           	callstack 0
   170  000006                     write_data@byte2:
   171                           	callstack 0
   172  000006                     write_command@command:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x5
   176  000006                     	ds	1
   177  000007                     check_busy@x:
   178                           	callstack 0
   179  000007                     write_data@byte1:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x6
   183  000007                     	ds	1
   184  000008                     ??_LM629_init:
   185  000008                     
   186                           ; 1 bytes @ 0x7
   187  000008                     	ds	1
   188  000009                     LM629_init@x:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x8
   192  000009                     	ds	1
   193  00000A                     main@received_data:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x9
   197  00000A                     	ds	1
   198                           
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 129 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;  received_dat    1    9[COMRAM] unsigned char 
   209 ;;  dummy_data      1    0        unsigned char 
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2, status,0, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   222 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   223 ;;Total ram usage:        1 bytes
   224 ;; Hardware stack levels required when called: 6
   225 ;; This function calls:
   226 ;;		_LM629_init
   227 ;;		_all_break
   228 ;;		_all_off
   229 ;;		_forward
   230 ;;		_forward_left
   231 ;;		_forward_right
   232 ;;		_left
   233 ;;		_reverse
   234 ;;		_reverse_left
   235 ;;		_reverse_right
   236 ;;		_right
   237 ;;		_spi_data
   238 ;;		_spi_slave_init
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245  00110A                     __ptext0:
   246                           	callstack 0
   247  00110A                     _main:
   248                           	callstack 25
   249                           
   250                           ;main.c: 131:     RCON &= 0x7F;
   251                           
   252                           ;incstack = 0
   253  00110A  9ED0               	bcf	208,7,c	;volatile
   254                           
   255                           ;main.c: 132:     INTCON=0;
   256  00110C  0E00               	movlw	0
   257  00110E  6EF2               	movwf	242,c	;volatile
   258                           
   259                           ;main.c: 133:     ANSELA=0;
   260  001110  0E00               	movlw	0
   261  001112  010F               	movlb	15	; () banked
   262  001114  6F38               	movwf	56,b	;volatile
   263                           
   264                           ; BSR set to: 15
   265                           ;main.c: 134:     ANSELB=0;
   266  001116  0E00               	movlw	0
   267  001118  6F39               	movwf	57,b	;volatile
   268                           
   269                           ; BSR set to: 15
   270                           ;main.c: 135:     ANSELC=0;
   271  00111A  0E00               	movlw	0
   272  00111C  6F3A               	movwf	58,b	;volatile
   273                           
   274                           ; BSR set to: 15
   275                           ;main.c: 136:     ANSELD=0;
   276  00111E  0E00               	movlw	0
   277  001120  6F3B               	movwf	59,b	;volatile
   278                           
   279                           ; BSR set to: 15
   280                           ;main.c: 137:     ANSELE=0;
   281  001122  0E00               	movlw	0
   282  001124  6F3C               	movwf	60,b	;volatile
   283                           
   284                           ; BSR set to: 15
   285                           ;main.c: 138:     SSP1CON1=0x00;
   286  001126  0E00               	movlw	0
   287  001128  6EC6               	movwf	198,c	;volatile
   288                           
   289                           ; BSR set to: 15
   290                           ;main.c: 139:     SSP2CON1=0x00;
   291  00112A  0E00               	movlw	0
   292  00112C  6E6C               	movwf	108,c	;volatile
   293                           
   294                           ; BSR set to: 15
   295                           ;main.c: 140:     CM1CON0=0b00000000;
   296  00112E  0E00               	movlw	0
   297  001130  6E79               	movwf	121,c	;volatile
   298                           
   299                           ; BSR set to: 15
   300                           ;main.c: 141:     CM2CON0=0b00000000;
   301  001132  0E00               	movlw	0
   302  001134  6E78               	movwf	120,c	;volatile
   303                           
   304                           ; BSR set to: 15
   305                           ;main.c: 142:     TRISA=0xFF;
   306  001136  6892               	setf	146,c	;volatile
   307                           
   308                           ; BSR set to: 15
   309                           ;main.c: 143:     TRISD=0xFF;
   310  001138  6895               	setf	149,c	;volatile
   311                           
   312                           ; BSR set to: 15
   313                           ;main.c: 144:     TRISB=0xFF;
   314  00113A  6893               	setf	147,c	;volatile
   315                           
   316                           ; BSR set to: 15
   317                           ;main.c: 145:     TRISC=0xFF;
   318  00113C  6894               	setf	148,c	;volatile
   319                           
   320                           ; BSR set to: 15
   321                           ;main.c: 146:     CTMUCONH=0x00;
   322  00113E  0E00               	movlw	0
   323  001140  6F45               	movwf	69,b	;volatile
   324                           
   325                           ; BSR set to: 15
   326                           ;main.c: 147:     SRCON0=0x00;
   327  001142  0E00               	movlw	0
   328  001144  6F47               	movwf	71,b	;volatile
   329                           
   330                           ; BSR set to: 15
   331                           ;main.c: 148:     VREFCON0=0x00;
   332  001146  0E00               	movlw	0
   333  001148  6F42               	movwf	66,b	;volatile
   334                           
   335                           ; BSR set to: 15
   336                           ;main.c: 149:     VREFCON1=0x00;
   337  00114A  0E00               	movlw	0
   338  00114C  6F41               	movwf	65,b	;volatile
   339                           
   340                           ; BSR set to: 15
   341                           ;main.c: 150:     HLVDCON=0x00;
   342  00114E  0E00               	movlw	0
   343  001150  6E9C               	movwf	156,c	;volatile
   344                           
   345                           ; BSR set to: 15
   346                           ;main.c: 152:     LM629_init();
   347  001152  ECBF  F007         	call	_LM629_init	;wreg free
   348                           
   349                           ;main.c: 153:     spi_slave_init();
   350  001156  ECFF  F009         	call	_spi_slave_init	;wreg free
   351                           
   352                           ;main.c: 158:     spi_data(dummy_data);
   353  00115A  0E55               	movlw	85
   354  00115C  EC41  F00A         	call	_spi_data
   355  001160                     l1647:
   356                           
   357                           ;main.c: 166:     {;main.c: 167:         received_data = spi_read_data;
   358  001160  C00B  F00A         	movff	_spi_read_data,main@received_data	;volatile
   359                           
   360                           ;main.c: 169:         if(received_data==0x77)
   361  001164  0E77               	movlw	119
   362  001166  180A               	xorwf	main@received_data^0,w,c
   363  001168  A4D8               	btfss	status,2,c
   364  00116A  D005               	goto	l1653
   365                           
   366                           ;main.c: 170:         {;main.c: 171:             all_off();
   367  00116C  ECC0  F009         	call	_all_off	;wreg free
   368                           
   369                           ;main.c: 172:             forward();
   370  001170  EC1B  F006         	call	_forward	;wreg free
   371                           
   372                           ;main.c: 173:         }
   373  001174  D7F5               	goto	l1647
   374  001176                     l1653:
   375  001176  0E73               	movlw	115
   376  001178  180A               	xorwf	main@received_data^0,w,c
   377  00117A  A4D8               	btfss	status,2,c
   378  00117C  D005               	goto	l1657
   379                           
   380                           ;main.c: 176:         {;main.c: 177:             all_off();
   381  00117E  ECC0  F009         	call	_all_off	;wreg free
   382                           
   383                           ;main.c: 178:             reverse();
   384  001182  ECA7  F002         	call	_reverse	;wreg free
   385                           
   386                           ;main.c: 179:         }
   387  001186  D7EC               	goto	l1647
   388  001188                     l1657:
   389  001188  0E61               	movlw	97
   390  00118A  180A               	xorwf	main@received_data^0,w,c
   391  00118C  A4D8               	btfss	status,2,c
   392  00118E  D005               	goto	l1661
   393                           
   394                           ;main.c: 182:         {;main.c: 183:             all_off();
   395  001190  ECC0  F009         	call	_all_off	;wreg free
   396                           
   397                           ;main.c: 184:             left();
   398  001194  EC84  F003         	call	_left	;wreg free
   399                           
   400                           ;main.c: 185:         }
   401  001198  D7E3               	goto	l1647
   402  00119A                     l1661:
   403  00119A  0E64               	movlw	100
   404  00119C  180A               	xorwf	main@received_data^0,w,c
   405  00119E  A4D8               	btfss	status,2,c
   406  0011A0  D005               	goto	l1665
   407                           
   408                           ;main.c: 188:         {;main.c: 189:             all_off();
   409  0011A2  ECC0  F009         	call	_all_off	;wreg free
   410                           
   411                           ;main.c: 190:             right();
   412  0011A6  EC10  F000         	call	_right	;wreg free
   413                           
   414                           ;main.c: 191:         }
   415  0011AA  D7DA               	goto	l1647
   416  0011AC                     l1665:
   417  0011AC  0E6F               	movlw	111
   418  0011AE  180A               	xorwf	main@received_data^0,w,c
   419  0011B0  A4D8               	btfss	status,2,c
   420  0011B2  D003               	goto	l1669
   421  0011B4                     u870:
   422                           
   423                           ;main.c: 194:         {;main.c: 195:             all_off();
   424  0011B4  ECC0  F009         	call	_all_off	;wreg free
   425                           
   426                           ;main.c: 196:         }
   427  0011B8  D7D3               	goto	l1647
   428  0011BA                     l1669:
   429  0011BA  0E62               	movlw	98
   430  0011BC  180A               	xorwf	main@received_data^0,w,c
   431  0011BE  A4D8               	btfss	status,2,c
   432  0011C0  D003               	goto	l1673
   433                           
   434                           ;main.c: 199:         {;main.c: 200:             all_break();
   435  0011C2  ECD5  F009         	call	_all_break	;wreg free
   436                           
   437                           ;main.c: 201:         }
   438  0011C6  D7CC               	goto	l1647
   439  0011C8                     l1673:
   440  0011C8  500A               	movf	main@received_data^0,w,c
   441  0011CA  B4D8               	btfsc	status,2,c
   442  0011CC  D7F3               	goto	u870
   443  0011CE  0E34               	movlw	52
   444  0011D0  180A               	xorwf	main@received_data^0,w,c
   445  0011D2  A4D8               	btfss	status,2,c
   446  0011D4  D005               	goto	l1681
   447                           
   448                           ;main.c: 209:         {;main.c: 210:             all_off();
   449  0011D6  ECC0  F009         	call	_all_off	;wreg free
   450                           
   451                           ;main.c: 211:             forward_right();
   452  0011DA  EC61  F004         	call	_forward_right	;wreg free
   453                           
   454                           ;main.c: 212:         }
   455  0011DE  D7C0               	goto	l1647
   456  0011E0                     l1681:
   457  0011E0  0E31               	movlw	49
   458  0011E2  180A               	xorwf	main@received_data^0,w,c
   459  0011E4  A4D8               	btfss	status,2,c
   460  0011E6  D005               	goto	l1685
   461                           
   462                           ;main.c: 215:         {;main.c: 216:             all_off();
   463  0011E8  ECC0  F009         	call	_all_off	;wreg free
   464                           
   465                           ;main.c: 217:             forward_left();
   466  0011EC  EC3E  F005         	call	_forward_left	;wreg free
   467                           
   468                           ;main.c: 218:         }
   469  0011F0  D7B7               	goto	l1647
   470  0011F2                     l1685:
   471  0011F2  0E32               	movlw	50
   472  0011F4  180A               	xorwf	main@received_data^0,w,c
   473  0011F6  A4D8               	btfss	status,2,c
   474  0011F8  D005               	goto	l1689
   475                           
   476                           ;main.c: 221:         {;main.c: 222:             all_off();
   477  0011FA  ECC0  F009         	call	_all_off	;wreg free
   478                           
   479                           ;main.c: 223:             reverse_left();
   480  0011FE  ECCA  F001         	call	_reverse_left	;wreg free
   481                           
   482                           ;main.c: 224:         }
   483  001202  D7AE               	goto	l1647
   484  001204                     l1689:
   485  001204  0E33               	movlw	51
   486  001206  180A               	xorwf	main@received_data^0,w,c
   487  001208  A4D8               	btfss	status,2,c
   488  00120A  D7AA               	goto	l1647
   489                           
   490                           ;main.c: 227:         {;main.c: 228:             all_off();
   491  00120C  ECC0  F009         	call	_all_off	;wreg free
   492                           
   493                           ;main.c: 229:             reverse_right();
   494  001210  ECED  F000         	call	_reverse_right	;wreg free
   495  001214  D7A5               	goto	l1647
   496  001216                     __end_of_main:
   497                           	callstack 0
   498                           
   499 ;; *************** function _spi_slave_init *****************
   500 ;; Defined at:
   501 ;;		line 12 in file "spi.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, status,2
   510 ;; Tracked objects:
   511 ;;		On entry : 0/F
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   519 ;;Total ram usage:        0 bytes
   520 ;; Hardware stack levels used: 1
   521 ;; Hardware stack levels required when called: 1
   522 ;; This function calls:
   523 ;;		Nothing
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text1
   530  0013FE                     __ptext1:
   531                           	callstack 0
   532  0013FE                     _spi_slave_init:
   533                           	callstack 29
   534                           
   535                           ;spi.c: 14:     SSPSTAT = 0x00;
   536                           
   537                           ;incstack = 0
   538  0013FE  0E00               	movlw	0
   539  001400  6EC7               	movwf	199,c	;volatile
   540                           
   541                           ;spi.c: 15:     SSPCON1 = 0b00100100;
   542  001402  0E24               	movlw	36
   543  001404  6EC6               	movwf	198,c	;volatile
   544                           
   545                           ;spi.c: 16:     SSP1CON3 = 0b00010000;
   546  001406  0E10               	movlw	16
   547  001408  6ECB               	movwf	203,c	;volatile
   548                           
   549                           ;spi.c: 17:     ADCON0 = 0x00;
   550  00140A  0E00               	movlw	0
   551  00140C  6EC2               	movwf	194,c	;volatile
   552                           
   553                           ;spi.c: 18:     ADCON1 = 0x00;
   554  00140E  0E00               	movlw	0
   555  001410  6EC1               	movwf	193,c	;volatile
   556                           
   557                           ;spi.c: 19:     TRISAbits.RA5 = 1;
   558  001412  8A92               	bsf	146,5,c	;volatile
   559                           
   560                           ;spi.c: 20:     TRISCbits.RC3 = 1;
   561  001414  8694               	bsf	148,3,c	;volatile
   562                           
   563                           ;spi.c: 21:     TRISCbits.RC5 = 0;
   564  001416  9A94               	bcf	148,5,c	;volatile
   565                           
   566                           ;spi.c: 22:     TRISCbits.RC4 = 1;
   567  001418  8894               	bsf	148,4,c	;volatile
   568                           
   569                           ;spi.c: 23:     SSP1IE=1;
   570  00141A  869D               	bsf	3997,3,c	;volatile
   571                           
   572                           ;spi.c: 24:     PEIE=1;
   573  00141C  8CF2               	bsf	4082,6,c	;volatile
   574                           
   575                           ;spi.c: 25:     GIE=1;
   576  00141E  8EF2               	bsf	4082,7,c	;volatile
   577  001420  0012               	return		;funcret
   578  001422                     __end_of_spi_slave_init:
   579                           	callstack 0
   580                           
   581 ;; *************** function _spi_data *****************
   582 ;; Defined at:
   583 ;;		line 28 in file "spi.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  tx_data         1    wreg     unsigned char 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  tx_data         1    0[COMRAM] unsigned char 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg
   592 ;; Tracked objects:
   593 ;;		On entry : 0/F
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   601 ;;Total ram usage:        1 bytes
   602 ;; Hardware stack levels used: 1
   603 ;; Hardware stack levels required when called: 1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text2
   612  001482                     __ptext2:
   613                           	callstack 0
   614  001482                     _spi_data:
   615                           	callstack 29
   616                           
   617                           ;incstack = 0
   618                           ;spi_data@tx_data stored from wreg
   619  001482  6E01               	movwf	spi_data@tx_data^0,c
   620                           
   621                           ;spi.c: 28: void spi_data(unsigned char tx_data);spi.c: 29: {;spi.c: 30:     SSP1BUF=tx_
      +                          data;
   622  001484  C001  FFC9         	movff	spi_data@tx_data,4041	;volatile
   623  001488  0012               	return		;funcret
   624  00148A                     __end_of_spi_data:
   625                           	callstack 0
   626                           
   627 ;; *************** function _right *****************
   628 ;; Defined at:
   629 ;;		line 610 in file "lm629.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/F
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 5
   650 ;; This function calls:
   651 ;;		_check_busy
   652 ;;		_chip_select
   653 ;;		_motor_off
   654 ;;		_write_command
   655 ;;		_write_data
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text3
   662  000020                     __ptext3:
   663                           	callstack 0
   664  000020                     _right:
   665                           	callstack 25
   666                           
   667                           ;lm629.c: 612:     chip_select(0);
   668                           
   669                           ;incstack = 0
   670  000020  0E00               	movlw	0
   671  000022  EC67  F009         	call	_chip_select
   672                           
   673                           ;lm629.c: 613:     check_busy();
   674  000026  EC3B  F00A         	call	_check_busy	;wreg free
   675                           
   676                           ;lm629.c: 614:     motor_off();
   677  00002A  EC11  F00A         	call	_motor_off	;wreg free
   678                           
   679                           ;lm629.c: 615:     write_command(0x1F);
   680  00002E  0E1F               	movlw	31
   681  000030  EC8D  F009         	call	_write_command
   682                           
   683                           ;lm629.c: 616:     check_busy();
   684  000034  EC3B  F00A         	call	_check_busy	;wreg free
   685                           
   686                           ;lm629.c: 617:     write_data(0x08,0x28);
   687  000038  0E28               	movlw	40
   688  00003A  6E06               	movwf	write_data@byte2^0,c
   689  00003C  0E08               	movlw	8
   690  00003E  EC39  F009         	call	_write_data
   691                           
   692                           ;lm629.c: 618:     check_busy();
   693  000042  EC3B  F00A         	call	_check_busy	;wreg free
   694                           
   695                           ;lm629.c: 620:     write_data(0x00,0x00);
   696  000046  0E00               	movlw	0
   697  000048  6E06               	movwf	write_data@byte2^0,c
   698  00004A  0E00               	movlw	0
   699  00004C  EC39  F009         	call	_write_data
   700                           
   701                           ;lm629.c: 621:     check_busy();
   702  000050  EC3B  F00A         	call	_check_busy	;wreg free
   703                           
   704                           ;lm629.c: 622:     write_data(0x00,0x48);
   705  000054  0E48               	movlw	72
   706  000056  6E06               	movwf	write_data@byte2^0,c
   707  000058  0E00               	movlw	0
   708  00005A  EC39  F009         	call	_write_data
   709                           
   710                           ;lm629.c: 623:     check_busy();
   711  00005E  EC3B  F00A         	call	_check_busy	;wreg free
   712                           
   713                           ;lm629.c: 625:     write_data(0x00,0x01);
   714  000062  0E01               	movlw	1
   715  000064  6E06               	movwf	write_data@byte2^0,c
   716  000066  0E00               	movlw	0
   717  000068  EC39  F009         	call	_write_data
   718                           
   719                           ;lm629.c: 626:     check_busy();
   720  00006C  EC3B  F00A         	call	_check_busy	;wreg free
   721                           
   722                           ;lm629.c: 627:     write_data(0xFA,0xD0);
   723  000070  0ED0               	movlw	208
   724  000072  6E06               	movwf	write_data@byte2^0,c
   725  000074  0EFA               	movlw	250
   726  000076  EC39  F009         	call	_write_data
   727                           
   728                           ;lm629.c: 628:     check_busy();
   729  00007A  EC3B  F00A         	call	_check_busy	;wreg free
   730                           
   731                           ;lm629.c: 631:     chip_select(1);
   732  00007E  0E01               	movlw	1
   733  000080  EC67  F009         	call	_chip_select
   734                           
   735                           ;lm629.c: 632:     check_busy();
   736  000084  EC3B  F00A         	call	_check_busy	;wreg free
   737                           
   738                           ;lm629.c: 633:     motor_off();
   739  000088  EC11  F00A         	call	_motor_off	;wreg free
   740                           
   741                           ;lm629.c: 634:     write_command(0x1F);
   742  00008C  0E1F               	movlw	31
   743  00008E  EC8D  F009         	call	_write_command
   744                           
   745                           ;lm629.c: 635:     check_busy();
   746  000092  EC3B  F00A         	call	_check_busy	;wreg free
   747                           
   748                           ;lm629.c: 636:     write_data(0x08,0x28);
   749  000096  0E28               	movlw	40
   750  000098  6E06               	movwf	write_data@byte2^0,c
   751  00009A  0E08               	movlw	8
   752  00009C  EC39  F009         	call	_write_data
   753                           
   754                           ;lm629.c: 637:     check_busy();
   755  0000A0  EC3B  F00A         	call	_check_busy	;wreg free
   756                           
   757                           ;lm629.c: 639:     write_data(0x00,0x00);
   758  0000A4  0E00               	movlw	0
   759  0000A6  6E06               	movwf	write_data@byte2^0,c
   760  0000A8  0E00               	movlw	0
   761  0000AA  EC39  F009         	call	_write_data
   762                           
   763                           ;lm629.c: 640:     check_busy();
   764  0000AE  EC3B  F00A         	call	_check_busy	;wreg free
   765                           
   766                           ;lm629.c: 641:     write_data(0x00,0x48);
   767  0000B2  0E48               	movlw	72
   768  0000B4  6E06               	movwf	write_data@byte2^0,c
   769  0000B6  0E00               	movlw	0
   770  0000B8  EC39  F009         	call	_write_data
   771                           
   772                           ;lm629.c: 642:     check_busy();
   773  0000BC  EC3B  F00A         	call	_check_busy	;wreg free
   774                           
   775                           ;lm629.c: 644:     write_data(0x00,0x01);
   776  0000C0  0E01               	movlw	1
   777  0000C2  6E06               	movwf	write_data@byte2^0,c
   778  0000C4  0E00               	movlw	0
   779  0000C6  EC39  F009         	call	_write_data
   780                           
   781                           ;lm629.c: 645:     check_busy();
   782  0000CA  EC3B  F00A         	call	_check_busy	;wreg free
   783                           
   784                           ;lm629.c: 646:     write_data(0xFA,0xD0);
   785  0000CE  0ED0               	movlw	208
   786  0000D0  6E06               	movwf	write_data@byte2^0,c
   787  0000D2  0EFA               	movlw	250
   788  0000D4  EC39  F009         	call	_write_data
   789                           
   790                           ;lm629.c: 647:     check_busy();
   791  0000D8  EC3B  F00A         	call	_check_busy	;wreg free
   792                           
   793                           ;lm629.c: 650:     chip_select(2);
   794  0000DC  0E02               	movlw	2
   795  0000DE  EC67  F009         	call	_chip_select
   796                           
   797                           ;lm629.c: 651:     check_busy();
   798  0000E2  EC3B  F00A         	call	_check_busy	;wreg free
   799                           
   800                           ;lm629.c: 652:     motor_off();
   801  0000E6  EC11  F00A         	call	_motor_off	;wreg free
   802                           
   803                           ;lm629.c: 653:     write_command(0x1F);
   804  0000EA  0E1F               	movlw	31
   805  0000EC  EC8D  F009         	call	_write_command
   806                           
   807                           ;lm629.c: 654:     check_busy();
   808  0000F0  EC3B  F00A         	call	_check_busy	;wreg free
   809                           
   810                           ;lm629.c: 655:     write_data(0x08,0x28);
   811  0000F4  0E28               	movlw	40
   812  0000F6  6E06               	movwf	write_data@byte2^0,c
   813  0000F8  0E08               	movlw	8
   814  0000FA  EC39  F009         	call	_write_data
   815                           
   816                           ;lm629.c: 656:     check_busy();
   817  0000FE  EC3B  F00A         	call	_check_busy	;wreg free
   818                           
   819                           ;lm629.c: 658:     write_data(0x00,0x00);
   820  000102  0E00               	movlw	0
   821  000104  6E06               	movwf	write_data@byte2^0,c
   822  000106  0E00               	movlw	0
   823  000108  EC39  F009         	call	_write_data
   824                           
   825                           ;lm629.c: 659:     check_busy();
   826  00010C  EC3B  F00A         	call	_check_busy	;wreg free
   827                           
   828                           ;lm629.c: 660:     write_data(0x00,0x48);
   829  000110  0E48               	movlw	72
   830  000112  6E06               	movwf	write_data@byte2^0,c
   831  000114  0E00               	movlw	0
   832  000116  EC39  F009         	call	_write_data
   833                           
   834                           ;lm629.c: 661:     check_busy();
   835  00011A  EC3B  F00A         	call	_check_busy	;wreg free
   836                           
   837                           ;lm629.c: 663:     write_data(0x00,0x01);
   838  00011E  0E01               	movlw	1
   839  000120  6E06               	movwf	write_data@byte2^0,c
   840  000122  0E00               	movlw	0
   841  000124  EC39  F009         	call	_write_data
   842                           
   843                           ;lm629.c: 664:     check_busy();
   844  000128  EC3B  F00A         	call	_check_busy	;wreg free
   845                           
   846                           ;lm629.c: 665:     write_data(0xFA,0xD0);
   847  00012C  0ED0               	movlw	208
   848  00012E  6E06               	movwf	write_data@byte2^0,c
   849  000130  0EFA               	movlw	250
   850  000132  EC39  F009         	call	_write_data
   851                           
   852                           ;lm629.c: 666:     check_busy();
   853  000136  EC3B  F00A         	call	_check_busy	;wreg free
   854                           
   855                           ;lm629.c: 669:     chip_select(3);
   856  00013A  0E03               	movlw	3
   857  00013C  EC67  F009         	call	_chip_select
   858                           
   859                           ;lm629.c: 670:     check_busy();
   860  000140  EC3B  F00A         	call	_check_busy	;wreg free
   861                           
   862                           ;lm629.c: 671:     motor_off();
   863  000144  EC11  F00A         	call	_motor_off	;wreg free
   864                           
   865                           ;lm629.c: 672:     write_command(0x1F);
   866  000148  0E1F               	movlw	31
   867  00014A  EC8D  F009         	call	_write_command
   868                           
   869                           ;lm629.c: 673:     check_busy();
   870  00014E  EC3B  F00A         	call	_check_busy	;wreg free
   871                           
   872                           ;lm629.c: 674:     write_data(0x08,0x28);
   873  000152  0E28               	movlw	40
   874  000154  6E06               	movwf	write_data@byte2^0,c
   875  000156  0E08               	movlw	8
   876  000158  EC39  F009         	call	_write_data
   877                           
   878                           ;lm629.c: 675:     check_busy();
   879  00015C  EC3B  F00A         	call	_check_busy	;wreg free
   880                           
   881                           ;lm629.c: 677:     write_data(0x00,0x00);
   882  000160  0E00               	movlw	0
   883  000162  6E06               	movwf	write_data@byte2^0,c
   884  000164  0E00               	movlw	0
   885  000166  EC39  F009         	call	_write_data
   886                           
   887                           ;lm629.c: 678:     check_busy();
   888  00016A  EC3B  F00A         	call	_check_busy	;wreg free
   889                           
   890                           ;lm629.c: 679:     write_data(0x00,0x48);
   891  00016E  0E48               	movlw	72
   892  000170  6E06               	movwf	write_data@byte2^0,c
   893  000172  0E00               	movlw	0
   894  000174  EC39  F009         	call	_write_data
   895                           
   896                           ;lm629.c: 680:     check_busy();
   897  000178  EC3B  F00A         	call	_check_busy	;wreg free
   898                           
   899                           ;lm629.c: 682:     write_data(0x00,0x01);
   900  00017C  0E01               	movlw	1
   901  00017E  6E06               	movwf	write_data@byte2^0,c
   902  000180  0E00               	movlw	0
   903  000182  EC39  F009         	call	_write_data
   904                           
   905                           ;lm629.c: 683:     check_busy();
   906  000186  EC3B  F00A         	call	_check_busy	;wreg free
   907                           
   908                           ;lm629.c: 684:     write_data(0xFA,0xD0);
   909  00018A  0ED0               	movlw	208
   910  00018C  6E06               	movwf	write_data@byte2^0,c
   911  00018E  0EFA               	movlw	250
   912  000190  EC39  F009         	call	_write_data
   913                           
   914                           ;lm629.c: 685:     check_busy();
   915  000194  EC3B  F00A         	call	_check_busy	;wreg free
   916                           
   917                           ;lm629.c: 688:     chip_select(0);
   918  000198  0E00               	movlw	0
   919  00019A  EC67  F009         	call	_chip_select
   920                           
   921                           ;lm629.c: 689:     write_command(0x01);
   922  00019E  0E01               	movlw	1
   923  0001A0  EC8D  F009         	call	_write_command
   924                           
   925                           ;lm629.c: 690:     check_busy();
   926  0001A4  EC3B  F00A         	call	_check_busy	;wreg free
   927                           
   928                           ;lm629.c: 692:     chip_select(2);
   929  0001A8  0E02               	movlw	2
   930  0001AA  EC67  F009         	call	_chip_select
   931                           
   932                           ;lm629.c: 693:     write_command(0x01);
   933  0001AE  0E01               	movlw	1
   934  0001B0  EC8D  F009         	call	_write_command
   935                           
   936                           ;lm629.c: 694:     check_busy();
   937  0001B4  EC3B  F00A         	call	_check_busy	;wreg free
   938                           
   939                           ;lm629.c: 696:     chip_select(1);
   940  0001B8  0E01               	movlw	1
   941  0001BA  EC67  F009         	call	_chip_select
   942                           
   943                           ;lm629.c: 697:     write_command(0x01);
   944  0001BE  0E01               	movlw	1
   945  0001C0  EC8D  F009         	call	_write_command
   946                           
   947                           ;lm629.c: 698:     check_busy();
   948  0001C4  EC3B  F00A         	call	_check_busy	;wreg free
   949                           
   950                           ;lm629.c: 700:     chip_select(3);
   951  0001C8  0E03               	movlw	3
   952  0001CA  EC67  F009         	call	_chip_select
   953                           
   954                           ;lm629.c: 701:     write_command(0x01);
   955  0001CE  0E01               	movlw	1
   956  0001D0  EC8D  F009         	call	_write_command
   957                           
   958                           ;lm629.c: 702:     check_busy();
   959  0001D4  EC3B  F00A         	call	_check_busy	;wreg free
   960  0001D8  0012               	return		;funcret
   961  0001DA                     __end_of_right:
   962                           	callstack 0
   963                           
   964 ;; *************** function _reverse_right *****************
   965 ;; Defined at:
   966 ;;		line 1084 in file "lm629.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/F
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;Total ram usage:        0 bytes
   985 ;; Hardware stack levels used: 1
   986 ;; Hardware stack levels required when called: 5
   987 ;; This function calls:
   988 ;;		_check_busy
   989 ;;		_chip_select
   990 ;;		_motor_off
   991 ;;		_write_command
   992 ;;		_write_data
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text4
   999  0001DA                     __ptext4:
  1000                           	callstack 0
  1001  0001DA                     _reverse_right:
  1002                           	callstack 25
  1003                           
  1004                           ;lm629.c: 1086:     chip_select(1);
  1005                           
  1006                           ;incstack = 0
  1007  0001DA  0E01               	movlw	1
  1008  0001DC  EC67  F009         	call	_chip_select
  1009                           
  1010                           ;lm629.c: 1087:     check_busy();
  1011  0001E0  EC3B  F00A         	call	_check_busy	;wreg free
  1012                           
  1013                           ;lm629.c: 1088:     motor_off();
  1014  0001E4  EC11  F00A         	call	_motor_off	;wreg free
  1015                           
  1016                           ;lm629.c: 1089:     write_command(0x1F);
  1017  0001E8  0E1F               	movlw	31
  1018  0001EA  EC8D  F009         	call	_write_command
  1019                           
  1020                           ;lm629.c: 1090:     check_busy();
  1021  0001EE  EC3B  F00A         	call	_check_busy	;wreg free
  1022                           
  1023                           ;lm629.c: 1091:     write_data(0x18,0x28);
  1024  0001F2  0E28               	movlw	40
  1025  0001F4  6E06               	movwf	write_data@byte2^0,c
  1026  0001F6  0E18               	movlw	24
  1027  0001F8  EC39  F009         	call	_write_data
  1028                           
  1029                           ;lm629.c: 1092:     check_busy();
  1030  0001FC  EC3B  F00A         	call	_check_busy	;wreg free
  1031                           
  1032                           ;lm629.c: 1094:     write_data(0x00,0x00);
  1033  000200  0E00               	movlw	0
  1034  000202  6E06               	movwf	write_data@byte2^0,c
  1035  000204  0E00               	movlw	0
  1036  000206  EC39  F009         	call	_write_data
  1037                           
  1038                           ;lm629.c: 1095:     check_busy();
  1039  00020A  EC3B  F00A         	call	_check_busy	;wreg free
  1040                           
  1041                           ;lm629.c: 1096:     write_data(0x00,0x48);
  1042  00020E  0E48               	movlw	72
  1043  000210  6E06               	movwf	write_data@byte2^0,c
  1044  000212  0E00               	movlw	0
  1045  000214  EC39  F009         	call	_write_data
  1046                           
  1047                           ;lm629.c: 1097:     check_busy();
  1048  000218  EC3B  F00A         	call	_check_busy	;wreg free
  1049                           
  1050                           ;lm629.c: 1099:     write_data(0x00,0x00);
  1051  00021C  0E00               	movlw	0
  1052  00021E  6E06               	movwf	write_data@byte2^0,c
  1053  000220  0E00               	movlw	0
  1054  000222  EC39  F009         	call	_write_data
  1055                           
  1056                           ;lm629.c: 1100:     check_busy();
  1057  000226  EC3B  F00A         	call	_check_busy	;wreg free
  1058                           
  1059                           ;lm629.c: 1101:     write_data(0xFD,0x68);
  1060  00022A  0E68               	movlw	104
  1061  00022C  6E06               	movwf	write_data@byte2^0,c
  1062  00022E  0EFD               	movlw	253
  1063  000230  EC39  F009         	call	_write_data
  1064                           
  1065                           ;lm629.c: 1102:     check_busy();
  1066  000234  EC3B  F00A         	call	_check_busy	;wreg free
  1067                           
  1068                           ;lm629.c: 1105:     chip_select(0);
  1069  000238  0E00               	movlw	0
  1070  00023A  EC67  F009         	call	_chip_select
  1071                           
  1072                           ;lm629.c: 1106:     check_busy();
  1073  00023E  EC3B  F00A         	call	_check_busy	;wreg free
  1074                           
  1075                           ;lm629.c: 1107:     motor_off();
  1076  000242  EC11  F00A         	call	_motor_off	;wreg free
  1077                           
  1078                           ;lm629.c: 1108:     write_command(0x1F);
  1079  000246  0E1F               	movlw	31
  1080  000248  EC8D  F009         	call	_write_command
  1081                           
  1082                           ;lm629.c: 1109:     check_busy();
  1083  00024C  EC3B  F00A         	call	_check_busy	;wreg free
  1084                           
  1085                           ;lm629.c: 1110:     write_data(0x08,0x28);
  1086  000250  0E28               	movlw	40
  1087  000252  6E06               	movwf	write_data@byte2^0,c
  1088  000254  0E08               	movlw	8
  1089  000256  EC39  F009         	call	_write_data
  1090                           
  1091                           ;lm629.c: 1111:     check_busy();
  1092  00025A  EC3B  F00A         	call	_check_busy	;wreg free
  1093                           
  1094                           ;lm629.c: 1113:     write_data(0x00,0x00);
  1095  00025E  0E00               	movlw	0
  1096  000260  6E06               	movwf	write_data@byte2^0,c
  1097  000262  0E00               	movlw	0
  1098  000264  EC39  F009         	call	_write_data
  1099                           
  1100                           ;lm629.c: 1114:     check_busy();
  1101  000268  EC3B  F00A         	call	_check_busy	;wreg free
  1102                           
  1103                           ;lm629.c: 1115:     write_data(0x00,0x48);
  1104  00026C  0E48               	movlw	72
  1105  00026E  6E06               	movwf	write_data@byte2^0,c
  1106  000270  0E00               	movlw	0
  1107  000272  EC39  F009         	call	_write_data
  1108                           
  1109                           ;lm629.c: 1116:     check_busy();
  1110  000276  EC3B  F00A         	call	_check_busy	;wreg free
  1111                           
  1112                           ;lm629.c: 1118:     write_data(0x00,0x01);
  1113  00027A  0E01               	movlw	1
  1114  00027C  6E06               	movwf	write_data@byte2^0,c
  1115  00027E  0E00               	movlw	0
  1116  000280  EC39  F009         	call	_write_data
  1117                           
  1118                           ;lm629.c: 1119:     check_busy();
  1119  000284  EC3B  F00A         	call	_check_busy	;wreg free
  1120                           
  1121                           ;lm629.c: 1120:     write_data(0xFA,0xD0);
  1122  000288  0ED0               	movlw	208
  1123  00028A  6E06               	movwf	write_data@byte2^0,c
  1124  00028C  0EFA               	movlw	250
  1125  00028E  EC39  F009         	call	_write_data
  1126                           
  1127                           ;lm629.c: 1121:     check_busy();
  1128  000292  EC3B  F00A         	call	_check_busy	;wreg free
  1129                           
  1130                           ;lm629.c: 1125:     chip_select(3);
  1131  000296  0E03               	movlw	3
  1132  000298  EC67  F009         	call	_chip_select
  1133                           
  1134                           ;lm629.c: 1126:     check_busy();
  1135  00029C  EC3B  F00A         	call	_check_busy	;wreg free
  1136                           
  1137                           ;lm629.c: 1127:     motor_off();
  1138  0002A0  EC11  F00A         	call	_motor_off	;wreg free
  1139                           
  1140                           ;lm629.c: 1128:     write_command(0x1F);
  1141  0002A4  0E1F               	movlw	31
  1142  0002A6  EC8D  F009         	call	_write_command
  1143                           
  1144                           ;lm629.c: 1129:     check_busy();
  1145  0002AA  EC3B  F00A         	call	_check_busy	;wreg free
  1146                           
  1147                           ;lm629.c: 1130:     write_data(0x08,0x28);
  1148  0002AE  0E28               	movlw	40
  1149  0002B0  6E06               	movwf	write_data@byte2^0,c
  1150  0002B2  0E08               	movlw	8
  1151  0002B4  EC39  F009         	call	_write_data
  1152                           
  1153                           ;lm629.c: 1131:     check_busy();
  1154  0002B8  EC3B  F00A         	call	_check_busy	;wreg free
  1155                           
  1156                           ;lm629.c: 1133:     write_data(0x00,0x00);
  1157  0002BC  0E00               	movlw	0
  1158  0002BE  6E06               	movwf	write_data@byte2^0,c
  1159  0002C0  0E00               	movlw	0
  1160  0002C2  EC39  F009         	call	_write_data
  1161                           
  1162                           ;lm629.c: 1134:     check_busy();
  1163  0002C6  EC3B  F00A         	call	_check_busy	;wreg free
  1164                           
  1165                           ;lm629.c: 1135:     write_data(0x00,0x48);
  1166  0002CA  0E48               	movlw	72
  1167  0002CC  6E06               	movwf	write_data@byte2^0,c
  1168  0002CE  0E00               	movlw	0
  1169  0002D0  EC39  F009         	call	_write_data
  1170                           
  1171                           ;lm629.c: 1136:     check_busy();
  1172  0002D4  EC3B  F00A         	call	_check_busy	;wreg free
  1173                           
  1174                           ;lm629.c: 1138:     write_data(0x00,0x01);
  1175  0002D8  0E01               	movlw	1
  1176  0002DA  6E06               	movwf	write_data@byte2^0,c
  1177  0002DC  0E00               	movlw	0
  1178  0002DE  EC39  F009         	call	_write_data
  1179                           
  1180                           ;lm629.c: 1139:     check_busy();
  1181  0002E2  EC3B  F00A         	call	_check_busy	;wreg free
  1182                           
  1183                           ;lm629.c: 1140:     write_data(0xFA,0xD0);
  1184  0002E6  0ED0               	movlw	208
  1185  0002E8  6E06               	movwf	write_data@byte2^0,c
  1186  0002EA  0EFA               	movlw	250
  1187  0002EC  EC39  F009         	call	_write_data
  1188                           
  1189                           ;lm629.c: 1141:     check_busy();
  1190  0002F0  EC3B  F00A         	call	_check_busy	;wreg free
  1191                           
  1192                           ;lm629.c: 1143:     chip_select(2);
  1193  0002F4  0E02               	movlw	2
  1194  0002F6  EC67  F009         	call	_chip_select
  1195                           
  1196                           ;lm629.c: 1144:     check_busy();
  1197  0002FA  EC3B  F00A         	call	_check_busy	;wreg free
  1198                           
  1199                           ;lm629.c: 1145:     motor_off();
  1200  0002FE  EC11  F00A         	call	_motor_off	;wreg free
  1201                           
  1202                           ;lm629.c: 1146:     write_command(0x1F);
  1203  000302  0E1F               	movlw	31
  1204  000304  EC8D  F009         	call	_write_command
  1205                           
  1206                           ;lm629.c: 1147:     check_busy();
  1207  000308  EC3B  F00A         	call	_check_busy	;wreg free
  1208                           
  1209                           ;lm629.c: 1148:     write_data(0x18,0x28);
  1210  00030C  0E28               	movlw	40
  1211  00030E  6E06               	movwf	write_data@byte2^0,c
  1212  000310  0E18               	movlw	24
  1213  000312  EC39  F009         	call	_write_data
  1214                           
  1215                           ;lm629.c: 1149:     check_busy();
  1216  000316  EC3B  F00A         	call	_check_busy	;wreg free
  1217                           
  1218                           ;lm629.c: 1151:     write_data(0x00,0x00);
  1219  00031A  0E00               	movlw	0
  1220  00031C  6E06               	movwf	write_data@byte2^0,c
  1221  00031E  0E00               	movlw	0
  1222  000320  EC39  F009         	call	_write_data
  1223                           
  1224                           ;lm629.c: 1152:     check_busy();
  1225  000324  EC3B  F00A         	call	_check_busy	;wreg free
  1226                           
  1227                           ;lm629.c: 1153:     write_data(0x00,0x48);
  1228  000328  0E48               	movlw	72
  1229  00032A  6E06               	movwf	write_data@byte2^0,c
  1230  00032C  0E00               	movlw	0
  1231  00032E  EC39  F009         	call	_write_data
  1232                           
  1233                           ;lm629.c: 1154:     check_busy();
  1234  000332  EC3B  F00A         	call	_check_busy	;wreg free
  1235                           
  1236                           ;lm629.c: 1156:     write_data(0x00,0x00);
  1237  000336  0E00               	movlw	0
  1238  000338  6E06               	movwf	write_data@byte2^0,c
  1239  00033A  0E00               	movlw	0
  1240  00033C  EC39  F009         	call	_write_data
  1241                           
  1242                           ;lm629.c: 1157:     check_busy();
  1243  000340  EC3B  F00A         	call	_check_busy	;wreg free
  1244                           
  1245                           ;lm629.c: 1158:     write_data(0xFD,0x68);
  1246  000344  0E68               	movlw	104
  1247  000346  6E06               	movwf	write_data@byte2^0,c
  1248  000348  0EFD               	movlw	253
  1249  00034A  EC39  F009         	call	_write_data
  1250                           
  1251                           ;lm629.c: 1159:     check_busy();
  1252  00034E  EC3B  F00A         	call	_check_busy	;wreg free
  1253                           
  1254                           ;lm629.c: 1162:     chip_select(0);
  1255  000352  0E00               	movlw	0
  1256  000354  EC67  F009         	call	_chip_select
  1257                           
  1258                           ;lm629.c: 1163:     write_command(0x01);
  1259  000358  0E01               	movlw	1
  1260  00035A  EC8D  F009         	call	_write_command
  1261                           
  1262                           ;lm629.c: 1164:     check_busy();
  1263  00035E  EC3B  F00A         	call	_check_busy	;wreg free
  1264                           
  1265                           ;lm629.c: 1166:     chip_select(2);
  1266  000362  0E02               	movlw	2
  1267  000364  EC67  F009         	call	_chip_select
  1268                           
  1269                           ;lm629.c: 1167:     write_command(0x01);
  1270  000368  0E01               	movlw	1
  1271  00036A  EC8D  F009         	call	_write_command
  1272                           
  1273                           ;lm629.c: 1168:     check_busy();
  1274  00036E  EC3B  F00A         	call	_check_busy	;wreg free
  1275                           
  1276                           ;lm629.c: 1170:     chip_select(1);
  1277  000372  0E01               	movlw	1
  1278  000374  EC67  F009         	call	_chip_select
  1279                           
  1280                           ;lm629.c: 1171:     write_command(0x01);
  1281  000378  0E01               	movlw	1
  1282  00037A  EC8D  F009         	call	_write_command
  1283                           
  1284                           ;lm629.c: 1172:     check_busy();
  1285  00037E  EC3B  F00A         	call	_check_busy	;wreg free
  1286                           
  1287                           ;lm629.c: 1174:     chip_select(3);
  1288  000382  0E03               	movlw	3
  1289  000384  EC67  F009         	call	_chip_select
  1290                           
  1291                           ;lm629.c: 1175:     write_command(0x01);
  1292  000388  0E01               	movlw	1
  1293  00038A  EC8D  F009         	call	_write_command
  1294                           
  1295                           ;lm629.c: 1176:     check_busy();
  1296  00038E  EC3B  F00A         	call	_check_busy	;wreg free
  1297  000392  0012               	return		;funcret
  1298  000394                     __end_of_reverse_right:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _reverse_left *****************
  1302 ;; Defined at:
  1303 ;;		line 989 in file "lm629.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;		None
  1308 ;; Return value:  Size  Location     Type
  1309 ;;                  1    wreg      void 
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 0/F
  1314 ;;		On exit  : 0/0
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;Total ram usage:        0 bytes
  1322 ;; Hardware stack levels used: 1
  1323 ;; Hardware stack levels required when called: 5
  1324 ;; This function calls:
  1325 ;;		_check_busy
  1326 ;;		_chip_select
  1327 ;;		_motor_off
  1328 ;;		_write_command
  1329 ;;		_write_data
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text5
  1336  000394                     __ptext5:
  1337                           	callstack 0
  1338  000394                     _reverse_left:
  1339                           	callstack 25
  1340                           
  1341                           ;lm629.c: 991:     chip_select(1);
  1342                           
  1343                           ;incstack = 0
  1344  000394  0E01               	movlw	1
  1345  000396  EC67  F009         	call	_chip_select
  1346                           
  1347                           ;lm629.c: 992:     check_busy();
  1348  00039A  EC3B  F00A         	call	_check_busy	;wreg free
  1349                           
  1350                           ;lm629.c: 993:     motor_off();
  1351  00039E  EC11  F00A         	call	_motor_off	;wreg free
  1352                           
  1353                           ;lm629.c: 994:     write_command(0x1F);
  1354  0003A2  0E1F               	movlw	31
  1355  0003A4  EC8D  F009         	call	_write_command
  1356                           
  1357                           ;lm629.c: 995:     check_busy();
  1358  0003A8  EC3B  F00A         	call	_check_busy	;wreg free
  1359                           
  1360                           ;lm629.c: 996:     write_data(0x18,0x28);
  1361  0003AC  0E28               	movlw	40
  1362  0003AE  6E06               	movwf	write_data@byte2^0,c
  1363  0003B0  0E18               	movlw	24
  1364  0003B2  EC39  F009         	call	_write_data
  1365                           
  1366                           ;lm629.c: 997:     check_busy();
  1367  0003B6  EC3B  F00A         	call	_check_busy	;wreg free
  1368                           
  1369                           ;lm629.c: 999:     write_data(0x00,0x00);
  1370  0003BA  0E00               	movlw	0
  1371  0003BC  6E06               	movwf	write_data@byte2^0,c
  1372  0003BE  0E00               	movlw	0
  1373  0003C0  EC39  F009         	call	_write_data
  1374                           
  1375                           ;lm629.c: 1000:     check_busy();
  1376  0003C4  EC3B  F00A         	call	_check_busy	;wreg free
  1377                           
  1378                           ;lm629.c: 1001:     write_data(0x00,0x48);
  1379  0003C8  0E48               	movlw	72
  1380  0003CA  6E06               	movwf	write_data@byte2^0,c
  1381  0003CC  0E00               	movlw	0
  1382  0003CE  EC39  F009         	call	_write_data
  1383                           
  1384                           ;lm629.c: 1002:     check_busy();
  1385  0003D2  EC3B  F00A         	call	_check_busy	;wreg free
  1386                           
  1387                           ;lm629.c: 1004:     write_data(0x00,0x01);
  1388  0003D6  0E01               	movlw	1
  1389  0003D8  6E06               	movwf	write_data@byte2^0,c
  1390  0003DA  0E00               	movlw	0
  1391  0003DC  EC39  F009         	call	_write_data
  1392                           
  1393                           ;lm629.c: 1005:     check_busy();
  1394  0003E0  EC3B  F00A         	call	_check_busy	;wreg free
  1395                           
  1396                           ;lm629.c: 1006:     write_data(0xFA,0xD0);
  1397  0003E4  0ED0               	movlw	208
  1398  0003E6  6E06               	movwf	write_data@byte2^0,c
  1399  0003E8  0EFA               	movlw	250
  1400  0003EA  EC39  F009         	call	_write_data
  1401                           
  1402                           ;lm629.c: 1007:     check_busy();
  1403  0003EE  EC3B  F00A         	call	_check_busy	;wreg free
  1404                           
  1405                           ;lm629.c: 1010:     chip_select(0);
  1406  0003F2  0E00               	movlw	0
  1407  0003F4  EC67  F009         	call	_chip_select
  1408                           
  1409                           ;lm629.c: 1011:     check_busy();
  1410  0003F8  EC3B  F00A         	call	_check_busy	;wreg free
  1411                           
  1412                           ;lm629.c: 1012:     motor_off();
  1413  0003FC  EC11  F00A         	call	_motor_off	;wreg free
  1414                           
  1415                           ;lm629.c: 1013:     write_command(0x1F);
  1416  000400  0E1F               	movlw	31
  1417  000402  EC8D  F009         	call	_write_command
  1418                           
  1419                           ;lm629.c: 1014:     check_busy();
  1420  000406  EC3B  F00A         	call	_check_busy	;wreg free
  1421                           
  1422                           ;lm629.c: 1015:     write_data(0x08,0x28);
  1423  00040A  0E28               	movlw	40
  1424  00040C  6E06               	movwf	write_data@byte2^0,c
  1425  00040E  0E08               	movlw	8
  1426  000410  EC39  F009         	call	_write_data
  1427                           
  1428                           ;lm629.c: 1016:     check_busy();
  1429  000414  EC3B  F00A         	call	_check_busy	;wreg free
  1430                           
  1431                           ;lm629.c: 1018:     write_data(0x00,0x00);
  1432  000418  0E00               	movlw	0
  1433  00041A  6E06               	movwf	write_data@byte2^0,c
  1434  00041C  0E00               	movlw	0
  1435  00041E  EC39  F009         	call	_write_data
  1436                           
  1437                           ;lm629.c: 1019:     check_busy();
  1438  000422  EC3B  F00A         	call	_check_busy	;wreg free
  1439                           
  1440                           ;lm629.c: 1020:     write_data(0x00,0x48);
  1441  000426  0E48               	movlw	72
  1442  000428  6E06               	movwf	write_data@byte2^0,c
  1443  00042A  0E00               	movlw	0
  1444  00042C  EC39  F009         	call	_write_data
  1445                           
  1446                           ;lm629.c: 1021:     check_busy();
  1447  000430  EC3B  F00A         	call	_check_busy	;wreg free
  1448                           
  1449                           ;lm629.c: 1023:     write_data(0x00,0x00);
  1450  000434  0E00               	movlw	0
  1451  000436  6E06               	movwf	write_data@byte2^0,c
  1452  000438  0E00               	movlw	0
  1453  00043A  EC39  F009         	call	_write_data
  1454                           
  1455                           ;lm629.c: 1024:     check_busy();
  1456  00043E  EC3B  F00A         	call	_check_busy	;wreg free
  1457                           
  1458                           ;lm629.c: 1025:     write_data(0xFD,0x68);
  1459  000442  0E68               	movlw	104
  1460  000444  6E06               	movwf	write_data@byte2^0,c
  1461  000446  0EFD               	movlw	253
  1462  000448  EC39  F009         	call	_write_data
  1463                           
  1464                           ;lm629.c: 1026:     check_busy();
  1465  00044C  EC3B  F00A         	call	_check_busy	;wreg free
  1466                           
  1467                           ;lm629.c: 1030:     chip_select(3);
  1468  000450  0E03               	movlw	3
  1469  000452  EC67  F009         	call	_chip_select
  1470                           
  1471                           ;lm629.c: 1031:     check_busy();
  1472  000456  EC3B  F00A         	call	_check_busy	;wreg free
  1473                           
  1474                           ;lm629.c: 1032:     motor_off();
  1475  00045A  EC11  F00A         	call	_motor_off	;wreg free
  1476                           
  1477                           ;lm629.c: 1033:     write_command(0x1F);
  1478  00045E  0E1F               	movlw	31
  1479  000460  EC8D  F009         	call	_write_command
  1480                           
  1481                           ;lm629.c: 1034:     check_busy();
  1482  000464  EC3B  F00A         	call	_check_busy	;wreg free
  1483                           
  1484                           ;lm629.c: 1035:     write_data(0x08,0x28);
  1485  000468  0E28               	movlw	40
  1486  00046A  6E06               	movwf	write_data@byte2^0,c
  1487  00046C  0E08               	movlw	8
  1488  00046E  EC39  F009         	call	_write_data
  1489                           
  1490                           ;lm629.c: 1036:     check_busy();
  1491  000472  EC3B  F00A         	call	_check_busy	;wreg free
  1492                           
  1493                           ;lm629.c: 1038:     write_data(0x00,0x00);
  1494  000476  0E00               	movlw	0
  1495  000478  6E06               	movwf	write_data@byte2^0,c
  1496  00047A  0E00               	movlw	0
  1497  00047C  EC39  F009         	call	_write_data
  1498                           
  1499                           ;lm629.c: 1039:     check_busy();
  1500  000480  EC3B  F00A         	call	_check_busy	;wreg free
  1501                           
  1502                           ;lm629.c: 1040:     write_data(0x00,0x48);
  1503  000484  0E48               	movlw	72
  1504  000486  6E06               	movwf	write_data@byte2^0,c
  1505  000488  0E00               	movlw	0
  1506  00048A  EC39  F009         	call	_write_data
  1507                           
  1508                           ;lm629.c: 1041:     check_busy();
  1509  00048E  EC3B  F00A         	call	_check_busy	;wreg free
  1510                           
  1511                           ;lm629.c: 1043:     write_data(0x00,0x00);
  1512  000492  0E00               	movlw	0
  1513  000494  6E06               	movwf	write_data@byte2^0,c
  1514  000496  0E00               	movlw	0
  1515  000498  EC39  F009         	call	_write_data
  1516                           
  1517                           ;lm629.c: 1044:     check_busy();
  1518  00049C  EC3B  F00A         	call	_check_busy	;wreg free
  1519                           
  1520                           ;lm629.c: 1045:     write_data(0xFD,0x68);
  1521  0004A0  0E68               	movlw	104
  1522  0004A2  6E06               	movwf	write_data@byte2^0,c
  1523  0004A4  0EFD               	movlw	253
  1524  0004A6  EC39  F009         	call	_write_data
  1525                           
  1526                           ;lm629.c: 1046:     check_busy();
  1527  0004AA  EC3B  F00A         	call	_check_busy	;wreg free
  1528                           
  1529                           ;lm629.c: 1048:     chip_select(2);
  1530  0004AE  0E02               	movlw	2
  1531  0004B0  EC67  F009         	call	_chip_select
  1532                           
  1533                           ;lm629.c: 1049:     check_busy();
  1534  0004B4  EC3B  F00A         	call	_check_busy	;wreg free
  1535                           
  1536                           ;lm629.c: 1050:     motor_off();
  1537  0004B8  EC11  F00A         	call	_motor_off	;wreg free
  1538                           
  1539                           ;lm629.c: 1051:     write_command(0x1F);
  1540  0004BC  0E1F               	movlw	31
  1541  0004BE  EC8D  F009         	call	_write_command
  1542                           
  1543                           ;lm629.c: 1052:     check_busy();
  1544  0004C2  EC3B  F00A         	call	_check_busy	;wreg free
  1545                           
  1546                           ;lm629.c: 1053:     write_data(0x18,0x28);
  1547  0004C6  0E28               	movlw	40
  1548  0004C8  6E06               	movwf	write_data@byte2^0,c
  1549  0004CA  0E18               	movlw	24
  1550  0004CC  EC39  F009         	call	_write_data
  1551                           
  1552                           ;lm629.c: 1054:     check_busy();
  1553  0004D0  EC3B  F00A         	call	_check_busy	;wreg free
  1554                           
  1555                           ;lm629.c: 1056:     write_data(0x00,0x00);
  1556  0004D4  0E00               	movlw	0
  1557  0004D6  6E06               	movwf	write_data@byte2^0,c
  1558  0004D8  0E00               	movlw	0
  1559  0004DA  EC39  F009         	call	_write_data
  1560                           
  1561                           ;lm629.c: 1057:     check_busy();
  1562  0004DE  EC3B  F00A         	call	_check_busy	;wreg free
  1563                           
  1564                           ;lm629.c: 1058:     write_data(0x00,0x48);
  1565  0004E2  0E48               	movlw	72
  1566  0004E4  6E06               	movwf	write_data@byte2^0,c
  1567  0004E6  0E00               	movlw	0
  1568  0004E8  EC39  F009         	call	_write_data
  1569                           
  1570                           ;lm629.c: 1059:     check_busy();
  1571  0004EC  EC3B  F00A         	call	_check_busy	;wreg free
  1572                           
  1573                           ;lm629.c: 1061:     write_data(0x00,0x01);
  1574  0004F0  0E01               	movlw	1
  1575  0004F2  6E06               	movwf	write_data@byte2^0,c
  1576  0004F4  0E00               	movlw	0
  1577  0004F6  EC39  F009         	call	_write_data
  1578                           
  1579                           ;lm629.c: 1062:     check_busy();
  1580  0004FA  EC3B  F00A         	call	_check_busy	;wreg free
  1581                           
  1582                           ;lm629.c: 1063:     write_data(0xFA,0xD0);
  1583  0004FE  0ED0               	movlw	208
  1584  000500  6E06               	movwf	write_data@byte2^0,c
  1585  000502  0EFA               	movlw	250
  1586  000504  EC39  F009         	call	_write_data
  1587                           
  1588                           ;lm629.c: 1064:     check_busy();
  1589  000508  EC3B  F00A         	call	_check_busy	;wreg free
  1590                           
  1591                           ;lm629.c: 1067:     chip_select(0);
  1592  00050C  0E00               	movlw	0
  1593  00050E  EC67  F009         	call	_chip_select
  1594                           
  1595                           ;lm629.c: 1068:     write_command(0x01);
  1596  000512  0E01               	movlw	1
  1597  000514  EC8D  F009         	call	_write_command
  1598                           
  1599                           ;lm629.c: 1069:     check_busy();
  1600  000518  EC3B  F00A         	call	_check_busy	;wreg free
  1601                           
  1602                           ;lm629.c: 1071:     chip_select(2);
  1603  00051C  0E02               	movlw	2
  1604  00051E  EC67  F009         	call	_chip_select
  1605                           
  1606                           ;lm629.c: 1072:     write_command(0x01);
  1607  000522  0E01               	movlw	1
  1608  000524  EC8D  F009         	call	_write_command
  1609                           
  1610                           ;lm629.c: 1073:     check_busy();
  1611  000528  EC3B  F00A         	call	_check_busy	;wreg free
  1612                           
  1613                           ;lm629.c: 1075:     chip_select(1);
  1614  00052C  0E01               	movlw	1
  1615  00052E  EC67  F009         	call	_chip_select
  1616                           
  1617                           ;lm629.c: 1076:     write_command(0x01);
  1618  000532  0E01               	movlw	1
  1619  000534  EC8D  F009         	call	_write_command
  1620                           
  1621                           ;lm629.c: 1077:     check_busy();
  1622  000538  EC3B  F00A         	call	_check_busy	;wreg free
  1623                           
  1624                           ;lm629.c: 1079:     chip_select(3);
  1625  00053C  0E03               	movlw	3
  1626  00053E  EC67  F009         	call	_chip_select
  1627                           
  1628                           ;lm629.c: 1080:     write_command(0x01);
  1629  000542  0E01               	movlw	1
  1630  000544  EC8D  F009         	call	_write_command
  1631                           
  1632                           ;lm629.c: 1081:     check_busy();
  1633  000548  EC3B  F00A         	call	_check_busy	;wreg free
  1634  00054C  0012               	return		;funcret
  1635  00054E                     __end_of_reverse_left:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _reverse *****************
  1639 ;; Defined at:
  1640 ;;		line 515 in file "lm629.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;		None
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;		None
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/F
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;Total ram usage:        0 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 5
  1661 ;; This function calls:
  1662 ;;		_check_busy
  1663 ;;		_chip_select
  1664 ;;		_motor_off
  1665 ;;		_write_command
  1666 ;;		_write_data
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text6
  1673  00054E                     __ptext6:
  1674                           	callstack 0
  1675  00054E                     _reverse:
  1676                           	callstack 25
  1677                           
  1678                           ;lm629.c: 517:     chip_select(1);
  1679                           
  1680                           ;incstack = 0
  1681  00054E  0E01               	movlw	1
  1682  000550  EC67  F009         	call	_chip_select
  1683                           
  1684                           ;lm629.c: 518:     check_busy();
  1685  000554  EC3B  F00A         	call	_check_busy	;wreg free
  1686                           
  1687                           ;lm629.c: 519:     motor_off();
  1688  000558  EC11  F00A         	call	_motor_off	;wreg free
  1689                           
  1690                           ;lm629.c: 520:     write_command(0x1F);
  1691  00055C  0E1F               	movlw	31
  1692  00055E  EC8D  F009         	call	_write_command
  1693                           
  1694                           ;lm629.c: 521:     check_busy();
  1695  000562  EC3B  F00A         	call	_check_busy	;wreg free
  1696                           
  1697                           ;lm629.c: 522:     write_data(0x18,0x28);
  1698  000566  0E28               	movlw	40
  1699  000568  6E06               	movwf	write_data@byte2^0,c
  1700  00056A  0E18               	movlw	24
  1701  00056C  EC39  F009         	call	_write_data
  1702                           
  1703                           ;lm629.c: 523:     check_busy();
  1704  000570  EC3B  F00A         	call	_check_busy	;wreg free
  1705                           
  1706                           ;lm629.c: 525:     write_data(0x00,0x00);
  1707  000574  0E00               	movlw	0
  1708  000576  6E06               	movwf	write_data@byte2^0,c
  1709  000578  0E00               	movlw	0
  1710  00057A  EC39  F009         	call	_write_data
  1711                           
  1712                           ;lm629.c: 526:     check_busy();
  1713  00057E  EC3B  F00A         	call	_check_busy	;wreg free
  1714                           
  1715                           ;lm629.c: 527:     write_data(0x00,0x48);
  1716  000582  0E48               	movlw	72
  1717  000584  6E06               	movwf	write_data@byte2^0,c
  1718  000586  0E00               	movlw	0
  1719  000588  EC39  F009         	call	_write_data
  1720                           
  1721                           ;lm629.c: 528:     check_busy();
  1722  00058C  EC3B  F00A         	call	_check_busy	;wreg free
  1723                           
  1724                           ;lm629.c: 530:     write_data(0x00,0x01);
  1725  000590  0E01               	movlw	1
  1726  000592  6E06               	movwf	write_data@byte2^0,c
  1727  000594  0E00               	movlw	0
  1728  000596  EC39  F009         	call	_write_data
  1729                           
  1730                           ;lm629.c: 531:     check_busy();
  1731  00059A  EC3B  F00A         	call	_check_busy	;wreg free
  1732                           
  1733                           ;lm629.c: 532:     write_data(0xFA,0xD0);
  1734  00059E  0ED0               	movlw	208
  1735  0005A0  6E06               	movwf	write_data@byte2^0,c
  1736  0005A2  0EFA               	movlw	250
  1737  0005A4  EC39  F009         	call	_write_data
  1738                           
  1739                           ;lm629.c: 533:     check_busy();
  1740  0005A8  EC3B  F00A         	call	_check_busy	;wreg free
  1741                           
  1742                           ;lm629.c: 536:     chip_select(0);
  1743  0005AC  0E00               	movlw	0
  1744  0005AE  EC67  F009         	call	_chip_select
  1745                           
  1746                           ;lm629.c: 537:     check_busy();
  1747  0005B2  EC3B  F00A         	call	_check_busy	;wreg free
  1748                           
  1749                           ;lm629.c: 538:     motor_off();
  1750  0005B6  EC11  F00A         	call	_motor_off	;wreg free
  1751                           
  1752                           ;lm629.c: 539:     write_command(0x1F);
  1753  0005BA  0E1F               	movlw	31
  1754  0005BC  EC8D  F009         	call	_write_command
  1755                           
  1756                           ;lm629.c: 540:     check_busy();
  1757  0005C0  EC3B  F00A         	call	_check_busy	;wreg free
  1758                           
  1759                           ;lm629.c: 541:     write_data(0x08,0x28);
  1760  0005C4  0E28               	movlw	40
  1761  0005C6  6E06               	movwf	write_data@byte2^0,c
  1762  0005C8  0E08               	movlw	8
  1763  0005CA  EC39  F009         	call	_write_data
  1764                           
  1765                           ;lm629.c: 542:     check_busy();
  1766  0005CE  EC3B  F00A         	call	_check_busy	;wreg free
  1767                           
  1768                           ;lm629.c: 544:     write_data(0x00,0x00);
  1769  0005D2  0E00               	movlw	0
  1770  0005D4  6E06               	movwf	write_data@byte2^0,c
  1771  0005D6  0E00               	movlw	0
  1772  0005D8  EC39  F009         	call	_write_data
  1773                           
  1774                           ;lm629.c: 545:     check_busy();
  1775  0005DC  EC3B  F00A         	call	_check_busy	;wreg free
  1776                           
  1777                           ;lm629.c: 546:     write_data(0x00,0x48);
  1778  0005E0  0E48               	movlw	72
  1779  0005E2  6E06               	movwf	write_data@byte2^0,c
  1780  0005E4  0E00               	movlw	0
  1781  0005E6  EC39  F009         	call	_write_data
  1782                           
  1783                           ;lm629.c: 547:     check_busy();
  1784  0005EA  EC3B  F00A         	call	_check_busy	;wreg free
  1785                           
  1786                           ;lm629.c: 549:     write_data(0x00,0x01);
  1787  0005EE  0E01               	movlw	1
  1788  0005F0  6E06               	movwf	write_data@byte2^0,c
  1789  0005F2  0E00               	movlw	0
  1790  0005F4  EC39  F009         	call	_write_data
  1791                           
  1792                           ;lm629.c: 550:     check_busy();
  1793  0005F8  EC3B  F00A         	call	_check_busy	;wreg free
  1794                           
  1795                           ;lm629.c: 551:     write_data(0xFA,0xD0);
  1796  0005FC  0ED0               	movlw	208
  1797  0005FE  6E06               	movwf	write_data@byte2^0,c
  1798  000600  0EFA               	movlw	250
  1799  000602  EC39  F009         	call	_write_data
  1800                           
  1801                           ;lm629.c: 552:     check_busy();
  1802  000606  EC3B  F00A         	call	_check_busy	;wreg free
  1803                           
  1804                           ;lm629.c: 556:     chip_select(3);
  1805  00060A  0E03               	movlw	3
  1806  00060C  EC67  F009         	call	_chip_select
  1807                           
  1808                           ;lm629.c: 557:     check_busy();
  1809  000610  EC3B  F00A         	call	_check_busy	;wreg free
  1810                           
  1811                           ;lm629.c: 558:     motor_off();
  1812  000614  EC11  F00A         	call	_motor_off	;wreg free
  1813                           
  1814                           ;lm629.c: 559:     write_command(0x1F);
  1815  000618  0E1F               	movlw	31
  1816  00061A  EC8D  F009         	call	_write_command
  1817                           
  1818                           ;lm629.c: 560:     check_busy();
  1819  00061E  EC3B  F00A         	call	_check_busy	;wreg free
  1820                           
  1821                           ;lm629.c: 561:     write_data(0x08,0x28);
  1822  000622  0E28               	movlw	40
  1823  000624  6E06               	movwf	write_data@byte2^0,c
  1824  000626  0E08               	movlw	8
  1825  000628  EC39  F009         	call	_write_data
  1826                           
  1827                           ;lm629.c: 562:     check_busy();
  1828  00062C  EC3B  F00A         	call	_check_busy	;wreg free
  1829                           
  1830                           ;lm629.c: 564:     write_data(0x00,0x00);
  1831  000630  0E00               	movlw	0
  1832  000632  6E06               	movwf	write_data@byte2^0,c
  1833  000634  0E00               	movlw	0
  1834  000636  EC39  F009         	call	_write_data
  1835                           
  1836                           ;lm629.c: 565:     check_busy();
  1837  00063A  EC3B  F00A         	call	_check_busy	;wreg free
  1838                           
  1839                           ;lm629.c: 566:     write_data(0x00,0x48);
  1840  00063E  0E48               	movlw	72
  1841  000640  6E06               	movwf	write_data@byte2^0,c
  1842  000642  0E00               	movlw	0
  1843  000644  EC39  F009         	call	_write_data
  1844                           
  1845                           ;lm629.c: 567:     check_busy();
  1846  000648  EC3B  F00A         	call	_check_busy	;wreg free
  1847                           
  1848                           ;lm629.c: 569:     write_data(0x00,0x01);
  1849  00064C  0E01               	movlw	1
  1850  00064E  6E06               	movwf	write_data@byte2^0,c
  1851  000650  0E00               	movlw	0
  1852  000652  EC39  F009         	call	_write_data
  1853                           
  1854                           ;lm629.c: 570:     check_busy();
  1855  000656  EC3B  F00A         	call	_check_busy	;wreg free
  1856                           
  1857                           ;lm629.c: 571:     write_data(0xFA,0xD0);
  1858  00065A  0ED0               	movlw	208
  1859  00065C  6E06               	movwf	write_data@byte2^0,c
  1860  00065E  0EFA               	movlw	250
  1861  000660  EC39  F009         	call	_write_data
  1862                           
  1863                           ;lm629.c: 572:     check_busy();
  1864  000664  EC3B  F00A         	call	_check_busy	;wreg free
  1865                           
  1866                           ;lm629.c: 574:     chip_select(2);
  1867  000668  0E02               	movlw	2
  1868  00066A  EC67  F009         	call	_chip_select
  1869                           
  1870                           ;lm629.c: 575:     check_busy();
  1871  00066E  EC3B  F00A         	call	_check_busy	;wreg free
  1872                           
  1873                           ;lm629.c: 576:     motor_off();
  1874  000672  EC11  F00A         	call	_motor_off	;wreg free
  1875                           
  1876                           ;lm629.c: 577:     write_command(0x1F);
  1877  000676  0E1F               	movlw	31
  1878  000678  EC8D  F009         	call	_write_command
  1879                           
  1880                           ;lm629.c: 578:     check_busy();
  1881  00067C  EC3B  F00A         	call	_check_busy	;wreg free
  1882                           
  1883                           ;lm629.c: 579:     write_data(0x18,0x28);
  1884  000680  0E28               	movlw	40
  1885  000682  6E06               	movwf	write_data@byte2^0,c
  1886  000684  0E18               	movlw	24
  1887  000686  EC39  F009         	call	_write_data
  1888                           
  1889                           ;lm629.c: 580:     check_busy();
  1890  00068A  EC3B  F00A         	call	_check_busy	;wreg free
  1891                           
  1892                           ;lm629.c: 582:     write_data(0x00,0x00);
  1893  00068E  0E00               	movlw	0
  1894  000690  6E06               	movwf	write_data@byte2^0,c
  1895  000692  0E00               	movlw	0
  1896  000694  EC39  F009         	call	_write_data
  1897                           
  1898                           ;lm629.c: 583:     check_busy();
  1899  000698  EC3B  F00A         	call	_check_busy	;wreg free
  1900                           
  1901                           ;lm629.c: 584:     write_data(0x00,0x48);
  1902  00069C  0E48               	movlw	72
  1903  00069E  6E06               	movwf	write_data@byte2^0,c
  1904  0006A0  0E00               	movlw	0
  1905  0006A2  EC39  F009         	call	_write_data
  1906                           
  1907                           ;lm629.c: 585:     check_busy();
  1908  0006A6  EC3B  F00A         	call	_check_busy	;wreg free
  1909                           
  1910                           ;lm629.c: 587:     write_data(0x00,0x01);
  1911  0006AA  0E01               	movlw	1
  1912  0006AC  6E06               	movwf	write_data@byte2^0,c
  1913  0006AE  0E00               	movlw	0
  1914  0006B0  EC39  F009         	call	_write_data
  1915                           
  1916                           ;lm629.c: 588:     check_busy();
  1917  0006B4  EC3B  F00A         	call	_check_busy	;wreg free
  1918                           
  1919                           ;lm629.c: 589:     write_data(0xFA,0xD0);
  1920  0006B8  0ED0               	movlw	208
  1921  0006BA  6E06               	movwf	write_data@byte2^0,c
  1922  0006BC  0EFA               	movlw	250
  1923  0006BE  EC39  F009         	call	_write_data
  1924                           
  1925                           ;lm629.c: 590:     check_busy();
  1926  0006C2  EC3B  F00A         	call	_check_busy	;wreg free
  1927                           
  1928                           ;lm629.c: 593:     chip_select(0);
  1929  0006C6  0E00               	movlw	0
  1930  0006C8  EC67  F009         	call	_chip_select
  1931                           
  1932                           ;lm629.c: 594:     write_command(0x01);
  1933  0006CC  0E01               	movlw	1
  1934  0006CE  EC8D  F009         	call	_write_command
  1935                           
  1936                           ;lm629.c: 595:     check_busy();
  1937  0006D2  EC3B  F00A         	call	_check_busy	;wreg free
  1938                           
  1939                           ;lm629.c: 597:     chip_select(2);
  1940  0006D6  0E02               	movlw	2
  1941  0006D8  EC67  F009         	call	_chip_select
  1942                           
  1943                           ;lm629.c: 598:     write_command(0x01);
  1944  0006DC  0E01               	movlw	1
  1945  0006DE  EC8D  F009         	call	_write_command
  1946                           
  1947                           ;lm629.c: 599:     check_busy();
  1948  0006E2  EC3B  F00A         	call	_check_busy	;wreg free
  1949                           
  1950                           ;lm629.c: 601:     chip_select(1);
  1951  0006E6  0E01               	movlw	1
  1952  0006E8  EC67  F009         	call	_chip_select
  1953                           
  1954                           ;lm629.c: 602:     write_command(0x01);
  1955  0006EC  0E01               	movlw	1
  1956  0006EE  EC8D  F009         	call	_write_command
  1957                           
  1958                           ;lm629.c: 603:     check_busy();
  1959  0006F2  EC3B  F00A         	call	_check_busy	;wreg free
  1960                           
  1961                           ;lm629.c: 605:     chip_select(3);
  1962  0006F6  0E03               	movlw	3
  1963  0006F8  EC67  F009         	call	_chip_select
  1964                           
  1965                           ;lm629.c: 606:     write_command(0x01);
  1966  0006FC  0E01               	movlw	1
  1967  0006FE  EC8D  F009         	call	_write_command
  1968                           
  1969                           ;lm629.c: 607:     check_busy();
  1970  000702  EC3B  F00A         	call	_check_busy	;wreg free
  1971  000706  0012               	return		;funcret
  1972  000708                     __end_of_reverse:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _left *****************
  1976 ;; Defined at:
  1977 ;;		line 705 in file "lm629.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/F
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 5
  1998 ;; This function calls:
  1999 ;;		_check_busy
  2000 ;;		_chip_select
  2001 ;;		_motor_off
  2002 ;;		_write_command
  2003 ;;		_write_data
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text7
  2010  000708                     __ptext7:
  2011                           	callstack 0
  2012  000708                     _left:
  2013                           	callstack 25
  2014                           
  2015                           ;lm629.c: 707:     chip_select(0);
  2016                           
  2017                           ;incstack = 0
  2018  000708  0E00               	movlw	0
  2019  00070A  EC67  F009         	call	_chip_select
  2020                           
  2021                           ;lm629.c: 708:     check_busy();
  2022  00070E  EC3B  F00A         	call	_check_busy	;wreg free
  2023                           
  2024                           ;lm629.c: 709:     motor_off();
  2025  000712  EC11  F00A         	call	_motor_off	;wreg free
  2026                           
  2027                           ;lm629.c: 710:     write_command(0x1F);
  2028  000716  0E1F               	movlw	31
  2029  000718  EC8D  F009         	call	_write_command
  2030                           
  2031                           ;lm629.c: 711:     check_busy();
  2032  00071C  EC3B  F00A         	call	_check_busy	;wreg free
  2033                           
  2034                           ;lm629.c: 712:     write_data(0x18,0x28);
  2035  000720  0E28               	movlw	40
  2036  000722  6E06               	movwf	write_data@byte2^0,c
  2037  000724  0E18               	movlw	24
  2038  000726  EC39  F009         	call	_write_data
  2039                           
  2040                           ;lm629.c: 713:     check_busy();
  2041  00072A  EC3B  F00A         	call	_check_busy	;wreg free
  2042                           
  2043                           ;lm629.c: 715:     write_data(0x00,0x00);
  2044  00072E  0E00               	movlw	0
  2045  000730  6E06               	movwf	write_data@byte2^0,c
  2046  000732  0E00               	movlw	0
  2047  000734  EC39  F009         	call	_write_data
  2048                           
  2049                           ;lm629.c: 716:     check_busy();
  2050  000738  EC3B  F00A         	call	_check_busy	;wreg free
  2051                           
  2052                           ;lm629.c: 717:     write_data(0x00,0x48);
  2053  00073C  0E48               	movlw	72
  2054  00073E  6E06               	movwf	write_data@byte2^0,c
  2055  000740  0E00               	movlw	0
  2056  000742  EC39  F009         	call	_write_data
  2057                           
  2058                           ;lm629.c: 718:     check_busy();
  2059  000746  EC3B  F00A         	call	_check_busy	;wreg free
  2060                           
  2061                           ;lm629.c: 720:     write_data(0x00,0x01);
  2062  00074A  0E01               	movlw	1
  2063  00074C  6E06               	movwf	write_data@byte2^0,c
  2064  00074E  0E00               	movlw	0
  2065  000750  EC39  F009         	call	_write_data
  2066                           
  2067                           ;lm629.c: 721:     check_busy();
  2068  000754  EC3B  F00A         	call	_check_busy	;wreg free
  2069                           
  2070                           ;lm629.c: 722:     write_data(0xFA,0xD0);
  2071  000758  0ED0               	movlw	208
  2072  00075A  6E06               	movwf	write_data@byte2^0,c
  2073  00075C  0EFA               	movlw	250
  2074  00075E  EC39  F009         	call	_write_data
  2075                           
  2076                           ;lm629.c: 723:     check_busy();
  2077  000762  EC3B  F00A         	call	_check_busy	;wreg free
  2078                           
  2079                           ;lm629.c: 725:     chip_select(1);
  2080  000766  0E01               	movlw	1
  2081  000768  EC67  F009         	call	_chip_select
  2082                           
  2083                           ;lm629.c: 726:     check_busy();
  2084  00076C  EC3B  F00A         	call	_check_busy	;wreg free
  2085                           
  2086                           ;lm629.c: 727:     motor_off();
  2087  000770  EC11  F00A         	call	_motor_off	;wreg free
  2088                           
  2089                           ;lm629.c: 728:     write_command(0x1F);
  2090  000774  0E1F               	movlw	31
  2091  000776  EC8D  F009         	call	_write_command
  2092                           
  2093                           ;lm629.c: 729:     check_busy();
  2094  00077A  EC3B  F00A         	call	_check_busy	;wreg free
  2095                           
  2096                           ;lm629.c: 730:     write_data(0x18,0x28);
  2097  00077E  0E28               	movlw	40
  2098  000780  6E06               	movwf	write_data@byte2^0,c
  2099  000782  0E18               	movlw	24
  2100  000784  EC39  F009         	call	_write_data
  2101                           
  2102                           ;lm629.c: 731:     check_busy();
  2103  000788  EC3B  F00A         	call	_check_busy	;wreg free
  2104                           
  2105                           ;lm629.c: 733:     write_data(0x00,0x00);
  2106  00078C  0E00               	movlw	0
  2107  00078E  6E06               	movwf	write_data@byte2^0,c
  2108  000790  0E00               	movlw	0
  2109  000792  EC39  F009         	call	_write_data
  2110                           
  2111                           ;lm629.c: 734:     check_busy();
  2112  000796  EC3B  F00A         	call	_check_busy	;wreg free
  2113                           
  2114                           ;lm629.c: 735:     write_data(0x00,0x48);
  2115  00079A  0E48               	movlw	72
  2116  00079C  6E06               	movwf	write_data@byte2^0,c
  2117  00079E  0E00               	movlw	0
  2118  0007A0  EC39  F009         	call	_write_data
  2119                           
  2120                           ;lm629.c: 736:     check_busy();
  2121  0007A4  EC3B  F00A         	call	_check_busy	;wreg free
  2122                           
  2123                           ;lm629.c: 738:     write_data(0x00,0x01);
  2124  0007A8  0E01               	movlw	1
  2125  0007AA  6E06               	movwf	write_data@byte2^0,c
  2126  0007AC  0E00               	movlw	0
  2127  0007AE  EC39  F009         	call	_write_data
  2128                           
  2129                           ;lm629.c: 739:     check_busy();
  2130  0007B2  EC3B  F00A         	call	_check_busy	;wreg free
  2131                           
  2132                           ;lm629.c: 740:     write_data(0xFA,0xD0);
  2133  0007B6  0ED0               	movlw	208
  2134  0007B8  6E06               	movwf	write_data@byte2^0,c
  2135  0007BA  0EFA               	movlw	250
  2136  0007BC  EC39  F009         	call	_write_data
  2137                           
  2138                           ;lm629.c: 741:     check_busy();
  2139  0007C0  EC3B  F00A         	call	_check_busy	;wreg free
  2140                           
  2141                           ;lm629.c: 744:     chip_select(2);
  2142  0007C4  0E02               	movlw	2
  2143  0007C6  EC67  F009         	call	_chip_select
  2144                           
  2145                           ;lm629.c: 745:     check_busy();
  2146  0007CA  EC3B  F00A         	call	_check_busy	;wreg free
  2147                           
  2148                           ;lm629.c: 746:     motor_off();
  2149  0007CE  EC11  F00A         	call	_motor_off	;wreg free
  2150                           
  2151                           ;lm629.c: 747:     write_command(0x1F);
  2152  0007D2  0E1F               	movlw	31
  2153  0007D4  EC8D  F009         	call	_write_command
  2154                           
  2155                           ;lm629.c: 748:     check_busy();
  2156  0007D8  EC3B  F00A         	call	_check_busy	;wreg free
  2157                           
  2158                           ;lm629.c: 749:     write_data(0x18,0x28);
  2159  0007DC  0E28               	movlw	40
  2160  0007DE  6E06               	movwf	write_data@byte2^0,c
  2161  0007E0  0E18               	movlw	24
  2162  0007E2  EC39  F009         	call	_write_data
  2163                           
  2164                           ;lm629.c: 750:     check_busy();
  2165  0007E6  EC3B  F00A         	call	_check_busy	;wreg free
  2166                           
  2167                           ;lm629.c: 752:     write_data(0x00,0x00);
  2168  0007EA  0E00               	movlw	0
  2169  0007EC  6E06               	movwf	write_data@byte2^0,c
  2170  0007EE  0E00               	movlw	0
  2171  0007F0  EC39  F009         	call	_write_data
  2172                           
  2173                           ;lm629.c: 753:     check_busy();
  2174  0007F4  EC3B  F00A         	call	_check_busy	;wreg free
  2175                           
  2176                           ;lm629.c: 754:     write_data(0x00,0x48);
  2177  0007F8  0E48               	movlw	72
  2178  0007FA  6E06               	movwf	write_data@byte2^0,c
  2179  0007FC  0E00               	movlw	0
  2180  0007FE  EC39  F009         	call	_write_data
  2181                           
  2182                           ;lm629.c: 755:     check_busy();
  2183  000802  EC3B  F00A         	call	_check_busy	;wreg free
  2184                           
  2185                           ;lm629.c: 757:     write_data(0x00,0x01);
  2186  000806  0E01               	movlw	1
  2187  000808  6E06               	movwf	write_data@byte2^0,c
  2188  00080A  0E00               	movlw	0
  2189  00080C  EC39  F009         	call	_write_data
  2190                           
  2191                           ;lm629.c: 758:     check_busy();
  2192  000810  EC3B  F00A         	call	_check_busy	;wreg free
  2193                           
  2194                           ;lm629.c: 759:     write_data(0xFA,0xD0);
  2195  000814  0ED0               	movlw	208
  2196  000816  6E06               	movwf	write_data@byte2^0,c
  2197  000818  0EFA               	movlw	250
  2198  00081A  EC39  F009         	call	_write_data
  2199                           
  2200                           ;lm629.c: 760:     check_busy();
  2201  00081E  EC3B  F00A         	call	_check_busy	;wreg free
  2202                           
  2203                           ;lm629.c: 763:     chip_select(3);
  2204  000822  0E03               	movlw	3
  2205  000824  EC67  F009         	call	_chip_select
  2206                           
  2207                           ;lm629.c: 764:     check_busy();
  2208  000828  EC3B  F00A         	call	_check_busy	;wreg free
  2209                           
  2210                           ;lm629.c: 765:     motor_off();
  2211  00082C  EC11  F00A         	call	_motor_off	;wreg free
  2212                           
  2213                           ;lm629.c: 766:     write_command(0x1F);
  2214  000830  0E1F               	movlw	31
  2215  000832  EC8D  F009         	call	_write_command
  2216                           
  2217                           ;lm629.c: 767:     check_busy();
  2218  000836  EC3B  F00A         	call	_check_busy	;wreg free
  2219                           
  2220                           ;lm629.c: 768:     write_data(0x18,0x28);
  2221  00083A  0E28               	movlw	40
  2222  00083C  6E06               	movwf	write_data@byte2^0,c
  2223  00083E  0E18               	movlw	24
  2224  000840  EC39  F009         	call	_write_data
  2225                           
  2226                           ;lm629.c: 769:     check_busy();
  2227  000844  EC3B  F00A         	call	_check_busy	;wreg free
  2228                           
  2229                           ;lm629.c: 771:     write_data(0x00,0x00);
  2230  000848  0E00               	movlw	0
  2231  00084A  6E06               	movwf	write_data@byte2^0,c
  2232  00084C  0E00               	movlw	0
  2233  00084E  EC39  F009         	call	_write_data
  2234                           
  2235                           ;lm629.c: 772:     check_busy();
  2236  000852  EC3B  F00A         	call	_check_busy	;wreg free
  2237                           
  2238                           ;lm629.c: 773:     write_data(0x00,0x48);
  2239  000856  0E48               	movlw	72
  2240  000858  6E06               	movwf	write_data@byte2^0,c
  2241  00085A  0E00               	movlw	0
  2242  00085C  EC39  F009         	call	_write_data
  2243                           
  2244                           ;lm629.c: 774:     check_busy();
  2245  000860  EC3B  F00A         	call	_check_busy	;wreg free
  2246                           
  2247                           ;lm629.c: 776:     write_data(0x00,0x01);
  2248  000864  0E01               	movlw	1
  2249  000866  6E06               	movwf	write_data@byte2^0,c
  2250  000868  0E00               	movlw	0
  2251  00086A  EC39  F009         	call	_write_data
  2252                           
  2253                           ;lm629.c: 777:     check_busy();
  2254  00086E  EC3B  F00A         	call	_check_busy	;wreg free
  2255                           
  2256                           ;lm629.c: 778:     write_data(0xFA,0xD0);
  2257  000872  0ED0               	movlw	208
  2258  000874  6E06               	movwf	write_data@byte2^0,c
  2259  000876  0EFA               	movlw	250
  2260  000878  EC39  F009         	call	_write_data
  2261                           
  2262                           ;lm629.c: 779:     check_busy();
  2263  00087C  EC3B  F00A         	call	_check_busy	;wreg free
  2264                           
  2265                           ;lm629.c: 782:     chip_select(0);
  2266  000880  0E00               	movlw	0
  2267  000882  EC67  F009         	call	_chip_select
  2268                           
  2269                           ;lm629.c: 783:     write_command(0x01);
  2270  000886  0E01               	movlw	1
  2271  000888  EC8D  F009         	call	_write_command
  2272                           
  2273                           ;lm629.c: 784:     check_busy();
  2274  00088C  EC3B  F00A         	call	_check_busy	;wreg free
  2275                           
  2276                           ;lm629.c: 786:     chip_select(2);
  2277  000890  0E02               	movlw	2
  2278  000892  EC67  F009         	call	_chip_select
  2279                           
  2280                           ;lm629.c: 787:     write_command(0x01);
  2281  000896  0E01               	movlw	1
  2282  000898  EC8D  F009         	call	_write_command
  2283                           
  2284                           ;lm629.c: 788:     check_busy();
  2285  00089C  EC3B  F00A         	call	_check_busy	;wreg free
  2286                           
  2287                           ;lm629.c: 790:     chip_select(1);
  2288  0008A0  0E01               	movlw	1
  2289  0008A2  EC67  F009         	call	_chip_select
  2290                           
  2291                           ;lm629.c: 791:     write_command(0x01);
  2292  0008A6  0E01               	movlw	1
  2293  0008A8  EC8D  F009         	call	_write_command
  2294                           
  2295                           ;lm629.c: 792:     check_busy();
  2296  0008AC  EC3B  F00A         	call	_check_busy	;wreg free
  2297                           
  2298                           ;lm629.c: 794:     chip_select(3);
  2299  0008B0  0E03               	movlw	3
  2300  0008B2  EC67  F009         	call	_chip_select
  2301                           
  2302                           ;lm629.c: 795:     write_command(0x01);
  2303  0008B6  0E01               	movlw	1
  2304  0008B8  EC8D  F009         	call	_write_command
  2305                           
  2306                           ;lm629.c: 796:     check_busy();
  2307  0008BC  EC3B  F00A         	call	_check_busy	;wreg free
  2308  0008C0  0012               	return		;funcret
  2309  0008C2                     __end_of_left:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _forward_right *****************
  2313 ;; Defined at:
  2314 ;;		line 894 in file "lm629.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/F
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 5
  2335 ;; This function calls:
  2336 ;;		_check_busy
  2337 ;;		_chip_select
  2338 ;;		_motor_off
  2339 ;;		_write_command
  2340 ;;		_write_data
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text8
  2347  0008C2                     __ptext8:
  2348                           	callstack 0
  2349  0008C2                     _forward_right:
  2350                           	callstack 25
  2351                           
  2352                           ;lm629.c: 896:     chip_select(0);
  2353                           
  2354                           ;incstack = 0
  2355  0008C2  0E00               	movlw	0
  2356  0008C4  EC67  F009         	call	_chip_select
  2357                           
  2358                           ;lm629.c: 897:     check_busy();
  2359  0008C8  EC3B  F00A         	call	_check_busy	;wreg free
  2360                           
  2361                           ;lm629.c: 898:     motor_off();
  2362  0008CC  EC11  F00A         	call	_motor_off	;wreg free
  2363                           
  2364                           ;lm629.c: 899:     write_command(0x1F);
  2365  0008D0  0E1F               	movlw	31
  2366  0008D2  EC8D  F009         	call	_write_command
  2367                           
  2368                           ;lm629.c: 900:     check_busy();
  2369  0008D6  EC3B  F00A         	call	_check_busy	;wreg free
  2370                           
  2371                           ;lm629.c: 901:     write_data(0x18,0x28);
  2372  0008DA  0E28               	movlw	40
  2373  0008DC  6E06               	movwf	write_data@byte2^0,c
  2374  0008DE  0E18               	movlw	24
  2375  0008E0  EC39  F009         	call	_write_data
  2376                           
  2377                           ;lm629.c: 902:     check_busy();
  2378  0008E4  EC3B  F00A         	call	_check_busy	;wreg free
  2379                           
  2380                           ;lm629.c: 904:     write_data(0x00,0x00);
  2381  0008E8  0E00               	movlw	0
  2382  0008EA  6E06               	movwf	write_data@byte2^0,c
  2383  0008EC  0E00               	movlw	0
  2384  0008EE  EC39  F009         	call	_write_data
  2385                           
  2386                           ;lm629.c: 905:     check_busy();
  2387  0008F2  EC3B  F00A         	call	_check_busy	;wreg free
  2388                           
  2389                           ;lm629.c: 906:     write_data(0x00,0x48);
  2390  0008F6  0E48               	movlw	72
  2391  0008F8  6E06               	movwf	write_data@byte2^0,c
  2392  0008FA  0E00               	movlw	0
  2393  0008FC  EC39  F009         	call	_write_data
  2394                           
  2395                           ;lm629.c: 907:     check_busy();
  2396  000900  EC3B  F00A         	call	_check_busy	;wreg free
  2397                           
  2398                           ;lm629.c: 909:     write_data(0x00,0x00);
  2399  000904  0E00               	movlw	0
  2400  000906  6E06               	movwf	write_data@byte2^0,c
  2401  000908  0E00               	movlw	0
  2402  00090A  EC39  F009         	call	_write_data
  2403                           
  2404                           ;lm629.c: 910:     check_busy();
  2405  00090E  EC3B  F00A         	call	_check_busy	;wreg free
  2406                           
  2407                           ;lm629.c: 911:     write_data(0xFD,0x68);
  2408  000912  0E68               	movlw	104
  2409  000914  6E06               	movwf	write_data@byte2^0,c
  2410  000916  0EFD               	movlw	253
  2411  000918  EC39  F009         	call	_write_data
  2412                           
  2413                           ;lm629.c: 912:     check_busy();
  2414  00091C  EC3B  F00A         	call	_check_busy	;wreg free
  2415                           
  2416                           ;lm629.c: 915:     chip_select(1);
  2417  000920  0E01               	movlw	1
  2418  000922  EC67  F009         	call	_chip_select
  2419                           
  2420                           ;lm629.c: 916:     check_busy();
  2421  000926  EC3B  F00A         	call	_check_busy	;wreg free
  2422                           
  2423                           ;lm629.c: 917:     motor_off();
  2424  00092A  EC11  F00A         	call	_motor_off	;wreg free
  2425                           
  2426                           ;lm629.c: 918:     write_command(0x1F);
  2427  00092E  0E1F               	movlw	31
  2428  000930  EC8D  F009         	call	_write_command
  2429                           
  2430                           ;lm629.c: 919:     check_busy();
  2431  000934  EC3B  F00A         	call	_check_busy	;wreg free
  2432                           
  2433                           ;lm629.c: 920:     write_data(0x08,0x28);
  2434  000938  0E28               	movlw	40
  2435  00093A  6E06               	movwf	write_data@byte2^0,c
  2436  00093C  0E08               	movlw	8
  2437  00093E  EC39  F009         	call	_write_data
  2438                           
  2439                           ;lm629.c: 921:     check_busy();
  2440  000942  EC3B  F00A         	call	_check_busy	;wreg free
  2441                           
  2442                           ;lm629.c: 923:     write_data(0x00,0x00);
  2443  000946  0E00               	movlw	0
  2444  000948  6E06               	movwf	write_data@byte2^0,c
  2445  00094A  0E00               	movlw	0
  2446  00094C  EC39  F009         	call	_write_data
  2447                           
  2448                           ;lm629.c: 924:     check_busy();
  2449  000950  EC3B  F00A         	call	_check_busy	;wreg free
  2450                           
  2451                           ;lm629.c: 925:     write_data(0x00,0x48);
  2452  000954  0E48               	movlw	72
  2453  000956  6E06               	movwf	write_data@byte2^0,c
  2454  000958  0E00               	movlw	0
  2455  00095A  EC39  F009         	call	_write_data
  2456                           
  2457                           ;lm629.c: 926:     check_busy();
  2458  00095E  EC3B  F00A         	call	_check_busy	;wreg free
  2459                           
  2460                           ;lm629.c: 928:     write_data(0x00,0x01);
  2461  000962  0E01               	movlw	1
  2462  000964  6E06               	movwf	write_data@byte2^0,c
  2463  000966  0E00               	movlw	0
  2464  000968  EC39  F009         	call	_write_data
  2465                           
  2466                           ;lm629.c: 929:     check_busy();
  2467  00096C  EC3B  F00A         	call	_check_busy	;wreg free
  2468                           
  2469                           ;lm629.c: 930:     write_data(0xFA,0xD0);
  2470  000970  0ED0               	movlw	208
  2471  000972  6E06               	movwf	write_data@byte2^0,c
  2472  000974  0EFA               	movlw	250
  2473  000976  EC39  F009         	call	_write_data
  2474                           
  2475                           ;lm629.c: 931:     check_busy();
  2476  00097A  EC3B  F00A         	call	_check_busy	;wreg free
  2477                           
  2478                           ;lm629.c: 934:     chip_select(2);
  2479  00097E  0E02               	movlw	2
  2480  000980  EC67  F009         	call	_chip_select
  2481                           
  2482                           ;lm629.c: 935:     check_busy();
  2483  000984  EC3B  F00A         	call	_check_busy	;wreg free
  2484                           
  2485                           ;lm629.c: 936:     motor_off();
  2486  000988  EC11  F00A         	call	_motor_off	;wreg free
  2487                           
  2488                           ;lm629.c: 937:     write_command(0x1F);
  2489  00098C  0E1F               	movlw	31
  2490  00098E  EC8D  F009         	call	_write_command
  2491                           
  2492                           ;lm629.c: 938:     check_busy();
  2493  000992  EC3B  F00A         	call	_check_busy	;wreg free
  2494                           
  2495                           ;lm629.c: 939:     write_data(0x08,0x28);
  2496  000996  0E28               	movlw	40
  2497  000998  6E06               	movwf	write_data@byte2^0,c
  2498  00099A  0E08               	movlw	8
  2499  00099C  EC39  F009         	call	_write_data
  2500                           
  2501                           ;lm629.c: 940:     check_busy();
  2502  0009A0  EC3B  F00A         	call	_check_busy	;wreg free
  2503                           
  2504                           ;lm629.c: 942:     write_data(0x00,0x00);
  2505  0009A4  0E00               	movlw	0
  2506  0009A6  6E06               	movwf	write_data@byte2^0,c
  2507  0009A8  0E00               	movlw	0
  2508  0009AA  EC39  F009         	call	_write_data
  2509                           
  2510                           ;lm629.c: 943:     check_busy();
  2511  0009AE  EC3B  F00A         	call	_check_busy	;wreg free
  2512                           
  2513                           ;lm629.c: 944:     write_data(0x00,0x48);
  2514  0009B2  0E48               	movlw	72
  2515  0009B4  6E06               	movwf	write_data@byte2^0,c
  2516  0009B6  0E00               	movlw	0
  2517  0009B8  EC39  F009         	call	_write_data
  2518                           
  2519                           ;lm629.c: 945:     check_busy();
  2520  0009BC  EC3B  F00A         	call	_check_busy	;wreg free
  2521                           
  2522                           ;lm629.c: 947:     write_data(0x00,0x01);
  2523  0009C0  0E01               	movlw	1
  2524  0009C2  6E06               	movwf	write_data@byte2^0,c
  2525  0009C4  0E00               	movlw	0
  2526  0009C6  EC39  F009         	call	_write_data
  2527                           
  2528                           ;lm629.c: 948:     check_busy();
  2529  0009CA  EC3B  F00A         	call	_check_busy	;wreg free
  2530                           
  2531                           ;lm629.c: 949:     write_data(0xFA,0xD0);
  2532  0009CE  0ED0               	movlw	208
  2533  0009D0  6E06               	movwf	write_data@byte2^0,c
  2534  0009D2  0EFA               	movlw	250
  2535  0009D4  EC39  F009         	call	_write_data
  2536                           
  2537                           ;lm629.c: 950:     check_busy();
  2538  0009D8  EC3B  F00A         	call	_check_busy	;wreg free
  2539                           
  2540                           ;lm629.c: 953:     chip_select(3);
  2541  0009DC  0E03               	movlw	3
  2542  0009DE  EC67  F009         	call	_chip_select
  2543                           
  2544                           ;lm629.c: 954:     check_busy();
  2545  0009E2  EC3B  F00A         	call	_check_busy	;wreg free
  2546                           
  2547                           ;lm629.c: 955:     motor_off();
  2548  0009E6  EC11  F00A         	call	_motor_off	;wreg free
  2549                           
  2550                           ;lm629.c: 956:     write_command(0x1F);
  2551  0009EA  0E1F               	movlw	31
  2552  0009EC  EC8D  F009         	call	_write_command
  2553                           
  2554                           ;lm629.c: 957:     check_busy();
  2555  0009F0  EC3B  F00A         	call	_check_busy	;wreg free
  2556                           
  2557                           ;lm629.c: 958:     write_data(0x18,0x28);
  2558  0009F4  0E28               	movlw	40
  2559  0009F6  6E06               	movwf	write_data@byte2^0,c
  2560  0009F8  0E18               	movlw	24
  2561  0009FA  EC39  F009         	call	_write_data
  2562                           
  2563                           ;lm629.c: 959:     check_busy();
  2564  0009FE  EC3B  F00A         	call	_check_busy	;wreg free
  2565                           
  2566                           ;lm629.c: 961:     write_data(0x00,0x00);
  2567  000A02  0E00               	movlw	0
  2568  000A04  6E06               	movwf	write_data@byte2^0,c
  2569  000A06  0E00               	movlw	0
  2570  000A08  EC39  F009         	call	_write_data
  2571                           
  2572                           ;lm629.c: 962:     check_busy();
  2573  000A0C  EC3B  F00A         	call	_check_busy	;wreg free
  2574                           
  2575                           ;lm629.c: 963:     write_data(0x00,0x48);
  2576  000A10  0E48               	movlw	72
  2577  000A12  6E06               	movwf	write_data@byte2^0,c
  2578  000A14  0E00               	movlw	0
  2579  000A16  EC39  F009         	call	_write_data
  2580                           
  2581                           ;lm629.c: 964:     check_busy();
  2582  000A1A  EC3B  F00A         	call	_check_busy	;wreg free
  2583                           
  2584                           ;lm629.c: 966:     write_data(0x00,0x00);
  2585  000A1E  0E00               	movlw	0
  2586  000A20  6E06               	movwf	write_data@byte2^0,c
  2587  000A22  0E00               	movlw	0
  2588  000A24  EC39  F009         	call	_write_data
  2589                           
  2590                           ;lm629.c: 967:     check_busy();
  2591  000A28  EC3B  F00A         	call	_check_busy	;wreg free
  2592                           
  2593                           ;lm629.c: 968:     write_data(0xFD,0x68);
  2594  000A2C  0E68               	movlw	104
  2595  000A2E  6E06               	movwf	write_data@byte2^0,c
  2596  000A30  0EFD               	movlw	253
  2597  000A32  EC39  F009         	call	_write_data
  2598                           
  2599                           ;lm629.c: 969:     check_busy();
  2600  000A36  EC3B  F00A         	call	_check_busy	;wreg free
  2601                           
  2602                           ;lm629.c: 972:     chip_select(0);
  2603  000A3A  0E00               	movlw	0
  2604  000A3C  EC67  F009         	call	_chip_select
  2605                           
  2606                           ;lm629.c: 973:     write_command(0x01);
  2607  000A40  0E01               	movlw	1
  2608  000A42  EC8D  F009         	call	_write_command
  2609                           
  2610                           ;lm629.c: 974:     check_busy();
  2611  000A46  EC3B  F00A         	call	_check_busy	;wreg free
  2612                           
  2613                           ;lm629.c: 976:     chip_select(2);
  2614  000A4A  0E02               	movlw	2
  2615  000A4C  EC67  F009         	call	_chip_select
  2616                           
  2617                           ;lm629.c: 977:     write_command(0x01);
  2618  000A50  0E01               	movlw	1
  2619  000A52  EC8D  F009         	call	_write_command
  2620                           
  2621                           ;lm629.c: 978:     check_busy();
  2622  000A56  EC3B  F00A         	call	_check_busy	;wreg free
  2623                           
  2624                           ;lm629.c: 980:     chip_select(1);
  2625  000A5A  0E01               	movlw	1
  2626  000A5C  EC67  F009         	call	_chip_select
  2627                           
  2628                           ;lm629.c: 981:     write_command(0x01);
  2629  000A60  0E01               	movlw	1
  2630  000A62  EC8D  F009         	call	_write_command
  2631                           
  2632                           ;lm629.c: 982:     check_busy();
  2633  000A66  EC3B  F00A         	call	_check_busy	;wreg free
  2634                           
  2635                           ;lm629.c: 984:     chip_select(3);
  2636  000A6A  0E03               	movlw	3
  2637  000A6C  EC67  F009         	call	_chip_select
  2638                           
  2639                           ;lm629.c: 985:     write_command(0x01);
  2640  000A70  0E01               	movlw	1
  2641  000A72  EC8D  F009         	call	_write_command
  2642                           
  2643                           ;lm629.c: 986:     check_busy();
  2644  000A76  EC3B  F00A         	call	_check_busy	;wreg free
  2645  000A7A  0012               	return		;funcret
  2646  000A7C                     __end_of_forward_right:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _forward_left *****************
  2650 ;; Defined at:
  2651 ;;		line 799 in file "lm629.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/F
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 5
  2672 ;; This function calls:
  2673 ;;		_check_busy
  2674 ;;		_chip_select
  2675 ;;		_motor_off
  2676 ;;		_write_command
  2677 ;;		_write_data
  2678 ;; This function is called by:
  2679 ;;		_main
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text9
  2684  000A7C                     __ptext9:
  2685                           	callstack 0
  2686  000A7C                     _forward_left:
  2687                           	callstack 25
  2688                           
  2689                           ;lm629.c: 801:     chip_select(0);
  2690                           
  2691                           ;incstack = 0
  2692  000A7C  0E00               	movlw	0
  2693  000A7E  EC67  F009         	call	_chip_select
  2694                           
  2695                           ;lm629.c: 802:     check_busy();
  2696  000A82  EC3B  F00A         	call	_check_busy	;wreg free
  2697                           
  2698                           ;lm629.c: 803:     motor_off();
  2699  000A86  EC11  F00A         	call	_motor_off	;wreg free
  2700                           
  2701                           ;lm629.c: 804:     write_command(0x1F);
  2702  000A8A  0E1F               	movlw	31
  2703  000A8C  EC8D  F009         	call	_write_command
  2704                           
  2705                           ;lm629.c: 805:     check_busy();
  2706  000A90  EC3B  F00A         	call	_check_busy	;wreg free
  2707                           
  2708                           ;lm629.c: 806:     write_data(0x18,0x28);
  2709  000A94  0E28               	movlw	40
  2710  000A96  6E06               	movwf	write_data@byte2^0,c
  2711  000A98  0E18               	movlw	24
  2712  000A9A  EC39  F009         	call	_write_data
  2713                           
  2714                           ;lm629.c: 807:     check_busy();
  2715  000A9E  EC3B  F00A         	call	_check_busy	;wreg free
  2716                           
  2717                           ;lm629.c: 809:     write_data(0x00,0x00);
  2718  000AA2  0E00               	movlw	0
  2719  000AA4  6E06               	movwf	write_data@byte2^0,c
  2720  000AA6  0E00               	movlw	0
  2721  000AA8  EC39  F009         	call	_write_data
  2722                           
  2723                           ;lm629.c: 810:     check_busy();
  2724  000AAC  EC3B  F00A         	call	_check_busy	;wreg free
  2725                           
  2726                           ;lm629.c: 811:     write_data(0x00,0x48);
  2727  000AB0  0E48               	movlw	72
  2728  000AB2  6E06               	movwf	write_data@byte2^0,c
  2729  000AB4  0E00               	movlw	0
  2730  000AB6  EC39  F009         	call	_write_data
  2731                           
  2732                           ;lm629.c: 812:     check_busy();
  2733  000ABA  EC3B  F00A         	call	_check_busy	;wreg free
  2734                           
  2735                           ;lm629.c: 814:     write_data(0x00,0x01);
  2736  000ABE  0E01               	movlw	1
  2737  000AC0  6E06               	movwf	write_data@byte2^0,c
  2738  000AC2  0E00               	movlw	0
  2739  000AC4  EC39  F009         	call	_write_data
  2740                           
  2741                           ;lm629.c: 815:     check_busy();
  2742  000AC8  EC3B  F00A         	call	_check_busy	;wreg free
  2743                           
  2744                           ;lm629.c: 816:     write_data(0xFA,0xD0);
  2745  000ACC  0ED0               	movlw	208
  2746  000ACE  6E06               	movwf	write_data@byte2^0,c
  2747  000AD0  0EFA               	movlw	250
  2748  000AD2  EC39  F009         	call	_write_data
  2749                           
  2750                           ;lm629.c: 817:     check_busy();
  2751  000AD6  EC3B  F00A         	call	_check_busy	;wreg free
  2752                           
  2753                           ;lm629.c: 820:     chip_select(1);
  2754  000ADA  0E01               	movlw	1
  2755  000ADC  EC67  F009         	call	_chip_select
  2756                           
  2757                           ;lm629.c: 821:     check_busy();
  2758  000AE0  EC3B  F00A         	call	_check_busy	;wreg free
  2759                           
  2760                           ;lm629.c: 822:     motor_off();
  2761  000AE4  EC11  F00A         	call	_motor_off	;wreg free
  2762                           
  2763                           ;lm629.c: 823:     write_command(0x1F);
  2764  000AE8  0E1F               	movlw	31
  2765  000AEA  EC8D  F009         	call	_write_command
  2766                           
  2767                           ;lm629.c: 824:     check_busy();
  2768  000AEE  EC3B  F00A         	call	_check_busy	;wreg free
  2769                           
  2770                           ;lm629.c: 825:     write_data(0x08,0x28);
  2771  000AF2  0E28               	movlw	40
  2772  000AF4  6E06               	movwf	write_data@byte2^0,c
  2773  000AF6  0E08               	movlw	8
  2774  000AF8  EC39  F009         	call	_write_data
  2775                           
  2776                           ;lm629.c: 826:     check_busy();
  2777  000AFC  EC3B  F00A         	call	_check_busy	;wreg free
  2778                           
  2779                           ;lm629.c: 828:     write_data(0x00,0x00);
  2780  000B00  0E00               	movlw	0
  2781  000B02  6E06               	movwf	write_data@byte2^0,c
  2782  000B04  0E00               	movlw	0
  2783  000B06  EC39  F009         	call	_write_data
  2784                           
  2785                           ;lm629.c: 829:     check_busy();
  2786  000B0A  EC3B  F00A         	call	_check_busy	;wreg free
  2787                           
  2788                           ;lm629.c: 830:     write_data(0x00,0x48);
  2789  000B0E  0E48               	movlw	72
  2790  000B10  6E06               	movwf	write_data@byte2^0,c
  2791  000B12  0E00               	movlw	0
  2792  000B14  EC39  F009         	call	_write_data
  2793                           
  2794                           ;lm629.c: 831:     check_busy();
  2795  000B18  EC3B  F00A         	call	_check_busy	;wreg free
  2796                           
  2797                           ;lm629.c: 833:     write_data(0x00,0x00);
  2798  000B1C  0E00               	movlw	0
  2799  000B1E  6E06               	movwf	write_data@byte2^0,c
  2800  000B20  0E00               	movlw	0
  2801  000B22  EC39  F009         	call	_write_data
  2802                           
  2803                           ;lm629.c: 834:     check_busy();
  2804  000B26  EC3B  F00A         	call	_check_busy	;wreg free
  2805                           
  2806                           ;lm629.c: 835:     write_data(0xFD,0x68);
  2807  000B2A  0E68               	movlw	104
  2808  000B2C  6E06               	movwf	write_data@byte2^0,c
  2809  000B2E  0EFD               	movlw	253
  2810  000B30  EC39  F009         	call	_write_data
  2811                           
  2812                           ;lm629.c: 836:     check_busy();
  2813  000B34  EC3B  F00A         	call	_check_busy	;wreg free
  2814                           
  2815                           ;lm629.c: 839:     chip_select(2);
  2816  000B38  0E02               	movlw	2
  2817  000B3A  EC67  F009         	call	_chip_select
  2818                           
  2819                           ;lm629.c: 840:     check_busy();
  2820  000B3E  EC3B  F00A         	call	_check_busy	;wreg free
  2821                           
  2822                           ;lm629.c: 841:     motor_off();
  2823  000B42  EC11  F00A         	call	_motor_off	;wreg free
  2824                           
  2825                           ;lm629.c: 842:     write_command(0x1F);
  2826  000B46  0E1F               	movlw	31
  2827  000B48  EC8D  F009         	call	_write_command
  2828                           
  2829                           ;lm629.c: 843:     check_busy();
  2830  000B4C  EC3B  F00A         	call	_check_busy	;wreg free
  2831                           
  2832                           ;lm629.c: 844:     write_data(0x08,0x28);
  2833  000B50  0E28               	movlw	40
  2834  000B52  6E06               	movwf	write_data@byte2^0,c
  2835  000B54  0E08               	movlw	8
  2836  000B56  EC39  F009         	call	_write_data
  2837                           
  2838                           ;lm629.c: 845:     check_busy();
  2839  000B5A  EC3B  F00A         	call	_check_busy	;wreg free
  2840                           
  2841                           ;lm629.c: 847:     write_data(0x00,0x00);
  2842  000B5E  0E00               	movlw	0
  2843  000B60  6E06               	movwf	write_data@byte2^0,c
  2844  000B62  0E00               	movlw	0
  2845  000B64  EC39  F009         	call	_write_data
  2846                           
  2847                           ;lm629.c: 848:     check_busy();
  2848  000B68  EC3B  F00A         	call	_check_busy	;wreg free
  2849                           
  2850                           ;lm629.c: 849:     write_data(0x00,0x48);
  2851  000B6C  0E48               	movlw	72
  2852  000B6E  6E06               	movwf	write_data@byte2^0,c
  2853  000B70  0E00               	movlw	0
  2854  000B72  EC39  F009         	call	_write_data
  2855                           
  2856                           ;lm629.c: 850:     check_busy();
  2857  000B76  EC3B  F00A         	call	_check_busy	;wreg free
  2858                           
  2859                           ;lm629.c: 852:     write_data(0x00,0x00);
  2860  000B7A  0E00               	movlw	0
  2861  000B7C  6E06               	movwf	write_data@byte2^0,c
  2862  000B7E  0E00               	movlw	0
  2863  000B80  EC39  F009         	call	_write_data
  2864                           
  2865                           ;lm629.c: 853:     check_busy();
  2866  000B84  EC3B  F00A         	call	_check_busy	;wreg free
  2867                           
  2868                           ;lm629.c: 854:     write_data(0xFD,0x68);
  2869  000B88  0E68               	movlw	104
  2870  000B8A  6E06               	movwf	write_data@byte2^0,c
  2871  000B8C  0EFD               	movlw	253
  2872  000B8E  EC39  F009         	call	_write_data
  2873                           
  2874                           ;lm629.c: 855:     check_busy();
  2875  000B92  EC3B  F00A         	call	_check_busy	;wreg free
  2876                           
  2877                           ;lm629.c: 858:     chip_select(3);
  2878  000B96  0E03               	movlw	3
  2879  000B98  EC67  F009         	call	_chip_select
  2880                           
  2881                           ;lm629.c: 859:     check_busy();
  2882  000B9C  EC3B  F00A         	call	_check_busy	;wreg free
  2883                           
  2884                           ;lm629.c: 860:     motor_off();
  2885  000BA0  EC11  F00A         	call	_motor_off	;wreg free
  2886                           
  2887                           ;lm629.c: 861:     write_command(0x1F);
  2888  000BA4  0E1F               	movlw	31
  2889  000BA6  EC8D  F009         	call	_write_command
  2890                           
  2891                           ;lm629.c: 862:     check_busy();
  2892  000BAA  EC3B  F00A         	call	_check_busy	;wreg free
  2893                           
  2894                           ;lm629.c: 863:     write_data(0x18,0x28);
  2895  000BAE  0E28               	movlw	40
  2896  000BB0  6E06               	movwf	write_data@byte2^0,c
  2897  000BB2  0E18               	movlw	24
  2898  000BB4  EC39  F009         	call	_write_data
  2899                           
  2900                           ;lm629.c: 864:     check_busy();
  2901  000BB8  EC3B  F00A         	call	_check_busy	;wreg free
  2902                           
  2903                           ;lm629.c: 866:     write_data(0x00,0x00);
  2904  000BBC  0E00               	movlw	0
  2905  000BBE  6E06               	movwf	write_data@byte2^0,c
  2906  000BC0  0E00               	movlw	0
  2907  000BC2  EC39  F009         	call	_write_data
  2908                           
  2909                           ;lm629.c: 867:     check_busy();
  2910  000BC6  EC3B  F00A         	call	_check_busy	;wreg free
  2911                           
  2912                           ;lm629.c: 868:     write_data(0x00,0x48);
  2913  000BCA  0E48               	movlw	72
  2914  000BCC  6E06               	movwf	write_data@byte2^0,c
  2915  000BCE  0E00               	movlw	0
  2916  000BD0  EC39  F009         	call	_write_data
  2917                           
  2918                           ;lm629.c: 869:     check_busy();
  2919  000BD4  EC3B  F00A         	call	_check_busy	;wreg free
  2920                           
  2921                           ;lm629.c: 871:     write_data(0x00,0x01);
  2922  000BD8  0E01               	movlw	1
  2923  000BDA  6E06               	movwf	write_data@byte2^0,c
  2924  000BDC  0E00               	movlw	0
  2925  000BDE  EC39  F009         	call	_write_data
  2926                           
  2927                           ;lm629.c: 872:     check_busy();
  2928  000BE2  EC3B  F00A         	call	_check_busy	;wreg free
  2929                           
  2930                           ;lm629.c: 873:     write_data(0xFA,0xD0);
  2931  000BE6  0ED0               	movlw	208
  2932  000BE8  6E06               	movwf	write_data@byte2^0,c
  2933  000BEA  0EFA               	movlw	250
  2934  000BEC  EC39  F009         	call	_write_data
  2935                           
  2936                           ;lm629.c: 874:     check_busy();
  2937  000BF0  EC3B  F00A         	call	_check_busy	;wreg free
  2938                           
  2939                           ;lm629.c: 877:     chip_select(0);
  2940  000BF4  0E00               	movlw	0
  2941  000BF6  EC67  F009         	call	_chip_select
  2942                           
  2943                           ;lm629.c: 878:     write_command(0x01);
  2944  000BFA  0E01               	movlw	1
  2945  000BFC  EC8D  F009         	call	_write_command
  2946                           
  2947                           ;lm629.c: 879:     check_busy();
  2948  000C00  EC3B  F00A         	call	_check_busy	;wreg free
  2949                           
  2950                           ;lm629.c: 881:     chip_select(2);
  2951  000C04  0E02               	movlw	2
  2952  000C06  EC67  F009         	call	_chip_select
  2953                           
  2954                           ;lm629.c: 882:     write_command(0x01);
  2955  000C0A  0E01               	movlw	1
  2956  000C0C  EC8D  F009         	call	_write_command
  2957                           
  2958                           ;lm629.c: 883:     check_busy();
  2959  000C10  EC3B  F00A         	call	_check_busy	;wreg free
  2960                           
  2961                           ;lm629.c: 885:     chip_select(1);
  2962  000C14  0E01               	movlw	1
  2963  000C16  EC67  F009         	call	_chip_select
  2964                           
  2965                           ;lm629.c: 886:     write_command(0x01);
  2966  000C1A  0E01               	movlw	1
  2967  000C1C  EC8D  F009         	call	_write_command
  2968                           
  2969                           ;lm629.c: 887:     check_busy();
  2970  000C20  EC3B  F00A         	call	_check_busy	;wreg free
  2971                           
  2972                           ;lm629.c: 889:     chip_select(3);
  2973  000C24  0E03               	movlw	3
  2974  000C26  EC67  F009         	call	_chip_select
  2975                           
  2976                           ;lm629.c: 890:     write_command(0x01);
  2977  000C2A  0E01               	movlw	1
  2978  000C2C  EC8D  F009         	call	_write_command
  2979                           
  2980                           ;lm629.c: 891:     check_busy();
  2981  000C30  EC3B  F00A         	call	_check_busy	;wreg free
  2982  000C34  0012               	return		;funcret
  2983  000C36                     __end_of_forward_left:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _forward *****************
  2987 ;; Defined at:
  2988 ;;		line 419 in file "lm629.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/F
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used: 1
  3008 ;; Hardware stack levels required when called: 5
  3009 ;; This function calls:
  3010 ;;		_check_busy
  3011 ;;		_chip_select
  3012 ;;		_motor_off
  3013 ;;		_write_command
  3014 ;;		_write_data
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text10
  3021  000C36                     __ptext10:
  3022                           	callstack 0
  3023  000C36                     _forward:
  3024                           	callstack 25
  3025                           
  3026                           ;lm629.c: 421:     chip_select(0);
  3027                           
  3028                           ;incstack = 0
  3029  000C36  0E00               	movlw	0
  3030  000C38  EC67  F009         	call	_chip_select
  3031                           
  3032                           ;lm629.c: 422:     check_busy();
  3033  000C3C  EC3B  F00A         	call	_check_busy	;wreg free
  3034                           
  3035                           ;lm629.c: 423:     motor_off();
  3036  000C40  EC11  F00A         	call	_motor_off	;wreg free
  3037                           
  3038                           ;lm629.c: 424:     write_command(0x1F);
  3039  000C44  0E1F               	movlw	31
  3040  000C46  EC8D  F009         	call	_write_command
  3041                           
  3042                           ;lm629.c: 425:     check_busy();
  3043  000C4A  EC3B  F00A         	call	_check_busy	;wreg free
  3044                           
  3045                           ;lm629.c: 426:     write_data(0x18,0x28);
  3046  000C4E  0E28               	movlw	40
  3047  000C50  6E06               	movwf	write_data@byte2^0,c
  3048  000C52  0E18               	movlw	24
  3049  000C54  EC39  F009         	call	_write_data
  3050                           
  3051                           ;lm629.c: 427:     check_busy();
  3052  000C58  EC3B  F00A         	call	_check_busy	;wreg free
  3053                           
  3054                           ;lm629.c: 429:     write_data(0x00,0x00);
  3055  000C5C  0E00               	movlw	0
  3056  000C5E  6E06               	movwf	write_data@byte2^0,c
  3057  000C60  0E00               	movlw	0
  3058  000C62  EC39  F009         	call	_write_data
  3059                           
  3060                           ;lm629.c: 430:     check_busy();
  3061  000C66  EC3B  F00A         	call	_check_busy	;wreg free
  3062                           
  3063                           ;lm629.c: 431:     write_data(0x00,0x48);
  3064  000C6A  0E48               	movlw	72
  3065  000C6C  6E06               	movwf	write_data@byte2^0,c
  3066  000C6E  0E00               	movlw	0
  3067  000C70  EC39  F009         	call	_write_data
  3068                           
  3069                           ;lm629.c: 432:     check_busy();
  3070  000C74  EC3B  F00A         	call	_check_busy	;wreg free
  3071                           
  3072                           ;lm629.c: 434:     write_data(0x00,0x01);
  3073  000C78  0E01               	movlw	1
  3074  000C7A  6E06               	movwf	write_data@byte2^0,c
  3075  000C7C  0E00               	movlw	0
  3076  000C7E  EC39  F009         	call	_write_data
  3077                           
  3078                           ;lm629.c: 435:     check_busy();
  3079  000C82  EC3B  F00A         	call	_check_busy	;wreg free
  3080                           
  3081                           ;lm629.c: 436:     write_data(0xFA,0xD0);
  3082  000C86  0ED0               	movlw	208
  3083  000C88  6E06               	movwf	write_data@byte2^0,c
  3084  000C8A  0EFA               	movlw	250
  3085  000C8C  EC39  F009         	call	_write_data
  3086                           
  3087                           ;lm629.c: 437:     check_busy();
  3088  000C90  EC3B  F00A         	call	_check_busy	;wreg free
  3089                           
  3090                           ;lm629.c: 440:     chip_select(1);
  3091  000C94  0E01               	movlw	1
  3092  000C96  EC67  F009         	call	_chip_select
  3093                           
  3094                           ;lm629.c: 441:     check_busy();
  3095  000C9A  EC3B  F00A         	call	_check_busy	;wreg free
  3096                           
  3097                           ;lm629.c: 442:     motor_off();
  3098  000C9E  EC11  F00A         	call	_motor_off	;wreg free
  3099                           
  3100                           ;lm629.c: 443:     write_command(0x1F);
  3101  000CA2  0E1F               	movlw	31
  3102  000CA4  EC8D  F009         	call	_write_command
  3103                           
  3104                           ;lm629.c: 444:     check_busy();
  3105  000CA8  EC3B  F00A         	call	_check_busy	;wreg free
  3106                           
  3107                           ;lm629.c: 445:     write_data(0x08,0x28);
  3108  000CAC  0E28               	movlw	40
  3109  000CAE  6E06               	movwf	write_data@byte2^0,c
  3110  000CB0  0E08               	movlw	8
  3111  000CB2  EC39  F009         	call	_write_data
  3112                           
  3113                           ;lm629.c: 446:     check_busy();
  3114  000CB6  EC3B  F00A         	call	_check_busy	;wreg free
  3115                           
  3116                           ;lm629.c: 448:     write_data(0x00,0x00);
  3117  000CBA  0E00               	movlw	0
  3118  000CBC  6E06               	movwf	write_data@byte2^0,c
  3119  000CBE  0E00               	movlw	0
  3120  000CC0  EC39  F009         	call	_write_data
  3121                           
  3122                           ;lm629.c: 449:     check_busy();
  3123  000CC4  EC3B  F00A         	call	_check_busy	;wreg free
  3124                           
  3125                           ;lm629.c: 450:     write_data(0x00,0x48);
  3126  000CC8  0E48               	movlw	72
  3127  000CCA  6E06               	movwf	write_data@byte2^0,c
  3128  000CCC  0E00               	movlw	0
  3129  000CCE  EC39  F009         	call	_write_data
  3130                           
  3131                           ;lm629.c: 451:     check_busy();
  3132  000CD2  EC3B  F00A         	call	_check_busy	;wreg free
  3133                           
  3134                           ;lm629.c: 453:     write_data(0x00,0x01);
  3135  000CD6  0E01               	movlw	1
  3136  000CD8  6E06               	movwf	write_data@byte2^0,c
  3137  000CDA  0E00               	movlw	0
  3138  000CDC  EC39  F009         	call	_write_data
  3139                           
  3140                           ;lm629.c: 454:     check_busy();
  3141  000CE0  EC3B  F00A         	call	_check_busy	;wreg free
  3142                           
  3143                           ;lm629.c: 455:     write_data(0xFA,0xD0);
  3144  000CE4  0ED0               	movlw	208
  3145  000CE6  6E06               	movwf	write_data@byte2^0,c
  3146  000CE8  0EFA               	movlw	250
  3147  000CEA  EC39  F009         	call	_write_data
  3148                           
  3149                           ;lm629.c: 456:     check_busy();
  3150  000CEE  EC3B  F00A         	call	_check_busy	;wreg free
  3151                           
  3152                           ;lm629.c: 459:     chip_select(2);
  3153  000CF2  0E02               	movlw	2
  3154  000CF4  EC67  F009         	call	_chip_select
  3155                           
  3156                           ;lm629.c: 460:     check_busy();
  3157  000CF8  EC3B  F00A         	call	_check_busy	;wreg free
  3158                           
  3159                           ;lm629.c: 461:     motor_off();
  3160  000CFC  EC11  F00A         	call	_motor_off	;wreg free
  3161                           
  3162                           ;lm629.c: 462:     write_command(0x1F);
  3163  000D00  0E1F               	movlw	31
  3164  000D02  EC8D  F009         	call	_write_command
  3165                           
  3166                           ;lm629.c: 463:     check_busy();
  3167  000D06  EC3B  F00A         	call	_check_busy	;wreg free
  3168                           
  3169                           ;lm629.c: 464:     write_data(0x08,0x28);
  3170  000D0A  0E28               	movlw	40
  3171  000D0C  6E06               	movwf	write_data@byte2^0,c
  3172  000D0E  0E08               	movlw	8
  3173  000D10  EC39  F009         	call	_write_data
  3174                           
  3175                           ;lm629.c: 465:     check_busy();
  3176  000D14  EC3B  F00A         	call	_check_busy	;wreg free
  3177                           
  3178                           ;lm629.c: 467:     write_data(0x00,0x00);
  3179  000D18  0E00               	movlw	0
  3180  000D1A  6E06               	movwf	write_data@byte2^0,c
  3181  000D1C  0E00               	movlw	0
  3182  000D1E  EC39  F009         	call	_write_data
  3183                           
  3184                           ;lm629.c: 468:     check_busy();
  3185  000D22  EC3B  F00A         	call	_check_busy	;wreg free
  3186                           
  3187                           ;lm629.c: 469:     write_data(0x00,0x48);
  3188  000D26  0E48               	movlw	72
  3189  000D28  6E06               	movwf	write_data@byte2^0,c
  3190  000D2A  0E00               	movlw	0
  3191  000D2C  EC39  F009         	call	_write_data
  3192                           
  3193                           ;lm629.c: 470:     check_busy();
  3194  000D30  EC3B  F00A         	call	_check_busy	;wreg free
  3195                           
  3196                           ;lm629.c: 472:     write_data(0x00,0x01);
  3197  000D34  0E01               	movlw	1
  3198  000D36  6E06               	movwf	write_data@byte2^0,c
  3199  000D38  0E00               	movlw	0
  3200  000D3A  EC39  F009         	call	_write_data
  3201                           
  3202                           ;lm629.c: 473:     check_busy();
  3203  000D3E  EC3B  F00A         	call	_check_busy	;wreg free
  3204                           
  3205                           ;lm629.c: 474:     write_data(0xFA,0xD0);
  3206  000D42  0ED0               	movlw	208
  3207  000D44  6E06               	movwf	write_data@byte2^0,c
  3208  000D46  0EFA               	movlw	250
  3209  000D48  EC39  F009         	call	_write_data
  3210                           
  3211                           ;lm629.c: 475:     check_busy();
  3212  000D4C  EC3B  F00A         	call	_check_busy	;wreg free
  3213                           
  3214                           ;lm629.c: 478:     chip_select(3);
  3215  000D50  0E03               	movlw	3
  3216  000D52  EC67  F009         	call	_chip_select
  3217                           
  3218                           ;lm629.c: 479:     check_busy();
  3219  000D56  EC3B  F00A         	call	_check_busy	;wreg free
  3220                           
  3221                           ;lm629.c: 480:     motor_off();
  3222  000D5A  EC11  F00A         	call	_motor_off	;wreg free
  3223                           
  3224                           ;lm629.c: 481:     write_command(0x1F);
  3225  000D5E  0E1F               	movlw	31
  3226  000D60  EC8D  F009         	call	_write_command
  3227                           
  3228                           ;lm629.c: 482:     check_busy();
  3229  000D64  EC3B  F00A         	call	_check_busy	;wreg free
  3230                           
  3231                           ;lm629.c: 483:     write_data(0x18,0x28);
  3232  000D68  0E28               	movlw	40
  3233  000D6A  6E06               	movwf	write_data@byte2^0,c
  3234  000D6C  0E18               	movlw	24
  3235  000D6E  EC39  F009         	call	_write_data
  3236                           
  3237                           ;lm629.c: 484:     check_busy();
  3238  000D72  EC3B  F00A         	call	_check_busy	;wreg free
  3239                           
  3240                           ;lm629.c: 486:     write_data(0x00,0x00);
  3241  000D76  0E00               	movlw	0
  3242  000D78  6E06               	movwf	write_data@byte2^0,c
  3243  000D7A  0E00               	movlw	0
  3244  000D7C  EC39  F009         	call	_write_data
  3245                           
  3246                           ;lm629.c: 487:     check_busy();
  3247  000D80  EC3B  F00A         	call	_check_busy	;wreg free
  3248                           
  3249                           ;lm629.c: 488:     write_data(0x00,0x48);
  3250  000D84  0E48               	movlw	72
  3251  000D86  6E06               	movwf	write_data@byte2^0,c
  3252  000D88  0E00               	movlw	0
  3253  000D8A  EC39  F009         	call	_write_data
  3254                           
  3255                           ;lm629.c: 489:     check_busy();
  3256  000D8E  EC3B  F00A         	call	_check_busy	;wreg free
  3257                           
  3258                           ;lm629.c: 491:     write_data(0x00,0x01);
  3259  000D92  0E01               	movlw	1
  3260  000D94  6E06               	movwf	write_data@byte2^0,c
  3261  000D96  0E00               	movlw	0
  3262  000D98  EC39  F009         	call	_write_data
  3263                           
  3264                           ;lm629.c: 492:     check_busy();
  3265  000D9C  EC3B  F00A         	call	_check_busy	;wreg free
  3266                           
  3267                           ;lm629.c: 493:     write_data(0xFA,0xD0);
  3268  000DA0  0ED0               	movlw	208
  3269  000DA2  6E06               	movwf	write_data@byte2^0,c
  3270  000DA4  0EFA               	movlw	250
  3271  000DA6  EC39  F009         	call	_write_data
  3272                           
  3273                           ;lm629.c: 494:     check_busy();
  3274  000DAA  EC3B  F00A         	call	_check_busy	;wreg free
  3275                           
  3276                           ;lm629.c: 497:     chip_select(0);
  3277  000DAE  0E00               	movlw	0
  3278  000DB0  EC67  F009         	call	_chip_select
  3279                           
  3280                           ;lm629.c: 498:     write_command(0x01);
  3281  000DB4  0E01               	movlw	1
  3282  000DB6  EC8D  F009         	call	_write_command
  3283                           
  3284                           ;lm629.c: 499:     check_busy();
  3285  000DBA  EC3B  F00A         	call	_check_busy	;wreg free
  3286                           
  3287                           ;lm629.c: 501:     chip_select(2);
  3288  000DBE  0E02               	movlw	2
  3289  000DC0  EC67  F009         	call	_chip_select
  3290                           
  3291                           ;lm629.c: 502:     write_command(0x01);
  3292  000DC4  0E01               	movlw	1
  3293  000DC6  EC8D  F009         	call	_write_command
  3294                           
  3295                           ;lm629.c: 503:     check_busy();
  3296  000DCA  EC3B  F00A         	call	_check_busy	;wreg free
  3297                           
  3298                           ;lm629.c: 505:     chip_select(1);
  3299  000DCE  0E01               	movlw	1
  3300  000DD0  EC67  F009         	call	_chip_select
  3301                           
  3302                           ;lm629.c: 506:     write_command(0x01);
  3303  000DD4  0E01               	movlw	1
  3304  000DD6  EC8D  F009         	call	_write_command
  3305                           
  3306                           ;lm629.c: 507:     check_busy();
  3307  000DDA  EC3B  F00A         	call	_check_busy	;wreg free
  3308                           
  3309                           ;lm629.c: 509:     chip_select(3);
  3310  000DDE  0E03               	movlw	3
  3311  000DE0  EC67  F009         	call	_chip_select
  3312                           
  3313                           ;lm629.c: 510:     write_command(0x01);
  3314  000DE4  0E01               	movlw	1
  3315  000DE6  EC8D  F009         	call	_write_command
  3316                           
  3317                           ;lm629.c: 511:     check_busy();
  3318  000DEA  EC3B  F00A         	call	_check_busy	;wreg free
  3319  000DEE  0012               	return		;funcret
  3320  000DF0                     __end_of_forward:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _all_off *****************
  3324 ;; Defined at:
  3325 ;;		line 342 in file "lm629.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;		None
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  1    wreg      void 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0, cstack
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/F
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;Total ram usage:        0 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 5
  3346 ;; This function calls:
  3347 ;;		_chip_select
  3348 ;;		_motor_off
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text11
  3355  001380                     __ptext11:
  3356                           	callstack 0
  3357  001380                     _all_off:
  3358                           	callstack 25
  3359                           
  3360                           ;lm629.c: 344:     chip_select(0);
  3361                           
  3362                           ;incstack = 0
  3363  001380  0E00               	movlw	0
  3364  001382  EC67  F009         	call	_chip_select
  3365                           
  3366                           ;lm629.c: 345:     motor_off();
  3367  001386  EC11  F00A         	call	_motor_off	;wreg free
  3368                           
  3369                           ;lm629.c: 346:     chip_select(1);
  3370  00138A  0E01               	movlw	1
  3371  00138C  EC67  F009         	call	_chip_select
  3372                           
  3373                           ;lm629.c: 347:     motor_off();
  3374  001390  EC11  F00A         	call	_motor_off	;wreg free
  3375                           
  3376                           ;lm629.c: 348:     chip_select(2);
  3377  001394  0E02               	movlw	2
  3378  001396  EC67  F009         	call	_chip_select
  3379                           
  3380                           ;lm629.c: 349:     motor_off();
  3381  00139A  EC11  F00A         	call	_motor_off	;wreg free
  3382                           
  3383                           ;lm629.c: 350:     chip_select(3);
  3384  00139E  0E03               	movlw	3
  3385  0013A0  EC67  F009         	call	_chip_select
  3386                           
  3387                           ;lm629.c: 351:     motor_off();
  3388  0013A4  EC11  F00A         	call	_motor_off	;wreg free
  3389  0013A8  0012               	return		;funcret
  3390  0013AA                     __end_of_all_off:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _motor_off *****************
  3394 ;; Defined at:
  3395 ;;		line 310 in file "lm629.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/F
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 4
  3416 ;; This function calls:
  3417 ;;		_check_busy
  3418 ;;		_write_command
  3419 ;;		_write_data
  3420 ;; This function is called by:
  3421 ;;		_all_off
  3422 ;;		_forward
  3423 ;;		_reverse
  3424 ;;		_right
  3425 ;;		_left
  3426 ;;		_forward_left
  3427 ;;		_forward_right
  3428 ;;		_reverse_left
  3429 ;;		_reverse_right
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text12
  3434  001422                     __ptext12:
  3435                           	callstack 0
  3436  001422                     _motor_off:
  3437                           	callstack 25
  3438                           
  3439                           ;lm629.c: 312:     write_command(0x1F);
  3440                           
  3441                           ;incstack = 0
  3442  001422  0E1F               	movlw	31
  3443  001424  EC8D  F009         	call	_write_command
  3444                           
  3445                           ;lm629.c: 313:     check_busy();
  3446  001428  EC3B  F00A         	call	_check_busy	;wreg free
  3447                           
  3448                           ;lm629.c: 314:     write_data(0x01,0x00);
  3449  00142C  0E00               	movlw	0
  3450  00142E  6E06               	movwf	write_data@byte2^0,c
  3451  001430  0E01               	movlw	1
  3452  001432  EC39  F009         	call	_write_data
  3453                           
  3454                           ;lm629.c: 315:     check_busy();
  3455  001436  EC3B  F00A         	call	_check_busy	;wreg free
  3456                           
  3457                           ;lm629.c: 316:     write_command(0x01);
  3458  00143A  0E01               	movlw	1
  3459  00143C  EC8D  F009         	call	_write_command
  3460                           
  3461                           ;lm629.c: 317:     check_busy();
  3462  001440  EC3B  F00A         	call	_check_busy	;wreg free
  3463  001444  0012               	return		;funcret
  3464  001446                     __end_of_motor_off:
  3465                           	callstack 0
  3466                           
  3467 ;; *************** function _all_break *****************
  3468 ;; Defined at:
  3469 ;;		line 330 in file "lm629.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/F
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; Hardware stack levels required when called: 5
  3490 ;; This function calls:
  3491 ;;		_chip_select
  3492 ;;		_motor_break
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text13
  3499  0013AA                     __ptext13:
  3500                           	callstack 0
  3501  0013AA                     _all_break:
  3502                           	callstack 25
  3503                           
  3504                           ;lm629.c: 332:     chip_select(0);
  3505                           
  3506                           ;incstack = 0
  3507  0013AA  0E00               	movlw	0
  3508  0013AC  EC67  F009         	call	_chip_select
  3509                           
  3510                           ;lm629.c: 333:     motor_break();
  3511  0013B0  EC23  F00A         	call	_motor_break	;wreg free
  3512                           
  3513                           ;lm629.c: 334:     chip_select(1);
  3514  0013B4  0E01               	movlw	1
  3515  0013B6  EC67  F009         	call	_chip_select
  3516                           
  3517                           ;lm629.c: 335:     motor_break();
  3518  0013BA  EC23  F00A         	call	_motor_break	;wreg free
  3519                           
  3520                           ;lm629.c: 336:     chip_select(2);
  3521  0013BE  0E02               	movlw	2
  3522  0013C0  EC67  F009         	call	_chip_select
  3523                           
  3524                           ;lm629.c: 337:     motor_break();
  3525  0013C4  EC23  F00A         	call	_motor_break	;wreg free
  3526                           
  3527                           ;lm629.c: 338:     chip_select(3);
  3528  0013C8  0E03               	movlw	3
  3529  0013CA  EC67  F009         	call	_chip_select
  3530                           
  3531                           ;lm629.c: 339:     motor_break();
  3532  0013CE  EC23  F00A         	call	_motor_break	;wreg free
  3533  0013D2  0012               	return		;funcret
  3534  0013D4                     __end_of_all_break:
  3535                           	callstack 0
  3536                           
  3537 ;; *************** function _motor_break *****************
  3538 ;; Defined at:
  3539 ;;		line 320 in file "lm629.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/F
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 4
  3560 ;; This function calls:
  3561 ;;		_check_busy
  3562 ;;		_write_command
  3563 ;;		_write_data
  3564 ;; This function is called by:
  3565 ;;		_all_break
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text14
  3570  001446                     __ptext14:
  3571                           	callstack 0
  3572  001446                     _motor_break:
  3573                           	callstack 25
  3574                           
  3575                           ;lm629.c: 322:     write_command(0x1F);
  3576                           
  3577                           ;incstack = 0
  3578  001446  0E1F               	movlw	31
  3579  001448  EC8D  F009         	call	_write_command
  3580                           
  3581                           ;lm629.c: 323:     check_busy();
  3582  00144C  EC3B  F00A         	call	_check_busy	;wreg free
  3583                           
  3584                           ;lm629.c: 324:     write_data(0x02,0x00);
  3585  001450  0E00               	movlw	0
  3586  001452  6E06               	movwf	write_data@byte2^0,c
  3587  001454  0E02               	movlw	2
  3588  001456  EC39  F009         	call	_write_data
  3589                           
  3590                           ;lm629.c: 325:     check_busy();
  3591  00145A  EC3B  F00A         	call	_check_busy	;wreg free
  3592                           
  3593                           ;lm629.c: 326:     write_command(0x01);
  3594  00145E  0E01               	movlw	1
  3595  001460  EC8D  F009         	call	_write_command
  3596                           
  3597                           ;lm629.c: 327:     check_busy();
  3598  001464  EC3B  F00A         	call	_check_busy	;wreg free
  3599  001468  0012               	return		;funcret
  3600  00146A                     __end_of_motor_break:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function _LM629_init *****************
  3604 ;; Defined at:
  3605 ;;		line 105 in file "lm629.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  x               1    8[COMRAM] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 3F/F
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;Total ram usage:        2 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 5
  3626 ;; This function calls:
  3627 ;;		_check_busy
  3628 ;;		_chip_select
  3629 ;;		_filter_module
  3630 ;;		_read_status
  3631 ;;		_write_command
  3632 ;;		_write_data
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text15
  3639  000F7E                     __ptext15:
  3640                           	callstack 0
  3641  000F7E                     _LM629_init:
  3642                           	callstack 25
  3643                           
  3644                           ; BSR set to: 15
  3645                           ;lm629.c: 109:  TRISB&=0b11000011;
  3646                           
  3647                           ; BSR set to: 15
  3648                           
  3649                           ;incstack = 0
  3650  000F7E  0EC3               	movlw	195
  3651  000F80  1693               	andwf	147,f,c	;volatile
  3652                           
  3653                           ; BSR set to: 15
  3654                           ;lm629.c: 110:  TRISD&=0b11110001;
  3655  000F82  0EF1               	movlw	241
  3656  000F84  1695               	andwf	149,f,c	;volatile
  3657                           
  3658                           ; BSR set to: 15
  3659                           ;lm629.c: 111:  TRISC&=0b11111011;
  3660  000F86  9494               	bcf	148,2,c	;volatile
  3661                           
  3662                           ; BSR set to: 15
  3663                           ;lm629.c: 112:  PORTCbits.RC2=1;
  3664  000F88  8482               	bsf	130,2,c	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;lm629.c: 113:  PORTDbits.RD2=1;
  3668  000F8A  8483               	bsf	131,2,c	;volatile
  3669                           
  3670                           ; BSR set to: 15
  3671                           ;lm629.c: 114:  PORTDbits.RD1=1;
  3672  000F8C  8283               	bsf	131,1,c	;volatile
  3673                           
  3674                           ; BSR set to: 15
  3675                           ;lm629.c: 115:  PORTBbits.RB5=1;
  3676  000F8E  8A81               	bsf	129,5,c	;volatile
  3677                           
  3678                           ; BSR set to: 15
  3679                           ;lm629.c: 116:  chip_select(0);
  3680  000F90  0E00               	movlw	0
  3681  000F92  EC67  F009         	call	_chip_select
  3682  000F96                     l1469:
  3683                           
  3684                           ;lm629.c: 118:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3685  000F96  0E35               	movlw	53
  3686  000F98                     u957:
  3687  000F98  2EE8               	decfsz	wreg,f,c
  3688  000F9A  D7FE               	bra	u957
  3689  000F9C  F000               	nop	
  3690                           
  3691                           ;lm629.c: 119:  PORTBbits.RB5=0;
  3692  000F9E  9A81               	bcf	129,5,c	;volatile
  3693                           
  3694                           ;lm629.c: 120:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3695  000FA0  0E0A               	movlw	10
  3696  000FA2                     u967:
  3697  000FA2  2EE8               	decfsz	wreg,f,c
  3698  000FA4  D7FE               	bra	u967
  3699  000FA6  D000               	nop2	
  3700                           
  3701                           ;lm629.c: 121:  PORTBbits.RB5=1;
  3702  000FA8  8A81               	bsf	129,5,c	;volatile
  3703                           
  3704                           ;lm629.c: 122:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3705  000FAA  0E2A               	movlw	42
  3706  000FAC  6E08               	movwf	??_LM629_init^0,c
  3707  000FAE  0E8E               	movlw	142
  3708  000FB0                     u977:
  3709  000FB0  2EE8               	decfsz	wreg,f,c
  3710  000FB2  D7FE               	bra	u977
  3711  000FB4  2E08               	decfsz	??_LM629_init^0,f,c
  3712  000FB6  D7FC               	bra	u977
  3713                           
  3714                           ;lm629.c: 123:  x=read_status();
  3715  000FB8  ECA9  F009         	call	_read_status	;wreg free
  3716  000FBC  6E09               	movwf	LM629_init@x^0,c
  3717                           
  3718                           ;lm629.c: 124:  if(!(x==0xC4 || x==0x84))
  3719  000FBE  0EC4               	movlw	196
  3720  000FC0  1809               	xorwf	LM629_init@x^0,w,c
  3721  000FC2  B4D8               	btfsc	status,2,c
  3722  000FC4  D004               	goto	l1489
  3723  000FC6  0E84               	movlw	132
  3724  000FC8  1809               	xorwf	LM629_init@x^0,w,c
  3725  000FCA  A4D8               	btfss	status,2,c
  3726  000FCC  D7E4               	goto	l1469
  3727  000FCE                     l1489:
  3728                           
  3729                           ;lm629.c: 129:   {;lm629.c: 130:    check_busy();
  3730  000FCE  EC3B  F00A         	call	_check_busy	;wreg free
  3731                           
  3732                           ;lm629.c: 131:    write_command(0x1D);
  3733  000FD2  0E1D               	movlw	29
  3734  000FD4  EC8D  F009         	call	_write_command
  3735                           
  3736                           ;lm629.c: 132:          check_busy();
  3737  000FD8  EC3B  F00A         	call	_check_busy	;wreg free
  3738                           
  3739                           ;lm629.c: 133:    write_data(0x00,0x00);
  3740  000FDC  0E00               	movlw	0
  3741  000FDE  6E06               	movwf	write_data@byte2^0,c
  3742  000FE0  0E00               	movlw	0
  3743  000FE2  EC39  F009         	call	_write_data
  3744                           
  3745                           ;lm629.c: 134:    check_busy();
  3746  000FE6  EC3B  F00A         	call	_check_busy	;wreg free
  3747                           
  3748                           ;lm629.c: 135:    x=read_status();
  3749  000FEA  ECA9  F009         	call	_read_status	;wreg free
  3750  000FEE  6E09               	movwf	LM629_init@x^0,c
  3751                           
  3752                           ;lm629.c: 136:             if(!(x==0xC0 || x==0x80))
  3753  000FF0  0EC0               	movlw	192
  3754  000FF2  1809               	xorwf	LM629_init@x^0,w,c
  3755  000FF4  B4D8               	btfsc	status,2,c
  3756  000FF6  D004               	goto	l1497
  3757  000FF8  0E80               	movlw	128
  3758  000FFA  1809               	xorwf	LM629_init@x^0,w,c
  3759  000FFC  A4D8               	btfss	status,2,c
  3760  000FFE  D7CB               	goto	l1469
  3761  001000                     l1497:
  3762                           
  3763                           ;lm629.c: 142:  chip_select(1);
  3764  001000  0E01               	movlw	1
  3765  001002  EC67  F009         	call	_chip_select
  3766  001006                     l1499:
  3767                           
  3768                           ;lm629.c: 144:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3769  001006  0E35               	movlw	53
  3770  001008                     u987:
  3771  001008  2EE8               	decfsz	wreg,f,c
  3772  00100A  D7FE               	bra	u987
  3773  00100C  F000               	nop	
  3774                           
  3775                           ;lm629.c: 145:  PORTBbits.RB5=0;
  3776  00100E  9A81               	bcf	129,5,c	;volatile
  3777                           
  3778                           ;lm629.c: 146:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3779  001010  0E0A               	movlw	10
  3780  001012                     u997:
  3781  001012  2EE8               	decfsz	wreg,f,c
  3782  001014  D7FE               	bra	u997
  3783  001016  D000               	nop2	
  3784                           
  3785                           ;lm629.c: 147:  PORTBbits.RB5=1;
  3786  001018  8A81               	bsf	129,5,c	;volatile
  3787                           
  3788                           ;lm629.c: 148:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3789  00101A  0E2A               	movlw	42
  3790  00101C  6E08               	movwf	??_LM629_init^0,c
  3791  00101E  0E8E               	movlw	142
  3792  001020                     u1007:
  3793  001020  2EE8               	decfsz	wreg,f,c
  3794  001022  D7FE               	bra	u1007
  3795  001024  2E08               	decfsz	??_LM629_init^0,f,c
  3796  001026  D7FC               	bra	u1007
  3797                           
  3798                           ;lm629.c: 149:  x=read_status();
  3799  001028  ECA9  F009         	call	_read_status	;wreg free
  3800  00102C  6E09               	movwf	LM629_init@x^0,c
  3801                           
  3802                           ;lm629.c: 150:  if(!(x==0xC4 || x==0x84))
  3803  00102E  0EC4               	movlw	196
  3804  001030  1809               	xorwf	LM629_init@x^0,w,c
  3805  001032  B4D8               	btfsc	status,2,c
  3806  001034  D004               	goto	l1519
  3807  001036  0E84               	movlw	132
  3808  001038  1809               	xorwf	LM629_init@x^0,w,c
  3809  00103A  A4D8               	btfss	status,2,c
  3810  00103C  D7E4               	goto	l1499
  3811  00103E                     l1519:
  3812                           
  3813                           ;lm629.c: 155:   {;lm629.c: 156:    check_busy();
  3814  00103E  EC3B  F00A         	call	_check_busy	;wreg free
  3815                           
  3816                           ;lm629.c: 157:    write_command(0x1D);
  3817  001042  0E1D               	movlw	29
  3818  001044  EC8D  F009         	call	_write_command
  3819                           
  3820                           ;lm629.c: 158:          check_busy();
  3821  001048  EC3B  F00A         	call	_check_busy	;wreg free
  3822                           
  3823                           ;lm629.c: 159:    write_data(0x00,0x00);
  3824  00104C  0E00               	movlw	0
  3825  00104E  6E06               	movwf	write_data@byte2^0,c
  3826  001050  0E00               	movlw	0
  3827  001052  EC39  F009         	call	_write_data
  3828                           
  3829                           ;lm629.c: 160:    check_busy();
  3830  001056  EC3B  F00A         	call	_check_busy	;wreg free
  3831                           
  3832                           ;lm629.c: 161:    x=read_status();
  3833  00105A  ECA9  F009         	call	_read_status	;wreg free
  3834  00105E  6E09               	movwf	LM629_init@x^0,c
  3835                           
  3836                           ;lm629.c: 162:             if(!(x==0xC0 || x==0x80))
  3837  001060  0EC0               	movlw	192
  3838  001062  1809               	xorwf	LM629_init@x^0,w,c
  3839  001064  B4D8               	btfsc	status,2,c
  3840  001066  D004               	goto	l1527
  3841  001068  0E80               	movlw	128
  3842  00106A  1809               	xorwf	LM629_init@x^0,w,c
  3843  00106C  A4D8               	btfss	status,2,c
  3844  00106E  D7CB               	goto	l1499
  3845  001070                     l1527:
  3846                           
  3847                           ;lm629.c: 168:  chip_select(3);
  3848  001070  0E03               	movlw	3
  3849  001072  EC67  F009         	call	_chip_select
  3850  001076                     l1529:
  3851                           
  3852                           ;lm629.c: 170:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3853  001076  0E35               	movlw	53
  3854  001078                     u1017:
  3855  001078  2EE8               	decfsz	wreg,f,c
  3856  00107A  D7FE               	bra	u1017
  3857  00107C  F000               	nop	
  3858                           
  3859                           ;lm629.c: 171:  PORTBbits.RB5=0;
  3860  00107E  9A81               	bcf	129,5,c	;volatile
  3861                           
  3862                           ;lm629.c: 172:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3863  001080  0E0A               	movlw	10
  3864  001082                     u1027:
  3865  001082  2EE8               	decfsz	wreg,f,c
  3866  001084  D7FE               	bra	u1027
  3867  001086  D000               	nop2	
  3868                           
  3869                           ;lm629.c: 173:  PORTBbits.RB5=1;
  3870  001088  8A81               	bsf	129,5,c	;volatile
  3871                           
  3872                           ;lm629.c: 174:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3873  00108A  0E2A               	movlw	42
  3874  00108C  6E08               	movwf	??_LM629_init^0,c
  3875  00108E  0E8E               	movlw	142
  3876  001090                     u1037:
  3877  001090  2EE8               	decfsz	wreg,f,c
  3878  001092  D7FE               	bra	u1037
  3879  001094  2E08               	decfsz	??_LM629_init^0,f,c
  3880  001096  D7FC               	bra	u1037
  3881                           
  3882                           ;lm629.c: 175:  x=read_status();
  3883  001098  ECA9  F009         	call	_read_status	;wreg free
  3884  00109C  6E09               	movwf	LM629_init@x^0,c
  3885                           
  3886                           ;lm629.c: 176:  if(!(x==0xC4 || x==0x84))
  3887  00109E  0EC4               	movlw	196
  3888  0010A0  1809               	xorwf	LM629_init@x^0,w,c
  3889  0010A2  B4D8               	btfsc	status,2,c
  3890  0010A4  D004               	goto	l1549
  3891  0010A6  0E84               	movlw	132
  3892  0010A8  1809               	xorwf	LM629_init@x^0,w,c
  3893  0010AA  A4D8               	btfss	status,2,c
  3894  0010AC  D7E4               	goto	l1529
  3895  0010AE                     l1549:
  3896                           
  3897                           ;lm629.c: 181:   {;lm629.c: 182:    check_busy();
  3898  0010AE  EC3B  F00A         	call	_check_busy	;wreg free
  3899                           
  3900                           ;lm629.c: 183:    write_command(0x1D);
  3901  0010B2  0E1D               	movlw	29
  3902  0010B4  EC8D  F009         	call	_write_command
  3903                           
  3904                           ;lm629.c: 184:          check_busy();
  3905  0010B8  EC3B  F00A         	call	_check_busy	;wreg free
  3906                           
  3907                           ;lm629.c: 185:    write_data(0x00,0x00);
  3908  0010BC  0E00               	movlw	0
  3909  0010BE  6E06               	movwf	write_data@byte2^0,c
  3910  0010C0  0E00               	movlw	0
  3911  0010C2  EC39  F009         	call	_write_data
  3912                           
  3913                           ;lm629.c: 186:    check_busy();
  3914  0010C6  EC3B  F00A         	call	_check_busy	;wreg free
  3915                           
  3916                           ;lm629.c: 187:    x=read_status();
  3917  0010CA  ECA9  F009         	call	_read_status	;wreg free
  3918  0010CE  6E09               	movwf	LM629_init@x^0,c
  3919                           
  3920                           ;lm629.c: 188:             if(!(x==0xC0 || x==0x80))
  3921  0010D0  0EC0               	movlw	192
  3922  0010D2  1809               	xorwf	LM629_init@x^0,w,c
  3923  0010D4  B4D8               	btfsc	status,2,c
  3924  0010D6  D004               	goto	l1557
  3925  0010D8  0E80               	movlw	128
  3926  0010DA  1809               	xorwf	LM629_init@x^0,w,c
  3927  0010DC  A4D8               	btfss	status,2,c
  3928  0010DE  D7CB               	goto	l1529
  3929  0010E0                     l1557:
  3930                           
  3931                           ;lm629.c: 193: chip_select(0);
  3932  0010E0  0E00               	movlw	0
  3933  0010E2  EC67  F009         	call	_chip_select
  3934                           
  3935                           ;lm629.c: 194: filter_module();
  3936  0010E6  EC0B  F009         	call	_filter_module	;wreg free
  3937                           
  3938                           ;lm629.c: 195: chip_select(1);
  3939  0010EA  0E01               	movlw	1
  3940  0010EC  EC67  F009         	call	_chip_select
  3941                           
  3942                           ;lm629.c: 196: filter_module();
  3943  0010F0  EC0B  F009         	call	_filter_module	;wreg free
  3944                           
  3945                           ;lm629.c: 197: chip_select(2);
  3946  0010F4  0E02               	movlw	2
  3947  0010F6  EC67  F009         	call	_chip_select
  3948                           
  3949                           ;lm629.c: 198: filter_module();
  3950  0010FA  EC0B  F009         	call	_filter_module	;wreg free
  3951                           
  3952                           ;lm629.c: 199: chip_select(3);
  3953  0010FE  0E03               	movlw	3
  3954  001100  EC67  F009         	call	_chip_select
  3955                           
  3956                           ;lm629.c: 200: filter_module();
  3957  001104  EC0B  F009         	call	_filter_module	;wreg free
  3958  001108  0012               	return		;funcret
  3959  00110A                     __end_of_LM629_init:
  3960                           	callstack 0
  3961                           
  3962 ;; *************** function _filter_module *****************
  3963 ;; Defined at:
  3964 ;;		line 354 in file "lm629.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;		None
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/F
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;Total ram usage:        0 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; Hardware stack levels required when called: 4
  3985 ;; This function calls:
  3986 ;;		_check_busy
  3987 ;;		_write_command
  3988 ;;		_write_data
  3989 ;; This function is called by:
  3990 ;;		_LM629_init
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text16
  3995  001216                     __ptext16:
  3996                           	callstack 0
  3997  001216                     _filter_module:
  3998                           	callstack 25
  3999                           
  4000                           ;lm629.c: 356:     write_command(0x1E);
  4001                           
  4002                           ;incstack = 0
  4003  001216  0E1E               	movlw	30
  4004  001218  EC8D  F009         	call	_write_command
  4005                           
  4006                           ;lm629.c: 357:     check_busy();
  4007  00121C  EC3B  F00A         	call	_check_busy	;wreg free
  4008                           
  4009                           ;lm629.c: 358:     write_data(0x00,0x0F);
  4010  001220  0E0F               	movlw	15
  4011  001222  6E06               	movwf	write_data@byte2^0,c
  4012  001224  0E00               	movlw	0
  4013  001226  EC39  F009         	call	_write_data
  4014                           
  4015                           ;lm629.c: 359:     check_busy();
  4016  00122A  EC3B  F00A         	call	_check_busy	;wreg free
  4017                           
  4018                           ;lm629.c: 360:     write_data(0x01,0x0F);
  4019  00122E  0E0F               	movlw	15
  4020  001230  6E06               	movwf	write_data@byte2^0,c
  4021  001232  0E01               	movlw	1
  4022  001234  EC39  F009         	call	_write_data
  4023                           
  4024                           ;lm629.c: 361:     check_busy();
  4025  001238  EC3B  F00A         	call	_check_busy	;wreg free
  4026                           
  4027                           ;lm629.c: 362:     write_data(0x00,0x04);
  4028  00123C  0E04               	movlw	4
  4029  00123E  6E06               	movwf	write_data@byte2^0,c
  4030  001240  0E00               	movlw	0
  4031  001242  EC39  F009         	call	_write_data
  4032                           
  4033                           ;lm629.c: 363:     check_busy();
  4034  001246  EC3B  F00A         	call	_check_busy	;wreg free
  4035                           
  4036                           ;lm629.c: 364:     write_data(0x7F,0xFF);
  4037  00124A  0EFF               	movlw	255
  4038  00124C  6E06               	movwf	write_data@byte2^0,c
  4039  00124E  0E7F               	movlw	127
  4040  001250  EC39  F009         	call	_write_data
  4041                           
  4042                           ;lm629.c: 365:     check_busy();
  4043  001254  EC3B  F00A         	call	_check_busy	;wreg free
  4044                           
  4045                           ;lm629.c: 366:     write_data(0x00,0xFF);
  4046  001258  0EFF               	movlw	255
  4047  00125A  6E06               	movwf	write_data@byte2^0,c
  4048  00125C  0E00               	movlw	0
  4049  00125E  EC39  F009         	call	_write_data
  4050                           
  4051                           ;lm629.c: 367:     check_busy();
  4052  001262  EC3B  F00A         	call	_check_busy	;wreg free
  4053                           
  4054                           ;lm629.c: 368:     write_command(0x04);
  4055  001266  0E04               	movlw	4
  4056  001268  EC8D  F009         	call	_write_command
  4057                           
  4058                           ;lm629.c: 369:     check_busy();
  4059  00126C  EC3B  F00A         	call	_check_busy	;wreg free
  4060  001270  0012               	return		;funcret
  4061  001272                     __end_of_filter_module:
  4062                           	callstack 0
  4063                           
  4064 ;; *************** function _write_data *****************
  4065 ;; Defined at:
  4066 ;;		line 67 in file "lm629.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  byte1           1    wreg     unsigned char 
  4069 ;;  byte2           1    5[COMRAM] unsigned char 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  byte1           1    6[COMRAM] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  1    wreg      void 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0, cstack
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/F
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4081 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;Total ram usage:        2 bytes
  4086 ;; Hardware stack levels used: 1
  4087 ;; Hardware stack levels required when called: 2
  4088 ;; This function calls:
  4089 ;;		_DATABUS
  4090 ;;		_DATABUS_DIR
  4091 ;; This function is called by:
  4092 ;;		_LM629_init
  4093 ;;		_motor_off
  4094 ;;		_motor_break
  4095 ;;		_filter_module
  4096 ;;		_forward
  4097 ;;		_reverse
  4098 ;;		_right
  4099 ;;		_left
  4100 ;;		_forward_left
  4101 ;;		_forward_right
  4102 ;;		_reverse_left
  4103 ;;		_reverse_right
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text17
  4108  001272                     __ptext17:
  4109                           	callstack 0
  4110  001272                     _write_data:
  4111                           	callstack 27
  4112                           
  4113                           ;incstack = 0
  4114                           ;write_data@byte1 stored from wreg
  4115  001272  6E07               	movwf	write_data@byte1^0,c
  4116                           
  4117                           ;lm629.c: 67: void write_data( unsigned char byte1, unsigned char byte2);lm629.c: 68: {;
      +                          lm629.c: 69:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4118  001274  0E05               	movlw	5
  4119  001276                     u1047:
  4120  001276  2EE8               	decfsz	wreg,f,c
  4121  001278  D7FE               	bra	u1047
  4122  00127A  F000               	nop	
  4123                           
  4124                           ;lm629.c: 70:  DATABUS_DIR(0);
  4125  00127C  0E00               	movlw	0
  4126  00127E  ECEA  F009         	call	_DATABUS_DIR
  4127                           
  4128                           ;lm629.c: 71:  PORTCbits.RC2=1;
  4129  001282  8482               	bsf	130,2,c	;volatile
  4130                           
  4131                           ;lm629.c: 72:  _delay(3);
  4132  001284  D000               	nop2		;2 cycle nop
  4133  001286  F000               	nop	
  4134                           
  4135                           ;lm629.c: 73:  PORTDbits.RD1=0;
  4136  001288  9283               	bcf	131,1,c	;volatile
  4137                           
  4138                           ;lm629.c: 74:  _delay(8);
  4139  00128A  D000               	nop2		;2 cycle nop
  4140  00128C  D000               	nop2		;2 cycle nop
  4141  00128E  D000               	nop2		;2 cycle nop
  4142  001290  D000               	nop2		;2 cycle nop
  4143                           
  4144                           ;lm629.c: 75:  DATABUS(0,byte1);
  4145  001292  C007  F001         	movff	write_data@byte1,DATABUS@byte0
  4146  001296  0E00               	movlw	0
  4147  001298  ECF8  F006         	call	_DATABUS
  4148                           
  4149                           ;lm629.c: 76:  _delay(5);
  4150  00129C  D000               	nop2		;2 cycle nop
  4151  00129E  D000               	nop2		;2 cycle nop
  4152  0012A0  F000               	nop	
  4153                           
  4154                           ;lm629.c: 77:  PORTDbits.RD1=1;
  4155  0012A2  8283               	bsf	131,1,c	;volatile
  4156                           
  4157                           ;lm629.c: 78:  _delay(10);
  4158  0012A4  0E03               	movlw	3
  4159  0012A6                     u1057:
  4160  0012A6  2EE8               	decfsz	wreg,f,c
  4161  0012A8  D7FE               	bra	u1057
  4162  0012AA  F000               	nop	
  4163                           
  4164                           ;lm629.c: 79:  PORTDbits.RD1=0;
  4165  0012AC  9283               	bcf	131,1,c	;volatile
  4166                           
  4167                           ;lm629.c: 80:  _delay(5);
  4168  0012AE  D000               	nop2		;2 cycle nop
  4169  0012B0  D000               	nop2		;2 cycle nop
  4170  0012B2  F000               	nop	
  4171                           
  4172                           ;lm629.c: 81:  DATABUS(0,byte2);
  4173  0012B4  C006  F001         	movff	write_data@byte2,DATABUS@byte0
  4174  0012B8  0E00               	movlw	0
  4175  0012BA  ECF8  F006         	call	_DATABUS
  4176                           
  4177                           ;lm629.c: 82:  _delay(5);
  4178  0012BE  D000               	nop2		;2 cycle nop
  4179  0012C0  D000               	nop2		;2 cycle nop
  4180  0012C2  F000               	nop	
  4181                           
  4182                           ;lm629.c: 83:  PORTDbits.RD1=1;
  4183  0012C4  8283               	bsf	131,1,c	;volatile
  4184                           
  4185                           ;lm629.c: 84:  _delay(3);
  4186  0012C6  D000               	nop2		;2 cycle nop
  4187  0012C8  F000               	nop	
  4188                           
  4189                           ;lm629.c: 85:  PORTCbits.RC2=1;
  4190  0012CA  8482               	bsf	130,2,c	;volatile
  4191  0012CC  0012               	return		;funcret
  4192  0012CE                     __end_of_write_data:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _write_command *****************
  4196 ;; Defined at:
  4197 ;;		line 89 in file "lm629.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  command         1    wreg     unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  command         1    5[COMRAM] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg, status,2, status,0, cstack
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/F
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;Total ram usage:        1 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 2
  4218 ;; This function calls:
  4219 ;;		_DATABUS
  4220 ;;		_DATABUS_DIR
  4221 ;; This function is called by:
  4222 ;;		_LM629_init
  4223 ;;		_motor_off
  4224 ;;		_motor_break
  4225 ;;		_filter_module
  4226 ;;		_forward
  4227 ;;		_reverse
  4228 ;;		_right
  4229 ;;		_left
  4230 ;;		_forward_left
  4231 ;;		_forward_right
  4232 ;;		_reverse_left
  4233 ;;		_reverse_right
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text18
  4238  00131A                     __ptext18:
  4239                           	callstack 0
  4240  00131A                     _write_command:
  4241                           	callstack 27
  4242                           
  4243                           ;incstack = 0
  4244                           ;write_command@command stored from wreg
  4245  00131A  6E06               	movwf	write_command@command^0,c
  4246                           
  4247                           ;lm629.c: 89: void write_command(unsigned char command);lm629.c: 90: {;lm629.c: 91:  DAT
      +                          ABUS_DIR(0);
  4248  00131C  0E00               	movlw	0
  4249  00131E  ECEA  F009         	call	_DATABUS_DIR
  4250                           
  4251                           ;lm629.c: 92:  PORTCbits.RC2=0;
  4252  001322  9482               	bcf	130,2,c	;volatile
  4253                           
  4254                           ;lm629.c: 93:  _delay(3);
  4255  001324  D000               	nop2		;2 cycle nop
  4256  001326  F000               	nop	
  4257                           
  4258                           ;lm629.c: 94:  PORTDbits.RD1=0;
  4259  001328  9283               	bcf	131,1,c	;volatile
  4260                           
  4261                           ;lm629.c: 95:  _delay(5);
  4262  00132A  D000               	nop2		;2 cycle nop
  4263  00132C  D000               	nop2		;2 cycle nop
  4264  00132E  F000               	nop	
  4265                           
  4266                           ;lm629.c: 96:  DATABUS(0,command);
  4267  001330  C006  F001         	movff	write_command@command,DATABUS@byte0
  4268  001334  0E00               	movlw	0
  4269  001336  ECF8  F006         	call	_DATABUS
  4270                           
  4271                           ;lm629.c: 97:  _delay(5);
  4272  00133A  D000               	nop2		;2 cycle nop
  4273  00133C  D000               	nop2		;2 cycle nop
  4274  00133E  F000               	nop	
  4275                           
  4276                           ;lm629.c: 98:  PORTDbits.RD1=1;
  4277  001340  8283               	bsf	131,1,c	;volatile
  4278                           
  4279                           ;lm629.c: 99:  _delay(3);
  4280  001342  D000               	nop2		;2 cycle nop
  4281  001344  F000               	nop	
  4282                           
  4283                           ;lm629.c: 100:  PORTCbits.RC2=1;
  4284  001346  8482               	bsf	130,2,c	;volatile
  4285                           
  4286                           ;lm629.c: 101:  _delay(11);
  4287  001348  0E03               	movlw	3
  4288  00134A                     u1067:
  4289  00134A  2EE8               	decfsz	wreg,f,c
  4290  00134C  D7FE               	bra	u1067
  4291  00134E  D000               	nop2	
  4292  001350  0012               	return		;funcret
  4293  001352                     __end_of_write_command:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _check_busy *****************
  4297 ;; Defined at:
  4298 ;;		line 15 in file "lm629.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;  x               1    6[COMRAM] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/F
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;Total ram usage:        1 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 3
  4319 ;; This function calls:
  4320 ;;		_read_status
  4321 ;; This function is called by:
  4322 ;;		_LM629_init
  4323 ;;		_motor_off
  4324 ;;		_motor_break
  4325 ;;		_filter_module
  4326 ;;		_forward
  4327 ;;		_reverse
  4328 ;;		_right
  4329 ;;		_left
  4330 ;;		_forward_left
  4331 ;;		_forward_right
  4332 ;;		_reverse_left
  4333 ;;		_reverse_right
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text19
  4338  001476                     __ptext19:
  4339                           	callstack 0
  4340  001476                     _check_busy:
  4341                           	callstack 25
  4342                           
  4343                           ;lm629.c: 17:  unsigned char x;;lm629.c: 18:  x=read_status();
  4344                           
  4345                           ;incstack = 0
  4346  001476  ECA9  F009         	call	_read_status	;wreg free
  4347  00147A  6E07               	movwf	check_busy@x^0,c
  4348                           
  4349                           ;lm629.c: 19:  while (x & 0x01)
  4350                           
  4351                           ;lm629.c: 19:  while (x & 0x01)
  4352  00147C  A007               	btfss	check_busy@x^0,0,c
  4353  00147E  0012               	return	
  4354  001480  D7FA               	goto	__ptext19
  4355  001482                     __end_of_check_busy:
  4356                           	callstack 0
  4357                           
  4358 ;; *************** function _read_status *****************
  4359 ;; Defined at:
  4360 ;;		line 25 in file "lm629.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;		None
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  status          1    5[COMRAM] unsigned char 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      unsigned char 
  4367 ;; Registers used:
  4368 ;;		wreg, status,2, status,0, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/F
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;Total ram usage:        1 bytes
  4379 ;; Hardware stack levels used: 1
  4380 ;; Hardware stack levels required when called: 2
  4381 ;; This function calls:
  4382 ;;		_DATABUS
  4383 ;;		_DATABUS_DIR
  4384 ;; This function is called by:
  4385 ;;		_check_busy
  4386 ;;		_LM629_init
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text20
  4391  001352                     __ptext20:
  4392                           	callstack 0
  4393  001352                     _read_status:
  4394                           	callstack 25
  4395                           
  4396                           ;lm629.c: 27:  unsigned char status;;lm629.c: 28:  DATABUS_DIR(0xFF);
  4397                           
  4398                           ;incstack = 0
  4399  001352  0EFF               	movlw	255
  4400  001354  ECEA  F009         	call	_DATABUS_DIR
  4401                           
  4402                           ;lm629.c: 29:  PORTCbits.RC2=0;
  4403  001358  9482               	bcf	130,2,c	;volatile
  4404                           
  4405                           ;lm629.c: 30:  _delay(3);
  4406  00135A  D000               	nop2		;2 cycle nop
  4407  00135C  F000               	nop	
  4408                           
  4409                           ;lm629.c: 31:  PORTDbits.RD2=0;
  4410  00135E  9483               	bcf	131,2,c	;volatile
  4411                           
  4412                           ;lm629.c: 32:  _delay(12);
  4413  001360  0E04               	movlw	4
  4414  001362                     u1077:
  4415  001362  2EE8               	decfsz	wreg,f,c
  4416  001364  D7FE               	bra	u1077
  4417                           
  4418                           ;lm629.c: 33:  status=DATABUS(0xFF,0);
  4419  001366  0E00               	movlw	0
  4420  001368  6E01               	movwf	DATABUS@byte0^0,c
  4421  00136A  0EFF               	movlw	255
  4422  00136C  ECF8  F006         	call	_DATABUS
  4423  001370  6E06               	movwf	read_status@status^0,c
  4424                           
  4425                           ;lm629.c: 34:  PORTDbits.RD2=1;
  4426  001372  8483               	bsf	131,2,c	;volatile
  4427                           
  4428                           ;lm629.c: 35:  _delay(5);
  4429  001374  D000               	nop2		;2 cycle nop
  4430  001376  D000               	nop2		;2 cycle nop
  4431  001378  F000               	nop	
  4432                           
  4433                           ;lm629.c: 36:  PORTCbits.RC2=1;
  4434  00137A  8482               	bsf	130,2,c	;volatile
  4435                           
  4436                           ;lm629.c: 38: return status;
  4437  00137C  5006               	movf	read_status@status^0,w,c
  4438  00137E  0012               	return		;funcret
  4439  001380                     __end_of_read_status:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function _DATABUS_DIR *****************
  4443 ;; Defined at:
  4444 ;;		line 208 in file "lm629.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  dir             1    wreg     unsigned char 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  dir             1    0[COMRAM] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  1    wreg      void 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/F
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;Total ram usage:        1 bytes
  4463 ;; Hardware stack levels used: 1
  4464 ;; Hardware stack levels required when called: 1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_read_status
  4469 ;;		_write_data
  4470 ;;		_write_command
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text21
  4475  0013D4                     __ptext21:
  4476                           	callstack 0
  4477  0013D4                     _DATABUS_DIR:
  4478                           	callstack 27
  4479                           
  4480                           ;incstack = 0
  4481                           ;DATABUS_DIR@dir stored from wreg
  4482  0013D4  6E01               	movwf	DATABUS_DIR@dir^0,c
  4483                           
  4484                           ;lm629.c: 208: void DATABUS_DIR(unsigned char dir);lm629.c: 209: {;lm629.c: 210:     if(
      +                          dir==0)
  4485  0013D6  5001               	movf	DATABUS_DIR@dir^0,w,c
  4486  0013D8  A4D8               	btfss	status,2,c
  4487  0013DA  D007               	goto	l1327
  4488                           
  4489                           ;lm629.c: 211:     {;lm629.c: 212:         TRISC&=0b00111111;
  4490  0013DC  0E3F               	movlw	63
  4491  0013DE  1694               	andwf	148,f,c	;volatile
  4492                           
  4493                           ;lm629.c: 213:         TRISD&=0b00001111;
  4494  0013E0  0E0F               	movlw	15
  4495  0013E2  1695               	andwf	149,f,c	;volatile
  4496                           
  4497                           ;lm629.c: 214:         TRISB&=0b11111100;
  4498  0013E4  0EFC               	movlw	252
  4499  0013E6  1693               	andwf	147,f,c	;volatile
  4500                           
  4501                           ;lm629.c: 215:     }
  4502  0013E8  0012               	return	
  4503  0013EA                     l1327:
  4504  0013EA  2801               	incf	DATABUS_DIR@dir^0,w,c
  4505  0013EC  A4D8               	btfss	status,2,c
  4506  0013EE  0012               	return	
  4507                           
  4508                           ;lm629.c: 217:     {;lm629.c: 218:         TRISC|=0b11000000;
  4509  0013F0  0EC0               	movlw	192
  4510  0013F2  1294               	iorwf	148,f,c	;volatile
  4511                           
  4512                           ;lm629.c: 219:         TRISD|=0b11110000;
  4513  0013F4  0EF0               	movlw	240
  4514  0013F6  1295               	iorwf	149,f,c	;volatile
  4515                           
  4516                           ;lm629.c: 220:         TRISB|=0b00000011;
  4517  0013F8  0E03               	movlw	3
  4518  0013FA  1293               	iorwf	147,f,c	;volatile
  4519  0013FC  0012               	return		;funcret
  4520  0013FE                     __end_of_DATABUS_DIR:
  4521                           	callstack 0
  4522                           
  4523 ;; *************** function _DATABUS *****************
  4524 ;; Defined at:
  4525 ;;		line 227 in file "lm629.c"
  4526 ;; Parameters:    Size  Location     Type
  4527 ;;  dir1            1    wreg     unsigned char 
  4528 ;;  byte0           1    0[COMRAM] unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  dir1            1    3[COMRAM] unsigned char 
  4531 ;;  x               1    4[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/F
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;Total ram usage:        5 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_read_status
  4552 ;;		_write_data
  4553 ;;		_write_command
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text22
  4558  000DF0                     __ptext22:
  4559                           	callstack 0
  4560  000DF0                     _DATABUS:
  4561                           	callstack 27
  4562                           
  4563                           ;incstack = 0
  4564                           ;DATABUS@dir1 stored from wreg
  4565  000DF0  6E04               	movwf	DATABUS@dir1^0,c
  4566                           
  4567                           ;lm629.c: 227: unsigned char DATABUS(unsigned char dir1, unsigned char byte0);lm629.c: 2
      +                          28: {;lm629.c: 229: unsigned char x;;lm629.c: 230: if(dir1==0)
  4568  000DF2  5004               	movf	DATABUS@dir1^0,w,c
  4569  000DF4  A4D8               	btfss	status,2,c
  4570  000DF6  D076               	goto	l1337
  4571                           
  4572                           ;lm629.c: 231: {;lm629.c: 232:     PORTCbits.RC6 = ((byte0 & 0x01) >> 0);
  4573  000DF8  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4574  000DFC  0E01               	movlw	1
  4575  000DFE  1602               	andwf	??_DATABUS^0,f,c
  4576  000E00  3A02               	swapf	??_DATABUS^0,f,c
  4577  000E02  4602               	rlncf	??_DATABUS^0,f,c
  4578  000E04  4602               	rlncf	??_DATABUS^0,f,c
  4579  000E06  5082               	movf	130,w,c	;volatile
  4580  000E08  1802               	xorwf	??_DATABUS^0,w,c
  4581  000E0A  0BBF               	andlw	-65
  4582  000E0C  1802               	xorwf	??_DATABUS^0,w,c
  4583  000E0E  6E82               	movwf	130,c	;volatile
  4584                           
  4585                           ;lm629.c: 233:     PORTCbits.RC7 = ((byte0 & 0x02) >> 1);
  4586  000E10  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4587  000E14  90D8               	bcf	status,0,c
  4588  000E16  3202               	rrcf	??_DATABUS^0,f,c
  4589  000E18  0E01               	movlw	1
  4590  000E1A  1602               	andwf	??_DATABUS^0,f,c
  4591  000E1C  3202               	rrcf	??_DATABUS^0,f,c
  4592  000E1E  3202               	rrcf	??_DATABUS^0,f,c
  4593  000E20  5082               	movf	130,w,c	;volatile
  4594  000E22  1802               	xorwf	??_DATABUS^0,w,c
  4595  000E24  0B7F               	andlw	-129
  4596  000E26  1802               	xorwf	??_DATABUS^0,w,c
  4597  000E28  6E82               	movwf	130,c	;volatile
  4598                           
  4599                           ;lm629.c: 234:     PORTDbits.RD4 = ((byte0 & 0x04) >> 2);
  4600  000E2A  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4601  000E2E  90D8               	bcf	status,0,c
  4602  000E30  3202               	rrcf	??_DATABUS^0,f,c
  4603  000E32  90D8               	bcf	status,0,c
  4604  000E34  3202               	rrcf	??_DATABUS^0,f,c
  4605  000E36  0E01               	movlw	1
  4606  000E38  1602               	andwf	??_DATABUS^0,f,c
  4607  000E3A  3A02               	swapf	??_DATABUS^0,f,c
  4608  000E3C  5083               	movf	131,w,c	;volatile
  4609  000E3E  1802               	xorwf	??_DATABUS^0,w,c
  4610  000E40  0BEF               	andlw	-17
  4611  000E42  1802               	xorwf	??_DATABUS^0,w,c
  4612  000E44  6E83               	movwf	131,c	;volatile
  4613                           
  4614                           ;lm629.c: 235:     PORTDbits.RD5 = ((byte0 & 0x08) >> 3);
  4615  000E46  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4616  000E4A  90D8               	bcf	status,0,c
  4617  000E4C  3202               	rrcf	??_DATABUS^0,f,c
  4618  000E4E  90D8               	bcf	status,0,c
  4619  000E50  3202               	rrcf	??_DATABUS^0,f,c
  4620  000E52  90D8               	bcf	status,0,c
  4621  000E54  3202               	rrcf	??_DATABUS^0,f,c
  4622  000E56  0E01               	movlw	1
  4623  000E58  1602               	andwf	??_DATABUS^0,f,c
  4624  000E5A  3A02               	swapf	??_DATABUS^0,f,c
  4625  000E5C  4602               	rlncf	??_DATABUS^0,f,c
  4626  000E5E  5083               	movf	131,w,c	;volatile
  4627  000E60  1802               	xorwf	??_DATABUS^0,w,c
  4628  000E62  0BDF               	andlw	-33
  4629  000E64  1802               	xorwf	??_DATABUS^0,w,c
  4630  000E66  6E83               	movwf	131,c	;volatile
  4631                           
  4632                           ;lm629.c: 236:     PORTDbits.RD6 = ((byte0 & 0x10) >> 4);
  4633  000E68  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4634  000E6C  3A02               	swapf	??_DATABUS^0,f,c
  4635  000E6E  0E0F               	movlw	15
  4636  000E70  1602               	andwf	??_DATABUS^0,f,c
  4637  000E72  0E01               	movlw	1
  4638  000E74  1602               	andwf	??_DATABUS^0,f,c
  4639  000E76  3A02               	swapf	??_DATABUS^0,f,c
  4640  000E78  4602               	rlncf	??_DATABUS^0,f,c
  4641  000E7A  4602               	rlncf	??_DATABUS^0,f,c
  4642  000E7C  5083               	movf	131,w,c	;volatile
  4643  000E7E  1802               	xorwf	??_DATABUS^0,w,c
  4644  000E80  0BBF               	andlw	-65
  4645  000E82  1802               	xorwf	??_DATABUS^0,w,c
  4646  000E84  6E83               	movwf	131,c	;volatile
  4647                           
  4648                           ;lm629.c: 237:     PORTDbits.RD7 = ((byte0 & 0x20) >> 5);
  4649  000E86  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4650  000E8A  0E05               	movlw	5
  4651  000E8C  6E03               	movwf	(??_DATABUS+1)^0,c
  4652  000E8E                     u515:
  4653  000E8E  90D8               	bcf	status,0,c
  4654  000E90  3202               	rrcf	??_DATABUS^0,f,c
  4655  000E92  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  4656  000E94  D7FC               	goto	u515
  4657  000E96  0E01               	movlw	1
  4658  000E98  1602               	andwf	??_DATABUS^0,f,c
  4659  000E9A  3202               	rrcf	??_DATABUS^0,f,c
  4660  000E9C  3202               	rrcf	??_DATABUS^0,f,c
  4661  000E9E  5083               	movf	131,w,c	;volatile
  4662  000EA0  1802               	xorwf	??_DATABUS^0,w,c
  4663  000EA2  0B7F               	andlw	-129
  4664  000EA4  1802               	xorwf	??_DATABUS^0,w,c
  4665  000EA6  6E83               	movwf	131,c	;volatile
  4666                           
  4667                           ;lm629.c: 238:     PORTBbits.RB0 = ((byte0 & 0x40) >> 6);
  4668  000EA8  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4669  000EAC  0E06               	movlw	6
  4670  000EAE  6E03               	movwf	(??_DATABUS+1)^0,c
  4671  000EB0                     u525:
  4672  000EB0  90D8               	bcf	status,0,c
  4673  000EB2  3202               	rrcf	??_DATABUS^0,f,c
  4674  000EB4  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  4675  000EB6  D7FC               	goto	u525
  4676  000EB8  0E01               	movlw	1
  4677  000EBA  1602               	andwf	??_DATABUS^0,f,c
  4678  000EBC  5081               	movf	129,w,c	;volatile
  4679  000EBE  1802               	xorwf	??_DATABUS^0,w,c
  4680  000EC0  0BFE               	andlw	-2
  4681  000EC2  1802               	xorwf	??_DATABUS^0,w,c
  4682  000EC4  6E81               	movwf	129,c	;volatile
  4683                           
  4684                           ;lm629.c: 239:     PORTBbits.RB1 = ((byte0 & 0x80) >> 7);
  4685  000EC6  6A02               	clrf	??_DATABUS^0,c
  4686  000EC8  AE01               	btfss	DATABUS@byte0^0,7,c
  4687  000ECA  D001               	bra	u535
  4688  000ECC  2A02               	incf	??_DATABUS^0,f,c
  4689  000ECE                     u535:
  4690  000ECE  0E01               	movlw	1
  4691  000ED0  1602               	andwf	??_DATABUS^0,f,c
  4692  000ED2  4602               	rlncf	??_DATABUS^0,f,c
  4693  000ED4  5081               	movf	129,w,c	;volatile
  4694  000ED6  1802               	xorwf	??_DATABUS^0,w,c
  4695  000ED8  0BFD               	andlw	-3
  4696  000EDA  1802               	xorwf	??_DATABUS^0,w,c
  4697  000EDC  6E81               	movwf	129,c	;volatile
  4698                           
  4699                           ;lm629.c: 240:     x=0;
  4700  000EDE  0E00               	movlw	0
  4701  000EE0  6E05               	movwf	DATABUS@x^0,c
  4702                           
  4703                           ;lm629.c: 241: }
  4704  000EE2  D04B               	goto	l1341
  4705  000EE4                     l1337:
  4706  000EE4  2804               	incf	DATABUS@dir1^0,w,c
  4707  000EE6  A4D8               	btfss	status,2,c
  4708  000EE8  D048               	goto	l1341
  4709                           
  4710                           ;lm629.c: 244: {;lm629.c: 245:     x |= (PORTBbits.RB1 << 7);
  4711  000EEA  A281               	btfss	129,1,c	;volatile
  4712  000EEC  D003               	goto	u550
  4713  000EEE  0E80               	movlw	128
  4714  000EF0  6E02               	movwf	??_DATABUS^0,c
  4715  000EF2  D001               	goto	u565
  4716  000EF4                     u550:
  4717  000EF4  6A02               	clrf	??_DATABUS^0,c
  4718  000EF6                     u565:
  4719  000EF6  5002               	movf	??_DATABUS^0,w,c
  4720  000EF8  1205               	iorwf	DATABUS@x^0,f,c
  4721                           
  4722                           ;lm629.c: 246:     x |= (PORTBbits.RB0 << 6);
  4723  000EFA  A081               	btfss	129,0,c	;volatile
  4724  000EFC  D003               	goto	u570
  4725  000EFE  0E40               	movlw	64
  4726  000F00  6E02               	movwf	??_DATABUS^0,c
  4727  000F02  D001               	goto	u585
  4728  000F04                     u570:
  4729  000F04  6A02               	clrf	??_DATABUS^0,c
  4730  000F06                     u585:
  4731  000F06  5002               	movf	??_DATABUS^0,w,c
  4732  000F08  1205               	iorwf	DATABUS@x^0,f,c
  4733                           
  4734                           ;lm629.c: 247:     x |= (PORTDbits.RD7 << 5);
  4735  000F0A  AE83               	btfss	131,7,c	;volatile
  4736  000F0C  D003               	goto	u590
  4737  000F0E  0E20               	movlw	32
  4738  000F10  6E02               	movwf	??_DATABUS^0,c
  4739  000F12  D001               	goto	u605
  4740  000F14                     u590:
  4741  000F14  6A02               	clrf	??_DATABUS^0,c
  4742  000F16                     u605:
  4743  000F16  5002               	movf	??_DATABUS^0,w,c
  4744  000F18  1205               	iorwf	DATABUS@x^0,f,c
  4745                           
  4746                           ;lm629.c: 248:     x |= (PORTDbits.RD6 << 4);
  4747  000F1A  AC83               	btfss	131,6,c	;volatile
  4748  000F1C  D003               	goto	u610
  4749  000F1E  6A02               	clrf	??_DATABUS^0,c
  4750  000F20  2A02               	incf	??_DATABUS^0,f,c
  4751  000F22  D001               	goto	u618
  4752  000F24                     u610:
  4753  000F24  6A02               	clrf	??_DATABUS^0,c
  4754  000F26                     u618:
  4755  000F26  3802               	swapf	??_DATABUS^0,w,c
  4756  000F28  0BF0               	andlw	240
  4757  000F2A  1205               	iorwf	DATABUS@x^0,f,c
  4758                           
  4759                           ;lm629.c: 249:     x |= (PORTDbits.RD5 << 3);
  4760  000F2C  AA83               	btfss	131,5,c	;volatile
  4761  000F2E  D003               	goto	u620
  4762  000F30  6A02               	clrf	??_DATABUS^0,c
  4763  000F32  2A02               	incf	??_DATABUS^0,f,c
  4764  000F34  D001               	goto	u628
  4765  000F36                     u620:
  4766  000F36  6A02               	clrf	??_DATABUS^0,c
  4767  000F38                     u628:
  4768  000F38  90D8               	bcf	status,0,c
  4769  000F3A  3602               	rlcf	??_DATABUS^0,f,c
  4770  000F3C  90D8               	bcf	status,0,c
  4771  000F3E  3602               	rlcf	??_DATABUS^0,f,c
  4772  000F40  90D8               	bcf	status,0,c
  4773  000F42  3402               	rlcf	??_DATABUS^0,w,c
  4774  000F44  1205               	iorwf	DATABUS@x^0,f,c
  4775                           
  4776                           ;lm629.c: 250:     x |= (PORTDbits.RD4 << 2);
  4777  000F46  A883               	btfss	131,4,c	;volatile
  4778  000F48  D003               	goto	u630
  4779  000F4A  6A02               	clrf	??_DATABUS^0,c
  4780  000F4C  2A02               	incf	??_DATABUS^0,f,c
  4781  000F4E  D001               	goto	u638
  4782  000F50                     u630:
  4783  000F50  6A02               	clrf	??_DATABUS^0,c
  4784  000F52                     u638:
  4785  000F52  90D8               	bcf	status,0,c
  4786  000F54  3602               	rlcf	??_DATABUS^0,f,c
  4787  000F56  90D8               	bcf	status,0,c
  4788  000F58  3402               	rlcf	??_DATABUS^0,w,c
  4789  000F5A  1205               	iorwf	DATABUS@x^0,f,c
  4790                           
  4791                           ;lm629.c: 251:     x |= (PORTCbits.RC7 << 1);
  4792  000F5C  AE82               	btfss	130,7,c	;volatile
  4793  000F5E  D003               	goto	u640
  4794  000F60  6A02               	clrf	??_DATABUS^0,c
  4795  000F62  2A02               	incf	??_DATABUS^0,f,c
  4796  000F64  D001               	goto	u648
  4797  000F66                     u640:
  4798  000F66  6A02               	clrf	??_DATABUS^0,c
  4799  000F68                     u648:
  4800  000F68  90D8               	bcf	status,0,c
  4801  000F6A  3402               	rlcf	??_DATABUS^0,w,c
  4802  000F6C  1205               	iorwf	DATABUS@x^0,f,c
  4803                           
  4804                           ;lm629.c: 252:     x |= PORTCbits.RC6;
  4805  000F6E  AC82               	btfss	130,6,c	;volatile
  4806  000F70  D002               	goto	u650
  4807  000F72  0E01               	movlw	1
  4808  000F74  D001               	goto	u656
  4809  000F76                     u650:
  4810  000F76  0E00               	movlw	0
  4811  000F78                     u656:
  4812  000F78  1205               	iorwf	DATABUS@x^0,f,c
  4813  000F7A                     l1341:
  4814                           
  4815                           ;lm629.c: 266: return x;
  4816  000F7A  5005               	movf	DATABUS@x^0,w,c
  4817  000F7C  0012               	return		;funcret
  4818  000F7E                     __end_of_DATABUS:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function _chip_select *****************
  4822 ;; Defined at:
  4823 ;;		line 269 in file "lm629.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  chip            1    wreg     unsigned char 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  chip            1    0[COMRAM] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/F
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:        1 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_LM629_init
  4848 ;;		_all_break
  4849 ;;		_all_off
  4850 ;;		_forward
  4851 ;;		_reverse
  4852 ;;		_right
  4853 ;;		_left
  4854 ;;		_forward_left
  4855 ;;		_forward_right
  4856 ;;		_reverse_left
  4857 ;;		_reverse_right
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text23
  4862  0012CE                     __ptext23:
  4863                           	callstack 0
  4864  0012CE                     _chip_select:
  4865                           	callstack 28
  4866                           
  4867                           ;incstack = 0
  4868                           ;chip_select@chip stored from wreg
  4869  0012CE  6E01               	movwf	chip_select@chip^0,c
  4870                           
  4871                           ;lm629.c: 269: void chip_select(unsigned char chip);lm629.c: 270: {;lm629.c: 271:  if(ch
      +                          ip==0)
  4872  0012D0  5001               	movf	chip_select@chip^0,w,c
  4873  0012D2  A4D8               	btfss	status,2,c
  4874  0012D4  D002               	goto	l1431
  4875                           
  4876                           ;lm629.c: 272:  {;lm629.c: 273:   PORTDbits.RD3=0;
  4877  0012D6  9683               	bcf	131,3,c	;volatile
  4878  0012D8  D018               	goto	L1
  4879  0012DA                     l1431:
  4880  0012DA  0401               	decf	chip_select@chip^0,w,c
  4881  0012DC  A4D8               	btfss	status,2,c
  4882  0012DE  D003               	goto	l1435
  4883                           
  4884                           ;lm629.c: 279:  {;lm629.c: 280:   PORTDbits.RD3=1;
  4885  0012E0  8683               	bsf	131,3,c	;volatile
  4886                           
  4887                           ;lm629.c: 281:   PORTBbits.RB2=0;
  4888  0012E2  9481               	bcf	129,2,c	;volatile
  4889  0012E4  D013               	goto	L2
  4890  0012E6                     l1435:
  4891  0012E6  0E02               	movlw	2
  4892  0012E8  1801               	xorwf	chip_select@chip^0,w,c
  4893  0012EA  A4D8               	btfss	status,2,c
  4894  0012EC  D004               	goto	l1439
  4895                           
  4896                           ;lm629.c: 286:  {;lm629.c: 287:   PORTDbits.RD3=1;
  4897  0012EE  8683               	bsf	131,3,c	;volatile
  4898                           
  4899                           ;lm629.c: 288:   PORTBbits.RB2=1;
  4900  0012F0  8481               	bsf	129,2,c	;volatile
  4901                           
  4902                           ;lm629.c: 289:   PORTAbits.RA0=0;
  4903  0012F2  9080               	bcf	128,0,c	;volatile
  4904  0012F4  D00C               	goto	L3
  4905  0012F6                     l1439:
  4906  0012F6  0E03               	movlw	3
  4907  0012F8  1801               	xorwf	chip_select@chip^0,w,c
  4908  0012FA  A4D8               	btfss	status,2,c
  4909  0012FC  D005               	goto	l179
  4910                           
  4911                           ;lm629.c: 293:  {;lm629.c: 294:   PORTDbits.RD3=1;
  4912  0012FE  8683               	bsf	131,3,c	;volatile
  4913                           
  4914                           ;lm629.c: 295:   PORTBbits.RB2=1;
  4915  001300  8481               	bsf	129,2,c	;volatile
  4916                           
  4917                           ;lm629.c: 296:   PORTAbits.RA0=1;
  4918  001302  8080               	bsf	128,0,c	;volatile
  4919                           
  4920                           ;lm629.c: 297:   PORTBbits.RB4=0;
  4921  001304  9881               	bcf	129,4,c	;volatile
  4922                           
  4923                           ;lm629.c: 298:  }
  4924  001306  D004               	goto	l1443
  4925  001308                     l179:
  4926                           
  4927                           ;lm629.c: 300:  {;lm629.c: 301:   PORTDbits.RD3=1;
  4928  001308  8683               	bsf	131,3,c	;volatile
  4929  00130A                     L1:
  4930                           
  4931                           ;lm629.c: 302:   PORTBbits.RB2=1;
  4932  00130A  8481               	bsf	129,2,c	;volatile
  4933  00130C                     L2:
  4934                           
  4935                           ;lm629.c: 303:   PORTAbits.RA0=1;
  4936  00130C  8080               	bsf	128,0,c	;volatile
  4937  00130E                     L3:
  4938                           
  4939                           ;lm629.c: 304:   PORTBbits.RB4=1;
  4940  00130E  8881               	bsf	129,4,c	;volatile
  4941  001310                     l1443:
  4942                           
  4943                           ;lm629.c: 307:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  4944  001310  0E35               	movlw	53
  4945  001312                     u1087:
  4946  001312  2EE8               	decfsz	wreg,f,c
  4947  001314  D7FE               	bra	u1087
  4948  001316  F000               	nop	
  4949  001318  0012               	return		;funcret
  4950  00131A                     __end_of_chip_select:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _SPI_ISR *****************
  4954 ;; Defined at:
  4955 ;;		line 33 in file "spi.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;Total ram usage:        0 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		Interrupt level 2
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	intcode
  4983  000008                     __pintcode:
  4984                           	callstack 0
  4985  000008                     _SPI_ISR:
  4986                           	callstack 25
  4987                           
  4988                           ;incstack = 0
  4989  000008  820C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4990                           
  4991                           ;spi.c: 35:     if(SSPIF)
  4992  00000A  A69E               	btfss	3998,3,c	;volatile
  4993  00000C  D005               	goto	i2l269
  4994                           
  4995                           ;spi.c: 36:     {;spi.c: 37:         SSP1IF=0;
  4996  00000E  969E               	bcf	3998,3,c	;volatile
  4997                           
  4998                           ;spi.c: 38:         spi_read_data=SSP1BUF;
  4999  000010  CFC9 F00B          	movff	4041,_spi_read_data	;volatile
  5000                           
  5001                           ;spi.c: 39:         SSP1BUF = 0x55;
  5002  000014  0E55               	movlw	85
  5003  000016  6EC9               	movwf	201,c	;volatile
  5004  000018                     i2l269:
  5005  000018  920C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5006  00001A  0011               	retfie		f
  5007  00001C                     __end_of_SPI_ISR:
  5008                           	callstack 0
  5009  0000                     
  5010                           	psect	rparam
  5011  0000                     
  5012                           	psect	temp
  5013  00000C                     btemp:
  5014                           	callstack 0
  5015  00000C                     	ds	1
  5016  0000                     int$flags	set	btemp
  5017  0000                     wtemp8	set	btemp+1
  5018  0000                     ttemp5	set	btemp+1
  5019  0000                     ttemp6	set	btemp+4
  5020  0000                     ttemp7	set	btemp+8
  5021                           
  5022                           	psect	idloc
  5023                           
  5024                           ;Config register IDLOC0 @ 0x200000
  5025                           ;	unspecified, using default values
  5026  200000                     	org	2097152
  5027  200000  FF                 	db	255
  5028                           
  5029                           ;Config register IDLOC1 @ 0x200001
  5030                           ;	unspecified, using default values
  5031  200001                     	org	2097153
  5032  200001  FF                 	db	255
  5033                           
  5034                           ;Config register IDLOC2 @ 0x200002
  5035                           ;	unspecified, using default values
  5036  200002                     	org	2097154
  5037  200002  FF                 	db	255
  5038                           
  5039                           ;Config register IDLOC3 @ 0x200003
  5040                           ;	unspecified, using default values
  5041  200003                     	org	2097155
  5042  200003  FF                 	db	255
  5043                           
  5044                           ;Config register IDLOC4 @ 0x200004
  5045                           ;	unspecified, using default values
  5046  200004                     	org	2097156
  5047  200004  FF                 	db	255
  5048                           
  5049                           ;Config register IDLOC5 @ 0x200005
  5050                           ;	unspecified, using default values
  5051  200005                     	org	2097157
  5052  200005  FF                 	db	255
  5053                           
  5054                           ;Config register IDLOC6 @ 0x200006
  5055                           ;	unspecified, using default values
  5056  200006                     	org	2097158
  5057  200006  FF                 	db	255
  5058                           
  5059                           ;Config register IDLOC7 @ 0x200007
  5060                           ;	unspecified, using default values
  5061  200007                     	org	2097159
  5062  200007  FF                 	db	255
  5063                           
  5064                           	psect	config
  5065                           
  5066                           ; Padding undefined space
  5067  300000                     	org	3145728
  5068  300000  FF                 	db	255
  5069                           
  5070                           ;Config register CONFIG1H @ 0x300001
  5071                           ;	Oscillator Selection bits
  5072                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  5073                           ;	4X PLL Enable
  5074                           ;	PLLCFG = ON, Oscillator multiplied by 4
  5075                           ;	Primary clock enable bit
  5076                           ;	PRICLKEN = ON, Primary clock is always enabled
  5077                           ;	Fail-Safe Clock Monitor Enable bit
  5078                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5079                           ;	Internal/External Oscillator Switchover bit
  5080                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5081  300001                     	org	3145729
  5082  300001  32                 	db	50
  5083                           
  5084                           ;Config register CONFIG2L @ 0x300002
  5085                           ;	Power-up Timer Enable bit
  5086                           ;	PWRTEN = OFF, Power up timer disabled
  5087                           ;	Brown-out Reset Enable bits
  5088                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5089                           ;	Brown Out Reset Voltage bits
  5090                           ;	BORV = 0x3, unprogrammed default
  5091  300002                     	org	3145730
  5092  300002  19                 	db	25
  5093                           
  5094                           ;Config register CONFIG2H @ 0x300003
  5095                           ;	Watchdog Timer Enable bits
  5096                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5097                           ;	Watchdog Timer Postscale Select bits
  5098                           ;	WDTPS = 0xF, unprogrammed default
  5099  300003                     	org	3145731
  5100  300003  3C                 	db	60
  5101                           
  5102                           ; Padding undefined space
  5103  300004                     	org	3145732
  5104  300004  FF                 	db	255
  5105                           
  5106                           ;Config register CONFIG3H @ 0x300005
  5107                           ;	CCP2 MUX bit
  5108                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5109                           ;	PORTB A/D Enable bit
  5110                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  5111                           ;	P3A/CCP3 Mux bit
  5112                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  5113                           ;	HFINTOSC Fast Start-up
  5114                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  5115                           ;	Timer3 Clock input mux bit
  5116                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5117                           ;	ECCP2 B output mux bit
  5118                           ;	P2BMX = PORTC0, P2B is on RC0
  5119                           ;	MCLR Pin Enable bit
  5120                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5121  300005                     	org	3145733
  5122  300005  91                 	db	145
  5123                           
  5124                           ;Config register CONFIG4L @ 0x300006
  5125                           ;	Stack Full/Underflow Reset Enable bit
  5126                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5127                           ;	Single-Supply ICSP Enable bit
  5128                           ;	LVP = OFF, Single-Supply ICSP disabled
  5129                           ;	Extended Instruction Set Enable bit
  5130                           ;	XINST = 0x0, unprogrammed default
  5131                           ;	Background Debug
  5132                           ;	DEBUG = OFF, Disabled
  5133  300006                     	org	3145734
  5134  300006  81                 	db	129
  5135                           
  5136                           ; Padding undefined space
  5137  300007                     	org	3145735
  5138  300007  FF                 	db	255
  5139                           
  5140                           ;Config register CONFIG5L @ 0x300008
  5141                           ;	Code Protection Block 0
  5142                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5143                           ;	Code Protection Block 1
  5144                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5145                           ;	Code Protection Block 2
  5146                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5147                           ;	Code Protection Block 3
  5148                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5149  300008                     	org	3145736
  5150  300008  0F                 	db	15
  5151                           
  5152                           ;Config register CONFIG5H @ 0x300009
  5153                           ;	Boot Block Code Protection bit
  5154                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5155                           ;	Data EEPROM Code Protection bit
  5156                           ;	CPD = OFF, Data EEPROM not code-protected
  5157  300009                     	org	3145737
  5158  300009  C0                 	db	192
  5159                           
  5160                           ;Config register CONFIG6L @ 0x30000A
  5161                           ;	Write Protection Block 0
  5162                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5163                           ;	Write Protection Block 1
  5164                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5165                           ;	Write Protection Block 2
  5166                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5167                           ;	Write Protection Block 3
  5168                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5169  30000A                     	org	3145738
  5170  30000A  0F                 	db	15
  5171                           
  5172                           ;Config register CONFIG6H @ 0x30000B
  5173                           ;	Configuration Register Write Protection bit
  5174                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5175                           ;	Boot Block Write Protection bit
  5176                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5177                           ;	Data EEPROM Write Protection bit
  5178                           ;	WRTD = OFF, Data EEPROM not write-protected
  5179  30000B                     	org	3145739
  5180  30000B  E0                 	db	224
  5181                           
  5182                           ;Config register CONFIG7L @ 0x30000C
  5183                           ;	Table Read Protection Block 0
  5184                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5185                           ;	Table Read Protection Block 1
  5186                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5187                           ;	Table Read Protection Block 2
  5188                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5189                           ;	Table Read Protection Block 3
  5190                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5191  30000C                     	org	3145740
  5192  30000C  0F                 	db	15
  5193                           
  5194                           ;Config register CONFIG7H @ 0x30000D
  5195                           ;	Boot Block Table Read Protection bit
  5196                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5197  30000D                     	org	3145741
  5198  30000D  40                 	db	64
  5199                           tosu	equ	0xFFF
  5200                           tosh	equ	0xFFE
  5201                           tosl	equ	0xFFD
  5202                           stkptr	equ	0xFFC
  5203                           pclatu	equ	0xFFB
  5204                           pclath	equ	0xFFA
  5205                           pcl	equ	0xFF9
  5206                           tblptru	equ	0xFF8
  5207                           tblptrh	equ	0xFF7
  5208                           tblptrl	equ	0xFF6
  5209                           tablat	equ	0xFF5
  5210                           prodh	equ	0xFF4
  5211                           prodl	equ	0xFF3
  5212                           indf0	equ	0xFEF
  5213                           postinc0	equ	0xFEE
  5214                           postdec0	equ	0xFED
  5215                           preinc0	equ	0xFEC
  5216                           plusw0	equ	0xFEB
  5217                           fsr0h	equ	0xFEA
  5218                           fsr0l	equ	0xFE9
  5219                           wreg	equ	0xFE8
  5220                           indf1	equ	0xFE7
  5221                           postinc1	equ	0xFE6
  5222                           postdec1	equ	0xFE5
  5223                           preinc1	equ	0xFE4
  5224                           plusw1	equ	0xFE3
  5225                           fsr1h	equ	0xFE2
  5226                           fsr1l	equ	0xFE1
  5227                           bsr	equ	0xFE0
  5228                           indf2	equ	0xFDF
  5229                           postinc2	equ	0xFDE
  5230                           postdec2	equ	0xFDD
  5231                           preinc2	equ	0xFDC
  5232                           plusw2	equ	0xFDB
  5233                           fsr2h	equ	0xFDA
  5234                           fsr2l	equ	0xFD9
  5235                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LM629_init
    _right->_check_busy
    _right->_write_data
    _reverse_right->_check_busy
    _reverse_right->_write_data
    _reverse_left->_check_busy
    _reverse_left->_write_data
    _reverse->_check_busy
    _reverse->_write_data
    _left->_check_busy
    _left->_write_data
    _forward_right->_check_busy
    _forward_right->_write_data
    _forward_left->_check_busy
    _forward_left->_write_data
    _forward->_check_busy
    _forward->_write_data
    _motor_off->_check_busy
    _motor_off->_write_data
    _motor_break->_check_busy
    _motor_break->_write_data
    _LM629_init->_check_busy
    _LM629_init->_write_data
    _filter_module->_check_busy
    _filter_module->_write_data
    _write_data->_DATABUS
    _write_command->_DATABUS
    _check_busy->_read_status
    _read_status->_DATABUS

Critical Paths under _SPI_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SPI_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SPI_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SPI_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SPI_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SPI_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SPI_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SPI_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SPI_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SPI_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SPI_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SPI_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SPI_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  324076
                                              9 COMRAM     1     1      0
                         _LM629_init
                          _all_break
                            _all_off
                            _forward
                       _forward_left
                      _forward_right
                               _left
                            _reverse
                       _reverse_left
                      _reverse_right
                              _right
                           _spi_data
                     _spi_slave_init
 ---------------------------------------------------------------------------------
 (1) _spi_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _right                                                0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_right                                        0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_left                                         0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse                                              0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _left                                                 0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_right                                        0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_left                                         0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_off                                              0     0      0   16178
                        _chip_select
                          _motor_off
 ---------------------------------------------------------------------------------
 (2) _motor_off                                            0     0      0   16090
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_break                                            0     0      0   16178
                        _chip_select
                        _motor_break
 ---------------------------------------------------------------------------------
 (2) _motor_break                                          0     0      0   16090
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _LM629_init                                           2     2      0   33287
                                              7 COMRAM     2     2      0
                         _check_busy
                        _chip_select
                      _filter_module
                        _read_status
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _filter_module                                        0     0      0   16090
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           2     1      1   14571
                                              5 COMRAM     2     1      1
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (2) _write_command                                        1     1      0     747
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _check_busy                                           1     1      0     772
                                              6 COMRAM     1     1      0
                        _read_status
 ---------------------------------------------------------------------------------
 (4) _read_status                                          1     1      0     748
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _DATABUS_DIR                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATABUS                                              5     4      1     681
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _chip_select                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SPI_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM629_init
     _check_busy
       _read_status
         _DATABUS
         _DATABUS_DIR
     _chip_select
     _filter_module
       _check_busy
       _write_command
         _DATABUS
         _DATABUS_DIR
       _write_data
         _DATABUS
         _DATABUS_DIR
     _read_status
     _write_command
     _write_data
   _all_break
     _chip_select
     _motor_break
       _check_busy
       _write_command
       _write_data
   _all_off
     _chip_select
     _motor_off
       _check_busy
       _write_command
       _write_data
   _forward
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _spi_data
   _spi_slave_init

 _SPI_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A       B       1       11.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlllhh      24      0       0      48        0.0%
BITBIGSFRllhhhh     22      0       0      43        0.0%
BITBIGSFRhl         21      0       0      38        0.0%
BITBIGSFRllhhlh      E      0       0      45        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhl        B      0       0      47        0.0%
BITBIGSFRllhhhh      6      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRlhh         4      0       0      39        0.0%
BITBIGSFRlllll       4      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRllllh       2      0       0      50        0.0%
BITBIGSFRlhlh        1      0       0      40        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRlhll        1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      33        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jul 20 19:59:34 2022

          _filter_module 1216                      l179 1308                      _GIE 007F97  
                    u610 0F24                      u515 0E8E                      u620 0F36  
                    u605 0F16                      u525 0EB0                      u630 0F50  
                    u550 0EF4                      u535 0ECE                      u640 0F66  
                    u650 0F76                      u618 0F26                      u570 0F04  
                    u628 0F38                      u565 0EF6                      u638 0F52  
                    u590 0F14                      u656 0F78                      u648 0F68  
                    u585 0F06                      u870 11B4                      u957 0F98  
                    u967 0FA2                      u977 0FB0                      u987 1008  
                    u997 1012          __end_of_DATABUS 0F7E                      wreg 000FE8  
                   l1341 0F7A                     l1431 12DA                     l1327 13EA  
                   l1337 0EE4                     l1435 12E6                     l1443 1310  
                   l1439 12F6                     l1527 1070                     l1519 103E  
                   l1529 1076                     l1557 10E0                     l1549 10AE  
                   l1469 0F96                     l1661 119A                     l1653 1176  
                   l1647 1160                     l1497 1000                     l1489 0FCE  
                   l1681 11E0                     l1673 11C8                     l1665 11AC  
                   l1657 1188                     l1499 1006          ?_spi_slave_init 0001  
                   l1685 11F2                     l1669 11BA                     l1689 1204  
                   u1007 1020                     u1017 1078                     u1027 1082  
                   u1037 1090                     u1047 1276                     u1057 12A6  
                   u1067 134A                     u1077 1362                     u1087 1312  
                   _PEIE 007F96                     _RCON 000FD0                     _main 110A  
                   _left 0708          __end_of_SPI_ISR 001C                     btemp 000C  
                   start 001C             ___param_bank 000000          spi_data@tx_data 0001  
         ?_filter_module 0001                    ?_main 0001                    ?_left 0001  
                  i2l269 0018                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _SSPIF 007CF3  
        __end_of_all_off 13AA          __end_of_forward 0DF0                    _right 0020  
           ?_read_status 0001          __end_of_reverse 0708                    ttemp5 000D  
                  ttemp6 0010                    ttemp7 0014                    status 000FD8  
                  wtemp8 000D          write_data@byte1 0007          write_data@byte2 0006  
        __initialization 146A             __end_of_main 1216             __end_of_left 08C2  
              ??_DATABUS 0002                   ??_main 000A                   ??_left 0008  
          __activetblptr 000000        main@received_data 000A                   _ADCON0 000FC2  
                 _ADCON1 000FC1                ??_SPI_ISR 0001                   ?_right 0001  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C                   _INTCON 000FF2  
      read_status@status 0006                   _SRCON0 000F47                   _SSP1IE 007CEB  
                 _SSP1IF 007CF3            ?_forward_left 0001          ??_filter_module 0008  
              ??_all_off 0008                   isa$std 000001             ?_motor_break 0001  
           ??_LM629_init 0008                ??_forward 0008         __end_of_spi_data 148A  
              ??_reverse 0008               __accesstop 0060  __end_of__initialization 146C  
   write_command@command 0006            ___rparam_used 000001           ??_forward_left 0008  
         __pcstackCOMRAM 0001       __end_of_LM629_init 110A            __end_of_right 01DA  
       ??_spi_slave_init 0001                  ??_right 0008               _check_busy 1476  
  __end_of_reverse_right 0394            _forward_right 08C2                  _CM1CON0 000F79  
                _CM2CON0 000F78                  _DATABUS 0DF0                  _HLVDCON 000F9C  
          ??_DATABUS_DIR 0001                  _SSP1BUF 000FC9                  _SSPCON1 000FC6  
                _SPI_ISR 0008                  _SSPSTAT 000FC7        __end_of_all_break 13D4  
          _write_command 131A           ?_forward_right 0001                  __Hparam 0000  
                __Lparam 0000                ?_spi_data 0001             DATABUS@byte0 0001  
                __pcinit 146A                  _all_off 1380                  __ramtop 1000  
                __ptext0 110A                  __ptext1 13FE                  __ptext2 1482  
                __ptext3 0020                  __ptext4 01DA                  __ptext5 0394  
                __ptext6 054E                  __ptext7 0708                  __ptext8 08C2  
                __ptext9 0A7C                  _forward 0C36            ?_reverse_left 0001  
   __end_of_forward_left 0C36                  _reverse 054E     end_of_initialization 146C  
            ?_check_busy 0001      __end_of_DATABUS_DIR 13FE           ?_write_command 0001  
      __end_of_motor_off 1446            ??_chip_select 0001               ??_spi_data 0001  
              _PORTAbits 000F80                _PORTBbits 000F81                _PORTCbits 000F82  
              _PORTDbits 000F83           ??_reverse_left 0008          chip_select@chip 0001  
              _TRISAbits 000F92                _TRISCbits 000F94          ??_forward_right 0008  
             _write_data 1272    __end_of_filter_module 1272      __end_of_chip_select 131A  
    start_initialization 146A              _DATABUS_DIR 13D4          ??_write_command 0006  
               DATABUS@x 0005                 ?_DATABUS 0001              __pbssCOMRAM 000B  
          ??_read_status 0006                 ?_SPI_ISR 0001           DATABUS_DIR@dir 0001  
   __end_of_reverse_left 054E                _all_break 13AA             _forward_left 0A7C  
            _chip_select 12CE                __pintcode 0008              ?_write_data 0006  
               ?_all_off 0001                 ?_forward 0001                 ?_reverse 0001  
            DATABUS@dir1 0004             ??_check_busy 0007                 _CTMUCONH 000F45  
    __end_of_read_status 1380               ?_all_break 0001                _motor_off 1422  
               _SSP1CON1 000FC6                 _SSP1CON3 000FCB                 _SSP2CON1 000F6C  
               _VREFCON0 000F42                 _VREFCON1 000F41            ??_motor_break 0008  
     __end_of_check_busy 1482                 __Hrparam 0000            _reverse_right 01DA  
               __Lrparam 0000               ?_motor_off 0001              check_busy@x 0007  
             _LM629_init 0F7E      __end_of_motor_break 146A             ?_DATABUS_DIR 0001  
               __ptext10 0C36                 __ptext11 1380                 __ptext20 1352  
               __ptext12 1422                 __ptext21 13D4                 __ptext13 13AA  
               __ptext22 0DF0                 __ptext14 1446                 __ptext23 12CE  
               __ptext15 0F7E                 __ptext16 1216                 __ptext17 1272  
               __ptext18 131A                 __ptext19 1476              _read_status 1352  
         ?_reverse_right 0001    __end_of_forward_right 0A7C              ??_all_break 0008  
               isa$xinst 000000                 _spi_data 1482                 int$flags 000C  
            LM629_init@x 0009             _reverse_left 0394                 intlevel2 0000  
         _spi_slave_init 13FE    __end_of_write_command 1352            _spi_read_data 000B  
           ?_chip_select 0001              ??_motor_off 0008             ??_write_data 0007  
            _motor_break 1446              ?_LM629_init 0001   __end_of_spi_slave_init 1422  
        ??_reverse_right 0008       __end_of_write_data 12CE  
