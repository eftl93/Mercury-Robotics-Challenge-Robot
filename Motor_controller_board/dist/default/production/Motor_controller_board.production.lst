

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Aug 06 23:06:56 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.35
    40                           ; Generated 05/05/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISB	set	3987
    76  0000                     _TRISD	set	3989
    77  0000                     _SSP1CON1bits	set	4038
    78  0000                     _TRISAbits	set	3986
    79  0000                     _TRISBbits	set	3987
    80  0000                     _TRISCbits	set	3988
    81  0000                     _TRISDbits	set	3989
    82  0000                     _SSP1IF	set	31987
    83  0000                     _GIE	set	32663
    84  0000                     _PEIE	set	32662
    85  0000                     _VREFCON1	set	3905
    86  0000                     _VREFCON0	set	3906
    87  0000                     _CTMUCONH	set	3909
    88  0000                     _SSP2CON1	set	3948
    89  0000                     _SSP1CON1	set	4038
    90  0000                     _ANSELE	set	3900
    91  0000                     _ANSELD	set	3899
    92  0000                     _ANSELC	set	3898
    93  0000                     _ANSELB	set	3897
    94  0000                     _ANSELA	set	3896
    95  0000                     _RCON	set	4048
    96  0000                     _INTCON	set	4082
    97  0000                     _SSP1BUF	set	4041
    98  0000                     _SSP1CON3	set	4043
    99  0000                     _SSP1STATbits	set	4039
   100  0000                     _CM2CON0	set	3960
   101  0000                     _CM1CON0	set	3961
   102  0000                     _PORTAbits	set	3968
   103  0000                     _PORTBbits	set	3969
   104  0000                     _PORTCbits	set	3970
   105  0000                     _TRISA	set	3986
   106  0000                     _HLVDCON	set	3996
   107  0000                     _SRCON0	set	3911
   108  0000                     _ADCON1	set	4033
   109  0000                     _ADCON0	set	4034
   110  0000                     _SSPIF	set	31987
   111  0000                     _SSP1IE	set	31979
   112  0000                     _PORTDbits	set	3971
   113                           
   114                           ; #config settings
   115                           
   116                           	psect	cinit
   117  001712                     __pcinit:
   118                           	callstack 0
   119  001712                     start_initialization:
   120                           	callstack 0
   121  001712                     __initialization:
   122                           	callstack 0
   123                           
   124                           ; Clear objects allocated to COMRAM (1 bytes)
   125  001712  6A0E               	clrf	__pbssCOMRAM& (0+255),c
   126  001714                     end_of_initialization:
   127                           	callstack 0
   128  001714                     __end_of__initialization:
   129                           	callstack 0
   130  001714  900F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131  001716  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132  001718  0100               	movlb	0
   133  00171A  EF52  F009         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136  00000E                     __pbssCOMRAM:
   137                           	callstack 0
   138  00000E                     _spi_read_data:
   139                           	callstack 0
   140  00000E                     	ds	1
   141                           
   142                           	psect	cstackCOMRAM
   143  000001                     __pcstackCOMRAM:
   144                           	callstack 0
   145  000001                     DATABUS_DIR@dir:
   146                           	callstack 0
   147  000001                     DATABUS@byte0:
   148                           	callstack 0
   149  000001                     chip_select@chip:
   150                           	callstack 0
   151  000001                     spi_data@tx_data:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x0
   155  000001                     	ds	1
   156  000002                     ??_DATABUS:
   157                           
   158                           ; 1 bytes @ 0x1
   159  000002                     	ds	2
   160  000004                     DATABUS@dir1:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x3
   164  000004                     	ds	1
   165  000005                     DATABUS@x:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x4
   169  000005                     	ds	1
   170  000006                     read_status@status:
   171                           	callstack 0
   172  000006                     write_data@byte2:
   173                           	callstack 0
   174  000006                     write_command@command:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x5
   178  000006                     	ds	1
   179  000007                     check_busy@x:
   180                           	callstack 0
   181  000007                     write_data@byte1:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x6
   185  000007                     	ds	1
   186  000008                     ??_LM629_init:
   187  000008                     
   188                           ; 1 bytes @ 0x7
   189  000008                     	ds	1
   190  000009                     LM629_init@x:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x8
   194  000009                     	ds	1
   195  00000A                     ??_main:
   196                           
   197                           ; 1 bytes @ 0x9
   198  00000A                     	ds	2
   199  00000C                     main@dummy_data:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0xB
   203  00000C                     	ds	1
   204  00000D                     main@received_data:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0xC
   208  00000D                     	ds	1
   209                           
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 129 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  received_dat    1   12[COMRAM] unsigned char 
   220 ;;  dummy_data      1   11[COMRAM] unsigned char 
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;Total ram usage:        4 bytes
   235 ;; Hardware stack levels required when called: 6
   236 ;; This function calls:
   237 ;;		_LM629_init
   238 ;;		_all_break
   239 ;;		_all_off
   240 ;;		_forward
   241 ;;		_forward_left
   242 ;;		_forward_right
   243 ;;		_left
   244 ;;		_reverse
   245 ;;		_reverse_left
   246 ;;		_reverse_right
   247 ;;		_right
   248 ;;		_spi_data
   249 ;;		_spi_slave_init
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text0
   256  0012A4                     __ptext0:
   257                           	callstack 0
   258  0012A4                     _main:
   259                           	callstack 25
   260  0012A4                     
   261                           ;main.c: 134:     dummy_data = 0x55;
   262  0012A4  0E55               	movlw	85
   263  0012A6  6E0C               	movwf	main@dummy_data^0,c
   264  0012A8                     
   265                           ;main.c: 135:     RCON &= 0x7F;
   266  0012A8  9ED0               	bcf	208,7,c	;volatile
   267  0012AA                     
   268                           ;main.c: 136:     INTCON=0;
   269  0012AA  0E00               	movlw	0
   270  0012AC  6EF2               	movwf	242,c	;volatile
   271  0012AE                     
   272                           ;main.c: 137:     ANSELA=0;
   273  0012AE  0E00               	movlw	0
   274  0012B0  010F               	movlb	15	; () banked
   275  0012B2  6F38               	movwf	56,b	;volatile
   276  0012B4                     
   277                           ; BSR set to: 15
   278                           ;main.c: 138:     ANSELB=0;
   279  0012B4  0E00               	movlw	0
   280  0012B6  6F39               	movwf	57,b	;volatile
   281  0012B8                     
   282                           ; BSR set to: 15
   283                           ;main.c: 139:     ANSELC=0;
   284  0012B8  0E00               	movlw	0
   285  0012BA  6F3A               	movwf	58,b	;volatile
   286  0012BC                     
   287                           ; BSR set to: 15
   288                           ;main.c: 140:     ANSELD=0;
   289  0012BC  0E00               	movlw	0
   290  0012BE  6F3B               	movwf	59,b	;volatile
   291  0012C0                     
   292                           ; BSR set to: 15
   293                           ;main.c: 141:     ANSELE=0;
   294  0012C0  0E00               	movlw	0
   295  0012C2  6F3C               	movwf	60,b	;volatile
   296  0012C4                     
   297                           ; BSR set to: 15
   298                           ;main.c: 142:     SSP1CON1=0x00;
   299  0012C4  0E00               	movlw	0
   300  0012C6  6EC6               	movwf	198,c	;volatile
   301  0012C8                     
   302                           ; BSR set to: 15
   303                           ;main.c: 143:     SSP2CON1=0x00;
   304  0012C8  0E00               	movlw	0
   305  0012CA  6E6C               	movwf	108,c	;volatile
   306  0012CC                     
   307                           ; BSR set to: 15
   308                           ;main.c: 144:     CM1CON0=0b00000000;
   309  0012CC  0E00               	movlw	0
   310  0012CE  6E79               	movwf	121,c	;volatile
   311  0012D0                     
   312                           ; BSR set to: 15
   313                           ;main.c: 145:     CM2CON0=0b00000000;
   314  0012D0  0E00               	movlw	0
   315  0012D2  6E78               	movwf	120,c	;volatile
   316  0012D4                     
   317                           ; BSR set to: 15
   318                           ;main.c: 146:     TRISA=0xFF;
   319  0012D4  6892               	setf	146,c	;volatile
   320  0012D6                     
   321                           ; BSR set to: 15
   322                           ;main.c: 147:     TRISD=0xFF;
   323  0012D6  6895               	setf	149,c	;volatile
   324  0012D8                     
   325                           ; BSR set to: 15
   326                           ;main.c: 148:     TRISB=0xFF;
   327  0012D8  6893               	setf	147,c	;volatile
   328  0012DA                     
   329                           ; BSR set to: 15
   330                           ;main.c: 149:     TRISC=0xFF;
   331  0012DA  6894               	setf	148,c	;volatile
   332  0012DC                     
   333                           ; BSR set to: 15
   334                           ;main.c: 150:     CTMUCONH=0x00;
   335  0012DC  0E00               	movlw	0
   336  0012DE  6F45               	movwf	69,b	;volatile
   337  0012E0                     
   338                           ; BSR set to: 15
   339                           ;main.c: 151:     SRCON0=0x00;
   340  0012E0  0E00               	movlw	0
   341  0012E2  6F47               	movwf	71,b	;volatile
   342  0012E4                     
   343                           ; BSR set to: 15
   344                           ;main.c: 152:     VREFCON0=0x00;
   345  0012E4  0E00               	movlw	0
   346  0012E6  6F42               	movwf	66,b	;volatile
   347  0012E8                     
   348                           ; BSR set to: 15
   349                           ;main.c: 153:     VREFCON1=0x00;
   350  0012E8  0E00               	movlw	0
   351  0012EA  6F41               	movwf	65,b	;volatile
   352  0012EC                     
   353                           ; BSR set to: 15
   354                           ;main.c: 154:     HLVDCON=0x00;
   355  0012EC  0E00               	movlw	0
   356  0012EE  6E9C               	movwf	156,c	;volatile
   357  0012F0                     
   358                           ; BSR set to: 15
   359                           ;main.c: 155:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   360  0012F0  0E52               	movlw	82
   361  0012F2  6E0B               	movwf	(??_main+1)^0,c
   362  0012F4  0E2B               	movlw	43
   363  0012F6  6E0A               	movwf	??_main^0,c
   364  0012F8  0E00               	movlw	0
   365  0012FA                     u957:
   366  0012FA  2EE8               	decfsz	wreg,f,c
   367  0012FC  D7FE               	bra	u957
   368  0012FE  2E0A               	decfsz	??_main^0,f,c
   369  001300  D7FC               	bra	u957
   370  001302  2E0B               	decfsz	(??_main+1)^0,f,c
   371  001304  D7FA               	bra	u957
   372  001306  D000               	nop2	
   373  001308                     
   374                           ;main.c: 156:     LM629_init();
   375  001308  EC15  F000         	call	_LM629_init	;wreg free
   376  00130C                     
   377                           ;main.c: 157:     spi_slave_init();
   378  00130C  EC1A  F00B         	call	_spi_slave_init	;wreg free
   379  001310                     
   380                           ;main.c: 158:     spi_data(dummy_data);
   381  001310  0E55               	movlw	85
   382  001312  EC8F  F00B         	call	_spi_data
   383  001316                     l1775:
   384                           
   385                           ;main.c: 167:     {;main.c: 168:         received_data = spi_read_data;
   386  001316  C00E  F00D         	movff	_spi_read_data,main@received_data	;volatile
   387  00131A                     
   388                           ;main.c: 170:         if(received_data==0x77)
   389  00131A  0E77               	movlw	119
   390  00131C  180D               	xorwf	main@received_data^0,w,c
   391  00131E  A4D8               	btfss	status,2,c
   392  001320  EF94  F009         	goto	u841
   393  001324  EF96  F009         	goto	u840
   394  001328                     u841:
   395  001328  EF9C  F009         	goto	l1781
   396  00132C                     u840:
   397  00132C                     
   398                           ;main.c: 171:         {;main.c: 172:             all_off();
   399  00132C  EC30  F00B         	call	_all_off	;wreg free
   400                           
   401                           ;main.c: 173:             forward();
   402  001330  EC75  F008         	call	_forward	;wreg free
   403                           
   404                           ;main.c: 174:         }
   405  001334  EF8B  F009         	goto	l1775
   406  001338                     l1781:
   407  001338  0E73               	movlw	115
   408  00133A  180D               	xorwf	main@received_data^0,w,c
   409  00133C  A4D8               	btfss	status,2,c
   410  00133E  EFA3  F009         	goto	u851
   411  001342  EFA5  F009         	goto	u850
   412  001346                     u851:
   413  001346  EFAB  F009         	goto	l1785
   414  00134A                     u850:
   415  00134A                     
   416                           ;main.c: 177:         {;main.c: 178:             all_off();
   417  00134A  EC30  F00B         	call	_all_off	;wreg free
   418                           
   419                           ;main.c: 179:             reverse();
   420  00134E  EC01  F005         	call	_reverse	;wreg free
   421                           
   422                           ;main.c: 180:         }
   423  001352  EF8B  F009         	goto	l1775
   424  001356                     l1785:
   425  001356  0E61               	movlw	97
   426  001358  180D               	xorwf	main@received_data^0,w,c
   427  00135A  A4D8               	btfss	status,2,c
   428  00135C  EFB2  F009         	goto	u861
   429  001360  EFB4  F009         	goto	u860
   430  001364                     u861:
   431  001364  EFBA  F009         	goto	l1789
   432  001368                     u860:
   433  001368                     
   434                           ;main.c: 183:         {;main.c: 184:             all_off();
   435  001368  EC30  F00B         	call	_all_off	;wreg free
   436                           
   437                           ;main.c: 185:             left();
   438  00136C  ECDE  F005         	call	_left	;wreg free
   439                           
   440                           ;main.c: 186:         }
   441  001370  EF8B  F009         	goto	l1775
   442  001374                     l1789:
   443  001374  0E64               	movlw	100
   444  001376  180D               	xorwf	main@received_data^0,w,c
   445  001378  A4D8               	btfss	status,2,c
   446  00137A  EFC1  F009         	goto	u871
   447  00137E  EFC3  F009         	goto	u870
   448  001382                     u871:
   449  001382  EFC9  F009         	goto	l1793
   450  001386                     u870:
   451  001386                     
   452                           ;main.c: 189:         {;main.c: 190:             all_off();
   453  001386  EC30  F00B         	call	_all_off	;wreg free
   454                           
   455                           ;main.c: 191:             right();
   456  00138A  EC6A  F002         	call	_right	;wreg free
   457                           
   458                           ;main.c: 192:         }
   459  00138E  EF8B  F009         	goto	l1775
   460  001392                     l1793:
   461  001392  0E62               	movlw	98
   462  001394  180D               	xorwf	main@received_data^0,w,c
   463  001396  A4D8               	btfss	status,2,c
   464  001398  EFD0  F009         	goto	u881
   465  00139C  EFD2  F009         	goto	u880
   466  0013A0                     u881:
   467  0013A0  EFD6  F009         	goto	l1797
   468  0013A4                     u880:
   469  0013A4                     
   470                           ;main.c: 200:         {;main.c: 201:             all_break();
   471  0013A4  EC45  F00B         	call	_all_break	;wreg free
   472                           
   473                           ;main.c: 202:         }
   474  0013A8  EF8B  F009         	goto	l1775
   475  0013AC                     l1797:
   476  0013AC  0E30               	movlw	48
   477  0013AE  180D               	xorwf	main@received_data^0,w,c
   478  0013B0  A4D8               	btfss	status,2,c
   479  0013B2  EFDD  F009         	goto	u891
   480  0013B6  EFDF  F009         	goto	u890
   481  0013BA                     u891:
   482  0013BA  EFE3  F009         	goto	l1801
   483  0013BE                     u890:
   484  0013BE                     
   485                           ;main.c: 205:         {;main.c: 206:             all_off();
   486  0013BE  EC30  F00B         	call	_all_off	;wreg free
   487                           
   488                           ;main.c: 207:         }
   489  0013C2  EF8B  F009         	goto	l1775
   490  0013C6                     l1801:
   491  0013C6  0E34               	movlw	52
   492  0013C8  180D               	xorwf	main@received_data^0,w,c
   493  0013CA  A4D8               	btfss	status,2,c
   494  0013CC  EFEA  F009         	goto	u901
   495  0013D0  EFEC  F009         	goto	u900
   496  0013D4                     u901:
   497  0013D4  EFF2  F009         	goto	l1805
   498  0013D8                     u900:
   499  0013D8                     
   500                           ;main.c: 210:         {;main.c: 211:             all_off();
   501  0013D8  EC30  F00B         	call	_all_off	;wreg free
   502                           
   503                           ;main.c: 212:             forward_right();
   504  0013DC  ECBB  F006         	call	_forward_right	;wreg free
   505                           
   506                           ;main.c: 213:         }
   507  0013E0  EF8B  F009         	goto	l1775
   508  0013E4                     l1805:
   509  0013E4  0E31               	movlw	49
   510  0013E6  180D               	xorwf	main@received_data^0,w,c
   511  0013E8  A4D8               	btfss	status,2,c
   512  0013EA  EFF9  F009         	goto	u911
   513  0013EE  EFFB  F009         	goto	u910
   514  0013F2                     u911:
   515  0013F2  EF01  F00A         	goto	l1809
   516  0013F6                     u910:
   517  0013F6                     
   518                           ;main.c: 216:         {;main.c: 217:             all_off();
   519  0013F6  EC30  F00B         	call	_all_off	;wreg free
   520                           
   521                           ;main.c: 218:             forward_left();
   522  0013FA  EC98  F007         	call	_forward_left	;wreg free
   523                           
   524                           ;main.c: 219:         }
   525  0013FE  EF8B  F009         	goto	l1775
   526  001402                     l1809:
   527  001402  0E32               	movlw	50
   528  001404  180D               	xorwf	main@received_data^0,w,c
   529  001406  A4D8               	btfss	status,2,c
   530  001408  EF08  F00A         	goto	u921
   531  00140C  EF0A  F00A         	goto	u920
   532  001410                     u921:
   533  001410  EF10  F00A         	goto	l1813
   534  001414                     u920:
   535  001414                     
   536                           ;main.c: 222:         {;main.c: 223:             all_off();
   537  001414  EC30  F00B         	call	_all_off	;wreg free
   538                           
   539                           ;main.c: 224:             reverse_left();
   540  001418  EC24  F004         	call	_reverse_left	;wreg free
   541                           
   542                           ;main.c: 225:         }
   543  00141C  EF8B  F009         	goto	l1775
   544  001420                     l1813:
   545  001420  0E33               	movlw	51
   546  001422  180D               	xorwf	main@received_data^0,w,c
   547  001424  A4D8               	btfss	status,2,c
   548  001426  EF17  F00A         	goto	u931
   549  00142A  EF19  F00A         	goto	u930
   550  00142E                     u931:
   551  00142E  EF1F  F00A         	goto	l91
   552  001432                     u930:
   553  001432                     
   554                           ;main.c: 228:         {;main.c: 229:             all_off();
   555  001432  EC30  F00B         	call	_all_off	;wreg free
   556                           
   557                           ;main.c: 230:             reverse_right();
   558  001436  EC47  F003         	call	_reverse_right	;wreg free
   559  00143A  EF8B  F009         	goto	l1775
   560  00143E                     l91:
   561  00143E  EF8B  F009         	goto	l1775
   562  001442  EF13  F000         	goto	start
   563  001446                     __end_of_main:
   564                           	callstack 0
   565                           
   566 ;; *************** function _spi_slave_init *****************
   567 ;; Defined at:
   568 ;;		line 12 in file "spi.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels used: 1
   588 ;; Hardware stack levels required when called: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text1
   597  001634                     __ptext1:
   598                           	callstack 0
   599  001634                     _spi_slave_init:
   600                           	callstack 29
   601  001634                     
   602                           ;spi.c: 14:     SSP1STATbits.SMP = 0;
   603  001634  9EC7               	bcf	199,7,c	;volatile
   604                           
   605                           ;spi.c: 15:     SSP1STATbits.CKE = 1;
   606  001636  8CC7               	bsf	199,6,c	;volatile
   607                           
   608                           ;spi.c: 16:     SSP1CON1bits.CKP = 0;
   609  001638  98C6               	bcf	198,4,c	;volatile
   610  00163A                     
   611                           ;spi.c: 17:     SSP1CON1bits.SSPM = 0x04;
   612  00163A  50C6               	movf	198,w,c	;volatile
   613  00163C  0BF0               	andlw	-16
   614  00163E  0904               	iorlw	4
   615  001640  6EC6               	movwf	198,c	;volatile
   616                           
   617                           ;spi.c: 18:     SSP1CON3 = 0b00010000;
   618  001642  0E10               	movlw	16
   619  001644  6ECB               	movwf	203,c	;volatile
   620                           
   621                           ;spi.c: 19:     ADCON0 = 0x00;
   622  001646  0E00               	movlw	0
   623  001648  6EC2               	movwf	194,c	;volatile
   624                           
   625                           ;spi.c: 20:     ADCON1 = 0x00;
   626  00164A  0E00               	movlw	0
   627  00164C  6EC1               	movwf	193,c	;volatile
   628  00164E                     
   629                           ;spi.c: 21:     TRISAbits.RA5 = 1;
   630  00164E  8A92               	bsf	146,5,c	;volatile
   631  001650                     
   632                           ;spi.c: 22:     TRISCbits.RC3 = 1;
   633  001650  8694               	bsf	148,3,c	;volatile
   634  001652                     
   635                           ;spi.c: 23:     TRISCbits.RC5 = 0;
   636  001652  9A94               	bcf	148,5,c	;volatile
   637  001654                     
   638                           ;spi.c: 24:     TRISCbits.RC4 = 1;
   639  001654  8894               	bsf	148,4,c	;volatile
   640  001656                     
   641                           ;spi.c: 25:     SSP1IE=1;
   642  001656  869D               	bsf	3997,3,c	;volatile
   643  001658                     
   644                           ;spi.c: 26:     PEIE=1;
   645  001658  8CF2               	bsf	4082,6,c	;volatile
   646  00165A                     
   647                           ;spi.c: 27:     GIE=1;
   648  00165A  8EF2               	bsf	4082,7,c	;volatile
   649  00165C                     
   650                           ;spi.c: 28:     SSP1CON1bits.SSPEN = 1;
   651  00165C  8AC6               	bsf	198,5,c	;volatile
   652  00165E  0012               	return		;funcret
   653  001660                     __end_of_spi_slave_init:
   654                           	callstack 0
   655                           
   656 ;; *************** function _spi_data *****************
   657 ;; Defined at:
   658 ;;		line 31 in file "spi.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;  tx_data         1    wreg     unsigned char 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;  tx_data         1    0[COMRAM] unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   675 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;Total ram usage:        1 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text2
   687  00171E                     __ptext2:
   688                           	callstack 0
   689  00171E                     _spi_data:
   690                           	callstack 29
   691                           
   692                           ;incstack = 0
   693                           ;spi_data@tx_data stored from wreg
   694  00171E  6E01               	movwf	spi_data@tx_data^0,c
   695  001720                     
   696                           ;spi.c: 31: void spi_data(unsigned char tx_data);spi.c: 32: {;spi.c: 33:     SSP1BUF=tx_
      +                          data;
   697  001720  C001  FFC9         	movff	spi_data@tx_data,4041	;volatile
   698  001724  0012               	return		;funcret
   699  001726                     __end_of_spi_data:
   700                           	callstack 0
   701                           
   702 ;; *************** function _right *****************
   703 ;; Defined at:
   704 ;;		line 631 in file "lm629.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;Total ram usage:        0 bytes
   723 ;; Hardware stack levels used: 1
   724 ;; Hardware stack levels required when called: 5
   725 ;; This function calls:
   726 ;;		_check_busy
   727 ;;		_chip_select
   728 ;;		_motor_off
   729 ;;		_write_command
   730 ;;		_write_data
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text3
   737  0004D4                     __ptext3:
   738                           	callstack 0
   739  0004D4                     _right:
   740                           	callstack 25
   741  0004D4                     
   742                           ;lm629.c: 633:     chip_select(0);
   743  0004D4  0E00               	movlw	0
   744  0004D6  EC23  F00A         	call	_chip_select
   745                           
   746                           ;lm629.c: 634:     check_busy();
   747  0004DA  EC7E  F00B         	call	_check_busy	;wreg free
   748                           
   749                           ;lm629.c: 635:     motor_off();
   750  0004DE  EC5A  F00B         	call	_motor_off	;wreg free
   751                           
   752                           ;lm629.c: 636:     write_command(0x1F);
   753  0004E2  0E1F               	movlw	31
   754  0004E4  ECE3  F00A         	call	_write_command
   755                           
   756                           ;lm629.c: 637:     check_busy();
   757  0004E8  EC7E  F00B         	call	_check_busy	;wreg free
   758                           
   759                           ;lm629.c: 638:     write_data(0x08,0x28);
   760  0004EC  0E28               	movlw	40
   761  0004EE  6E06               	movwf	write_data@byte2^0,c
   762  0004F0  0E08               	movlw	8
   763  0004F2  EC95  F00A         	call	_write_data
   764                           
   765                           ;lm629.c: 639:     check_busy();
   766  0004F6  EC7E  F00B         	call	_check_busy	;wreg free
   767                           
   768                           ;lm629.c: 641:     write_data(0x00,0x00);
   769  0004FA  0E00               	movlw	0
   770  0004FC  6E06               	movwf	write_data@byte2^0,c
   771  0004FE  0E00               	movlw	0
   772  000500  EC95  F00A         	call	_write_data
   773                           
   774                           ;lm629.c: 642:     check_busy();
   775  000504  EC7E  F00B         	call	_check_busy	;wreg free
   776                           
   777                           ;lm629.c: 643:     write_data(0x00,0x48);
   778  000508  0E48               	movlw	72
   779  00050A  6E06               	movwf	write_data@byte2^0,c
   780  00050C  0E00               	movlw	0
   781  00050E  EC95  F00A         	call	_write_data
   782                           
   783                           ;lm629.c: 644:     check_busy();
   784  000512  EC7E  F00B         	call	_check_busy	;wreg free
   785                           
   786                           ;lm629.c: 646:     write_data(0x00,0x01);
   787  000516  0E01               	movlw	1
   788  000518  6E06               	movwf	write_data@byte2^0,c
   789  00051A  0E00               	movlw	0
   790  00051C  EC95  F00A         	call	_write_data
   791                           
   792                           ;lm629.c: 647:     check_busy();
   793  000520  EC7E  F00B         	call	_check_busy	;wreg free
   794                           
   795                           ;lm629.c: 648:     write_data(0xFA,0xD0);
   796  000524  0ED0               	movlw	208
   797  000526  6E06               	movwf	write_data@byte2^0,c
   798  000528  0EFA               	movlw	250
   799  00052A  EC95  F00A         	call	_write_data
   800                           
   801                           ;lm629.c: 649:     check_busy();
   802  00052E  EC7E  F00B         	call	_check_busy	;wreg free
   803                           
   804                           ;lm629.c: 652:     chip_select(1);
   805  000532  0E01               	movlw	1
   806  000534  EC23  F00A         	call	_chip_select
   807                           
   808                           ;lm629.c: 653:     check_busy();
   809  000538  EC7E  F00B         	call	_check_busy	;wreg free
   810                           
   811                           ;lm629.c: 654:     motor_off();
   812  00053C  EC5A  F00B         	call	_motor_off	;wreg free
   813                           
   814                           ;lm629.c: 655:     write_command(0x1F);
   815  000540  0E1F               	movlw	31
   816  000542  ECE3  F00A         	call	_write_command
   817                           
   818                           ;lm629.c: 656:     check_busy();
   819  000546  EC7E  F00B         	call	_check_busy	;wreg free
   820                           
   821                           ;lm629.c: 657:     write_data(0x08,0x28);
   822  00054A  0E28               	movlw	40
   823  00054C  6E06               	movwf	write_data@byte2^0,c
   824  00054E  0E08               	movlw	8
   825  000550  EC95  F00A         	call	_write_data
   826                           
   827                           ;lm629.c: 658:     check_busy();
   828  000554  EC7E  F00B         	call	_check_busy	;wreg free
   829                           
   830                           ;lm629.c: 660:     write_data(0x00,0x00);
   831  000558  0E00               	movlw	0
   832  00055A  6E06               	movwf	write_data@byte2^0,c
   833  00055C  0E00               	movlw	0
   834  00055E  EC95  F00A         	call	_write_data
   835                           
   836                           ;lm629.c: 661:     check_busy();
   837  000562  EC7E  F00B         	call	_check_busy	;wreg free
   838                           
   839                           ;lm629.c: 662:     write_data(0x00,0x48);
   840  000566  0E48               	movlw	72
   841  000568  6E06               	movwf	write_data@byte2^0,c
   842  00056A  0E00               	movlw	0
   843  00056C  EC95  F00A         	call	_write_data
   844                           
   845                           ;lm629.c: 663:     check_busy();
   846  000570  EC7E  F00B         	call	_check_busy	;wreg free
   847                           
   848                           ;lm629.c: 665:     write_data(0x00,0x01);
   849  000574  0E01               	movlw	1
   850  000576  6E06               	movwf	write_data@byte2^0,c
   851  000578  0E00               	movlw	0
   852  00057A  EC95  F00A         	call	_write_data
   853                           
   854                           ;lm629.c: 666:     check_busy();
   855  00057E  EC7E  F00B         	call	_check_busy	;wreg free
   856                           
   857                           ;lm629.c: 667:     write_data(0xFA,0xD0);
   858  000582  0ED0               	movlw	208
   859  000584  6E06               	movwf	write_data@byte2^0,c
   860  000586  0EFA               	movlw	250
   861  000588  EC95  F00A         	call	_write_data
   862                           
   863                           ;lm629.c: 668:     check_busy();
   864  00058C  EC7E  F00B         	call	_check_busy	;wreg free
   865                           
   866                           ;lm629.c: 671:     chip_select(2);
   867  000590  0E02               	movlw	2
   868  000592  EC23  F00A         	call	_chip_select
   869                           
   870                           ;lm629.c: 672:     check_busy();
   871  000596  EC7E  F00B         	call	_check_busy	;wreg free
   872                           
   873                           ;lm629.c: 673:     motor_off();
   874  00059A  EC5A  F00B         	call	_motor_off	;wreg free
   875                           
   876                           ;lm629.c: 674:     write_command(0x1F);
   877  00059E  0E1F               	movlw	31
   878  0005A0  ECE3  F00A         	call	_write_command
   879                           
   880                           ;lm629.c: 675:     check_busy();
   881  0005A4  EC7E  F00B         	call	_check_busy	;wreg free
   882                           
   883                           ;lm629.c: 676:     write_data(0x08,0x28);
   884  0005A8  0E28               	movlw	40
   885  0005AA  6E06               	movwf	write_data@byte2^0,c
   886  0005AC  0E08               	movlw	8
   887  0005AE  EC95  F00A         	call	_write_data
   888                           
   889                           ;lm629.c: 677:     check_busy();
   890  0005B2  EC7E  F00B         	call	_check_busy	;wreg free
   891                           
   892                           ;lm629.c: 679:     write_data(0x00,0x00);
   893  0005B6  0E00               	movlw	0
   894  0005B8  6E06               	movwf	write_data@byte2^0,c
   895  0005BA  0E00               	movlw	0
   896  0005BC  EC95  F00A         	call	_write_data
   897                           
   898                           ;lm629.c: 680:     check_busy();
   899  0005C0  EC7E  F00B         	call	_check_busy	;wreg free
   900                           
   901                           ;lm629.c: 681:     write_data(0x00,0x48);
   902  0005C4  0E48               	movlw	72
   903  0005C6  6E06               	movwf	write_data@byte2^0,c
   904  0005C8  0E00               	movlw	0
   905  0005CA  EC95  F00A         	call	_write_data
   906                           
   907                           ;lm629.c: 682:     check_busy();
   908  0005CE  EC7E  F00B         	call	_check_busy	;wreg free
   909                           
   910                           ;lm629.c: 684:     write_data(0x00,0x01);
   911  0005D2  0E01               	movlw	1
   912  0005D4  6E06               	movwf	write_data@byte2^0,c
   913  0005D6  0E00               	movlw	0
   914  0005D8  EC95  F00A         	call	_write_data
   915                           
   916                           ;lm629.c: 685:     check_busy();
   917  0005DC  EC7E  F00B         	call	_check_busy	;wreg free
   918                           
   919                           ;lm629.c: 686:     write_data(0xFA,0xD0);
   920  0005E0  0ED0               	movlw	208
   921  0005E2  6E06               	movwf	write_data@byte2^0,c
   922  0005E4  0EFA               	movlw	250
   923  0005E6  EC95  F00A         	call	_write_data
   924                           
   925                           ;lm629.c: 687:     check_busy();
   926  0005EA  EC7E  F00B         	call	_check_busy	;wreg free
   927                           
   928                           ;lm629.c: 690:     chip_select(3);
   929  0005EE  0E03               	movlw	3
   930  0005F0  EC23  F00A         	call	_chip_select
   931                           
   932                           ;lm629.c: 691:     check_busy();
   933  0005F4  EC7E  F00B         	call	_check_busy	;wreg free
   934                           
   935                           ;lm629.c: 692:     motor_off();
   936  0005F8  EC5A  F00B         	call	_motor_off	;wreg free
   937                           
   938                           ;lm629.c: 693:     write_command(0x1F);
   939  0005FC  0E1F               	movlw	31
   940  0005FE  ECE3  F00A         	call	_write_command
   941                           
   942                           ;lm629.c: 694:     check_busy();
   943  000602  EC7E  F00B         	call	_check_busy	;wreg free
   944                           
   945                           ;lm629.c: 695:     write_data(0x08,0x28);
   946  000606  0E28               	movlw	40
   947  000608  6E06               	movwf	write_data@byte2^0,c
   948  00060A  0E08               	movlw	8
   949  00060C  EC95  F00A         	call	_write_data
   950                           
   951                           ;lm629.c: 696:     check_busy();
   952  000610  EC7E  F00B         	call	_check_busy	;wreg free
   953                           
   954                           ;lm629.c: 698:     write_data(0x00,0x00);
   955  000614  0E00               	movlw	0
   956  000616  6E06               	movwf	write_data@byte2^0,c
   957  000618  0E00               	movlw	0
   958  00061A  EC95  F00A         	call	_write_data
   959                           
   960                           ;lm629.c: 699:     check_busy();
   961  00061E  EC7E  F00B         	call	_check_busy	;wreg free
   962                           
   963                           ;lm629.c: 700:     write_data(0x00,0x48);
   964  000622  0E48               	movlw	72
   965  000624  6E06               	movwf	write_data@byte2^0,c
   966  000626  0E00               	movlw	0
   967  000628  EC95  F00A         	call	_write_data
   968                           
   969                           ;lm629.c: 701:     check_busy();
   970  00062C  EC7E  F00B         	call	_check_busy	;wreg free
   971                           
   972                           ;lm629.c: 703:     write_data(0x00,0x01);
   973  000630  0E01               	movlw	1
   974  000632  6E06               	movwf	write_data@byte2^0,c
   975  000634  0E00               	movlw	0
   976  000636  EC95  F00A         	call	_write_data
   977                           
   978                           ;lm629.c: 704:     check_busy();
   979  00063A  EC7E  F00B         	call	_check_busy	;wreg free
   980                           
   981                           ;lm629.c: 705:     write_data(0xFA,0xD0);
   982  00063E  0ED0               	movlw	208
   983  000640  6E06               	movwf	write_data@byte2^0,c
   984  000642  0EFA               	movlw	250
   985  000644  EC95  F00A         	call	_write_data
   986                           
   987                           ;lm629.c: 706:     check_busy();
   988  000648  EC7E  F00B         	call	_check_busy	;wreg free
   989                           
   990                           ;lm629.c: 709:     chip_select(0);
   991  00064C  0E00               	movlw	0
   992  00064E  EC23  F00A         	call	_chip_select
   993                           
   994                           ;lm629.c: 710:     write_command(0x01);
   995  000652  0E01               	movlw	1
   996  000654  ECE3  F00A         	call	_write_command
   997                           
   998                           ;lm629.c: 711:     check_busy();
   999  000658  EC7E  F00B         	call	_check_busy	;wreg free
  1000                           
  1001                           ;lm629.c: 713:     chip_select(2);
  1002  00065C  0E02               	movlw	2
  1003  00065E  EC23  F00A         	call	_chip_select
  1004                           
  1005                           ;lm629.c: 714:     write_command(0x01);
  1006  000662  0E01               	movlw	1
  1007  000664  ECE3  F00A         	call	_write_command
  1008                           
  1009                           ;lm629.c: 715:     check_busy();
  1010  000668  EC7E  F00B         	call	_check_busy	;wreg free
  1011                           
  1012                           ;lm629.c: 717:     chip_select(1);
  1013  00066C  0E01               	movlw	1
  1014  00066E  EC23  F00A         	call	_chip_select
  1015                           
  1016                           ;lm629.c: 718:     write_command(0x01);
  1017  000672  0E01               	movlw	1
  1018  000674  ECE3  F00A         	call	_write_command
  1019                           
  1020                           ;lm629.c: 719:     check_busy();
  1021  000678  EC7E  F00B         	call	_check_busy	;wreg free
  1022                           
  1023                           ;lm629.c: 721:     chip_select(3);
  1024  00067C  0E03               	movlw	3
  1025  00067E  EC23  F00A         	call	_chip_select
  1026                           
  1027                           ;lm629.c: 722:     write_command(0x01);
  1028  000682  0E01               	movlw	1
  1029  000684  ECE3  F00A         	call	_write_command
  1030                           
  1031                           ;lm629.c: 723:     check_busy();
  1032  000688  EC7E  F00B         	call	_check_busy	;wreg free
  1033  00068C  0012               	return		;funcret
  1034  00068E                     __end_of_right:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _reverse_right *****************
  1038 ;; Defined at:
  1039 ;;		line 1105 in file "lm629.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 5
  1060 ;; This function calls:
  1061 ;;		_check_busy
  1062 ;;		_chip_select
  1063 ;;		_motor_off
  1064 ;;		_write_command
  1065 ;;		_write_data
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text4
  1072  00068E                     __ptext4:
  1073                           	callstack 0
  1074  00068E                     _reverse_right:
  1075                           	callstack 25
  1076  00068E                     
  1077                           ;lm629.c: 1107:     chip_select(1);
  1078  00068E  0E01               	movlw	1
  1079  000690  EC23  F00A         	call	_chip_select
  1080                           
  1081                           ;lm629.c: 1108:     check_busy();
  1082  000694  EC7E  F00B         	call	_check_busy	;wreg free
  1083                           
  1084                           ;lm629.c: 1109:     motor_off();
  1085  000698  EC5A  F00B         	call	_motor_off	;wreg free
  1086                           
  1087                           ;lm629.c: 1110:     write_command(0x1F);
  1088  00069C  0E1F               	movlw	31
  1089  00069E  ECE3  F00A         	call	_write_command
  1090                           
  1091                           ;lm629.c: 1111:     check_busy();
  1092  0006A2  EC7E  F00B         	call	_check_busy	;wreg free
  1093                           
  1094                           ;lm629.c: 1112:     write_data(0x18,0x28);
  1095  0006A6  0E28               	movlw	40
  1096  0006A8  6E06               	movwf	write_data@byte2^0,c
  1097  0006AA  0E18               	movlw	24
  1098  0006AC  EC95  F00A         	call	_write_data
  1099                           
  1100                           ;lm629.c: 1113:     check_busy();
  1101  0006B0  EC7E  F00B         	call	_check_busy	;wreg free
  1102                           
  1103                           ;lm629.c: 1115:     write_data(0x00,0x00);
  1104  0006B4  0E00               	movlw	0
  1105  0006B6  6E06               	movwf	write_data@byte2^0,c
  1106  0006B8  0E00               	movlw	0
  1107  0006BA  EC95  F00A         	call	_write_data
  1108                           
  1109                           ;lm629.c: 1116:     check_busy();
  1110  0006BE  EC7E  F00B         	call	_check_busy	;wreg free
  1111                           
  1112                           ;lm629.c: 1117:     write_data(0x00,0x48);
  1113  0006C2  0E48               	movlw	72
  1114  0006C4  6E06               	movwf	write_data@byte2^0,c
  1115  0006C6  0E00               	movlw	0
  1116  0006C8  EC95  F00A         	call	_write_data
  1117                           
  1118                           ;lm629.c: 1118:     check_busy();
  1119  0006CC  EC7E  F00B         	call	_check_busy	;wreg free
  1120                           
  1121                           ;lm629.c: 1120:     write_data(0x00,0x00);
  1122  0006D0  0E00               	movlw	0
  1123  0006D2  6E06               	movwf	write_data@byte2^0,c
  1124  0006D4  0E00               	movlw	0
  1125  0006D6  EC95  F00A         	call	_write_data
  1126                           
  1127                           ;lm629.c: 1121:     check_busy();
  1128  0006DA  EC7E  F00B         	call	_check_busy	;wreg free
  1129                           
  1130                           ;lm629.c: 1122:     write_data(0xFD,0x68);
  1131  0006DE  0E68               	movlw	104
  1132  0006E0  6E06               	movwf	write_data@byte2^0,c
  1133  0006E2  0EFD               	movlw	253
  1134  0006E4  EC95  F00A         	call	_write_data
  1135                           
  1136                           ;lm629.c: 1123:     check_busy();
  1137  0006E8  EC7E  F00B         	call	_check_busy	;wreg free
  1138                           
  1139                           ;lm629.c: 1126:     chip_select(0);
  1140  0006EC  0E00               	movlw	0
  1141  0006EE  EC23  F00A         	call	_chip_select
  1142                           
  1143                           ;lm629.c: 1127:     check_busy();
  1144  0006F2  EC7E  F00B         	call	_check_busy	;wreg free
  1145                           
  1146                           ;lm629.c: 1128:     motor_off();
  1147  0006F6  EC5A  F00B         	call	_motor_off	;wreg free
  1148                           
  1149                           ;lm629.c: 1129:     write_command(0x1F);
  1150  0006FA  0E1F               	movlw	31
  1151  0006FC  ECE3  F00A         	call	_write_command
  1152                           
  1153                           ;lm629.c: 1130:     check_busy();
  1154  000700  EC7E  F00B         	call	_check_busy	;wreg free
  1155                           
  1156                           ;lm629.c: 1131:     write_data(0x08,0x28);
  1157  000704  0E28               	movlw	40
  1158  000706  6E06               	movwf	write_data@byte2^0,c
  1159  000708  0E08               	movlw	8
  1160  00070A  EC95  F00A         	call	_write_data
  1161                           
  1162                           ;lm629.c: 1132:     check_busy();
  1163  00070E  EC7E  F00B         	call	_check_busy	;wreg free
  1164                           
  1165                           ;lm629.c: 1134:     write_data(0x00,0x00);
  1166  000712  0E00               	movlw	0
  1167  000714  6E06               	movwf	write_data@byte2^0,c
  1168  000716  0E00               	movlw	0
  1169  000718  EC95  F00A         	call	_write_data
  1170                           
  1171                           ;lm629.c: 1135:     check_busy();
  1172  00071C  EC7E  F00B         	call	_check_busy	;wreg free
  1173                           
  1174                           ;lm629.c: 1136:     write_data(0x00,0x48);
  1175  000720  0E48               	movlw	72
  1176  000722  6E06               	movwf	write_data@byte2^0,c
  1177  000724  0E00               	movlw	0
  1178  000726  EC95  F00A         	call	_write_data
  1179                           
  1180                           ;lm629.c: 1137:     check_busy();
  1181  00072A  EC7E  F00B         	call	_check_busy	;wreg free
  1182                           
  1183                           ;lm629.c: 1139:     write_data(0x00,0x01);
  1184  00072E  0E01               	movlw	1
  1185  000730  6E06               	movwf	write_data@byte2^0,c
  1186  000732  0E00               	movlw	0
  1187  000734  EC95  F00A         	call	_write_data
  1188                           
  1189                           ;lm629.c: 1140:     check_busy();
  1190  000738  EC7E  F00B         	call	_check_busy	;wreg free
  1191                           
  1192                           ;lm629.c: 1141:     write_data(0xFA,0xD0);
  1193  00073C  0ED0               	movlw	208
  1194  00073E  6E06               	movwf	write_data@byte2^0,c
  1195  000740  0EFA               	movlw	250
  1196  000742  EC95  F00A         	call	_write_data
  1197                           
  1198                           ;lm629.c: 1142:     check_busy();
  1199  000746  EC7E  F00B         	call	_check_busy	;wreg free
  1200                           
  1201                           ;lm629.c: 1146:     chip_select(3);
  1202  00074A  0E03               	movlw	3
  1203  00074C  EC23  F00A         	call	_chip_select
  1204                           
  1205                           ;lm629.c: 1147:     check_busy();
  1206  000750  EC7E  F00B         	call	_check_busy	;wreg free
  1207                           
  1208                           ;lm629.c: 1148:     motor_off();
  1209  000754  EC5A  F00B         	call	_motor_off	;wreg free
  1210                           
  1211                           ;lm629.c: 1149:     write_command(0x1F);
  1212  000758  0E1F               	movlw	31
  1213  00075A  ECE3  F00A         	call	_write_command
  1214                           
  1215                           ;lm629.c: 1150:     check_busy();
  1216  00075E  EC7E  F00B         	call	_check_busy	;wreg free
  1217                           
  1218                           ;lm629.c: 1151:     write_data(0x08,0x28);
  1219  000762  0E28               	movlw	40
  1220  000764  6E06               	movwf	write_data@byte2^0,c
  1221  000766  0E08               	movlw	8
  1222  000768  EC95  F00A         	call	_write_data
  1223                           
  1224                           ;lm629.c: 1152:     check_busy();
  1225  00076C  EC7E  F00B         	call	_check_busy	;wreg free
  1226                           
  1227                           ;lm629.c: 1154:     write_data(0x00,0x00);
  1228  000770  0E00               	movlw	0
  1229  000772  6E06               	movwf	write_data@byte2^0,c
  1230  000774  0E00               	movlw	0
  1231  000776  EC95  F00A         	call	_write_data
  1232                           
  1233                           ;lm629.c: 1155:     check_busy();
  1234  00077A  EC7E  F00B         	call	_check_busy	;wreg free
  1235                           
  1236                           ;lm629.c: 1156:     write_data(0x00,0x48);
  1237  00077E  0E48               	movlw	72
  1238  000780  6E06               	movwf	write_data@byte2^0,c
  1239  000782  0E00               	movlw	0
  1240  000784  EC95  F00A         	call	_write_data
  1241                           
  1242                           ;lm629.c: 1157:     check_busy();
  1243  000788  EC7E  F00B         	call	_check_busy	;wreg free
  1244                           
  1245                           ;lm629.c: 1159:     write_data(0x00,0x01);
  1246  00078C  0E01               	movlw	1
  1247  00078E  6E06               	movwf	write_data@byte2^0,c
  1248  000790  0E00               	movlw	0
  1249  000792  EC95  F00A         	call	_write_data
  1250                           
  1251                           ;lm629.c: 1160:     check_busy();
  1252  000796  EC7E  F00B         	call	_check_busy	;wreg free
  1253                           
  1254                           ;lm629.c: 1161:     write_data(0xFA,0xD0);
  1255  00079A  0ED0               	movlw	208
  1256  00079C  6E06               	movwf	write_data@byte2^0,c
  1257  00079E  0EFA               	movlw	250
  1258  0007A0  EC95  F00A         	call	_write_data
  1259                           
  1260                           ;lm629.c: 1162:     check_busy();
  1261  0007A4  EC7E  F00B         	call	_check_busy	;wreg free
  1262                           
  1263                           ;lm629.c: 1164:     chip_select(2);
  1264  0007A8  0E02               	movlw	2
  1265  0007AA  EC23  F00A         	call	_chip_select
  1266                           
  1267                           ;lm629.c: 1165:     check_busy();
  1268  0007AE  EC7E  F00B         	call	_check_busy	;wreg free
  1269                           
  1270                           ;lm629.c: 1166:     motor_off();
  1271  0007B2  EC5A  F00B         	call	_motor_off	;wreg free
  1272                           
  1273                           ;lm629.c: 1167:     write_command(0x1F);
  1274  0007B6  0E1F               	movlw	31
  1275  0007B8  ECE3  F00A         	call	_write_command
  1276                           
  1277                           ;lm629.c: 1168:     check_busy();
  1278  0007BC  EC7E  F00B         	call	_check_busy	;wreg free
  1279                           
  1280                           ;lm629.c: 1169:     write_data(0x18,0x28);
  1281  0007C0  0E28               	movlw	40
  1282  0007C2  6E06               	movwf	write_data@byte2^0,c
  1283  0007C4  0E18               	movlw	24
  1284  0007C6  EC95  F00A         	call	_write_data
  1285                           
  1286                           ;lm629.c: 1170:     check_busy();
  1287  0007CA  EC7E  F00B         	call	_check_busy	;wreg free
  1288                           
  1289                           ;lm629.c: 1172:     write_data(0x00,0x00);
  1290  0007CE  0E00               	movlw	0
  1291  0007D0  6E06               	movwf	write_data@byte2^0,c
  1292  0007D2  0E00               	movlw	0
  1293  0007D4  EC95  F00A         	call	_write_data
  1294                           
  1295                           ;lm629.c: 1173:     check_busy();
  1296  0007D8  EC7E  F00B         	call	_check_busy	;wreg free
  1297                           
  1298                           ;lm629.c: 1174:     write_data(0x00,0x48);
  1299  0007DC  0E48               	movlw	72
  1300  0007DE  6E06               	movwf	write_data@byte2^0,c
  1301  0007E0  0E00               	movlw	0
  1302  0007E2  EC95  F00A         	call	_write_data
  1303                           
  1304                           ;lm629.c: 1175:     check_busy();
  1305  0007E6  EC7E  F00B         	call	_check_busy	;wreg free
  1306                           
  1307                           ;lm629.c: 1177:     write_data(0x00,0x00);
  1308  0007EA  0E00               	movlw	0
  1309  0007EC  6E06               	movwf	write_data@byte2^0,c
  1310  0007EE  0E00               	movlw	0
  1311  0007F0  EC95  F00A         	call	_write_data
  1312                           
  1313                           ;lm629.c: 1178:     check_busy();
  1314  0007F4  EC7E  F00B         	call	_check_busy	;wreg free
  1315                           
  1316                           ;lm629.c: 1179:     write_data(0xFD,0x68);
  1317  0007F8  0E68               	movlw	104
  1318  0007FA  6E06               	movwf	write_data@byte2^0,c
  1319  0007FC  0EFD               	movlw	253
  1320  0007FE  EC95  F00A         	call	_write_data
  1321                           
  1322                           ;lm629.c: 1180:     check_busy();
  1323  000802  EC7E  F00B         	call	_check_busy	;wreg free
  1324                           
  1325                           ;lm629.c: 1183:     chip_select(0);
  1326  000806  0E00               	movlw	0
  1327  000808  EC23  F00A         	call	_chip_select
  1328                           
  1329                           ;lm629.c: 1184:     write_command(0x01);
  1330  00080C  0E01               	movlw	1
  1331  00080E  ECE3  F00A         	call	_write_command
  1332                           
  1333                           ;lm629.c: 1185:     check_busy();
  1334  000812  EC7E  F00B         	call	_check_busy	;wreg free
  1335                           
  1336                           ;lm629.c: 1187:     chip_select(2);
  1337  000816  0E02               	movlw	2
  1338  000818  EC23  F00A         	call	_chip_select
  1339                           
  1340                           ;lm629.c: 1188:     write_command(0x01);
  1341  00081C  0E01               	movlw	1
  1342  00081E  ECE3  F00A         	call	_write_command
  1343                           
  1344                           ;lm629.c: 1189:     check_busy();
  1345  000822  EC7E  F00B         	call	_check_busy	;wreg free
  1346                           
  1347                           ;lm629.c: 1191:     chip_select(1);
  1348  000826  0E01               	movlw	1
  1349  000828  EC23  F00A         	call	_chip_select
  1350                           
  1351                           ;lm629.c: 1192:     write_command(0x01);
  1352  00082C  0E01               	movlw	1
  1353  00082E  ECE3  F00A         	call	_write_command
  1354                           
  1355                           ;lm629.c: 1193:     check_busy();
  1356  000832  EC7E  F00B         	call	_check_busy	;wreg free
  1357                           
  1358                           ;lm629.c: 1195:     chip_select(3);
  1359  000836  0E03               	movlw	3
  1360  000838  EC23  F00A         	call	_chip_select
  1361                           
  1362                           ;lm629.c: 1196:     write_command(0x01);
  1363  00083C  0E01               	movlw	1
  1364  00083E  ECE3  F00A         	call	_write_command
  1365                           
  1366                           ;lm629.c: 1197:     check_busy();
  1367  000842  EC7E  F00B         	call	_check_busy	;wreg free
  1368  000846  0012               	return		;funcret
  1369  000848                     __end_of_reverse_right:
  1370                           	callstack 0
  1371                           
  1372 ;; *************** function _reverse_left *****************
  1373 ;; Defined at:
  1374 ;;		line 1010 in file "lm629.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;		None
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  1    wreg      void 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2, status,0, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;Total ram usage:        0 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 5
  1395 ;; This function calls:
  1396 ;;		_check_busy
  1397 ;;		_chip_select
  1398 ;;		_motor_off
  1399 ;;		_write_command
  1400 ;;		_write_data
  1401 ;; This function is called by:
  1402 ;;		_main
  1403 ;; This function uses a non-reentrant model
  1404 ;;
  1405                           
  1406                           	psect	text5
  1407  000848                     __ptext5:
  1408                           	callstack 0
  1409  000848                     _reverse_left:
  1410                           	callstack 25
  1411  000848                     
  1412                           ;lm629.c: 1012:     chip_select(1);
  1413  000848  0E01               	movlw	1
  1414  00084A  EC23  F00A         	call	_chip_select
  1415                           
  1416                           ;lm629.c: 1013:     check_busy();
  1417  00084E  EC7E  F00B         	call	_check_busy	;wreg free
  1418                           
  1419                           ;lm629.c: 1014:     motor_off();
  1420  000852  EC5A  F00B         	call	_motor_off	;wreg free
  1421                           
  1422                           ;lm629.c: 1015:     write_command(0x1F);
  1423  000856  0E1F               	movlw	31
  1424  000858  ECE3  F00A         	call	_write_command
  1425                           
  1426                           ;lm629.c: 1016:     check_busy();
  1427  00085C  EC7E  F00B         	call	_check_busy	;wreg free
  1428                           
  1429                           ;lm629.c: 1017:     write_data(0x18,0x28);
  1430  000860  0E28               	movlw	40
  1431  000862  6E06               	movwf	write_data@byte2^0,c
  1432  000864  0E18               	movlw	24
  1433  000866  EC95  F00A         	call	_write_data
  1434                           
  1435                           ;lm629.c: 1018:     check_busy();
  1436  00086A  EC7E  F00B         	call	_check_busy	;wreg free
  1437                           
  1438                           ;lm629.c: 1020:     write_data(0x00,0x00);
  1439  00086E  0E00               	movlw	0
  1440  000870  6E06               	movwf	write_data@byte2^0,c
  1441  000872  0E00               	movlw	0
  1442  000874  EC95  F00A         	call	_write_data
  1443                           
  1444                           ;lm629.c: 1021:     check_busy();
  1445  000878  EC7E  F00B         	call	_check_busy	;wreg free
  1446                           
  1447                           ;lm629.c: 1022:     write_data(0x00,0x48);
  1448  00087C  0E48               	movlw	72
  1449  00087E  6E06               	movwf	write_data@byte2^0,c
  1450  000880  0E00               	movlw	0
  1451  000882  EC95  F00A         	call	_write_data
  1452                           
  1453                           ;lm629.c: 1023:     check_busy();
  1454  000886  EC7E  F00B         	call	_check_busy	;wreg free
  1455                           
  1456                           ;lm629.c: 1025:     write_data(0x00,0x01);
  1457  00088A  0E01               	movlw	1
  1458  00088C  6E06               	movwf	write_data@byte2^0,c
  1459  00088E  0E00               	movlw	0
  1460  000890  EC95  F00A         	call	_write_data
  1461                           
  1462                           ;lm629.c: 1026:     check_busy();
  1463  000894  EC7E  F00B         	call	_check_busy	;wreg free
  1464                           
  1465                           ;lm629.c: 1027:     write_data(0xFA,0xD0);
  1466  000898  0ED0               	movlw	208
  1467  00089A  6E06               	movwf	write_data@byte2^0,c
  1468  00089C  0EFA               	movlw	250
  1469  00089E  EC95  F00A         	call	_write_data
  1470                           
  1471                           ;lm629.c: 1028:     check_busy();
  1472  0008A2  EC7E  F00B         	call	_check_busy	;wreg free
  1473                           
  1474                           ;lm629.c: 1031:     chip_select(0);
  1475  0008A6  0E00               	movlw	0
  1476  0008A8  EC23  F00A         	call	_chip_select
  1477                           
  1478                           ;lm629.c: 1032:     check_busy();
  1479  0008AC  EC7E  F00B         	call	_check_busy	;wreg free
  1480                           
  1481                           ;lm629.c: 1033:     motor_off();
  1482  0008B0  EC5A  F00B         	call	_motor_off	;wreg free
  1483                           
  1484                           ;lm629.c: 1034:     write_command(0x1F);
  1485  0008B4  0E1F               	movlw	31
  1486  0008B6  ECE3  F00A         	call	_write_command
  1487                           
  1488                           ;lm629.c: 1035:     check_busy();
  1489  0008BA  EC7E  F00B         	call	_check_busy	;wreg free
  1490                           
  1491                           ;lm629.c: 1036:     write_data(0x08,0x28);
  1492  0008BE  0E28               	movlw	40
  1493  0008C0  6E06               	movwf	write_data@byte2^0,c
  1494  0008C2  0E08               	movlw	8
  1495  0008C4  EC95  F00A         	call	_write_data
  1496                           
  1497                           ;lm629.c: 1037:     check_busy();
  1498  0008C8  EC7E  F00B         	call	_check_busy	;wreg free
  1499                           
  1500                           ;lm629.c: 1039:     write_data(0x00,0x00);
  1501  0008CC  0E00               	movlw	0
  1502  0008CE  6E06               	movwf	write_data@byte2^0,c
  1503  0008D0  0E00               	movlw	0
  1504  0008D2  EC95  F00A         	call	_write_data
  1505                           
  1506                           ;lm629.c: 1040:     check_busy();
  1507  0008D6  EC7E  F00B         	call	_check_busy	;wreg free
  1508                           
  1509                           ;lm629.c: 1041:     write_data(0x00,0x48);
  1510  0008DA  0E48               	movlw	72
  1511  0008DC  6E06               	movwf	write_data@byte2^0,c
  1512  0008DE  0E00               	movlw	0
  1513  0008E0  EC95  F00A         	call	_write_data
  1514                           
  1515                           ;lm629.c: 1042:     check_busy();
  1516  0008E4  EC7E  F00B         	call	_check_busy	;wreg free
  1517                           
  1518                           ;lm629.c: 1044:     write_data(0x00,0x00);
  1519  0008E8  0E00               	movlw	0
  1520  0008EA  6E06               	movwf	write_data@byte2^0,c
  1521  0008EC  0E00               	movlw	0
  1522  0008EE  EC95  F00A         	call	_write_data
  1523                           
  1524                           ;lm629.c: 1045:     check_busy();
  1525  0008F2  EC7E  F00B         	call	_check_busy	;wreg free
  1526                           
  1527                           ;lm629.c: 1046:     write_data(0xFD,0x68);
  1528  0008F6  0E68               	movlw	104
  1529  0008F8  6E06               	movwf	write_data@byte2^0,c
  1530  0008FA  0EFD               	movlw	253
  1531  0008FC  EC95  F00A         	call	_write_data
  1532                           
  1533                           ;lm629.c: 1047:     check_busy();
  1534  000900  EC7E  F00B         	call	_check_busy	;wreg free
  1535                           
  1536                           ;lm629.c: 1051:     chip_select(3);
  1537  000904  0E03               	movlw	3
  1538  000906  EC23  F00A         	call	_chip_select
  1539                           
  1540                           ;lm629.c: 1052:     check_busy();
  1541  00090A  EC7E  F00B         	call	_check_busy	;wreg free
  1542                           
  1543                           ;lm629.c: 1053:     motor_off();
  1544  00090E  EC5A  F00B         	call	_motor_off	;wreg free
  1545                           
  1546                           ;lm629.c: 1054:     write_command(0x1F);
  1547  000912  0E1F               	movlw	31
  1548  000914  ECE3  F00A         	call	_write_command
  1549                           
  1550                           ;lm629.c: 1055:     check_busy();
  1551  000918  EC7E  F00B         	call	_check_busy	;wreg free
  1552                           
  1553                           ;lm629.c: 1056:     write_data(0x08,0x28);
  1554  00091C  0E28               	movlw	40
  1555  00091E  6E06               	movwf	write_data@byte2^0,c
  1556  000920  0E08               	movlw	8
  1557  000922  EC95  F00A         	call	_write_data
  1558                           
  1559                           ;lm629.c: 1057:     check_busy();
  1560  000926  EC7E  F00B         	call	_check_busy	;wreg free
  1561                           
  1562                           ;lm629.c: 1059:     write_data(0x00,0x00);
  1563  00092A  0E00               	movlw	0
  1564  00092C  6E06               	movwf	write_data@byte2^0,c
  1565  00092E  0E00               	movlw	0
  1566  000930  EC95  F00A         	call	_write_data
  1567                           
  1568                           ;lm629.c: 1060:     check_busy();
  1569  000934  EC7E  F00B         	call	_check_busy	;wreg free
  1570                           
  1571                           ;lm629.c: 1061:     write_data(0x00,0x48);
  1572  000938  0E48               	movlw	72
  1573  00093A  6E06               	movwf	write_data@byte2^0,c
  1574  00093C  0E00               	movlw	0
  1575  00093E  EC95  F00A         	call	_write_data
  1576                           
  1577                           ;lm629.c: 1062:     check_busy();
  1578  000942  EC7E  F00B         	call	_check_busy	;wreg free
  1579                           
  1580                           ;lm629.c: 1064:     write_data(0x00,0x00);
  1581  000946  0E00               	movlw	0
  1582  000948  6E06               	movwf	write_data@byte2^0,c
  1583  00094A  0E00               	movlw	0
  1584  00094C  EC95  F00A         	call	_write_data
  1585                           
  1586                           ;lm629.c: 1065:     check_busy();
  1587  000950  EC7E  F00B         	call	_check_busy	;wreg free
  1588                           
  1589                           ;lm629.c: 1066:     write_data(0xFD,0x68);
  1590  000954  0E68               	movlw	104
  1591  000956  6E06               	movwf	write_data@byte2^0,c
  1592  000958  0EFD               	movlw	253
  1593  00095A  EC95  F00A         	call	_write_data
  1594                           
  1595                           ;lm629.c: 1067:     check_busy();
  1596  00095E  EC7E  F00B         	call	_check_busy	;wreg free
  1597                           
  1598                           ;lm629.c: 1069:     chip_select(2);
  1599  000962  0E02               	movlw	2
  1600  000964  EC23  F00A         	call	_chip_select
  1601                           
  1602                           ;lm629.c: 1070:     check_busy();
  1603  000968  EC7E  F00B         	call	_check_busy	;wreg free
  1604                           
  1605                           ;lm629.c: 1071:     motor_off();
  1606  00096C  EC5A  F00B         	call	_motor_off	;wreg free
  1607                           
  1608                           ;lm629.c: 1072:     write_command(0x1F);
  1609  000970  0E1F               	movlw	31
  1610  000972  ECE3  F00A         	call	_write_command
  1611                           
  1612                           ;lm629.c: 1073:     check_busy();
  1613  000976  EC7E  F00B         	call	_check_busy	;wreg free
  1614                           
  1615                           ;lm629.c: 1074:     write_data(0x18,0x28);
  1616  00097A  0E28               	movlw	40
  1617  00097C  6E06               	movwf	write_data@byte2^0,c
  1618  00097E  0E18               	movlw	24
  1619  000980  EC95  F00A         	call	_write_data
  1620                           
  1621                           ;lm629.c: 1075:     check_busy();
  1622  000984  EC7E  F00B         	call	_check_busy	;wreg free
  1623                           
  1624                           ;lm629.c: 1077:     write_data(0x00,0x00);
  1625  000988  0E00               	movlw	0
  1626  00098A  6E06               	movwf	write_data@byte2^0,c
  1627  00098C  0E00               	movlw	0
  1628  00098E  EC95  F00A         	call	_write_data
  1629                           
  1630                           ;lm629.c: 1078:     check_busy();
  1631  000992  EC7E  F00B         	call	_check_busy	;wreg free
  1632                           
  1633                           ;lm629.c: 1079:     write_data(0x00,0x48);
  1634  000996  0E48               	movlw	72
  1635  000998  6E06               	movwf	write_data@byte2^0,c
  1636  00099A  0E00               	movlw	0
  1637  00099C  EC95  F00A         	call	_write_data
  1638                           
  1639                           ;lm629.c: 1080:     check_busy();
  1640  0009A0  EC7E  F00B         	call	_check_busy	;wreg free
  1641                           
  1642                           ;lm629.c: 1082:     write_data(0x00,0x01);
  1643  0009A4  0E01               	movlw	1
  1644  0009A6  6E06               	movwf	write_data@byte2^0,c
  1645  0009A8  0E00               	movlw	0
  1646  0009AA  EC95  F00A         	call	_write_data
  1647                           
  1648                           ;lm629.c: 1083:     check_busy();
  1649  0009AE  EC7E  F00B         	call	_check_busy	;wreg free
  1650                           
  1651                           ;lm629.c: 1084:     write_data(0xFA,0xD0);
  1652  0009B2  0ED0               	movlw	208
  1653  0009B4  6E06               	movwf	write_data@byte2^0,c
  1654  0009B6  0EFA               	movlw	250
  1655  0009B8  EC95  F00A         	call	_write_data
  1656                           
  1657                           ;lm629.c: 1085:     check_busy();
  1658  0009BC  EC7E  F00B         	call	_check_busy	;wreg free
  1659                           
  1660                           ;lm629.c: 1088:     chip_select(0);
  1661  0009C0  0E00               	movlw	0
  1662  0009C2  EC23  F00A         	call	_chip_select
  1663                           
  1664                           ;lm629.c: 1089:     write_command(0x01);
  1665  0009C6  0E01               	movlw	1
  1666  0009C8  ECE3  F00A         	call	_write_command
  1667                           
  1668                           ;lm629.c: 1090:     check_busy();
  1669  0009CC  EC7E  F00B         	call	_check_busy	;wreg free
  1670                           
  1671                           ;lm629.c: 1092:     chip_select(2);
  1672  0009D0  0E02               	movlw	2
  1673  0009D2  EC23  F00A         	call	_chip_select
  1674                           
  1675                           ;lm629.c: 1093:     write_command(0x01);
  1676  0009D6  0E01               	movlw	1
  1677  0009D8  ECE3  F00A         	call	_write_command
  1678                           
  1679                           ;lm629.c: 1094:     check_busy();
  1680  0009DC  EC7E  F00B         	call	_check_busy	;wreg free
  1681                           
  1682                           ;lm629.c: 1096:     chip_select(1);
  1683  0009E0  0E01               	movlw	1
  1684  0009E2  EC23  F00A         	call	_chip_select
  1685                           
  1686                           ;lm629.c: 1097:     write_command(0x01);
  1687  0009E6  0E01               	movlw	1
  1688  0009E8  ECE3  F00A         	call	_write_command
  1689                           
  1690                           ;lm629.c: 1098:     check_busy();
  1691  0009EC  EC7E  F00B         	call	_check_busy	;wreg free
  1692                           
  1693                           ;lm629.c: 1100:     chip_select(3);
  1694  0009F0  0E03               	movlw	3
  1695  0009F2  EC23  F00A         	call	_chip_select
  1696                           
  1697                           ;lm629.c: 1101:     write_command(0x01);
  1698  0009F6  0E01               	movlw	1
  1699  0009F8  ECE3  F00A         	call	_write_command
  1700                           
  1701                           ;lm629.c: 1102:     check_busy();
  1702  0009FC  EC7E  F00B         	call	_check_busy	;wreg free
  1703  000A00  0012               	return		;funcret
  1704  000A02                     __end_of_reverse_left:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _reverse *****************
  1708 ;; Defined at:
  1709 ;;		line 536 in file "lm629.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 5
  1730 ;; This function calls:
  1731 ;;		_check_busy
  1732 ;;		_chip_select
  1733 ;;		_motor_off
  1734 ;;		_write_command
  1735 ;;		_write_data
  1736 ;; This function is called by:
  1737 ;;		_main
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text6
  1742  000A02                     __ptext6:
  1743                           	callstack 0
  1744  000A02                     _reverse:
  1745                           	callstack 25
  1746  000A02                     
  1747                           ;lm629.c: 538:     chip_select(1);
  1748  000A02  0E01               	movlw	1
  1749  000A04  EC23  F00A         	call	_chip_select
  1750                           
  1751                           ;lm629.c: 539:     check_busy();
  1752  000A08  EC7E  F00B         	call	_check_busy	;wreg free
  1753                           
  1754                           ;lm629.c: 540:     motor_off();
  1755  000A0C  EC5A  F00B         	call	_motor_off	;wreg free
  1756                           
  1757                           ;lm629.c: 541:     write_command(0x1F);
  1758  000A10  0E1F               	movlw	31
  1759  000A12  ECE3  F00A         	call	_write_command
  1760                           
  1761                           ;lm629.c: 542:     check_busy();
  1762  000A16  EC7E  F00B         	call	_check_busy	;wreg free
  1763                           
  1764                           ;lm629.c: 543:     write_data(0x18,0x28);
  1765  000A1A  0E28               	movlw	40
  1766  000A1C  6E06               	movwf	write_data@byte2^0,c
  1767  000A1E  0E18               	movlw	24
  1768  000A20  EC95  F00A         	call	_write_data
  1769                           
  1770                           ;lm629.c: 544:     check_busy();
  1771  000A24  EC7E  F00B         	call	_check_busy	;wreg free
  1772                           
  1773                           ;lm629.c: 546:     write_data(0x00,0x00);
  1774  000A28  0E00               	movlw	0
  1775  000A2A  6E06               	movwf	write_data@byte2^0,c
  1776  000A2C  0E00               	movlw	0
  1777  000A2E  EC95  F00A         	call	_write_data
  1778                           
  1779                           ;lm629.c: 547:     check_busy();
  1780  000A32  EC7E  F00B         	call	_check_busy	;wreg free
  1781                           
  1782                           ;lm629.c: 548:     write_data(0x00,0x48);
  1783  000A36  0E48               	movlw	72
  1784  000A38  6E06               	movwf	write_data@byte2^0,c
  1785  000A3A  0E00               	movlw	0
  1786  000A3C  EC95  F00A         	call	_write_data
  1787                           
  1788                           ;lm629.c: 549:     check_busy();
  1789  000A40  EC7E  F00B         	call	_check_busy	;wreg free
  1790                           
  1791                           ;lm629.c: 551:     write_data(0x00,0x01);
  1792  000A44  0E01               	movlw	1
  1793  000A46  6E06               	movwf	write_data@byte2^0,c
  1794  000A48  0E00               	movlw	0
  1795  000A4A  EC95  F00A         	call	_write_data
  1796                           
  1797                           ;lm629.c: 552:     check_busy();
  1798  000A4E  EC7E  F00B         	call	_check_busy	;wreg free
  1799                           
  1800                           ;lm629.c: 553:     write_data(0xFA,0xD0);
  1801  000A52  0ED0               	movlw	208
  1802  000A54  6E06               	movwf	write_data@byte2^0,c
  1803  000A56  0EFA               	movlw	250
  1804  000A58  EC95  F00A         	call	_write_data
  1805                           
  1806                           ;lm629.c: 554:     check_busy();
  1807  000A5C  EC7E  F00B         	call	_check_busy	;wreg free
  1808                           
  1809                           ;lm629.c: 557:     chip_select(0);
  1810  000A60  0E00               	movlw	0
  1811  000A62  EC23  F00A         	call	_chip_select
  1812                           
  1813                           ;lm629.c: 558:     check_busy();
  1814  000A66  EC7E  F00B         	call	_check_busy	;wreg free
  1815                           
  1816                           ;lm629.c: 559:     motor_off();
  1817  000A6A  EC5A  F00B         	call	_motor_off	;wreg free
  1818                           
  1819                           ;lm629.c: 560:     write_command(0x1F);
  1820  000A6E  0E1F               	movlw	31
  1821  000A70  ECE3  F00A         	call	_write_command
  1822                           
  1823                           ;lm629.c: 561:     check_busy();
  1824  000A74  EC7E  F00B         	call	_check_busy	;wreg free
  1825                           
  1826                           ;lm629.c: 562:     write_data(0x08,0x28);
  1827  000A78  0E28               	movlw	40
  1828  000A7A  6E06               	movwf	write_data@byte2^0,c
  1829  000A7C  0E08               	movlw	8
  1830  000A7E  EC95  F00A         	call	_write_data
  1831                           
  1832                           ;lm629.c: 563:     check_busy();
  1833  000A82  EC7E  F00B         	call	_check_busy	;wreg free
  1834                           
  1835                           ;lm629.c: 565:     write_data(0x00,0x00);
  1836  000A86  0E00               	movlw	0
  1837  000A88  6E06               	movwf	write_data@byte2^0,c
  1838  000A8A  0E00               	movlw	0
  1839  000A8C  EC95  F00A         	call	_write_data
  1840                           
  1841                           ;lm629.c: 566:     check_busy();
  1842  000A90  EC7E  F00B         	call	_check_busy	;wreg free
  1843                           
  1844                           ;lm629.c: 567:     write_data(0x00,0x48);
  1845  000A94  0E48               	movlw	72
  1846  000A96  6E06               	movwf	write_data@byte2^0,c
  1847  000A98  0E00               	movlw	0
  1848  000A9A  EC95  F00A         	call	_write_data
  1849                           
  1850                           ;lm629.c: 568:     check_busy();
  1851  000A9E  EC7E  F00B         	call	_check_busy	;wreg free
  1852                           
  1853                           ;lm629.c: 570:     write_data(0x00,0x01);
  1854  000AA2  0E01               	movlw	1
  1855  000AA4  6E06               	movwf	write_data@byte2^0,c
  1856  000AA6  0E00               	movlw	0
  1857  000AA8  EC95  F00A         	call	_write_data
  1858                           
  1859                           ;lm629.c: 571:     check_busy();
  1860  000AAC  EC7E  F00B         	call	_check_busy	;wreg free
  1861                           
  1862                           ;lm629.c: 572:     write_data(0xFA,0xD0);
  1863  000AB0  0ED0               	movlw	208
  1864  000AB2  6E06               	movwf	write_data@byte2^0,c
  1865  000AB4  0EFA               	movlw	250
  1866  000AB6  EC95  F00A         	call	_write_data
  1867                           
  1868                           ;lm629.c: 573:     check_busy();
  1869  000ABA  EC7E  F00B         	call	_check_busy	;wreg free
  1870                           
  1871                           ;lm629.c: 577:     chip_select(3);
  1872  000ABE  0E03               	movlw	3
  1873  000AC0  EC23  F00A         	call	_chip_select
  1874                           
  1875                           ;lm629.c: 578:     check_busy();
  1876  000AC4  EC7E  F00B         	call	_check_busy	;wreg free
  1877                           
  1878                           ;lm629.c: 579:     motor_off();
  1879  000AC8  EC5A  F00B         	call	_motor_off	;wreg free
  1880                           
  1881                           ;lm629.c: 580:     write_command(0x1F);
  1882  000ACC  0E1F               	movlw	31
  1883  000ACE  ECE3  F00A         	call	_write_command
  1884                           
  1885                           ;lm629.c: 581:     check_busy();
  1886  000AD2  EC7E  F00B         	call	_check_busy	;wreg free
  1887                           
  1888                           ;lm629.c: 582:     write_data(0x08,0x28);
  1889  000AD6  0E28               	movlw	40
  1890  000AD8  6E06               	movwf	write_data@byte2^0,c
  1891  000ADA  0E08               	movlw	8
  1892  000ADC  EC95  F00A         	call	_write_data
  1893                           
  1894                           ;lm629.c: 583:     check_busy();
  1895  000AE0  EC7E  F00B         	call	_check_busy	;wreg free
  1896                           
  1897                           ;lm629.c: 585:     write_data(0x00,0x00);
  1898  000AE4  0E00               	movlw	0
  1899  000AE6  6E06               	movwf	write_data@byte2^0,c
  1900  000AE8  0E00               	movlw	0
  1901  000AEA  EC95  F00A         	call	_write_data
  1902                           
  1903                           ;lm629.c: 586:     check_busy();
  1904  000AEE  EC7E  F00B         	call	_check_busy	;wreg free
  1905                           
  1906                           ;lm629.c: 587:     write_data(0x00,0x48);
  1907  000AF2  0E48               	movlw	72
  1908  000AF4  6E06               	movwf	write_data@byte2^0,c
  1909  000AF6  0E00               	movlw	0
  1910  000AF8  EC95  F00A         	call	_write_data
  1911                           
  1912                           ;lm629.c: 588:     check_busy();
  1913  000AFC  EC7E  F00B         	call	_check_busy	;wreg free
  1914                           
  1915                           ;lm629.c: 590:     write_data(0x00,0x01);
  1916  000B00  0E01               	movlw	1
  1917  000B02  6E06               	movwf	write_data@byte2^0,c
  1918  000B04  0E00               	movlw	0
  1919  000B06  EC95  F00A         	call	_write_data
  1920                           
  1921                           ;lm629.c: 591:     check_busy();
  1922  000B0A  EC7E  F00B         	call	_check_busy	;wreg free
  1923                           
  1924                           ;lm629.c: 592:     write_data(0xFA,0xD0);
  1925  000B0E  0ED0               	movlw	208
  1926  000B10  6E06               	movwf	write_data@byte2^0,c
  1927  000B12  0EFA               	movlw	250
  1928  000B14  EC95  F00A         	call	_write_data
  1929                           
  1930                           ;lm629.c: 593:     check_busy();
  1931  000B18  EC7E  F00B         	call	_check_busy	;wreg free
  1932                           
  1933                           ;lm629.c: 595:     chip_select(2);
  1934  000B1C  0E02               	movlw	2
  1935  000B1E  EC23  F00A         	call	_chip_select
  1936                           
  1937                           ;lm629.c: 596:     check_busy();
  1938  000B22  EC7E  F00B         	call	_check_busy	;wreg free
  1939                           
  1940                           ;lm629.c: 597:     motor_off();
  1941  000B26  EC5A  F00B         	call	_motor_off	;wreg free
  1942                           
  1943                           ;lm629.c: 598:     write_command(0x1F);
  1944  000B2A  0E1F               	movlw	31
  1945  000B2C  ECE3  F00A         	call	_write_command
  1946                           
  1947                           ;lm629.c: 599:     check_busy();
  1948  000B30  EC7E  F00B         	call	_check_busy	;wreg free
  1949                           
  1950                           ;lm629.c: 600:     write_data(0x18,0x28);
  1951  000B34  0E28               	movlw	40
  1952  000B36  6E06               	movwf	write_data@byte2^0,c
  1953  000B38  0E18               	movlw	24
  1954  000B3A  EC95  F00A         	call	_write_data
  1955                           
  1956                           ;lm629.c: 601:     check_busy();
  1957  000B3E  EC7E  F00B         	call	_check_busy	;wreg free
  1958                           
  1959                           ;lm629.c: 603:     write_data(0x00,0x00);
  1960  000B42  0E00               	movlw	0
  1961  000B44  6E06               	movwf	write_data@byte2^0,c
  1962  000B46  0E00               	movlw	0
  1963  000B48  EC95  F00A         	call	_write_data
  1964                           
  1965                           ;lm629.c: 604:     check_busy();
  1966  000B4C  EC7E  F00B         	call	_check_busy	;wreg free
  1967                           
  1968                           ;lm629.c: 605:     write_data(0x00,0x48);
  1969  000B50  0E48               	movlw	72
  1970  000B52  6E06               	movwf	write_data@byte2^0,c
  1971  000B54  0E00               	movlw	0
  1972  000B56  EC95  F00A         	call	_write_data
  1973                           
  1974                           ;lm629.c: 606:     check_busy();
  1975  000B5A  EC7E  F00B         	call	_check_busy	;wreg free
  1976                           
  1977                           ;lm629.c: 608:     write_data(0x00,0x01);
  1978  000B5E  0E01               	movlw	1
  1979  000B60  6E06               	movwf	write_data@byte2^0,c
  1980  000B62  0E00               	movlw	0
  1981  000B64  EC95  F00A         	call	_write_data
  1982                           
  1983                           ;lm629.c: 609:     check_busy();
  1984  000B68  EC7E  F00B         	call	_check_busy	;wreg free
  1985                           
  1986                           ;lm629.c: 610:     write_data(0xFA,0xD0);
  1987  000B6C  0ED0               	movlw	208
  1988  000B6E  6E06               	movwf	write_data@byte2^0,c
  1989  000B70  0EFA               	movlw	250
  1990  000B72  EC95  F00A         	call	_write_data
  1991                           
  1992                           ;lm629.c: 611:     check_busy();
  1993  000B76  EC7E  F00B         	call	_check_busy	;wreg free
  1994                           
  1995                           ;lm629.c: 614:     chip_select(0);
  1996  000B7A  0E00               	movlw	0
  1997  000B7C  EC23  F00A         	call	_chip_select
  1998                           
  1999                           ;lm629.c: 615:     write_command(0x01);
  2000  000B80  0E01               	movlw	1
  2001  000B82  ECE3  F00A         	call	_write_command
  2002                           
  2003                           ;lm629.c: 616:     check_busy();
  2004  000B86  EC7E  F00B         	call	_check_busy	;wreg free
  2005                           
  2006                           ;lm629.c: 618:     chip_select(2);
  2007  000B8A  0E02               	movlw	2
  2008  000B8C  EC23  F00A         	call	_chip_select
  2009                           
  2010                           ;lm629.c: 619:     write_command(0x01);
  2011  000B90  0E01               	movlw	1
  2012  000B92  ECE3  F00A         	call	_write_command
  2013                           
  2014                           ;lm629.c: 620:     check_busy();
  2015  000B96  EC7E  F00B         	call	_check_busy	;wreg free
  2016                           
  2017                           ;lm629.c: 622:     chip_select(1);
  2018  000B9A  0E01               	movlw	1
  2019  000B9C  EC23  F00A         	call	_chip_select
  2020                           
  2021                           ;lm629.c: 623:     write_command(0x01);
  2022  000BA0  0E01               	movlw	1
  2023  000BA2  ECE3  F00A         	call	_write_command
  2024                           
  2025                           ;lm629.c: 624:     check_busy();
  2026  000BA6  EC7E  F00B         	call	_check_busy	;wreg free
  2027                           
  2028                           ;lm629.c: 626:     chip_select(3);
  2029  000BAA  0E03               	movlw	3
  2030  000BAC  EC23  F00A         	call	_chip_select
  2031                           
  2032                           ;lm629.c: 627:     write_command(0x01);
  2033  000BB0  0E01               	movlw	1
  2034  000BB2  ECE3  F00A         	call	_write_command
  2035                           
  2036                           ;lm629.c: 628:     check_busy();
  2037  000BB6  EC7E  F00B         	call	_check_busy	;wreg free
  2038  000BBA  0012               	return		;funcret
  2039  000BBC                     __end_of_reverse:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _left *****************
  2043 ;; Defined at:
  2044 ;;		line 726 in file "lm629.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 5
  2065 ;; This function calls:
  2066 ;;		_check_busy
  2067 ;;		_chip_select
  2068 ;;		_motor_off
  2069 ;;		_write_command
  2070 ;;		_write_data
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text7
  2077  000BBC                     __ptext7:
  2078                           	callstack 0
  2079  000BBC                     _left:
  2080                           	callstack 25
  2081  000BBC                     
  2082                           ;lm629.c: 728:     chip_select(0);
  2083  000BBC  0E00               	movlw	0
  2084  000BBE  EC23  F00A         	call	_chip_select
  2085                           
  2086                           ;lm629.c: 729:     check_busy();
  2087  000BC2  EC7E  F00B         	call	_check_busy	;wreg free
  2088                           
  2089                           ;lm629.c: 730:     motor_off();
  2090  000BC6  EC5A  F00B         	call	_motor_off	;wreg free
  2091                           
  2092                           ;lm629.c: 731:     write_command(0x1F);
  2093  000BCA  0E1F               	movlw	31
  2094  000BCC  ECE3  F00A         	call	_write_command
  2095                           
  2096                           ;lm629.c: 732:     check_busy();
  2097  000BD0  EC7E  F00B         	call	_check_busy	;wreg free
  2098                           
  2099                           ;lm629.c: 733:     write_data(0x18,0x28);
  2100  000BD4  0E28               	movlw	40
  2101  000BD6  6E06               	movwf	write_data@byte2^0,c
  2102  000BD8  0E18               	movlw	24
  2103  000BDA  EC95  F00A         	call	_write_data
  2104                           
  2105                           ;lm629.c: 734:     check_busy();
  2106  000BDE  EC7E  F00B         	call	_check_busy	;wreg free
  2107                           
  2108                           ;lm629.c: 736:     write_data(0x00,0x00);
  2109  000BE2  0E00               	movlw	0
  2110  000BE4  6E06               	movwf	write_data@byte2^0,c
  2111  000BE6  0E00               	movlw	0
  2112  000BE8  EC95  F00A         	call	_write_data
  2113                           
  2114                           ;lm629.c: 737:     check_busy();
  2115  000BEC  EC7E  F00B         	call	_check_busy	;wreg free
  2116                           
  2117                           ;lm629.c: 738:     write_data(0x00,0x48);
  2118  000BF0  0E48               	movlw	72
  2119  000BF2  6E06               	movwf	write_data@byte2^0,c
  2120  000BF4  0E00               	movlw	0
  2121  000BF6  EC95  F00A         	call	_write_data
  2122                           
  2123                           ;lm629.c: 739:     check_busy();
  2124  000BFA  EC7E  F00B         	call	_check_busy	;wreg free
  2125                           
  2126                           ;lm629.c: 741:     write_data(0x00,0x01);
  2127  000BFE  0E01               	movlw	1
  2128  000C00  6E06               	movwf	write_data@byte2^0,c
  2129  000C02  0E00               	movlw	0
  2130  000C04  EC95  F00A         	call	_write_data
  2131                           
  2132                           ;lm629.c: 742:     check_busy();
  2133  000C08  EC7E  F00B         	call	_check_busy	;wreg free
  2134                           
  2135                           ;lm629.c: 743:     write_data(0xFA,0xD0);
  2136  000C0C  0ED0               	movlw	208
  2137  000C0E  6E06               	movwf	write_data@byte2^0,c
  2138  000C10  0EFA               	movlw	250
  2139  000C12  EC95  F00A         	call	_write_data
  2140                           
  2141                           ;lm629.c: 744:     check_busy();
  2142  000C16  EC7E  F00B         	call	_check_busy	;wreg free
  2143                           
  2144                           ;lm629.c: 746:     chip_select(1);
  2145  000C1A  0E01               	movlw	1
  2146  000C1C  EC23  F00A         	call	_chip_select
  2147                           
  2148                           ;lm629.c: 747:     check_busy();
  2149  000C20  EC7E  F00B         	call	_check_busy	;wreg free
  2150                           
  2151                           ;lm629.c: 748:     motor_off();
  2152  000C24  EC5A  F00B         	call	_motor_off	;wreg free
  2153                           
  2154                           ;lm629.c: 749:     write_command(0x1F);
  2155  000C28  0E1F               	movlw	31
  2156  000C2A  ECE3  F00A         	call	_write_command
  2157                           
  2158                           ;lm629.c: 750:     check_busy();
  2159  000C2E  EC7E  F00B         	call	_check_busy	;wreg free
  2160                           
  2161                           ;lm629.c: 751:     write_data(0x18,0x28);
  2162  000C32  0E28               	movlw	40
  2163  000C34  6E06               	movwf	write_data@byte2^0,c
  2164  000C36  0E18               	movlw	24
  2165  000C38  EC95  F00A         	call	_write_data
  2166                           
  2167                           ;lm629.c: 752:     check_busy();
  2168  000C3C  EC7E  F00B         	call	_check_busy	;wreg free
  2169                           
  2170                           ;lm629.c: 754:     write_data(0x00,0x00);
  2171  000C40  0E00               	movlw	0
  2172  000C42  6E06               	movwf	write_data@byte2^0,c
  2173  000C44  0E00               	movlw	0
  2174  000C46  EC95  F00A         	call	_write_data
  2175                           
  2176                           ;lm629.c: 755:     check_busy();
  2177  000C4A  EC7E  F00B         	call	_check_busy	;wreg free
  2178                           
  2179                           ;lm629.c: 756:     write_data(0x00,0x48);
  2180  000C4E  0E48               	movlw	72
  2181  000C50  6E06               	movwf	write_data@byte2^0,c
  2182  000C52  0E00               	movlw	0
  2183  000C54  EC95  F00A         	call	_write_data
  2184                           
  2185                           ;lm629.c: 757:     check_busy();
  2186  000C58  EC7E  F00B         	call	_check_busy	;wreg free
  2187                           
  2188                           ;lm629.c: 759:     write_data(0x00,0x01);
  2189  000C5C  0E01               	movlw	1
  2190  000C5E  6E06               	movwf	write_data@byte2^0,c
  2191  000C60  0E00               	movlw	0
  2192  000C62  EC95  F00A         	call	_write_data
  2193                           
  2194                           ;lm629.c: 760:     check_busy();
  2195  000C66  EC7E  F00B         	call	_check_busy	;wreg free
  2196                           
  2197                           ;lm629.c: 761:     write_data(0xFA,0xD0);
  2198  000C6A  0ED0               	movlw	208
  2199  000C6C  6E06               	movwf	write_data@byte2^0,c
  2200  000C6E  0EFA               	movlw	250
  2201  000C70  EC95  F00A         	call	_write_data
  2202                           
  2203                           ;lm629.c: 762:     check_busy();
  2204  000C74  EC7E  F00B         	call	_check_busy	;wreg free
  2205                           
  2206                           ;lm629.c: 765:     chip_select(2);
  2207  000C78  0E02               	movlw	2
  2208  000C7A  EC23  F00A         	call	_chip_select
  2209                           
  2210                           ;lm629.c: 766:     check_busy();
  2211  000C7E  EC7E  F00B         	call	_check_busy	;wreg free
  2212                           
  2213                           ;lm629.c: 767:     motor_off();
  2214  000C82  EC5A  F00B         	call	_motor_off	;wreg free
  2215                           
  2216                           ;lm629.c: 768:     write_command(0x1F);
  2217  000C86  0E1F               	movlw	31
  2218  000C88  ECE3  F00A         	call	_write_command
  2219                           
  2220                           ;lm629.c: 769:     check_busy();
  2221  000C8C  EC7E  F00B         	call	_check_busy	;wreg free
  2222                           
  2223                           ;lm629.c: 770:     write_data(0x18,0x28);
  2224  000C90  0E28               	movlw	40
  2225  000C92  6E06               	movwf	write_data@byte2^0,c
  2226  000C94  0E18               	movlw	24
  2227  000C96  EC95  F00A         	call	_write_data
  2228                           
  2229                           ;lm629.c: 771:     check_busy();
  2230  000C9A  EC7E  F00B         	call	_check_busy	;wreg free
  2231                           
  2232                           ;lm629.c: 773:     write_data(0x00,0x00);
  2233  000C9E  0E00               	movlw	0
  2234  000CA0  6E06               	movwf	write_data@byte2^0,c
  2235  000CA2  0E00               	movlw	0
  2236  000CA4  EC95  F00A         	call	_write_data
  2237                           
  2238                           ;lm629.c: 774:     check_busy();
  2239  000CA8  EC7E  F00B         	call	_check_busy	;wreg free
  2240                           
  2241                           ;lm629.c: 775:     write_data(0x00,0x48);
  2242  000CAC  0E48               	movlw	72
  2243  000CAE  6E06               	movwf	write_data@byte2^0,c
  2244  000CB0  0E00               	movlw	0
  2245  000CB2  EC95  F00A         	call	_write_data
  2246                           
  2247                           ;lm629.c: 776:     check_busy();
  2248  000CB6  EC7E  F00B         	call	_check_busy	;wreg free
  2249                           
  2250                           ;lm629.c: 778:     write_data(0x00,0x01);
  2251  000CBA  0E01               	movlw	1
  2252  000CBC  6E06               	movwf	write_data@byte2^0,c
  2253  000CBE  0E00               	movlw	0
  2254  000CC0  EC95  F00A         	call	_write_data
  2255                           
  2256                           ;lm629.c: 779:     check_busy();
  2257  000CC4  EC7E  F00B         	call	_check_busy	;wreg free
  2258                           
  2259                           ;lm629.c: 780:     write_data(0xFA,0xD0);
  2260  000CC8  0ED0               	movlw	208
  2261  000CCA  6E06               	movwf	write_data@byte2^0,c
  2262  000CCC  0EFA               	movlw	250
  2263  000CCE  EC95  F00A         	call	_write_data
  2264                           
  2265                           ;lm629.c: 781:     check_busy();
  2266  000CD2  EC7E  F00B         	call	_check_busy	;wreg free
  2267                           
  2268                           ;lm629.c: 784:     chip_select(3);
  2269  000CD6  0E03               	movlw	3
  2270  000CD8  EC23  F00A         	call	_chip_select
  2271                           
  2272                           ;lm629.c: 785:     check_busy();
  2273  000CDC  EC7E  F00B         	call	_check_busy	;wreg free
  2274                           
  2275                           ;lm629.c: 786:     motor_off();
  2276  000CE0  EC5A  F00B         	call	_motor_off	;wreg free
  2277                           
  2278                           ;lm629.c: 787:     write_command(0x1F);
  2279  000CE4  0E1F               	movlw	31
  2280  000CE6  ECE3  F00A         	call	_write_command
  2281                           
  2282                           ;lm629.c: 788:     check_busy();
  2283  000CEA  EC7E  F00B         	call	_check_busy	;wreg free
  2284                           
  2285                           ;lm629.c: 789:     write_data(0x18,0x28);
  2286  000CEE  0E28               	movlw	40
  2287  000CF0  6E06               	movwf	write_data@byte2^0,c
  2288  000CF2  0E18               	movlw	24
  2289  000CF4  EC95  F00A         	call	_write_data
  2290                           
  2291                           ;lm629.c: 790:     check_busy();
  2292  000CF8  EC7E  F00B         	call	_check_busy	;wreg free
  2293                           
  2294                           ;lm629.c: 792:     write_data(0x00,0x00);
  2295  000CFC  0E00               	movlw	0
  2296  000CFE  6E06               	movwf	write_data@byte2^0,c
  2297  000D00  0E00               	movlw	0
  2298  000D02  EC95  F00A         	call	_write_data
  2299                           
  2300                           ;lm629.c: 793:     check_busy();
  2301  000D06  EC7E  F00B         	call	_check_busy	;wreg free
  2302                           
  2303                           ;lm629.c: 794:     write_data(0x00,0x48);
  2304  000D0A  0E48               	movlw	72
  2305  000D0C  6E06               	movwf	write_data@byte2^0,c
  2306  000D0E  0E00               	movlw	0
  2307  000D10  EC95  F00A         	call	_write_data
  2308                           
  2309                           ;lm629.c: 795:     check_busy();
  2310  000D14  EC7E  F00B         	call	_check_busy	;wreg free
  2311                           
  2312                           ;lm629.c: 797:     write_data(0x00,0x01);
  2313  000D18  0E01               	movlw	1
  2314  000D1A  6E06               	movwf	write_data@byte2^0,c
  2315  000D1C  0E00               	movlw	0
  2316  000D1E  EC95  F00A         	call	_write_data
  2317                           
  2318                           ;lm629.c: 798:     check_busy();
  2319  000D22  EC7E  F00B         	call	_check_busy	;wreg free
  2320                           
  2321                           ;lm629.c: 799:     write_data(0xFA,0xD0);
  2322  000D26  0ED0               	movlw	208
  2323  000D28  6E06               	movwf	write_data@byte2^0,c
  2324  000D2A  0EFA               	movlw	250
  2325  000D2C  EC95  F00A         	call	_write_data
  2326                           
  2327                           ;lm629.c: 800:     check_busy();
  2328  000D30  EC7E  F00B         	call	_check_busy	;wreg free
  2329                           
  2330                           ;lm629.c: 803:     chip_select(0);
  2331  000D34  0E00               	movlw	0
  2332  000D36  EC23  F00A         	call	_chip_select
  2333                           
  2334                           ;lm629.c: 804:     write_command(0x01);
  2335  000D3A  0E01               	movlw	1
  2336  000D3C  ECE3  F00A         	call	_write_command
  2337                           
  2338                           ;lm629.c: 805:     check_busy();
  2339  000D40  EC7E  F00B         	call	_check_busy	;wreg free
  2340                           
  2341                           ;lm629.c: 807:     chip_select(2);
  2342  000D44  0E02               	movlw	2
  2343  000D46  EC23  F00A         	call	_chip_select
  2344                           
  2345                           ;lm629.c: 808:     write_command(0x01);
  2346  000D4A  0E01               	movlw	1
  2347  000D4C  ECE3  F00A         	call	_write_command
  2348                           
  2349                           ;lm629.c: 809:     check_busy();
  2350  000D50  EC7E  F00B         	call	_check_busy	;wreg free
  2351                           
  2352                           ;lm629.c: 811:     chip_select(1);
  2353  000D54  0E01               	movlw	1
  2354  000D56  EC23  F00A         	call	_chip_select
  2355                           
  2356                           ;lm629.c: 812:     write_command(0x01);
  2357  000D5A  0E01               	movlw	1
  2358  000D5C  ECE3  F00A         	call	_write_command
  2359                           
  2360                           ;lm629.c: 813:     check_busy();
  2361  000D60  EC7E  F00B         	call	_check_busy	;wreg free
  2362                           
  2363                           ;lm629.c: 815:     chip_select(3);
  2364  000D64  0E03               	movlw	3
  2365  000D66  EC23  F00A         	call	_chip_select
  2366                           
  2367                           ;lm629.c: 816:     write_command(0x01);
  2368  000D6A  0E01               	movlw	1
  2369  000D6C  ECE3  F00A         	call	_write_command
  2370                           
  2371                           ;lm629.c: 817:     check_busy();
  2372  000D70  EC7E  F00B         	call	_check_busy	;wreg free
  2373  000D74  0012               	return		;funcret
  2374  000D76                     __end_of_left:
  2375                           	callstack 0
  2376                           
  2377 ;; *************** function _forward_right *****************
  2378 ;; Defined at:
  2379 ;;		line 915 in file "lm629.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;Total ram usage:        0 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 5
  2400 ;; This function calls:
  2401 ;;		_check_busy
  2402 ;;		_chip_select
  2403 ;;		_motor_off
  2404 ;;		_write_command
  2405 ;;		_write_data
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text8
  2412  000D76                     __ptext8:
  2413                           	callstack 0
  2414  000D76                     _forward_right:
  2415                           	callstack 25
  2416  000D76                     
  2417                           ;lm629.c: 917:     chip_select(0);
  2418  000D76  0E00               	movlw	0
  2419  000D78  EC23  F00A         	call	_chip_select
  2420                           
  2421                           ;lm629.c: 918:     check_busy();
  2422  000D7C  EC7E  F00B         	call	_check_busy	;wreg free
  2423                           
  2424                           ;lm629.c: 919:     motor_off();
  2425  000D80  EC5A  F00B         	call	_motor_off	;wreg free
  2426                           
  2427                           ;lm629.c: 920:     write_command(0x1F);
  2428  000D84  0E1F               	movlw	31
  2429  000D86  ECE3  F00A         	call	_write_command
  2430                           
  2431                           ;lm629.c: 921:     check_busy();
  2432  000D8A  EC7E  F00B         	call	_check_busy	;wreg free
  2433                           
  2434                           ;lm629.c: 922:     write_data(0x18,0x28);
  2435  000D8E  0E28               	movlw	40
  2436  000D90  6E06               	movwf	write_data@byte2^0,c
  2437  000D92  0E18               	movlw	24
  2438  000D94  EC95  F00A         	call	_write_data
  2439                           
  2440                           ;lm629.c: 923:     check_busy();
  2441  000D98  EC7E  F00B         	call	_check_busy	;wreg free
  2442                           
  2443                           ;lm629.c: 925:     write_data(0x00,0x00);
  2444  000D9C  0E00               	movlw	0
  2445  000D9E  6E06               	movwf	write_data@byte2^0,c
  2446  000DA0  0E00               	movlw	0
  2447  000DA2  EC95  F00A         	call	_write_data
  2448                           
  2449                           ;lm629.c: 926:     check_busy();
  2450  000DA6  EC7E  F00B         	call	_check_busy	;wreg free
  2451                           
  2452                           ;lm629.c: 927:     write_data(0x00,0x48);
  2453  000DAA  0E48               	movlw	72
  2454  000DAC  6E06               	movwf	write_data@byte2^0,c
  2455  000DAE  0E00               	movlw	0
  2456  000DB0  EC95  F00A         	call	_write_data
  2457                           
  2458                           ;lm629.c: 928:     check_busy();
  2459  000DB4  EC7E  F00B         	call	_check_busy	;wreg free
  2460                           
  2461                           ;lm629.c: 930:     write_data(0x00,0x00);
  2462  000DB8  0E00               	movlw	0
  2463  000DBA  6E06               	movwf	write_data@byte2^0,c
  2464  000DBC  0E00               	movlw	0
  2465  000DBE  EC95  F00A         	call	_write_data
  2466                           
  2467                           ;lm629.c: 931:     check_busy();
  2468  000DC2  EC7E  F00B         	call	_check_busy	;wreg free
  2469                           
  2470                           ;lm629.c: 932:     write_data(0xFD,0x68);
  2471  000DC6  0E68               	movlw	104
  2472  000DC8  6E06               	movwf	write_data@byte2^0,c
  2473  000DCA  0EFD               	movlw	253
  2474  000DCC  EC95  F00A         	call	_write_data
  2475                           
  2476                           ;lm629.c: 933:     check_busy();
  2477  000DD0  EC7E  F00B         	call	_check_busy	;wreg free
  2478                           
  2479                           ;lm629.c: 936:     chip_select(1);
  2480  000DD4  0E01               	movlw	1
  2481  000DD6  EC23  F00A         	call	_chip_select
  2482                           
  2483                           ;lm629.c: 937:     check_busy();
  2484  000DDA  EC7E  F00B         	call	_check_busy	;wreg free
  2485                           
  2486                           ;lm629.c: 938:     motor_off();
  2487  000DDE  EC5A  F00B         	call	_motor_off	;wreg free
  2488                           
  2489                           ;lm629.c: 939:     write_command(0x1F);
  2490  000DE2  0E1F               	movlw	31
  2491  000DE4  ECE3  F00A         	call	_write_command
  2492                           
  2493                           ;lm629.c: 940:     check_busy();
  2494  000DE8  EC7E  F00B         	call	_check_busy	;wreg free
  2495                           
  2496                           ;lm629.c: 941:     write_data(0x08,0x28);
  2497  000DEC  0E28               	movlw	40
  2498  000DEE  6E06               	movwf	write_data@byte2^0,c
  2499  000DF0  0E08               	movlw	8
  2500  000DF2  EC95  F00A         	call	_write_data
  2501                           
  2502                           ;lm629.c: 942:     check_busy();
  2503  000DF6  EC7E  F00B         	call	_check_busy	;wreg free
  2504                           
  2505                           ;lm629.c: 944:     write_data(0x00,0x00);
  2506  000DFA  0E00               	movlw	0
  2507  000DFC  6E06               	movwf	write_data@byte2^0,c
  2508  000DFE  0E00               	movlw	0
  2509  000E00  EC95  F00A         	call	_write_data
  2510                           
  2511                           ;lm629.c: 945:     check_busy();
  2512  000E04  EC7E  F00B         	call	_check_busy	;wreg free
  2513                           
  2514                           ;lm629.c: 946:     write_data(0x00,0x48);
  2515  000E08  0E48               	movlw	72
  2516  000E0A  6E06               	movwf	write_data@byte2^0,c
  2517  000E0C  0E00               	movlw	0
  2518  000E0E  EC95  F00A         	call	_write_data
  2519                           
  2520                           ;lm629.c: 947:     check_busy();
  2521  000E12  EC7E  F00B         	call	_check_busy	;wreg free
  2522                           
  2523                           ;lm629.c: 949:     write_data(0x00,0x01);
  2524  000E16  0E01               	movlw	1
  2525  000E18  6E06               	movwf	write_data@byte2^0,c
  2526  000E1A  0E00               	movlw	0
  2527  000E1C  EC95  F00A         	call	_write_data
  2528                           
  2529                           ;lm629.c: 950:     check_busy();
  2530  000E20  EC7E  F00B         	call	_check_busy	;wreg free
  2531                           
  2532                           ;lm629.c: 951:     write_data(0xFA,0xD0);
  2533  000E24  0ED0               	movlw	208
  2534  000E26  6E06               	movwf	write_data@byte2^0,c
  2535  000E28  0EFA               	movlw	250
  2536  000E2A  EC95  F00A         	call	_write_data
  2537                           
  2538                           ;lm629.c: 952:     check_busy();
  2539  000E2E  EC7E  F00B         	call	_check_busy	;wreg free
  2540                           
  2541                           ;lm629.c: 955:     chip_select(2);
  2542  000E32  0E02               	movlw	2
  2543  000E34  EC23  F00A         	call	_chip_select
  2544                           
  2545                           ;lm629.c: 956:     check_busy();
  2546  000E38  EC7E  F00B         	call	_check_busy	;wreg free
  2547                           
  2548                           ;lm629.c: 957:     motor_off();
  2549  000E3C  EC5A  F00B         	call	_motor_off	;wreg free
  2550                           
  2551                           ;lm629.c: 958:     write_command(0x1F);
  2552  000E40  0E1F               	movlw	31
  2553  000E42  ECE3  F00A         	call	_write_command
  2554                           
  2555                           ;lm629.c: 959:     check_busy();
  2556  000E46  EC7E  F00B         	call	_check_busy	;wreg free
  2557                           
  2558                           ;lm629.c: 960:     write_data(0x08,0x28);
  2559  000E4A  0E28               	movlw	40
  2560  000E4C  6E06               	movwf	write_data@byte2^0,c
  2561  000E4E  0E08               	movlw	8
  2562  000E50  EC95  F00A         	call	_write_data
  2563                           
  2564                           ;lm629.c: 961:     check_busy();
  2565  000E54  EC7E  F00B         	call	_check_busy	;wreg free
  2566                           
  2567                           ;lm629.c: 963:     write_data(0x00,0x00);
  2568  000E58  0E00               	movlw	0
  2569  000E5A  6E06               	movwf	write_data@byte2^0,c
  2570  000E5C  0E00               	movlw	0
  2571  000E5E  EC95  F00A         	call	_write_data
  2572                           
  2573                           ;lm629.c: 964:     check_busy();
  2574  000E62  EC7E  F00B         	call	_check_busy	;wreg free
  2575                           
  2576                           ;lm629.c: 965:     write_data(0x00,0x48);
  2577  000E66  0E48               	movlw	72
  2578  000E68  6E06               	movwf	write_data@byte2^0,c
  2579  000E6A  0E00               	movlw	0
  2580  000E6C  EC95  F00A         	call	_write_data
  2581                           
  2582                           ;lm629.c: 966:     check_busy();
  2583  000E70  EC7E  F00B         	call	_check_busy	;wreg free
  2584                           
  2585                           ;lm629.c: 968:     write_data(0x00,0x01);
  2586  000E74  0E01               	movlw	1
  2587  000E76  6E06               	movwf	write_data@byte2^0,c
  2588  000E78  0E00               	movlw	0
  2589  000E7A  EC95  F00A         	call	_write_data
  2590                           
  2591                           ;lm629.c: 969:     check_busy();
  2592  000E7E  EC7E  F00B         	call	_check_busy	;wreg free
  2593                           
  2594                           ;lm629.c: 970:     write_data(0xFA,0xD0);
  2595  000E82  0ED0               	movlw	208
  2596  000E84  6E06               	movwf	write_data@byte2^0,c
  2597  000E86  0EFA               	movlw	250
  2598  000E88  EC95  F00A         	call	_write_data
  2599                           
  2600                           ;lm629.c: 971:     check_busy();
  2601  000E8C  EC7E  F00B         	call	_check_busy	;wreg free
  2602                           
  2603                           ;lm629.c: 974:     chip_select(3);
  2604  000E90  0E03               	movlw	3
  2605  000E92  EC23  F00A         	call	_chip_select
  2606                           
  2607                           ;lm629.c: 975:     check_busy();
  2608  000E96  EC7E  F00B         	call	_check_busy	;wreg free
  2609                           
  2610                           ;lm629.c: 976:     motor_off();
  2611  000E9A  EC5A  F00B         	call	_motor_off	;wreg free
  2612                           
  2613                           ;lm629.c: 977:     write_command(0x1F);
  2614  000E9E  0E1F               	movlw	31
  2615  000EA0  ECE3  F00A         	call	_write_command
  2616                           
  2617                           ;lm629.c: 978:     check_busy();
  2618  000EA4  EC7E  F00B         	call	_check_busy	;wreg free
  2619                           
  2620                           ;lm629.c: 979:     write_data(0x18,0x28);
  2621  000EA8  0E28               	movlw	40
  2622  000EAA  6E06               	movwf	write_data@byte2^0,c
  2623  000EAC  0E18               	movlw	24
  2624  000EAE  EC95  F00A         	call	_write_data
  2625                           
  2626                           ;lm629.c: 980:     check_busy();
  2627  000EB2  EC7E  F00B         	call	_check_busy	;wreg free
  2628                           
  2629                           ;lm629.c: 982:     write_data(0x00,0x00);
  2630  000EB6  0E00               	movlw	0
  2631  000EB8  6E06               	movwf	write_data@byte2^0,c
  2632  000EBA  0E00               	movlw	0
  2633  000EBC  EC95  F00A         	call	_write_data
  2634                           
  2635                           ;lm629.c: 983:     check_busy();
  2636  000EC0  EC7E  F00B         	call	_check_busy	;wreg free
  2637                           
  2638                           ;lm629.c: 984:     write_data(0x00,0x48);
  2639  000EC4  0E48               	movlw	72
  2640  000EC6  6E06               	movwf	write_data@byte2^0,c
  2641  000EC8  0E00               	movlw	0
  2642  000ECA  EC95  F00A         	call	_write_data
  2643                           
  2644                           ;lm629.c: 985:     check_busy();
  2645  000ECE  EC7E  F00B         	call	_check_busy	;wreg free
  2646                           
  2647                           ;lm629.c: 987:     write_data(0x00,0x00);
  2648  000ED2  0E00               	movlw	0
  2649  000ED4  6E06               	movwf	write_data@byte2^0,c
  2650  000ED6  0E00               	movlw	0
  2651  000ED8  EC95  F00A         	call	_write_data
  2652                           
  2653                           ;lm629.c: 988:     check_busy();
  2654  000EDC  EC7E  F00B         	call	_check_busy	;wreg free
  2655                           
  2656                           ;lm629.c: 989:     write_data(0xFD,0x68);
  2657  000EE0  0E68               	movlw	104
  2658  000EE2  6E06               	movwf	write_data@byte2^0,c
  2659  000EE4  0EFD               	movlw	253
  2660  000EE6  EC95  F00A         	call	_write_data
  2661                           
  2662                           ;lm629.c: 990:     check_busy();
  2663  000EEA  EC7E  F00B         	call	_check_busy	;wreg free
  2664                           
  2665                           ;lm629.c: 993:     chip_select(0);
  2666  000EEE  0E00               	movlw	0
  2667  000EF0  EC23  F00A         	call	_chip_select
  2668                           
  2669                           ;lm629.c: 994:     write_command(0x01);
  2670  000EF4  0E01               	movlw	1
  2671  000EF6  ECE3  F00A         	call	_write_command
  2672                           
  2673                           ;lm629.c: 995:     check_busy();
  2674  000EFA  EC7E  F00B         	call	_check_busy	;wreg free
  2675                           
  2676                           ;lm629.c: 997:     chip_select(2);
  2677  000EFE  0E02               	movlw	2
  2678  000F00  EC23  F00A         	call	_chip_select
  2679                           
  2680                           ;lm629.c: 998:     write_command(0x01);
  2681  000F04  0E01               	movlw	1
  2682  000F06  ECE3  F00A         	call	_write_command
  2683                           
  2684                           ;lm629.c: 999:     check_busy();
  2685  000F0A  EC7E  F00B         	call	_check_busy	;wreg free
  2686                           
  2687                           ;lm629.c: 1001:     chip_select(1);
  2688  000F0E  0E01               	movlw	1
  2689  000F10  EC23  F00A         	call	_chip_select
  2690                           
  2691                           ;lm629.c: 1002:     write_command(0x01);
  2692  000F14  0E01               	movlw	1
  2693  000F16  ECE3  F00A         	call	_write_command
  2694                           
  2695                           ;lm629.c: 1003:     check_busy();
  2696  000F1A  EC7E  F00B         	call	_check_busy	;wreg free
  2697                           
  2698                           ;lm629.c: 1005:     chip_select(3);
  2699  000F1E  0E03               	movlw	3
  2700  000F20  EC23  F00A         	call	_chip_select
  2701                           
  2702                           ;lm629.c: 1006:     write_command(0x01);
  2703  000F24  0E01               	movlw	1
  2704  000F26  ECE3  F00A         	call	_write_command
  2705                           
  2706                           ;lm629.c: 1007:     check_busy();
  2707  000F2A  EC7E  F00B         	call	_check_busy	;wreg free
  2708  000F2E  0012               	return		;funcret
  2709  000F30                     __end_of_forward_right:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _forward_left *****************
  2713 ;; Defined at:
  2714 ;;		line 820 in file "lm629.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;		None
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0, cstack
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;Total ram usage:        0 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 5
  2735 ;; This function calls:
  2736 ;;		_check_busy
  2737 ;;		_chip_select
  2738 ;;		_motor_off
  2739 ;;		_write_command
  2740 ;;		_write_data
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text9
  2747  000F30                     __ptext9:
  2748                           	callstack 0
  2749  000F30                     _forward_left:
  2750                           	callstack 25
  2751  000F30                     
  2752                           ;lm629.c: 822:     chip_select(0);
  2753  000F30  0E00               	movlw	0
  2754  000F32  EC23  F00A         	call	_chip_select
  2755                           
  2756                           ;lm629.c: 823:     check_busy();
  2757  000F36  EC7E  F00B         	call	_check_busy	;wreg free
  2758                           
  2759                           ;lm629.c: 824:     motor_off();
  2760  000F3A  EC5A  F00B         	call	_motor_off	;wreg free
  2761                           
  2762                           ;lm629.c: 825:     write_command(0x1F);
  2763  000F3E  0E1F               	movlw	31
  2764  000F40  ECE3  F00A         	call	_write_command
  2765                           
  2766                           ;lm629.c: 826:     check_busy();
  2767  000F44  EC7E  F00B         	call	_check_busy	;wreg free
  2768                           
  2769                           ;lm629.c: 827:     write_data(0x18,0x28);
  2770  000F48  0E28               	movlw	40
  2771  000F4A  6E06               	movwf	write_data@byte2^0,c
  2772  000F4C  0E18               	movlw	24
  2773  000F4E  EC95  F00A         	call	_write_data
  2774                           
  2775                           ;lm629.c: 828:     check_busy();
  2776  000F52  EC7E  F00B         	call	_check_busy	;wreg free
  2777                           
  2778                           ;lm629.c: 830:     write_data(0x00,0x00);
  2779  000F56  0E00               	movlw	0
  2780  000F58  6E06               	movwf	write_data@byte2^0,c
  2781  000F5A  0E00               	movlw	0
  2782  000F5C  EC95  F00A         	call	_write_data
  2783                           
  2784                           ;lm629.c: 831:     check_busy();
  2785  000F60  EC7E  F00B         	call	_check_busy	;wreg free
  2786                           
  2787                           ;lm629.c: 832:     write_data(0x00,0x48);
  2788  000F64  0E48               	movlw	72
  2789  000F66  6E06               	movwf	write_data@byte2^0,c
  2790  000F68  0E00               	movlw	0
  2791  000F6A  EC95  F00A         	call	_write_data
  2792                           
  2793                           ;lm629.c: 833:     check_busy();
  2794  000F6E  EC7E  F00B         	call	_check_busy	;wreg free
  2795                           
  2796                           ;lm629.c: 835:     write_data(0x00,0x01);
  2797  000F72  0E01               	movlw	1
  2798  000F74  6E06               	movwf	write_data@byte2^0,c
  2799  000F76  0E00               	movlw	0
  2800  000F78  EC95  F00A         	call	_write_data
  2801                           
  2802                           ;lm629.c: 836:     check_busy();
  2803  000F7C  EC7E  F00B         	call	_check_busy	;wreg free
  2804                           
  2805                           ;lm629.c: 837:     write_data(0xFA,0xD0);
  2806  000F80  0ED0               	movlw	208
  2807  000F82  6E06               	movwf	write_data@byte2^0,c
  2808  000F84  0EFA               	movlw	250
  2809  000F86  EC95  F00A         	call	_write_data
  2810                           
  2811                           ;lm629.c: 838:     check_busy();
  2812  000F8A  EC7E  F00B         	call	_check_busy	;wreg free
  2813                           
  2814                           ;lm629.c: 841:     chip_select(1);
  2815  000F8E  0E01               	movlw	1
  2816  000F90  EC23  F00A         	call	_chip_select
  2817                           
  2818                           ;lm629.c: 842:     check_busy();
  2819  000F94  EC7E  F00B         	call	_check_busy	;wreg free
  2820                           
  2821                           ;lm629.c: 843:     motor_off();
  2822  000F98  EC5A  F00B         	call	_motor_off	;wreg free
  2823                           
  2824                           ;lm629.c: 844:     write_command(0x1F);
  2825  000F9C  0E1F               	movlw	31
  2826  000F9E  ECE3  F00A         	call	_write_command
  2827                           
  2828                           ;lm629.c: 845:     check_busy();
  2829  000FA2  EC7E  F00B         	call	_check_busy	;wreg free
  2830                           
  2831                           ;lm629.c: 846:     write_data(0x08,0x28);
  2832  000FA6  0E28               	movlw	40
  2833  000FA8  6E06               	movwf	write_data@byte2^0,c
  2834  000FAA  0E08               	movlw	8
  2835  000FAC  EC95  F00A         	call	_write_data
  2836                           
  2837                           ;lm629.c: 847:     check_busy();
  2838  000FB0  EC7E  F00B         	call	_check_busy	;wreg free
  2839                           
  2840                           ;lm629.c: 849:     write_data(0x00,0x00);
  2841  000FB4  0E00               	movlw	0
  2842  000FB6  6E06               	movwf	write_data@byte2^0,c
  2843  000FB8  0E00               	movlw	0
  2844  000FBA  EC95  F00A         	call	_write_data
  2845                           
  2846                           ;lm629.c: 850:     check_busy();
  2847  000FBE  EC7E  F00B         	call	_check_busy	;wreg free
  2848                           
  2849                           ;lm629.c: 851:     write_data(0x00,0x48);
  2850  000FC2  0E48               	movlw	72
  2851  000FC4  6E06               	movwf	write_data@byte2^0,c
  2852  000FC6  0E00               	movlw	0
  2853  000FC8  EC95  F00A         	call	_write_data
  2854                           
  2855                           ;lm629.c: 852:     check_busy();
  2856  000FCC  EC7E  F00B         	call	_check_busy	;wreg free
  2857                           
  2858                           ;lm629.c: 854:     write_data(0x00,0x00);
  2859  000FD0  0E00               	movlw	0
  2860  000FD2  6E06               	movwf	write_data@byte2^0,c
  2861  000FD4  0E00               	movlw	0
  2862  000FD6  EC95  F00A         	call	_write_data
  2863                           
  2864                           ;lm629.c: 855:     check_busy();
  2865  000FDA  EC7E  F00B         	call	_check_busy	;wreg free
  2866                           
  2867                           ;lm629.c: 856:     write_data(0xFD,0x68);
  2868  000FDE  0E68               	movlw	104
  2869  000FE0  6E06               	movwf	write_data@byte2^0,c
  2870  000FE2  0EFD               	movlw	253
  2871  000FE4  EC95  F00A         	call	_write_data
  2872                           
  2873                           ;lm629.c: 857:     check_busy();
  2874  000FE8  EC7E  F00B         	call	_check_busy	;wreg free
  2875                           
  2876                           ;lm629.c: 860:     chip_select(2);
  2877  000FEC  0E02               	movlw	2
  2878  000FEE  EC23  F00A         	call	_chip_select
  2879                           
  2880                           ;lm629.c: 861:     check_busy();
  2881  000FF2  EC7E  F00B         	call	_check_busy	;wreg free
  2882                           
  2883                           ;lm629.c: 862:     motor_off();
  2884  000FF6  EC5A  F00B         	call	_motor_off	;wreg free
  2885                           
  2886                           ;lm629.c: 863:     write_command(0x1F);
  2887  000FFA  0E1F               	movlw	31
  2888  000FFC  ECE3  F00A         	call	_write_command
  2889                           
  2890                           ;lm629.c: 864:     check_busy();
  2891  001000  EC7E  F00B         	call	_check_busy	;wreg free
  2892                           
  2893                           ;lm629.c: 865:     write_data(0x08,0x28);
  2894  001004  0E28               	movlw	40
  2895  001006  6E06               	movwf	write_data@byte2^0,c
  2896  001008  0E08               	movlw	8
  2897  00100A  EC95  F00A         	call	_write_data
  2898                           
  2899                           ;lm629.c: 866:     check_busy();
  2900  00100E  EC7E  F00B         	call	_check_busy	;wreg free
  2901                           
  2902                           ;lm629.c: 868:     write_data(0x00,0x00);
  2903  001012  0E00               	movlw	0
  2904  001014  6E06               	movwf	write_data@byte2^0,c
  2905  001016  0E00               	movlw	0
  2906  001018  EC95  F00A         	call	_write_data
  2907                           
  2908                           ;lm629.c: 869:     check_busy();
  2909  00101C  EC7E  F00B         	call	_check_busy	;wreg free
  2910                           
  2911                           ;lm629.c: 870:     write_data(0x00,0x48);
  2912  001020  0E48               	movlw	72
  2913  001022  6E06               	movwf	write_data@byte2^0,c
  2914  001024  0E00               	movlw	0
  2915  001026  EC95  F00A         	call	_write_data
  2916                           
  2917                           ;lm629.c: 871:     check_busy();
  2918  00102A  EC7E  F00B         	call	_check_busy	;wreg free
  2919                           
  2920                           ;lm629.c: 873:     write_data(0x00,0x00);
  2921  00102E  0E00               	movlw	0
  2922  001030  6E06               	movwf	write_data@byte2^0,c
  2923  001032  0E00               	movlw	0
  2924  001034  EC95  F00A         	call	_write_data
  2925                           
  2926                           ;lm629.c: 874:     check_busy();
  2927  001038  EC7E  F00B         	call	_check_busy	;wreg free
  2928                           
  2929                           ;lm629.c: 875:     write_data(0xFD,0x68);
  2930  00103C  0E68               	movlw	104
  2931  00103E  6E06               	movwf	write_data@byte2^0,c
  2932  001040  0EFD               	movlw	253
  2933  001042  EC95  F00A         	call	_write_data
  2934                           
  2935                           ;lm629.c: 876:     check_busy();
  2936  001046  EC7E  F00B         	call	_check_busy	;wreg free
  2937                           
  2938                           ;lm629.c: 879:     chip_select(3);
  2939  00104A  0E03               	movlw	3
  2940  00104C  EC23  F00A         	call	_chip_select
  2941                           
  2942                           ;lm629.c: 880:     check_busy();
  2943  001050  EC7E  F00B         	call	_check_busy	;wreg free
  2944                           
  2945                           ;lm629.c: 881:     motor_off();
  2946  001054  EC5A  F00B         	call	_motor_off	;wreg free
  2947                           
  2948                           ;lm629.c: 882:     write_command(0x1F);
  2949  001058  0E1F               	movlw	31
  2950  00105A  ECE3  F00A         	call	_write_command
  2951                           
  2952                           ;lm629.c: 883:     check_busy();
  2953  00105E  EC7E  F00B         	call	_check_busy	;wreg free
  2954                           
  2955                           ;lm629.c: 884:     write_data(0x18,0x28);
  2956  001062  0E28               	movlw	40
  2957  001064  6E06               	movwf	write_data@byte2^0,c
  2958  001066  0E18               	movlw	24
  2959  001068  EC95  F00A         	call	_write_data
  2960                           
  2961                           ;lm629.c: 885:     check_busy();
  2962  00106C  EC7E  F00B         	call	_check_busy	;wreg free
  2963                           
  2964                           ;lm629.c: 887:     write_data(0x00,0x00);
  2965  001070  0E00               	movlw	0
  2966  001072  6E06               	movwf	write_data@byte2^0,c
  2967  001074  0E00               	movlw	0
  2968  001076  EC95  F00A         	call	_write_data
  2969                           
  2970                           ;lm629.c: 888:     check_busy();
  2971  00107A  EC7E  F00B         	call	_check_busy	;wreg free
  2972                           
  2973                           ;lm629.c: 889:     write_data(0x00,0x48);
  2974  00107E  0E48               	movlw	72
  2975  001080  6E06               	movwf	write_data@byte2^0,c
  2976  001082  0E00               	movlw	0
  2977  001084  EC95  F00A         	call	_write_data
  2978                           
  2979                           ;lm629.c: 890:     check_busy();
  2980  001088  EC7E  F00B         	call	_check_busy	;wreg free
  2981                           
  2982                           ;lm629.c: 892:     write_data(0x00,0x01);
  2983  00108C  0E01               	movlw	1
  2984  00108E  6E06               	movwf	write_data@byte2^0,c
  2985  001090  0E00               	movlw	0
  2986  001092  EC95  F00A         	call	_write_data
  2987                           
  2988                           ;lm629.c: 893:     check_busy();
  2989  001096  EC7E  F00B         	call	_check_busy	;wreg free
  2990                           
  2991                           ;lm629.c: 894:     write_data(0xFA,0xD0);
  2992  00109A  0ED0               	movlw	208
  2993  00109C  6E06               	movwf	write_data@byte2^0,c
  2994  00109E  0EFA               	movlw	250
  2995  0010A0  EC95  F00A         	call	_write_data
  2996                           
  2997                           ;lm629.c: 895:     check_busy();
  2998  0010A4  EC7E  F00B         	call	_check_busy	;wreg free
  2999                           
  3000                           ;lm629.c: 898:     chip_select(0);
  3001  0010A8  0E00               	movlw	0
  3002  0010AA  EC23  F00A         	call	_chip_select
  3003                           
  3004                           ;lm629.c: 899:     write_command(0x01);
  3005  0010AE  0E01               	movlw	1
  3006  0010B0  ECE3  F00A         	call	_write_command
  3007                           
  3008                           ;lm629.c: 900:     check_busy();
  3009  0010B4  EC7E  F00B         	call	_check_busy	;wreg free
  3010                           
  3011                           ;lm629.c: 902:     chip_select(2);
  3012  0010B8  0E02               	movlw	2
  3013  0010BA  EC23  F00A         	call	_chip_select
  3014                           
  3015                           ;lm629.c: 903:     write_command(0x01);
  3016  0010BE  0E01               	movlw	1
  3017  0010C0  ECE3  F00A         	call	_write_command
  3018                           
  3019                           ;lm629.c: 904:     check_busy();
  3020  0010C4  EC7E  F00B         	call	_check_busy	;wreg free
  3021                           
  3022                           ;lm629.c: 906:     chip_select(1);
  3023  0010C8  0E01               	movlw	1
  3024  0010CA  EC23  F00A         	call	_chip_select
  3025                           
  3026                           ;lm629.c: 907:     write_command(0x01);
  3027  0010CE  0E01               	movlw	1
  3028  0010D0  ECE3  F00A         	call	_write_command
  3029                           
  3030                           ;lm629.c: 908:     check_busy();
  3031  0010D4  EC7E  F00B         	call	_check_busy	;wreg free
  3032                           
  3033                           ;lm629.c: 910:     chip_select(3);
  3034  0010D8  0E03               	movlw	3
  3035  0010DA  EC23  F00A         	call	_chip_select
  3036                           
  3037                           ;lm629.c: 911:     write_command(0x01);
  3038  0010DE  0E01               	movlw	1
  3039  0010E0  ECE3  F00A         	call	_write_command
  3040                           
  3041                           ;lm629.c: 912:     check_busy();
  3042  0010E4  EC7E  F00B         	call	_check_busy	;wreg free
  3043  0010E8  0012               	return		;funcret
  3044  0010EA                     __end_of_forward_left:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _forward *****************
  3048 ;; Defined at:
  3049 ;;		line 440 in file "lm629.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;		None
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;		None
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;Total ram usage:        0 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 5
  3070 ;; This function calls:
  3071 ;;		_check_busy
  3072 ;;		_chip_select
  3073 ;;		_motor_off
  3074 ;;		_write_command
  3075 ;;		_write_data
  3076 ;; This function is called by:
  3077 ;;		_main
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text10
  3082  0010EA                     __ptext10:
  3083                           	callstack 0
  3084  0010EA                     _forward:
  3085                           	callstack 25
  3086  0010EA                     
  3087                           ;lm629.c: 442:     chip_select(0);
  3088  0010EA  0E00               	movlw	0
  3089  0010EC  EC23  F00A         	call	_chip_select
  3090                           
  3091                           ;lm629.c: 443:     check_busy();
  3092  0010F0  EC7E  F00B         	call	_check_busy	;wreg free
  3093                           
  3094                           ;lm629.c: 444:     motor_off();
  3095  0010F4  EC5A  F00B         	call	_motor_off	;wreg free
  3096                           
  3097                           ;lm629.c: 445:     write_command(0x1F);
  3098  0010F8  0E1F               	movlw	31
  3099  0010FA  ECE3  F00A         	call	_write_command
  3100                           
  3101                           ;lm629.c: 446:     check_busy();
  3102  0010FE  EC7E  F00B         	call	_check_busy	;wreg free
  3103                           
  3104                           ;lm629.c: 447:     write_data(0x18,0x28);
  3105  001102  0E28               	movlw	40
  3106  001104  6E06               	movwf	write_data@byte2^0,c
  3107  001106  0E18               	movlw	24
  3108  001108  EC95  F00A         	call	_write_data
  3109                           
  3110                           ;lm629.c: 448:     check_busy();
  3111  00110C  EC7E  F00B         	call	_check_busy	;wreg free
  3112                           
  3113                           ;lm629.c: 450:     write_data(0x00,0x00);
  3114  001110  0E00               	movlw	0
  3115  001112  6E06               	movwf	write_data@byte2^0,c
  3116  001114  0E00               	movlw	0
  3117  001116  EC95  F00A         	call	_write_data
  3118                           
  3119                           ;lm629.c: 451:     check_busy();
  3120  00111A  EC7E  F00B         	call	_check_busy	;wreg free
  3121                           
  3122                           ;lm629.c: 452:     write_data(0x00,0x48);
  3123  00111E  0E48               	movlw	72
  3124  001120  6E06               	movwf	write_data@byte2^0,c
  3125  001122  0E00               	movlw	0
  3126  001124  EC95  F00A         	call	_write_data
  3127                           
  3128                           ;lm629.c: 453:     check_busy();
  3129  001128  EC7E  F00B         	call	_check_busy	;wreg free
  3130                           
  3131                           ;lm629.c: 455:     write_data(0x00,0x01);
  3132  00112C  0E01               	movlw	1
  3133  00112E  6E06               	movwf	write_data@byte2^0,c
  3134  001130  0E00               	movlw	0
  3135  001132  EC95  F00A         	call	_write_data
  3136                           
  3137                           ;lm629.c: 456:     check_busy();
  3138  001136  EC7E  F00B         	call	_check_busy	;wreg free
  3139                           
  3140                           ;lm629.c: 457:     write_data(0xFA,0xD0);
  3141  00113A  0ED0               	movlw	208
  3142  00113C  6E06               	movwf	write_data@byte2^0,c
  3143  00113E  0EFA               	movlw	250
  3144  001140  EC95  F00A         	call	_write_data
  3145                           
  3146                           ;lm629.c: 458:     check_busy();
  3147  001144  EC7E  F00B         	call	_check_busy	;wreg free
  3148                           
  3149                           ;lm629.c: 461:     chip_select(1);
  3150  001148  0E01               	movlw	1
  3151  00114A  EC23  F00A         	call	_chip_select
  3152                           
  3153                           ;lm629.c: 462:     check_busy();
  3154  00114E  EC7E  F00B         	call	_check_busy	;wreg free
  3155                           
  3156                           ;lm629.c: 463:     motor_off();
  3157  001152  EC5A  F00B         	call	_motor_off	;wreg free
  3158                           
  3159                           ;lm629.c: 464:     write_command(0x1F);
  3160  001156  0E1F               	movlw	31
  3161  001158  ECE3  F00A         	call	_write_command
  3162                           
  3163                           ;lm629.c: 465:     check_busy();
  3164  00115C  EC7E  F00B         	call	_check_busy	;wreg free
  3165                           
  3166                           ;lm629.c: 466:     write_data(0x08,0x28);
  3167  001160  0E28               	movlw	40
  3168  001162  6E06               	movwf	write_data@byte2^0,c
  3169  001164  0E08               	movlw	8
  3170  001166  EC95  F00A         	call	_write_data
  3171                           
  3172                           ;lm629.c: 467:     check_busy();
  3173  00116A  EC7E  F00B         	call	_check_busy	;wreg free
  3174                           
  3175                           ;lm629.c: 469:     write_data(0x00,0x00);
  3176  00116E  0E00               	movlw	0
  3177  001170  6E06               	movwf	write_data@byte2^0,c
  3178  001172  0E00               	movlw	0
  3179  001174  EC95  F00A         	call	_write_data
  3180                           
  3181                           ;lm629.c: 470:     check_busy();
  3182  001178  EC7E  F00B         	call	_check_busy	;wreg free
  3183                           
  3184                           ;lm629.c: 471:     write_data(0x00,0x48);
  3185  00117C  0E48               	movlw	72
  3186  00117E  6E06               	movwf	write_data@byte2^0,c
  3187  001180  0E00               	movlw	0
  3188  001182  EC95  F00A         	call	_write_data
  3189                           
  3190                           ;lm629.c: 472:     check_busy();
  3191  001186  EC7E  F00B         	call	_check_busy	;wreg free
  3192                           
  3193                           ;lm629.c: 474:     write_data(0x00,0x01);
  3194  00118A  0E01               	movlw	1
  3195  00118C  6E06               	movwf	write_data@byte2^0,c
  3196  00118E  0E00               	movlw	0
  3197  001190  EC95  F00A         	call	_write_data
  3198                           
  3199                           ;lm629.c: 475:     check_busy();
  3200  001194  EC7E  F00B         	call	_check_busy	;wreg free
  3201                           
  3202                           ;lm629.c: 476:     write_data(0xFA,0xD0);
  3203  001198  0ED0               	movlw	208
  3204  00119A  6E06               	movwf	write_data@byte2^0,c
  3205  00119C  0EFA               	movlw	250
  3206  00119E  EC95  F00A         	call	_write_data
  3207                           
  3208                           ;lm629.c: 477:     check_busy();
  3209  0011A2  EC7E  F00B         	call	_check_busy	;wreg free
  3210                           
  3211                           ;lm629.c: 480:     chip_select(2);
  3212  0011A6  0E02               	movlw	2
  3213  0011A8  EC23  F00A         	call	_chip_select
  3214                           
  3215                           ;lm629.c: 481:     check_busy();
  3216  0011AC  EC7E  F00B         	call	_check_busy	;wreg free
  3217                           
  3218                           ;lm629.c: 482:     motor_off();
  3219  0011B0  EC5A  F00B         	call	_motor_off	;wreg free
  3220                           
  3221                           ;lm629.c: 483:     write_command(0x1F);
  3222  0011B4  0E1F               	movlw	31
  3223  0011B6  ECE3  F00A         	call	_write_command
  3224                           
  3225                           ;lm629.c: 484:     check_busy();
  3226  0011BA  EC7E  F00B         	call	_check_busy	;wreg free
  3227                           
  3228                           ;lm629.c: 485:     write_data(0x08,0x28);
  3229  0011BE  0E28               	movlw	40
  3230  0011C0  6E06               	movwf	write_data@byte2^0,c
  3231  0011C2  0E08               	movlw	8
  3232  0011C4  EC95  F00A         	call	_write_data
  3233                           
  3234                           ;lm629.c: 486:     check_busy();
  3235  0011C8  EC7E  F00B         	call	_check_busy	;wreg free
  3236                           
  3237                           ;lm629.c: 488:     write_data(0x00,0x00);
  3238  0011CC  0E00               	movlw	0
  3239  0011CE  6E06               	movwf	write_data@byte2^0,c
  3240  0011D0  0E00               	movlw	0
  3241  0011D2  EC95  F00A         	call	_write_data
  3242                           
  3243                           ;lm629.c: 489:     check_busy();
  3244  0011D6  EC7E  F00B         	call	_check_busy	;wreg free
  3245                           
  3246                           ;lm629.c: 490:     write_data(0x00,0x48);
  3247  0011DA  0E48               	movlw	72
  3248  0011DC  6E06               	movwf	write_data@byte2^0,c
  3249  0011DE  0E00               	movlw	0
  3250  0011E0  EC95  F00A         	call	_write_data
  3251                           
  3252                           ;lm629.c: 491:     check_busy();
  3253  0011E4  EC7E  F00B         	call	_check_busy	;wreg free
  3254                           
  3255                           ;lm629.c: 493:     write_data(0x00,0x01);
  3256  0011E8  0E01               	movlw	1
  3257  0011EA  6E06               	movwf	write_data@byte2^0,c
  3258  0011EC  0E00               	movlw	0
  3259  0011EE  EC95  F00A         	call	_write_data
  3260                           
  3261                           ;lm629.c: 494:     check_busy();
  3262  0011F2  EC7E  F00B         	call	_check_busy	;wreg free
  3263                           
  3264                           ;lm629.c: 495:     write_data(0xFA,0xD0);
  3265  0011F6  0ED0               	movlw	208
  3266  0011F8  6E06               	movwf	write_data@byte2^0,c
  3267  0011FA  0EFA               	movlw	250
  3268  0011FC  EC95  F00A         	call	_write_data
  3269                           
  3270                           ;lm629.c: 496:     check_busy();
  3271  001200  EC7E  F00B         	call	_check_busy	;wreg free
  3272                           
  3273                           ;lm629.c: 499:     chip_select(3);
  3274  001204  0E03               	movlw	3
  3275  001206  EC23  F00A         	call	_chip_select
  3276                           
  3277                           ;lm629.c: 500:     check_busy();
  3278  00120A  EC7E  F00B         	call	_check_busy	;wreg free
  3279                           
  3280                           ;lm629.c: 501:     motor_off();
  3281  00120E  EC5A  F00B         	call	_motor_off	;wreg free
  3282                           
  3283                           ;lm629.c: 502:     write_command(0x1F);
  3284  001212  0E1F               	movlw	31
  3285  001214  ECE3  F00A         	call	_write_command
  3286                           
  3287                           ;lm629.c: 503:     check_busy();
  3288  001218  EC7E  F00B         	call	_check_busy	;wreg free
  3289                           
  3290                           ;lm629.c: 504:     write_data(0x18,0x28);
  3291  00121C  0E28               	movlw	40
  3292  00121E  6E06               	movwf	write_data@byte2^0,c
  3293  001220  0E18               	movlw	24
  3294  001222  EC95  F00A         	call	_write_data
  3295                           
  3296                           ;lm629.c: 505:     check_busy();
  3297  001226  EC7E  F00B         	call	_check_busy	;wreg free
  3298                           
  3299                           ;lm629.c: 507:     write_data(0x00,0x00);
  3300  00122A  0E00               	movlw	0
  3301  00122C  6E06               	movwf	write_data@byte2^0,c
  3302  00122E  0E00               	movlw	0
  3303  001230  EC95  F00A         	call	_write_data
  3304                           
  3305                           ;lm629.c: 508:     check_busy();
  3306  001234  EC7E  F00B         	call	_check_busy	;wreg free
  3307                           
  3308                           ;lm629.c: 509:     write_data(0x00,0x48);
  3309  001238  0E48               	movlw	72
  3310  00123A  6E06               	movwf	write_data@byte2^0,c
  3311  00123C  0E00               	movlw	0
  3312  00123E  EC95  F00A         	call	_write_data
  3313                           
  3314                           ;lm629.c: 510:     check_busy();
  3315  001242  EC7E  F00B         	call	_check_busy	;wreg free
  3316                           
  3317                           ;lm629.c: 512:     write_data(0x00,0x01);
  3318  001246  0E01               	movlw	1
  3319  001248  6E06               	movwf	write_data@byte2^0,c
  3320  00124A  0E00               	movlw	0
  3321  00124C  EC95  F00A         	call	_write_data
  3322                           
  3323                           ;lm629.c: 513:     check_busy();
  3324  001250  EC7E  F00B         	call	_check_busy	;wreg free
  3325                           
  3326                           ;lm629.c: 514:     write_data(0xFA,0xD0);
  3327  001254  0ED0               	movlw	208
  3328  001256  6E06               	movwf	write_data@byte2^0,c
  3329  001258  0EFA               	movlw	250
  3330  00125A  EC95  F00A         	call	_write_data
  3331                           
  3332                           ;lm629.c: 515:     check_busy();
  3333  00125E  EC7E  F00B         	call	_check_busy	;wreg free
  3334                           
  3335                           ;lm629.c: 518:     chip_select(0);
  3336  001262  0E00               	movlw	0
  3337  001264  EC23  F00A         	call	_chip_select
  3338                           
  3339                           ;lm629.c: 519:     write_command(0x01);
  3340  001268  0E01               	movlw	1
  3341  00126A  ECE3  F00A         	call	_write_command
  3342                           
  3343                           ;lm629.c: 520:     check_busy();
  3344  00126E  EC7E  F00B         	call	_check_busy	;wreg free
  3345                           
  3346                           ;lm629.c: 522:     chip_select(2);
  3347  001272  0E02               	movlw	2
  3348  001274  EC23  F00A         	call	_chip_select
  3349                           
  3350                           ;lm629.c: 523:     write_command(0x01);
  3351  001278  0E01               	movlw	1
  3352  00127A  ECE3  F00A         	call	_write_command
  3353                           
  3354                           ;lm629.c: 524:     check_busy();
  3355  00127E  EC7E  F00B         	call	_check_busy	;wreg free
  3356                           
  3357                           ;lm629.c: 526:     chip_select(1);
  3358  001282  0E01               	movlw	1
  3359  001284  EC23  F00A         	call	_chip_select
  3360                           
  3361                           ;lm629.c: 527:     write_command(0x01);
  3362  001288  0E01               	movlw	1
  3363  00128A  ECE3  F00A         	call	_write_command
  3364                           
  3365                           ;lm629.c: 528:     check_busy();
  3366  00128E  EC7E  F00B         	call	_check_busy	;wreg free
  3367                           
  3368                           ;lm629.c: 530:     chip_select(3);
  3369  001292  0E03               	movlw	3
  3370  001294  EC23  F00A         	call	_chip_select
  3371                           
  3372                           ;lm629.c: 531:     write_command(0x01);
  3373  001298  0E01               	movlw	1
  3374  00129A  ECE3  F00A         	call	_write_command
  3375                           
  3376                           ;lm629.c: 532:     check_busy();
  3377  00129E  EC7E  F00B         	call	_check_busy	;wreg free
  3378  0012A2  0012               	return		;funcret
  3379  0012A4                     __end_of_forward:
  3380                           	callstack 0
  3381                           
  3382 ;; *************** function _all_off *****************
  3383 ;; Defined at:
  3384 ;;		line 362 in file "lm629.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;		None
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:        0 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; Hardware stack levels required when called: 5
  3405 ;; This function calls:
  3406 ;;		_chip_select
  3407 ;;		_motor_off
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text11
  3414  001660                     __ptext11:
  3415                           	callstack 0
  3416  001660                     _all_off:
  3417                           	callstack 25
  3418  001660                     
  3419                           ;lm629.c: 364:     chip_select(0);
  3420  001660  0E00               	movlw	0
  3421  001662  EC23  F00A         	call	_chip_select
  3422                           
  3423                           ;lm629.c: 365:     motor_off();
  3424  001666  EC5A  F00B         	call	_motor_off	;wreg free
  3425                           
  3426                           ;lm629.c: 366:     chip_select(1);
  3427  00166A  0E01               	movlw	1
  3428  00166C  EC23  F00A         	call	_chip_select
  3429                           
  3430                           ;lm629.c: 367:     motor_off();
  3431  001670  EC5A  F00B         	call	_motor_off	;wreg free
  3432                           
  3433                           ;lm629.c: 368:     chip_select(2);
  3434  001674  0E02               	movlw	2
  3435  001676  EC23  F00A         	call	_chip_select
  3436                           
  3437                           ;lm629.c: 369:     motor_off();
  3438  00167A  EC5A  F00B         	call	_motor_off	;wreg free
  3439                           
  3440                           ;lm629.c: 370:     chip_select(3);
  3441  00167E  0E03               	movlw	3
  3442  001680  EC23  F00A         	call	_chip_select
  3443                           
  3444                           ;lm629.c: 371:     motor_off();
  3445  001684  EC5A  F00B         	call	_motor_off	;wreg free
  3446  001688  0012               	return		;funcret
  3447  00168A                     __end_of_all_off:
  3448                           	callstack 0
  3449                           
  3450 ;; *************** function _motor_off *****************
  3451 ;; Defined at:
  3452 ;;		line 330 in file "lm629.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;		None
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 4
  3473 ;; This function calls:
  3474 ;;		_check_busy
  3475 ;;		_write_command
  3476 ;;		_write_data
  3477 ;; This function is called by:
  3478 ;;		_all_off
  3479 ;;		_forward
  3480 ;;		_reverse
  3481 ;;		_right
  3482 ;;		_left
  3483 ;;		_forward_left
  3484 ;;		_forward_right
  3485 ;;		_reverse_left
  3486 ;;		_reverse_right
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text12
  3491  0016B4                     __ptext12:
  3492                           	callstack 0
  3493  0016B4                     _motor_off:
  3494                           	callstack 25
  3495  0016B4                     
  3496                           ;lm629.c: 332:     write_command(0x1F);
  3497  0016B4  0E1F               	movlw	31
  3498  0016B6  ECE3  F00A         	call	_write_command
  3499                           
  3500                           ;lm629.c: 333:     check_busy();
  3501  0016BA  EC7E  F00B         	call	_check_busy	;wreg free
  3502                           
  3503                           ;lm629.c: 334:     write_data(0x01,0x00);
  3504  0016BE  0E00               	movlw	0
  3505  0016C0  6E06               	movwf	write_data@byte2^0,c
  3506  0016C2  0E01               	movlw	1
  3507  0016C4  EC95  F00A         	call	_write_data
  3508                           
  3509                           ;lm629.c: 335:     check_busy();
  3510  0016C8  EC7E  F00B         	call	_check_busy	;wreg free
  3511                           
  3512                           ;lm629.c: 336:     write_command(0x01);
  3513  0016CC  0E01               	movlw	1
  3514  0016CE  ECE3  F00A         	call	_write_command
  3515                           
  3516                           ;lm629.c: 337:     check_busy();
  3517  0016D2  EC7E  F00B         	call	_check_busy	;wreg free
  3518  0016D6  0012               	return		;funcret
  3519  0016D8                     __end_of_motor_off:
  3520                           	callstack 0
  3521                           
  3522 ;; *************** function _all_break *****************
  3523 ;; Defined at:
  3524 ;;		line 350 in file "lm629.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used: 1
  3544 ;; Hardware stack levels required when called: 5
  3545 ;; This function calls:
  3546 ;;		_chip_select
  3547 ;;		_motor_break
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text13
  3554  00168A                     __ptext13:
  3555                           	callstack 0
  3556  00168A                     _all_break:
  3557                           	callstack 25
  3558  00168A                     
  3559                           ;lm629.c: 352:     chip_select(0);
  3560  00168A  0E00               	movlw	0
  3561  00168C  EC23  F00A         	call	_chip_select
  3562                           
  3563                           ;lm629.c: 353:     motor_break();
  3564  001690  EC6C  F00B         	call	_motor_break	;wreg free
  3565                           
  3566                           ;lm629.c: 354:     chip_select(1);
  3567  001694  0E01               	movlw	1
  3568  001696  EC23  F00A         	call	_chip_select
  3569                           
  3570                           ;lm629.c: 355:     motor_break();
  3571  00169A  EC6C  F00B         	call	_motor_break	;wreg free
  3572                           
  3573                           ;lm629.c: 356:     chip_select(2);
  3574  00169E  0E02               	movlw	2
  3575  0016A0  EC23  F00A         	call	_chip_select
  3576                           
  3577                           ;lm629.c: 357:     motor_break();
  3578  0016A4  EC6C  F00B         	call	_motor_break	;wreg free
  3579                           
  3580                           ;lm629.c: 358:     chip_select(3);
  3581  0016A8  0E03               	movlw	3
  3582  0016AA  EC23  F00A         	call	_chip_select
  3583                           
  3584                           ;lm629.c: 359:     motor_break();
  3585  0016AE  EC6C  F00B         	call	_motor_break	;wreg free
  3586  0016B2  0012               	return		;funcret
  3587  0016B4                     __end_of_all_break:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function _motor_break *****************
  3591 ;; Defined at:
  3592 ;;		line 340 in file "lm629.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;		None
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;Total ram usage:        0 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 4
  3613 ;; This function calls:
  3614 ;;		_check_busy
  3615 ;;		_write_command
  3616 ;;		_write_data
  3617 ;; This function is called by:
  3618 ;;		_all_break
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text14
  3623  0016D8                     __ptext14:
  3624                           	callstack 0
  3625  0016D8                     _motor_break:
  3626                           	callstack 25
  3627  0016D8                     
  3628                           ;lm629.c: 342:     write_command(0x1F);
  3629  0016D8  0E1F               	movlw	31
  3630  0016DA  ECE3  F00A         	call	_write_command
  3631                           
  3632                           ;lm629.c: 343:     check_busy();
  3633  0016DE  EC7E  F00B         	call	_check_busy	;wreg free
  3634                           
  3635                           ;lm629.c: 344:     write_data(0x02,0x00);
  3636  0016E2  0E00               	movlw	0
  3637  0016E4  6E06               	movwf	write_data@byte2^0,c
  3638  0016E6  0E02               	movlw	2
  3639  0016E8  EC95  F00A         	call	_write_data
  3640                           
  3641                           ;lm629.c: 345:     check_busy();
  3642  0016EC  EC7E  F00B         	call	_check_busy	;wreg free
  3643                           
  3644                           ;lm629.c: 346:     write_command(0x01);
  3645  0016F0  0E01               	movlw	1
  3646  0016F2  ECE3  F00A         	call	_write_command
  3647                           
  3648                           ;lm629.c: 347:     check_busy();
  3649  0016F6  EC7E  F00B         	call	_check_busy	;wreg free
  3650  0016FA  0012               	return		;funcret
  3651  0016FC                     __end_of_motor_break:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _LM629_init *****************
  3655 ;; Defined at:
  3656 ;;		line 105 in file "lm629.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  x               1    8[COMRAM] unsigned char 
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        2 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 5
  3677 ;; This function calls:
  3678 ;;		_check_busy
  3679 ;;		_chip_select
  3680 ;;		_filter_module
  3681 ;;		_read_status
  3682 ;;		_write_command
  3683 ;;		_write_data
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text15
  3690  00002A                     __ptext15:
  3691                           	callstack 0
  3692  00002A                     _LM629_init:
  3693                           	callstack 25
  3694  00002A                     
  3695                           ;lm629.c: 109:     TRISDbits.TRISD2 = 0;
  3696  00002A  9495               	bcf	149,2,c	;volatile
  3697  00002C                     
  3698                           ;lm629.c: 110:     TRISCbits.TRISC2 = 0;
  3699  00002C  9494               	bcf	148,2,c	;volatile
  3700  00002E                     
  3701                           ;lm629.c: 111:     TRISDbits.TRISD1 = 0;
  3702  00002E  9295               	bcf	149,1,c	;volatile
  3703  000030                     
  3704                           ;lm629.c: 112:     TRISBbits.TRISB5= 0;
  3705  000030  9A93               	bcf	147,5,c	;volatile
  3706  000032                     
  3707                           ;lm629.c: 113:     TRISDbits.TRISD3 = 0;
  3708  000032  9695               	bcf	149,3,c	;volatile
  3709  000034                     
  3710                           ;lm629.c: 114:     TRISBbits.TRISB2 = 0;
  3711  000034  9493               	bcf	147,2,c	;volatile
  3712  000036                     
  3713                           ;lm629.c: 115:     TRISAbits.TRISA0 = 0;
  3714  000036  9092               	bcf	146,0,c	;volatile
  3715  000038                     
  3716                           ;lm629.c: 116:     TRISBbits.TRISB4 = 0;
  3717  000038  9893               	bcf	147,4,c	;volatile
  3718  00003A                     
  3719                           ;lm629.c: 117:  PORTCbits.RC2=1;
  3720  00003A  8482               	bsf	130,2,c	;volatile
  3721  00003C                     
  3722                           ;lm629.c: 118:  PORTDbits.RD2=1;
  3723  00003C  8483               	bsf	131,2,c	;volatile
  3724  00003E                     
  3725                           ;lm629.c: 119:  PORTDbits.RD1=1;
  3726  00003E  8283               	bsf	131,1,c	;volatile
  3727  000040                     
  3728                           ;lm629.c: 120:  PORTBbits.RB5=1;
  3729  000040  8A81               	bsf	129,5,c	;volatile
  3730  000042                     
  3731                           ;lm629.c: 121:  chip_select(0);
  3732  000042  0E00               	movlw	0
  3733  000044  EC23  F00A         	call	_chip_select
  3734  000048                     l1563:
  3735                           
  3736                           ;lm629.c: 123:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3737  000048  0E35               	movlw	53
  3738  00004A                     u967:
  3739  00004A  2EE8               	decfsz	wreg,f,c
  3740  00004C  D7FE               	bra	u967
  3741  00004E  F000               	nop	
  3742  000050                     
  3743                           ;lm629.c: 124:  PORTBbits.RB5=0;
  3744  000050  9A81               	bcf	129,5,c	;volatile
  3745  000052                     
  3746                           ;lm629.c: 125:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  3747  000052  0E40               	movlw	64
  3748  000054                     u977:
  3749  000054  2EE8               	decfsz	wreg,f,c
  3750  000056  D7FE               	bra	u977
  3751  000058                     
  3752                           ;lm629.c: 126:  PORTBbits.RB5=1;
  3753  000058  8A81               	bsf	129,5,c	;volatile
  3754  00005A                     
  3755                           ;lm629.c: 127:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3756  00005A  0E2A               	movlw	42
  3757  00005C  6E08               	movwf	??_LM629_init^0,c
  3758  00005E  0E8E               	movlw	142
  3759  000060                     u987:
  3760  000060  2EE8               	decfsz	wreg,f,c
  3761  000062  D7FE               	bra	u987
  3762  000064  2E08               	decfsz	??_LM629_init^0,f,c
  3763  000066  D7FC               	bra	u987
  3764  000068                     
  3765                           ;lm629.c: 128:  x=read_status();
  3766  000068  ECFF  F00A         	call	_read_status	;wreg free
  3767  00006C  6E09               	movwf	LM629_init@x^0,c
  3768  00006E                     
  3769                           ;lm629.c: 129:  if(!(x==0xC4 || x==0x84))
  3770  00006E  0EC4               	movlw	196
  3771  000070  1809               	xorwf	LM629_init@x^0,w,c
  3772  000072  B4D8               	btfsc	status,2,c
  3773  000074  EF3E  F000         	goto	u681
  3774  000078  EF40  F000         	goto	u680
  3775  00007C                     u681:
  3776  00007C  EF4B  F000         	goto	l1583
  3777  000080                     u680:
  3778  000080  0E84               	movlw	132
  3779  000082  1809               	xorwf	LM629_init@x^0,w,c
  3780  000084  B4D8               	btfsc	status,2,c
  3781  000086  EF47  F000         	goto	u691
  3782  00008A  EF49  F000         	goto	u690
  3783  00008E                     u691:
  3784  00008E  EF4B  F000         	goto	l1583
  3785  000092                     u690:
  3786  000092  EF24  F000         	goto	l1563
  3787  000096                     l1583:
  3788                           
  3789                           ;lm629.c: 134:   {;lm629.c: 135:    check_busy();
  3790  000096  EC7E  F00B         	call	_check_busy	;wreg free
  3791                           
  3792                           ;lm629.c: 136:    write_command(0x1D);
  3793  00009A  0E1D               	movlw	29
  3794  00009C  ECE3  F00A         	call	_write_command
  3795                           
  3796                           ;lm629.c: 137:          check_busy();
  3797  0000A0  EC7E  F00B         	call	_check_busy	;wreg free
  3798                           
  3799                           ;lm629.c: 138:    write_data(0x00,0x00);
  3800  0000A4  0E00               	movlw	0
  3801  0000A6  6E06               	movwf	write_data@byte2^0,c
  3802  0000A8  0E00               	movlw	0
  3803  0000AA  EC95  F00A         	call	_write_data
  3804                           
  3805                           ;lm629.c: 139:    check_busy();
  3806  0000AE  EC7E  F00B         	call	_check_busy	;wreg free
  3807                           
  3808                           ;lm629.c: 140:    x=read_status();
  3809  0000B2  ECFF  F00A         	call	_read_status	;wreg free
  3810  0000B6  6E09               	movwf	LM629_init@x^0,c
  3811  0000B8                     
  3812                           ;lm629.c: 141:             if(!(x==0xC0 || x==0x80))
  3813  0000B8  0EC0               	movlw	192
  3814  0000BA  1809               	xorwf	LM629_init@x^0,w,c
  3815  0000BC  B4D8               	btfsc	status,2,c
  3816  0000BE  EF63  F000         	goto	u701
  3817  0000C2  EF65  F000         	goto	u700
  3818  0000C6                     u701:
  3819  0000C6  EF70  F000         	goto	l1591
  3820  0000CA                     u700:
  3821  0000CA  0E80               	movlw	128
  3822  0000CC  1809               	xorwf	LM629_init@x^0,w,c
  3823  0000CE  B4D8               	btfsc	status,2,c
  3824  0000D0  EF6C  F000         	goto	u711
  3825  0000D4  EF6E  F000         	goto	u710
  3826  0000D8                     u711:
  3827  0000D8  EF70  F000         	goto	l1591
  3828  0000DC                     u710:
  3829  0000DC  EF24  F000         	goto	l1563
  3830  0000E0                     l1591:
  3831                           
  3832                           ;lm629.c: 147:  chip_select(1);
  3833  0000E0  0E01               	movlw	1
  3834  0000E2  EC23  F00A         	call	_chip_select
  3835  0000E6                     l1593:
  3836                           
  3837                           ;lm629.c: 149:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3838  0000E6  0E35               	movlw	53
  3839  0000E8                     u997:
  3840  0000E8  2EE8               	decfsz	wreg,f,c
  3841  0000EA  D7FE               	bra	u997
  3842  0000EC  F000               	nop	
  3843  0000EE                     
  3844                           ;lm629.c: 150:  PORTBbits.RB5=0;
  3845  0000EE  9A81               	bcf	129,5,c	;volatile
  3846  0000F0                     
  3847                           ;lm629.c: 151:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  3848  0000F0  0E40               	movlw	64
  3849  0000F2                     u1007:
  3850  0000F2  2EE8               	decfsz	wreg,f,c
  3851  0000F4  D7FE               	bra	u1007
  3852  0000F6                     
  3853                           ;lm629.c: 152:  PORTBbits.RB5=1;
  3854  0000F6  8A81               	bsf	129,5,c	;volatile
  3855  0000F8                     
  3856                           ;lm629.c: 153:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3857  0000F8  0E2A               	movlw	42
  3858  0000FA  6E08               	movwf	??_LM629_init^0,c
  3859  0000FC  0E8E               	movlw	142
  3860  0000FE                     u1017:
  3861  0000FE  2EE8               	decfsz	wreg,f,c
  3862  000100  D7FE               	bra	u1017
  3863  000102  2E08               	decfsz	??_LM629_init^0,f,c
  3864  000104  D7FC               	bra	u1017
  3865  000106                     
  3866                           ;lm629.c: 154:  x=read_status();
  3867  000106  ECFF  F00A         	call	_read_status	;wreg free
  3868  00010A  6E09               	movwf	LM629_init@x^0,c
  3869  00010C                     
  3870                           ;lm629.c: 155:  if(!(x==0xC4 || x==0x84))
  3871  00010C  0EC4               	movlw	196
  3872  00010E  1809               	xorwf	LM629_init@x^0,w,c
  3873  000110  B4D8               	btfsc	status,2,c
  3874  000112  EF8D  F000         	goto	u721
  3875  000116  EF8F  F000         	goto	u720
  3876  00011A                     u721:
  3877  00011A  EF9A  F000         	goto	l1613
  3878  00011E                     u720:
  3879  00011E  0E84               	movlw	132
  3880  000120  1809               	xorwf	LM629_init@x^0,w,c
  3881  000122  B4D8               	btfsc	status,2,c
  3882  000124  EF96  F000         	goto	u731
  3883  000128  EF98  F000         	goto	u730
  3884  00012C                     u731:
  3885  00012C  EF9A  F000         	goto	l1613
  3886  000130                     u730:
  3887  000130  EF73  F000         	goto	l1593
  3888  000134                     l1613:
  3889                           
  3890                           ;lm629.c: 160:   {;lm629.c: 161:    check_busy();
  3891  000134  EC7E  F00B         	call	_check_busy	;wreg free
  3892                           
  3893                           ;lm629.c: 162:    write_command(0x1D);
  3894  000138  0E1D               	movlw	29
  3895  00013A  ECE3  F00A         	call	_write_command
  3896                           
  3897                           ;lm629.c: 163:          check_busy();
  3898  00013E  EC7E  F00B         	call	_check_busy	;wreg free
  3899                           
  3900                           ;lm629.c: 164:    write_data(0x00,0x00);
  3901  000142  0E00               	movlw	0
  3902  000144  6E06               	movwf	write_data@byte2^0,c
  3903  000146  0E00               	movlw	0
  3904  000148  EC95  F00A         	call	_write_data
  3905                           
  3906                           ;lm629.c: 165:    check_busy();
  3907  00014C  EC7E  F00B         	call	_check_busy	;wreg free
  3908                           
  3909                           ;lm629.c: 166:    x=read_status();
  3910  000150  ECFF  F00A         	call	_read_status	;wreg free
  3911  000154  6E09               	movwf	LM629_init@x^0,c
  3912  000156                     
  3913                           ;lm629.c: 167:             if(!(x==0xC0 || x==0x80))
  3914  000156  0EC0               	movlw	192
  3915  000158  1809               	xorwf	LM629_init@x^0,w,c
  3916  00015A  B4D8               	btfsc	status,2,c
  3917  00015C  EFB2  F000         	goto	u741
  3918  000160  EFB4  F000         	goto	u740
  3919  000164                     u741:
  3920  000164  EFBF  F000         	goto	l1621
  3921  000168                     u740:
  3922  000168  0E80               	movlw	128
  3923  00016A  1809               	xorwf	LM629_init@x^0,w,c
  3924  00016C  B4D8               	btfsc	status,2,c
  3925  00016E  EFBB  F000         	goto	u751
  3926  000172  EFBD  F000         	goto	u750
  3927  000176                     u751:
  3928  000176  EFBF  F000         	goto	l1621
  3929  00017A                     u750:
  3930  00017A  EF73  F000         	goto	l1593
  3931  00017E                     l1621:
  3932                           
  3933                           ;lm629.c: 173:      chip_select(2);
  3934  00017E  0E02               	movlw	2
  3935  000180  EC23  F00A         	call	_chip_select
  3936  000184                     l1623:
  3937                           
  3938                           ;lm629.c: 175:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3939  000184  0E35               	movlw	53
  3940  000186                     u1027:
  3941  000186  2EE8               	decfsz	wreg,f,c
  3942  000188  D7FE               	bra	u1027
  3943  00018A  F000               	nop	
  3944  00018C                     
  3945                           ;lm629.c: 176:  PORTBbits.RB5=0;
  3946  00018C  9A81               	bcf	129,5,c	;volatile
  3947  00018E                     
  3948                           ;lm629.c: 177:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  3949  00018E  0E40               	movlw	64
  3950  000190                     u1037:
  3951  000190  2EE8               	decfsz	wreg,f,c
  3952  000192  D7FE               	bra	u1037
  3953  000194                     
  3954                           ;lm629.c: 178:  PORTBbits.RB5=1;
  3955  000194  8A81               	bsf	129,5,c	;volatile
  3956  000196                     
  3957                           ;lm629.c: 179:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3958  000196  0E2A               	movlw	42
  3959  000198  6E08               	movwf	??_LM629_init^0,c
  3960  00019A  0E8E               	movlw	142
  3961  00019C                     u1047:
  3962  00019C  2EE8               	decfsz	wreg,f,c
  3963  00019E  D7FE               	bra	u1047
  3964  0001A0  2E08               	decfsz	??_LM629_init^0,f,c
  3965  0001A2  D7FC               	bra	u1047
  3966  0001A4                     
  3967                           ;lm629.c: 180:  x=read_status();
  3968  0001A4  ECFF  F00A         	call	_read_status	;wreg free
  3969  0001A8  6E09               	movwf	LM629_init@x^0,c
  3970  0001AA                     
  3971                           ;lm629.c: 181:  if(!(x==0xC4 || x==0x84))
  3972  0001AA  0EC4               	movlw	196
  3973  0001AC  1809               	xorwf	LM629_init@x^0,w,c
  3974  0001AE  B4D8               	btfsc	status,2,c
  3975  0001B0  EFDC  F000         	goto	u761
  3976  0001B4  EFDE  F000         	goto	u760
  3977  0001B8                     u761:
  3978  0001B8  EFE9  F000         	goto	l1643
  3979  0001BC                     u760:
  3980  0001BC  0E84               	movlw	132
  3981  0001BE  1809               	xorwf	LM629_init@x^0,w,c
  3982  0001C0  B4D8               	btfsc	status,2,c
  3983  0001C2  EFE5  F000         	goto	u771
  3984  0001C6  EFE7  F000         	goto	u770
  3985  0001CA                     u771:
  3986  0001CA  EFE9  F000         	goto	l1643
  3987  0001CE                     u770:
  3988  0001CE  EFC2  F000         	goto	l1623
  3989  0001D2                     l1643:
  3990                           
  3991                           ;lm629.c: 186:   {;lm629.c: 187:    check_busy();
  3992  0001D2  EC7E  F00B         	call	_check_busy	;wreg free
  3993                           
  3994                           ;lm629.c: 188:    write_command(0x1D);
  3995  0001D6  0E1D               	movlw	29
  3996  0001D8  ECE3  F00A         	call	_write_command
  3997                           
  3998                           ;lm629.c: 189:          check_busy();
  3999  0001DC  EC7E  F00B         	call	_check_busy	;wreg free
  4000                           
  4001                           ;lm629.c: 190:    write_data(0x00,0x00);
  4002  0001E0  0E00               	movlw	0
  4003  0001E2  6E06               	movwf	write_data@byte2^0,c
  4004  0001E4  0E00               	movlw	0
  4005  0001E6  EC95  F00A         	call	_write_data
  4006                           
  4007                           ;lm629.c: 191:    check_busy();
  4008  0001EA  EC7E  F00B         	call	_check_busy	;wreg free
  4009                           
  4010                           ;lm629.c: 192:    x=read_status();
  4011  0001EE  ECFF  F00A         	call	_read_status	;wreg free
  4012  0001F2  6E09               	movwf	LM629_init@x^0,c
  4013  0001F4                     
  4014                           ;lm629.c: 193:             if(!(x==0xC0 || x==0x80))
  4015  0001F4  0EC0               	movlw	192
  4016  0001F6  1809               	xorwf	LM629_init@x^0,w,c
  4017  0001F8  B4D8               	btfsc	status,2,c
  4018  0001FA  EF01  F001         	goto	u781
  4019  0001FE  EF03  F001         	goto	u780
  4020  000202                     u781:
  4021  000202  EF0E  F001         	goto	l1651
  4022  000206                     u780:
  4023  000206  0E80               	movlw	128
  4024  000208  1809               	xorwf	LM629_init@x^0,w,c
  4025  00020A  B4D8               	btfsc	status,2,c
  4026  00020C  EF0A  F001         	goto	u791
  4027  000210  EF0C  F001         	goto	u790
  4028  000214                     u791:
  4029  000214  EF0E  F001         	goto	l1651
  4030  000218                     u790:
  4031  000218  EFC2  F000         	goto	l1623
  4032  00021C                     l1651:
  4033                           
  4034                           ;lm629.c: 199:  chip_select(3);
  4035  00021C  0E03               	movlw	3
  4036  00021E  EC23  F00A         	call	_chip_select
  4037  000222                     l1653:
  4038                           
  4039                           ;lm629.c: 201:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  4040  000222  0E35               	movlw	53
  4041  000224                     u1057:
  4042  000224  2EE8               	decfsz	wreg,f,c
  4043  000226  D7FE               	bra	u1057
  4044  000228  F000               	nop	
  4045  00022A                     
  4046                           ;lm629.c: 202:  PORTBbits.RB5=0;
  4047  00022A  9A81               	bcf	129,5,c	;volatile
  4048  00022C                     
  4049                           ;lm629.c: 203:  _delay((unsigned long)((12)*(64000000/4000000.0)));
  4050  00022C  0E40               	movlw	64
  4051  00022E                     u1067:
  4052  00022E  2EE8               	decfsz	wreg,f,c
  4053  000230  D7FE               	bra	u1067
  4054  000232                     
  4055                           ;lm629.c: 204:  PORTBbits.RB5=1;
  4056  000232  8A81               	bsf	129,5,c	;volatile
  4057  000234                     
  4058                           ;lm629.c: 205:  _delay((unsigned long)((2)*(64000000/4000.0)));
  4059  000234  0E2A               	movlw	42
  4060  000236  6E08               	movwf	??_LM629_init^0,c
  4061  000238  0E8E               	movlw	142
  4062  00023A                     u1077:
  4063  00023A  2EE8               	decfsz	wreg,f,c
  4064  00023C  D7FE               	bra	u1077
  4065  00023E  2E08               	decfsz	??_LM629_init^0,f,c
  4066  000240  D7FC               	bra	u1077
  4067  000242                     
  4068                           ;lm629.c: 206:  x=read_status();
  4069  000242  ECFF  F00A         	call	_read_status	;wreg free
  4070  000246  6E09               	movwf	LM629_init@x^0,c
  4071  000248                     
  4072                           ;lm629.c: 207:  if(!(x==0xC4 || x==0x84))
  4073  000248  0EC4               	movlw	196
  4074  00024A  1809               	xorwf	LM629_init@x^0,w,c
  4075  00024C  B4D8               	btfsc	status,2,c
  4076  00024E  EF2B  F001         	goto	u801
  4077  000252  EF2D  F001         	goto	u800
  4078  000256                     u801:
  4079  000256  EF38  F001         	goto	l1673
  4080  00025A                     u800:
  4081  00025A  0E84               	movlw	132
  4082  00025C  1809               	xorwf	LM629_init@x^0,w,c
  4083  00025E  B4D8               	btfsc	status,2,c
  4084  000260  EF34  F001         	goto	u811
  4085  000264  EF36  F001         	goto	u810
  4086  000268                     u811:
  4087  000268  EF38  F001         	goto	l1673
  4088  00026C                     u810:
  4089  00026C  EF11  F001         	goto	l1653
  4090  000270                     l1673:
  4091                           
  4092                           ;lm629.c: 212:   {;lm629.c: 213:    check_busy();
  4093  000270  EC7E  F00B         	call	_check_busy	;wreg free
  4094                           
  4095                           ;lm629.c: 214:    write_command(0x1D);
  4096  000274  0E1D               	movlw	29
  4097  000276  ECE3  F00A         	call	_write_command
  4098                           
  4099                           ;lm629.c: 215:          check_busy();
  4100  00027A  EC7E  F00B         	call	_check_busy	;wreg free
  4101                           
  4102                           ;lm629.c: 216:    write_data(0x00,0x00);
  4103  00027E  0E00               	movlw	0
  4104  000280  6E06               	movwf	write_data@byte2^0,c
  4105  000282  0E00               	movlw	0
  4106  000284  EC95  F00A         	call	_write_data
  4107                           
  4108                           ;lm629.c: 217:    check_busy();
  4109  000288  EC7E  F00B         	call	_check_busy	;wreg free
  4110                           
  4111                           ;lm629.c: 218:    x=read_status();
  4112  00028C  ECFF  F00A         	call	_read_status	;wreg free
  4113  000290  6E09               	movwf	LM629_init@x^0,c
  4114  000292                     
  4115                           ;lm629.c: 219:             if(!(x==0xC0 || x==0x80))
  4116  000292  0EC0               	movlw	192
  4117  000294  1809               	xorwf	LM629_init@x^0,w,c
  4118  000296  B4D8               	btfsc	status,2,c
  4119  000298  EF50  F001         	goto	u821
  4120  00029C  EF52  F001         	goto	u820
  4121  0002A0                     u821:
  4122  0002A0  EF5D  F001         	goto	l1681
  4123  0002A4                     u820:
  4124  0002A4  0E80               	movlw	128
  4125  0002A6  1809               	xorwf	LM629_init@x^0,w,c
  4126  0002A8  B4D8               	btfsc	status,2,c
  4127  0002AA  EF59  F001         	goto	u831
  4128  0002AE  EF5B  F001         	goto	u830
  4129  0002B2                     u831:
  4130  0002B2  EF5D  F001         	goto	l1681
  4131  0002B6                     u830:
  4132  0002B6  EF11  F001         	goto	l1653
  4133  0002BA                     l1681:
  4134                           
  4135                           ;lm629.c: 224: chip_select(0);
  4136  0002BA  0E00               	movlw	0
  4137  0002BC  EC23  F00A         	call	_chip_select
  4138                           
  4139                           ;lm629.c: 225: filter_module();
  4140  0002C0  EC67  F00A         	call	_filter_module	;wreg free
  4141                           
  4142                           ;lm629.c: 226: chip_select(1);
  4143  0002C4  0E01               	movlw	1
  4144  0002C6  EC23  F00A         	call	_chip_select
  4145                           
  4146                           ;lm629.c: 227: filter_module();
  4147  0002CA  EC67  F00A         	call	_filter_module	;wreg free
  4148                           
  4149                           ;lm629.c: 228: chip_select(2);
  4150  0002CE  0E02               	movlw	2
  4151  0002D0  EC23  F00A         	call	_chip_select
  4152                           
  4153                           ;lm629.c: 229: filter_module();
  4154  0002D4  EC67  F00A         	call	_filter_module	;wreg free
  4155                           
  4156                           ;lm629.c: 230: chip_select(3);
  4157  0002D8  0E03               	movlw	3
  4158  0002DA  EC23  F00A         	call	_chip_select
  4159                           
  4160                           ;lm629.c: 231: filter_module();
  4161  0002DE  EC67  F00A         	call	_filter_module	;wreg free
  4162  0002E2  0012               	return		;funcret
  4163  0002E4                     __end_of_LM629_init:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _filter_module *****************
  4167 ;; Defined at:
  4168 ;;		line 374 in file "lm629.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 4
  4189 ;; This function calls:
  4190 ;;		_check_busy
  4191 ;;		_write_command
  4192 ;;		_write_data
  4193 ;; This function is called by:
  4194 ;;		_LM629_init
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text16
  4199  0014CE                     __ptext16:
  4200                           	callstack 0
  4201  0014CE                     _filter_module:
  4202                           	callstack 25
  4203  0014CE                     
  4204                           ;lm629.c: 376:     write_command(0x1E);
  4205  0014CE  0E1E               	movlw	30
  4206  0014D0  ECE3  F00A         	call	_write_command
  4207                           
  4208                           ;lm629.c: 377:     check_busy();
  4209  0014D4  EC7E  F00B         	call	_check_busy	;wreg free
  4210                           
  4211                           ;lm629.c: 378:     write_data(0x00,0x0F);
  4212  0014D8  0E0F               	movlw	15
  4213  0014DA  6E06               	movwf	write_data@byte2^0,c
  4214  0014DC  0E00               	movlw	0
  4215  0014DE  EC95  F00A         	call	_write_data
  4216                           
  4217                           ;lm629.c: 379:     check_busy();
  4218  0014E2  EC7E  F00B         	call	_check_busy	;wreg free
  4219                           
  4220                           ;lm629.c: 380:     write_data(0x01,0x0F);
  4221  0014E6  0E0F               	movlw	15
  4222  0014E8  6E06               	movwf	write_data@byte2^0,c
  4223  0014EA  0E01               	movlw	1
  4224  0014EC  EC95  F00A         	call	_write_data
  4225                           
  4226                           ;lm629.c: 381:     check_busy();
  4227  0014F0  EC7E  F00B         	call	_check_busy	;wreg free
  4228                           
  4229                           ;lm629.c: 382:     write_data(0x00,0x04);
  4230  0014F4  0E04               	movlw	4
  4231  0014F6  6E06               	movwf	write_data@byte2^0,c
  4232  0014F8  0E00               	movlw	0
  4233  0014FA  EC95  F00A         	call	_write_data
  4234                           
  4235                           ;lm629.c: 383:     check_busy();
  4236  0014FE  EC7E  F00B         	call	_check_busy	;wreg free
  4237                           
  4238                           ;lm629.c: 384:     write_data(0x7F,0xFF);
  4239  001502  0EFF               	movlw	255
  4240  001504  6E06               	movwf	write_data@byte2^0,c
  4241  001506  0E7F               	movlw	127
  4242  001508  EC95  F00A         	call	_write_data
  4243                           
  4244                           ;lm629.c: 385:     check_busy();
  4245  00150C  EC7E  F00B         	call	_check_busy	;wreg free
  4246                           
  4247                           ;lm629.c: 386:     write_data(0x00,0xFF);
  4248  001510  0EFF               	movlw	255
  4249  001512  6E06               	movwf	write_data@byte2^0,c
  4250  001514  0E00               	movlw	0
  4251  001516  EC95  F00A         	call	_write_data
  4252                           
  4253                           ;lm629.c: 387:     check_busy();
  4254  00151A  EC7E  F00B         	call	_check_busy	;wreg free
  4255                           
  4256                           ;lm629.c: 388:     write_command(0x04);
  4257  00151E  0E04               	movlw	4
  4258  001520  ECE3  F00A         	call	_write_command
  4259                           
  4260                           ;lm629.c: 389:     check_busy();
  4261  001524  EC7E  F00B         	call	_check_busy	;wreg free
  4262  001528  0012               	return		;funcret
  4263  00152A                     __end_of_filter_module:
  4264                           	callstack 0
  4265                           
  4266 ;; *************** function _write_data *****************
  4267 ;; Defined at:
  4268 ;;		line 67 in file "lm629.c"
  4269 ;; Parameters:    Size  Location     Type
  4270 ;;  byte1           1    wreg     unsigned char 
  4271 ;;  byte2           1    5[COMRAM] unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  byte1           1    6[COMRAM] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4283 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;Total ram usage:        2 bytes
  4288 ;; Hardware stack levels used: 1
  4289 ;; Hardware stack levels required when called: 2
  4290 ;; This function calls:
  4291 ;;		_DATABUS
  4292 ;;		_DATABUS_DIR
  4293 ;; This function is called by:
  4294 ;;		_LM629_init
  4295 ;;		_motor_off
  4296 ;;		_motor_break
  4297 ;;		_filter_module
  4298 ;;		_forward
  4299 ;;		_reverse
  4300 ;;		_right
  4301 ;;		_left
  4302 ;;		_forward_left
  4303 ;;		_forward_right
  4304 ;;		_reverse_left
  4305 ;;		_reverse_right
  4306 ;;		_simple_absolute_position
  4307 ;;		_simple_relative_position
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           
  4311                           	psect	text17
  4312  00152A                     __ptext17:
  4313                           	callstack 0
  4314  00152A                     _write_data:
  4315                           	callstack 27
  4316                           
  4317                           ;incstack = 0
  4318                           ;write_data@byte1 stored from wreg
  4319  00152A  6E07               	movwf	write_data@byte1^0,c
  4320  00152C                     
  4321                           ;lm629.c: 67: void write_data( unsigned char byte1, unsigned char byte2);lm629.c: 68: {;
      +                          lm629.c: 69:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4322  00152C  0E05               	movlw	5
  4323  00152E                     u1087:
  4324  00152E  2EE8               	decfsz	wreg,f,c
  4325  001530  D7FE               	bra	u1087
  4326  001532  F000               	nop	
  4327  001534                     
  4328                           ;lm629.c: 70:  DATABUS_DIR(0);
  4329  001534  0E00               	movlw	0
  4330  001536  ECC3  F00A         	call	_DATABUS_DIR
  4331  00153A                     
  4332                           ;lm629.c: 71:  PORTCbits.RC2=1;
  4333  00153A  8482               	bsf	130,2,c	;volatile
  4334  00153C                     
  4335                           ;lm629.c: 72:  _delay(3);
  4336  00153C  D000               	nop2		;2 cycle nop
  4337  00153E  F000               	nop	
  4338  001540                     
  4339                           ;lm629.c: 73:  PORTDbits.RD1=0;
  4340  001540  9283               	bcf	131,1,c	;volatile
  4341  001542                     
  4342                           ;lm629.c: 74:  _delay(8);
  4343  001542  D000               	nop2		;2 cycle nop
  4344  001544  D000               	nop2		;2 cycle nop
  4345  001546  D000               	nop2		;2 cycle nop
  4346  001548  D000               	nop2		;2 cycle nop
  4347  00154A                     
  4348                           ;lm629.c: 75:  DATABUS(0,byte1);
  4349  00154A  C007  F001         	movff	write_data@byte1,DATABUS@byte0
  4350  00154E  0E00               	movlw	0
  4351  001550  EC72  F001         	call	_DATABUS
  4352  001554                     
  4353                           ;lm629.c: 76:  _delay(5);
  4354  001554  D000               	nop2		;2 cycle nop
  4355  001556  D000               	nop2		;2 cycle nop
  4356  001558  F000               	nop	
  4357  00155A                     
  4358                           ;lm629.c: 77:  PORTDbits.RD1=1;
  4359  00155A  8283               	bsf	131,1,c	;volatile
  4360  00155C                     
  4361                           ;lm629.c: 78:  _delay(10);
  4362  00155C  0E03               	movlw	3
  4363  00155E                     u1097:
  4364  00155E  2EE8               	decfsz	wreg,f,c
  4365  001560  D7FE               	bra	u1097
  4366  001562  F000               	nop	
  4367  001564                     
  4368                           ;lm629.c: 79:  PORTDbits.RD1=0;
  4369  001564  9283               	bcf	131,1,c	;volatile
  4370  001566                     
  4371                           ;lm629.c: 80:  _delay(5);
  4372  001566  D000               	nop2		;2 cycle nop
  4373  001568  D000               	nop2		;2 cycle nop
  4374  00156A  F000               	nop	
  4375  00156C                     
  4376                           ;lm629.c: 81:  DATABUS(0,byte2);
  4377  00156C  C006  F001         	movff	write_data@byte2,DATABUS@byte0
  4378  001570  0E00               	movlw	0
  4379  001572  EC72  F001         	call	_DATABUS
  4380  001576                     
  4381                           ;lm629.c: 82:  _delay(5);
  4382  001576  D000               	nop2		;2 cycle nop
  4383  001578  D000               	nop2		;2 cycle nop
  4384  00157A  F000               	nop	
  4385  00157C                     
  4386                           ;lm629.c: 83:  PORTDbits.RD1=1;
  4387  00157C  8283               	bsf	131,1,c	;volatile
  4388  00157E                     
  4389                           ;lm629.c: 84:  _delay(3);
  4390  00157E  D000               	nop2		;2 cycle nop
  4391  001580  F000               	nop	
  4392  001582                     
  4393                           ;lm629.c: 85:  PORTCbits.RC2=1;
  4394  001582  8482               	bsf	130,2,c	;volatile
  4395  001584  0012               	return		;funcret
  4396  001586                     __end_of_write_data:
  4397                           	callstack 0
  4398                           
  4399 ;; *************** function _write_command *****************
  4400 ;; Defined at:
  4401 ;;		line 89 in file "lm629.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  command         1    wreg     unsigned char 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  command         1    5[COMRAM] unsigned char 
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;Total ram usage:        1 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 2
  4422 ;; This function calls:
  4423 ;;		_DATABUS
  4424 ;;		_DATABUS_DIR
  4425 ;; This function is called by:
  4426 ;;		_LM629_init
  4427 ;;		_motor_off
  4428 ;;		_motor_break
  4429 ;;		_filter_module
  4430 ;;		_forward
  4431 ;;		_reverse
  4432 ;;		_right
  4433 ;;		_left
  4434 ;;		_forward_left
  4435 ;;		_forward_right
  4436 ;;		_reverse_left
  4437 ;;		_reverse_right
  4438 ;;		_simple_absolute_position
  4439 ;;		_simple_relative_position
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text18
  4444  0015C6                     __ptext18:
  4445                           	callstack 0
  4446  0015C6                     _write_command:
  4447                           	callstack 27
  4448                           
  4449                           ;incstack = 0
  4450                           ;write_command@command stored from wreg
  4451  0015C6  6E06               	movwf	write_command@command^0,c
  4452  0015C8                     
  4453                           ;lm629.c: 89: void write_command(unsigned char command);lm629.c: 90: {;lm629.c: 91:  DAT
      +                          ABUS_DIR(0);
  4454  0015C8  0E00               	movlw	0
  4455  0015CA  ECC3  F00A         	call	_DATABUS_DIR
  4456  0015CE                     
  4457                           ;lm629.c: 92:  PORTCbits.RC2=0;
  4458  0015CE  9482               	bcf	130,2,c	;volatile
  4459  0015D0                     
  4460                           ;lm629.c: 93:  _delay(3);
  4461  0015D0  D000               	nop2		;2 cycle nop
  4462  0015D2  F000               	nop	
  4463  0015D4                     
  4464                           ;lm629.c: 94:  PORTDbits.RD1=0;
  4465  0015D4  9283               	bcf	131,1,c	;volatile
  4466  0015D6                     
  4467                           ;lm629.c: 95:  _delay(5);
  4468  0015D6  D000               	nop2		;2 cycle nop
  4469  0015D8  D000               	nop2		;2 cycle nop
  4470  0015DA  F000               	nop	
  4471                           
  4472                           ;lm629.c: 96:  DATABUS(0,command);
  4473  0015DC  C006  F001         	movff	write_command@command,DATABUS@byte0
  4474  0015E0  0E00               	movlw	0
  4475  0015E2  EC72  F001         	call	_DATABUS
  4476  0015E6                     
  4477                           ;lm629.c: 97:  _delay(5);
  4478  0015E6  D000               	nop2		;2 cycle nop
  4479  0015E8  D000               	nop2		;2 cycle nop
  4480  0015EA  F000               	nop	
  4481  0015EC                     
  4482                           ;lm629.c: 98:  PORTDbits.RD1=1;
  4483  0015EC  8283               	bsf	131,1,c	;volatile
  4484  0015EE                     
  4485                           ;lm629.c: 99:  _delay(3);
  4486  0015EE  D000               	nop2		;2 cycle nop
  4487  0015F0  F000               	nop	
  4488  0015F2                     
  4489                           ;lm629.c: 100:  PORTCbits.RC2=1;
  4490  0015F2  8482               	bsf	130,2,c	;volatile
  4491  0015F4                     
  4492                           ;lm629.c: 101:  _delay(11);
  4493  0015F4  0E03               	movlw	3
  4494  0015F6                     u1107:
  4495  0015F6  2EE8               	decfsz	wreg,f,c
  4496  0015F8  D7FE               	bra	u1107
  4497  0015FA  D000               	nop2	
  4498  0015FC  0012               	return		;funcret
  4499  0015FE                     __end_of_write_command:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _check_busy *****************
  4503 ;; Defined at:
  4504 ;;		line 15 in file "lm629.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;  x               1    6[COMRAM] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;Total ram usage:        1 bytes
  4523 ;; Hardware stack levels used: 1
  4524 ;; Hardware stack levels required when called: 3
  4525 ;; This function calls:
  4526 ;;		_read_status
  4527 ;; This function is called by:
  4528 ;;		_LM629_init
  4529 ;;		_motor_off
  4530 ;;		_motor_break
  4531 ;;		_filter_module
  4532 ;;		_forward
  4533 ;;		_reverse
  4534 ;;		_right
  4535 ;;		_left
  4536 ;;		_forward_left
  4537 ;;		_forward_right
  4538 ;;		_reverse_left
  4539 ;;		_reverse_right
  4540 ;;		_simple_absolute_position
  4541 ;;		_simple_relative_position
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           
  4545                           	psect	text19
  4546  0016FC                     __ptext19:
  4547                           	callstack 0
  4548  0016FC                     _check_busy:
  4549                           	callstack 25
  4550  0016FC                     l1451:
  4551                           
  4552                           ;lm629.c: 17:  unsigned char x;;lm629.c: 18:  x=read_status();
  4553  0016FC  ECFF  F00A         	call	_read_status	;wreg free
  4554  001700  6E07               	movwf	check_busy@x^0,c
  4555  001702                     
  4556                           ;lm629.c: 19:  while (x & 0x01)
  4557  001702  B007               	btfsc	check_busy@x^0,0,c
  4558  001704  EF86  F00B         	goto	u631
  4559  001708  EF88  F00B         	goto	u630
  4560  00170C                     u631:
  4561  00170C  EF7E  F00B         	goto	l1451
  4562  001710                     u630:
  4563  001710  0012               	return		;funcret
  4564  001712                     __end_of_check_busy:
  4565                           	callstack 0
  4566                           
  4567 ;; *************** function _read_status *****************
  4568 ;; Defined at:
  4569 ;;		line 25 in file "lm629.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  status          1    5[COMRAM] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      unsigned char 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;Total ram usage:        1 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 2
  4590 ;; This function calls:
  4591 ;;		_DATABUS
  4592 ;;		_DATABUS_DIR
  4593 ;; This function is called by:
  4594 ;;		_check_busy
  4595 ;;		_LM629_init
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text20
  4600  0015FE                     __ptext20:
  4601                           	callstack 0
  4602  0015FE                     _read_status:
  4603                           	callstack 25
  4604  0015FE                     
  4605                           ;lm629.c: 27:  unsigned char status;;lm629.c: 28:  DATABUS_DIR(0xFF);
  4606  0015FE  0EFF               	movlw	255
  4607  001600  ECC3  F00A         	call	_DATABUS_DIR
  4608  001604                     
  4609                           ;lm629.c: 29:  PORTCbits.RC2=0;
  4610  001604  9482               	bcf	130,2,c	;volatile
  4611  001606                     
  4612                           ;lm629.c: 30:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4613  001606  0E05               	movlw	5
  4614  001608                     u1117:
  4615  001608  2EE8               	decfsz	wreg,f,c
  4616  00160A  D7FE               	bra	u1117
  4617  00160C  F000               	nop	
  4618  00160E                     
  4619                           ;lm629.c: 31:  PORTDbits.RD2=0;
  4620  00160E  9483               	bcf	131,2,c	;volatile
  4621  001610                     
  4622                           ;lm629.c: 32:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4623  001610  0E05               	movlw	5
  4624  001612                     u1127:
  4625  001612  2EE8               	decfsz	wreg,f,c
  4626  001614  D7FE               	bra	u1127
  4627  001616  F000               	nop	
  4628                           
  4629                           ;lm629.c: 33:  status=DATABUS(0xFF,0);
  4630  001618  0E00               	movlw	0
  4631  00161A  6E01               	movwf	DATABUS@byte0^0,c
  4632  00161C  0EFF               	movlw	255
  4633  00161E  EC72  F001         	call	_DATABUS
  4634  001622  6E06               	movwf	read_status@status^0,c
  4635  001624                     
  4636                           ;lm629.c: 34:  PORTDbits.RD2=1;
  4637  001624  8483               	bsf	131,2,c	;volatile
  4638  001626                     
  4639                           ;lm629.c: 35:  _delay((unsigned long)((5)*(64000000/4000000.0)));
  4640  001626  0E1A               	movlw	26
  4641  001628                     u1137:
  4642  001628  2EE8               	decfsz	wreg,f,c
  4643  00162A  D7FE               	bra	u1137
  4644  00162C  D000               	nop2	
  4645  00162E                     
  4646                           ;lm629.c: 36:  PORTCbits.RC2=1;
  4647  00162E  8482               	bsf	130,2,c	;volatile
  4648  001630                     
  4649                           ;lm629.c: 38: return status;
  4650  001630  5006               	movf	read_status@status^0,w,c
  4651  001632  0012               	return		;funcret
  4652  001634                     __end_of_read_status:
  4653                           	callstack 0
  4654                           
  4655 ;; *************** function _DATABUS_DIR *****************
  4656 ;; Defined at:
  4657 ;;		line 239 in file "lm629.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  dir             1    wreg     unsigned char 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  dir             1    0[COMRAM] unsigned char 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;Total ram usage:        1 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; Hardware stack levels required when called: 1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_read_status
  4682 ;;		_write_data
  4683 ;;		_write_command
  4684 ;;		_read_data
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text21
  4689  001586                     __ptext21:
  4690                           	callstack 0
  4691  001586                     _DATABUS_DIR:
  4692                           	callstack 27
  4693                           
  4694                           ;incstack = 0
  4695                           ;DATABUS_DIR@dir stored from wreg
  4696  001586  6E01               	movwf	DATABUS_DIR@dir^0,c
  4697  001588                     
  4698                           ;lm629.c: 239: void DATABUS_DIR(unsigned char dir);lm629.c: 240: {;lm629.c: 241:     if(
      +                          dir==0)
  4699  001588  5001               	movf	DATABUS_DIR@dir^0,w,c
  4700  00158A  A4D8               	btfss	status,2,c
  4701  00158C  EFCA  F00A         	goto	u481
  4702  001590  EFCC  F00A         	goto	u480
  4703  001594                     u481:
  4704  001594  EFD4  F00A         	goto	l1413
  4705  001598                     u480:
  4706  001598                     
  4707                           ;lm629.c: 242:     {;lm629.c: 243:         TRISC&=0b00111111;
  4708  001598  0E3F               	movlw	63
  4709  00159A  1694               	andwf	148,f,c	;volatile
  4710                           
  4711                           ;lm629.c: 244:         TRISD&=0b00001111;
  4712  00159C  0E0F               	movlw	15
  4713  00159E  1695               	andwf	149,f,c	;volatile
  4714                           
  4715                           ;lm629.c: 245:         TRISB&=0b11111100;
  4716  0015A0  0EFC               	movlw	252
  4717  0015A2  1693               	andwf	147,f,c	;volatile
  4718                           
  4719                           ;lm629.c: 246:     }
  4720  0015A4  EFE2  F00A         	goto	l176
  4721  0015A8                     l1413:
  4722  0015A8  2801               	incf	DATABUS_DIR@dir^0,w,c
  4723  0015AA  A4D8               	btfss	status,2,c
  4724  0015AC  EFDA  F00A         	goto	u491
  4725  0015B0  EFDC  F00A         	goto	u490
  4726  0015B4                     u491:
  4727  0015B4  EFE2  F00A         	goto	l176
  4728  0015B8                     u490:
  4729  0015B8                     
  4730                           ;lm629.c: 248:     {;lm629.c: 249:         TRISC|=0b11000000;
  4731  0015B8  0EC0               	movlw	192
  4732  0015BA  1294               	iorwf	148,f,c	;volatile
  4733                           
  4734                           ;lm629.c: 250:         TRISD|=0b11110000;
  4735  0015BC  0EF0               	movlw	240
  4736  0015BE  1295               	iorwf	149,f,c	;volatile
  4737                           
  4738                           ;lm629.c: 251:         TRISB|=0b00000011;
  4739  0015C0  0E03               	movlw	3
  4740  0015C2  1293               	iorwf	147,f,c	;volatile
  4741  0015C4                     l176:
  4742  0015C4  0012               	return		;funcret
  4743  0015C6                     __end_of_DATABUS_DIR:
  4744                           	callstack 0
  4745                           
  4746 ;; *************** function _DATABUS *****************
  4747 ;; Defined at:
  4748 ;;		line 258 in file "lm629.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;  dir1            1    wreg     unsigned char 
  4751 ;;  byte0           1    0[COMRAM] unsigned char 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  dir1            1    3[COMRAM] unsigned char 
  4754 ;;  x               1    4[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      unsigned char 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4764 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;Total ram usage:        5 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 1
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_read_status
  4775 ;;		_write_data
  4776 ;;		_write_command
  4777 ;;		_read_data
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text22
  4782  0002E4                     __ptext22:
  4783                           	callstack 0
  4784  0002E4                     _DATABUS:
  4785                           	callstack 27
  4786                           
  4787                           ;incstack = 0
  4788                           ;DATABUS@dir1 stored from wreg
  4789  0002E4  6E04               	movwf	DATABUS@dir1^0,c
  4790  0002E6                     
  4791                           ;lm629.c: 258: unsigned char DATABUS(unsigned char dir1, unsigned char byte0);lm629.c: 2
      +                          59: {;lm629.c: 260: unsigned char x;;lm629.c: 261: if(dir1==0)
  4792  0002E6  5004               	movf	DATABUS@dir1^0,w,c
  4793  0002E8  A4D8               	btfss	status,2,c
  4794  0002EA  EF79  F001         	goto	u501
  4795  0002EE  EF7B  F001         	goto	u500
  4796  0002F2                     u501:
  4797  0002F2  EFF4  F001         	goto	l1423
  4798  0002F6                     u500:
  4799  0002F6                     
  4800                           ;lm629.c: 262: {;lm629.c: 263:     PORTCbits.RC6 = ((byte0 & 0x01) >> 0);
  4801  0002F6  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4802  0002FA  0E01               	movlw	1
  4803  0002FC  1602               	andwf	??_DATABUS^0,f,c
  4804  0002FE  3A02               	swapf	??_DATABUS^0,f,c
  4805  000300  4602               	rlncf	??_DATABUS^0,f,c
  4806  000302  4602               	rlncf	??_DATABUS^0,f,c
  4807  000304  5082               	movf	130,w,c	;volatile
  4808  000306  1802               	xorwf	??_DATABUS^0,w,c
  4809  000308  0BBF               	andlw	-65
  4810  00030A  1802               	xorwf	??_DATABUS^0,w,c
  4811  00030C  6E82               	movwf	130,c	;volatile
  4812                           
  4813                           ;lm629.c: 264:     PORTCbits.RC7 = ((byte0 & 0x02) >> 1);
  4814  00030E  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4815  000312  90D8               	bcf	status,0,c
  4816  000314  3202               	rrcf	??_DATABUS^0,f,c
  4817  000316  0E01               	movlw	1
  4818  000318  1602               	andwf	??_DATABUS^0,f,c
  4819  00031A  3202               	rrcf	??_DATABUS^0,f,c
  4820  00031C  3202               	rrcf	??_DATABUS^0,f,c
  4821  00031E  5082               	movf	130,w,c	;volatile
  4822  000320  1802               	xorwf	??_DATABUS^0,w,c
  4823  000322  0B7F               	andlw	-129
  4824  000324  1802               	xorwf	??_DATABUS^0,w,c
  4825  000326  6E82               	movwf	130,c	;volatile
  4826                           
  4827                           ;lm629.c: 265:     PORTDbits.RD4 = ((byte0 & 0x04) >> 2);
  4828  000328  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4829  00032C  90D8               	bcf	status,0,c
  4830  00032E  3202               	rrcf	??_DATABUS^0,f,c
  4831  000330  90D8               	bcf	status,0,c
  4832  000332  3202               	rrcf	??_DATABUS^0,f,c
  4833  000334  0E01               	movlw	1
  4834  000336  1602               	andwf	??_DATABUS^0,f,c
  4835  000338  3A02               	swapf	??_DATABUS^0,f,c
  4836  00033A  5083               	movf	131,w,c	;volatile
  4837  00033C  1802               	xorwf	??_DATABUS^0,w,c
  4838  00033E  0BEF               	andlw	-17
  4839  000340  1802               	xorwf	??_DATABUS^0,w,c
  4840  000342  6E83               	movwf	131,c	;volatile
  4841                           
  4842                           ;lm629.c: 266:     PORTDbits.RD5 = ((byte0 & 0x08) >> 3);
  4843  000344  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4844  000348  90D8               	bcf	status,0,c
  4845  00034A  3202               	rrcf	??_DATABUS^0,f,c
  4846  00034C  90D8               	bcf	status,0,c
  4847  00034E  3202               	rrcf	??_DATABUS^0,f,c
  4848  000350  90D8               	bcf	status,0,c
  4849  000352  3202               	rrcf	??_DATABUS^0,f,c
  4850  000354  0E01               	movlw	1
  4851  000356  1602               	andwf	??_DATABUS^0,f,c
  4852  000358  3A02               	swapf	??_DATABUS^0,f,c
  4853  00035A  4602               	rlncf	??_DATABUS^0,f,c
  4854  00035C  5083               	movf	131,w,c	;volatile
  4855  00035E  1802               	xorwf	??_DATABUS^0,w,c
  4856  000360  0BDF               	andlw	-33
  4857  000362  1802               	xorwf	??_DATABUS^0,w,c
  4858  000364  6E83               	movwf	131,c	;volatile
  4859                           
  4860                           ;lm629.c: 267:     PORTDbits.RD6 = ((byte0 & 0x10) >> 4);
  4861  000366  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4862  00036A  3A02               	swapf	??_DATABUS^0,f,c
  4863  00036C  0E0F               	movlw	15
  4864  00036E  1602               	andwf	??_DATABUS^0,f,c
  4865  000370  0E01               	movlw	1
  4866  000372  1602               	andwf	??_DATABUS^0,f,c
  4867  000374  3A02               	swapf	??_DATABUS^0,f,c
  4868  000376  4602               	rlncf	??_DATABUS^0,f,c
  4869  000378  4602               	rlncf	??_DATABUS^0,f,c
  4870  00037A  5083               	movf	131,w,c	;volatile
  4871  00037C  1802               	xorwf	??_DATABUS^0,w,c
  4872  00037E  0BBF               	andlw	-65
  4873  000380  1802               	xorwf	??_DATABUS^0,w,c
  4874  000382  6E83               	movwf	131,c	;volatile
  4875                           
  4876                           ;lm629.c: 268:     PORTDbits.RD7 = ((byte0 & 0x20) >> 5);
  4877  000384  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4878  000388  0E05               	movlw	5
  4879  00038A  6E03               	movwf	(??_DATABUS+1)^0,c
  4880  00038C                     u515:
  4881  00038C  90D8               	bcf	status,0,c
  4882  00038E  3202               	rrcf	??_DATABUS^0,f,c
  4883  000390  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  4884  000392  EFC6  F001         	goto	u515
  4885  000396  0E01               	movlw	1
  4886  000398  1602               	andwf	??_DATABUS^0,f,c
  4887  00039A  3202               	rrcf	??_DATABUS^0,f,c
  4888  00039C  3202               	rrcf	??_DATABUS^0,f,c
  4889  00039E  5083               	movf	131,w,c	;volatile
  4890  0003A0  1802               	xorwf	??_DATABUS^0,w,c
  4891  0003A2  0B7F               	andlw	-129
  4892  0003A4  1802               	xorwf	??_DATABUS^0,w,c
  4893  0003A6  6E83               	movwf	131,c	;volatile
  4894                           
  4895                           ;lm629.c: 269:     PORTBbits.RB0 = ((byte0 & 0x40) >> 6);
  4896  0003A8  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4897  0003AC  0E06               	movlw	6
  4898  0003AE  6E03               	movwf	(??_DATABUS+1)^0,c
  4899  0003B0                     u525:
  4900  0003B0  90D8               	bcf	status,0,c
  4901  0003B2  3202               	rrcf	??_DATABUS^0,f,c
  4902  0003B4  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  4903  0003B6  EFD8  F001         	goto	u525
  4904  0003BA  0E01               	movlw	1
  4905  0003BC  1602               	andwf	??_DATABUS^0,f,c
  4906  0003BE  5081               	movf	129,w,c	;volatile
  4907  0003C0  1802               	xorwf	??_DATABUS^0,w,c
  4908  0003C2  0BFE               	andlw	-2
  4909  0003C4  1802               	xorwf	??_DATABUS^0,w,c
  4910  0003C6  6E81               	movwf	129,c	;volatile
  4911                           
  4912                           ;lm629.c: 270:     PORTBbits.RB1 = ((byte0 & 0x80) >> 7);
  4913  0003C8  6A02               	clrf	??_DATABUS^0,c
  4914  0003CA  AE01               	btfss	DATABUS@byte0^0,7,c
  4915  0003CC  D001               	bra	u535
  4916  0003CE  2A02               	incf	??_DATABUS^0,f,c
  4917  0003D0                     u535:
  4918  0003D0  0E01               	movlw	1
  4919  0003D2  1602               	andwf	??_DATABUS^0,f,c
  4920  0003D4  4602               	rlncf	??_DATABUS^0,f,c
  4921  0003D6  5081               	movf	129,w,c	;volatile
  4922  0003D8  1802               	xorwf	??_DATABUS^0,w,c
  4923  0003DA  0BFD               	andlw	-3
  4924  0003DC  1802               	xorwf	??_DATABUS^0,w,c
  4925  0003DE  6E81               	movwf	129,c	;volatile
  4926  0003E0                     
  4927                           ;lm629.c: 271:     x=0;
  4928  0003E0  0E00               	movlw	0
  4929  0003E2  6E05               	movwf	DATABUS@x^0,c
  4930                           
  4931                           ;lm629.c: 272: }
  4932  0003E4  EF68  F002         	goto	l1427
  4933  0003E8                     l1423:
  4934  0003E8  2804               	incf	DATABUS@dir1^0,w,c
  4935  0003EA  A4D8               	btfss	status,2,c
  4936  0003EC  EFFA  F001         	goto	u541
  4937  0003F0  EFFC  F001         	goto	u540
  4938  0003F4                     u541:
  4939  0003F4  EF68  F002         	goto	l1427
  4940  0003F8                     u540:
  4941  0003F8                     
  4942                           ;lm629.c: 275: {;lm629.c: 277:     x |= PORTBbits.RB1;
  4943  0003F8  B281               	btfsc	129,1,c	;volatile
  4944  0003FA  EF01  F002         	goto	u551
  4945  0003FE  EF04  F002         	goto	u550
  4946  000402                     u551:
  4947  000402  0E01               	movlw	1
  4948  000404  EF05  F002         	goto	u556
  4949  000408                     u550:
  4950  000408  0E00               	movlw	0
  4951  00040A                     u556:
  4952  00040A  1205               	iorwf	DATABUS@x^0,f,c
  4953                           
  4954                           ;lm629.c: 278:     x = (x<<1) | PORTBbits.RB0;
  4955  00040C  B081               	btfsc	129,0,c	;volatile
  4956  00040E  EF0B  F002         	goto	u561
  4957  000412  EF0F  F002         	goto	u560
  4958  000416                     u561:
  4959  000416  6A02               	clrf	??_DATABUS^0,c
  4960  000418  2A02               	incf	??_DATABUS^0,f,c
  4961  00041A  EF10  F002         	goto	u568
  4962  00041E                     u560:
  4963  00041E  6A02               	clrf	??_DATABUS^0,c
  4964  000420                     u568:
  4965  000420  5005               	movf	DATABUS@x^0,w,c
  4966  000422  2405               	addwf	DATABUS@x^0,w,c
  4967  000424  1002               	iorwf	??_DATABUS^0,w,c
  4968  000426  6E05               	movwf	DATABUS@x^0,c
  4969                           
  4970                           ;lm629.c: 279:     x = (x<<1) | PORTDbits.RD7;
  4971  000428  BE83               	btfsc	131,7,c	;volatile
  4972  00042A  EF19  F002         	goto	u571
  4973  00042E  EF1D  F002         	goto	u570
  4974  000432                     u571:
  4975  000432  6A02               	clrf	??_DATABUS^0,c
  4976  000434  2A02               	incf	??_DATABUS^0,f,c
  4977  000436  EF1E  F002         	goto	u578
  4978  00043A                     u570:
  4979  00043A  6A02               	clrf	??_DATABUS^0,c
  4980  00043C                     u578:
  4981  00043C  5005               	movf	DATABUS@x^0,w,c
  4982  00043E  2405               	addwf	DATABUS@x^0,w,c
  4983  000440  1002               	iorwf	??_DATABUS^0,w,c
  4984  000442  6E05               	movwf	DATABUS@x^0,c
  4985                           
  4986                           ;lm629.c: 280:     x = (x<<1) | PORTDbits.RD6;
  4987  000444  BC83               	btfsc	131,6,c	;volatile
  4988  000446  EF27  F002         	goto	u581
  4989  00044A  EF2B  F002         	goto	u580
  4990  00044E                     u581:
  4991  00044E  6A02               	clrf	??_DATABUS^0,c
  4992  000450  2A02               	incf	??_DATABUS^0,f,c
  4993  000452  EF2C  F002         	goto	u588
  4994  000456                     u580:
  4995  000456  6A02               	clrf	??_DATABUS^0,c
  4996  000458                     u588:
  4997  000458  5005               	movf	DATABUS@x^0,w,c
  4998  00045A  2405               	addwf	DATABUS@x^0,w,c
  4999  00045C  1002               	iorwf	??_DATABUS^0,w,c
  5000  00045E  6E05               	movwf	DATABUS@x^0,c
  5001                           
  5002                           ;lm629.c: 281:     x = (x<<1) | PORTDbits.RD5;
  5003  000460  BA83               	btfsc	131,5,c	;volatile
  5004  000462  EF35  F002         	goto	u591
  5005  000466  EF39  F002         	goto	u590
  5006  00046A                     u591:
  5007  00046A  6A02               	clrf	??_DATABUS^0,c
  5008  00046C  2A02               	incf	??_DATABUS^0,f,c
  5009  00046E  EF3A  F002         	goto	u598
  5010  000472                     u590:
  5011  000472  6A02               	clrf	??_DATABUS^0,c
  5012  000474                     u598:
  5013  000474  5005               	movf	DATABUS@x^0,w,c
  5014  000476  2405               	addwf	DATABUS@x^0,w,c
  5015  000478  1002               	iorwf	??_DATABUS^0,w,c
  5016  00047A  6E05               	movwf	DATABUS@x^0,c
  5017                           
  5018                           ;lm629.c: 282:     x = (x<<1) | PORTDbits.RD4;
  5019  00047C  B883               	btfsc	131,4,c	;volatile
  5020  00047E  EF43  F002         	goto	u601
  5021  000482  EF47  F002         	goto	u600
  5022  000486                     u601:
  5023  000486  6A02               	clrf	??_DATABUS^0,c
  5024  000488  2A02               	incf	??_DATABUS^0,f,c
  5025  00048A  EF48  F002         	goto	u608
  5026  00048E                     u600:
  5027  00048E  6A02               	clrf	??_DATABUS^0,c
  5028  000490                     u608:
  5029  000490  5005               	movf	DATABUS@x^0,w,c
  5030  000492  2405               	addwf	DATABUS@x^0,w,c
  5031  000494  1002               	iorwf	??_DATABUS^0,w,c
  5032  000496  6E05               	movwf	DATABUS@x^0,c
  5033                           
  5034                           ;lm629.c: 283:     x = (x<<1) | PORTCbits.RC7;
  5035  000498  BE82               	btfsc	130,7,c	;volatile
  5036  00049A  EF51  F002         	goto	u611
  5037  00049E  EF55  F002         	goto	u610
  5038  0004A2                     u611:
  5039  0004A2  6A02               	clrf	??_DATABUS^0,c
  5040  0004A4  2A02               	incf	??_DATABUS^0,f,c
  5041  0004A6  EF56  F002         	goto	u618
  5042  0004AA                     u610:
  5043  0004AA  6A02               	clrf	??_DATABUS^0,c
  5044  0004AC                     u618:
  5045  0004AC  5005               	movf	DATABUS@x^0,w,c
  5046  0004AE  2405               	addwf	DATABUS@x^0,w,c
  5047  0004B0  1002               	iorwf	??_DATABUS^0,w,c
  5048  0004B2  6E05               	movwf	DATABUS@x^0,c
  5049                           
  5050                           ;lm629.c: 284:     x = (x<<1) | PORTCbits.RC6;
  5051  0004B4  BC82               	btfsc	130,6,c	;volatile
  5052  0004B6  EF5F  F002         	goto	u621
  5053  0004BA  EF63  F002         	goto	u620
  5054  0004BE                     u621:
  5055  0004BE  6A02               	clrf	??_DATABUS^0,c
  5056  0004C0  2A02               	incf	??_DATABUS^0,f,c
  5057  0004C2  EF64  F002         	goto	u628
  5058  0004C6                     u620:
  5059  0004C6  6A02               	clrf	??_DATABUS^0,c
  5060  0004C8                     u628:
  5061  0004C8  5005               	movf	DATABUS@x^0,w,c
  5062  0004CA  2405               	addwf	DATABUS@x^0,w,c
  5063  0004CC  1002               	iorwf	??_DATABUS^0,w,c
  5064  0004CE  6E05               	movwf	DATABUS@x^0,c
  5065  0004D0                     l1427:
  5066                           
  5067                           ;lm629.c: 286: return x;
  5068  0004D0  5005               	movf	DATABUS@x^0,w,c
  5069  0004D2  0012               	return		;funcret
  5070  0004D4                     __end_of_DATABUS:
  5071                           	callstack 0
  5072                           
  5073 ;; *************** function _chip_select *****************
  5074 ;; Defined at:
  5075 ;;		line 289 in file "lm629.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  chip            1    wreg     unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  chip            1    0[COMRAM] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;Total ram usage:        1 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 1
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_LM629_init
  5100 ;;		_all_break
  5101 ;;		_all_off
  5102 ;;		_forward
  5103 ;;		_reverse
  5104 ;;		_right
  5105 ;;		_left
  5106 ;;		_forward_left
  5107 ;;		_forward_right
  5108 ;;		_reverse_left
  5109 ;;		_reverse_right
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           	psect	text23
  5114  001446                     __ptext23:
  5115                           	callstack 0
  5116  001446                     _chip_select:
  5117                           	callstack 28
  5118                           
  5119                           ;incstack = 0
  5120                           ;chip_select@chip stored from wreg
  5121  001446  6E01               	movwf	chip_select@chip^0,c
  5122  001448                     
  5123                           ;lm629.c: 289: void chip_select(unsigned char chip);lm629.c: 290: {;lm629.c: 291:  if(ch
      +                          ip==0)
  5124  001448  5001               	movf	chip_select@chip^0,w,c
  5125  00144A  A4D8               	btfss	status,2,c
  5126  00144C  EF2A  F00A         	goto	u641
  5127  001450  EF2C  F00A         	goto	u640
  5128  001454                     u641:
  5129  001454  EF32  F00A         	goto	l1515
  5130  001458                     u640:
  5131  001458                     
  5132                           ;lm629.c: 292:  {;lm629.c: 293:   PORTDbits.RD3=0;
  5133  001458  9683               	bcf	131,3,c	;volatile
  5134                           
  5135                           ;lm629.c: 294:   PORTBbits.RB2=1;
  5136  00145A  8481               	bsf	129,2,c	;volatile
  5137                           
  5138                           ;lm629.c: 295:   PORTAbits.RA0=1;
  5139  00145C  8080               	bsf	128,0,c	;volatile
  5140                           
  5141                           ;lm629.c: 296:   PORTBbits.RB4=1;
  5142  00145E  8881               	bsf	129,4,c	;volatile
  5143                           
  5144                           ;lm629.c: 297:  }
  5145  001460  EF62  F00A         	goto	l1527
  5146  001464                     l1515:
  5147  001464  0401               	decf	chip_select@chip^0,w,c
  5148  001466  A4D8               	btfss	status,2,c
  5149  001468  EF38  F00A         	goto	u651
  5150  00146C  EF3A  F00A         	goto	u650
  5151  001470                     u651:
  5152  001470  EF40  F00A         	goto	l1519
  5153  001474                     u650:
  5154  001474                     
  5155                           ;lm629.c: 299:  {;lm629.c: 300:   PORTDbits.RD3=1;
  5156  001474  8683               	bsf	131,3,c	;volatile
  5157                           
  5158                           ;lm629.c: 301:   PORTBbits.RB2=0;
  5159  001476  9481               	bcf	129,2,c	;volatile
  5160                           
  5161                           ;lm629.c: 302:   PORTAbits.RA0=1;
  5162  001478  8080               	bsf	128,0,c	;volatile
  5163                           
  5164                           ;lm629.c: 303:   PORTBbits.RB4=1;
  5165  00147A  8881               	bsf	129,4,c	;volatile
  5166                           
  5167                           ;lm629.c: 304:  }
  5168  00147C  EF62  F00A         	goto	l1527
  5169  001480                     l1519:
  5170  001480  0E02               	movlw	2
  5171  001482  1801               	xorwf	chip_select@chip^0,w,c
  5172  001484  A4D8               	btfss	status,2,c
  5173  001486  EF47  F00A         	goto	u661
  5174  00148A  EF49  F00A         	goto	u660
  5175  00148E                     u661:
  5176  00148E  EF4F  F00A         	goto	l1523
  5177  001492                     u660:
  5178  001492                     
  5179                           ;lm629.c: 306:  {;lm629.c: 307:   PORTDbits.RD3=1;
  5180  001492  8683               	bsf	131,3,c	;volatile
  5181                           
  5182                           ;lm629.c: 308:   PORTBbits.RB2=1;
  5183  001494  8481               	bsf	129,2,c	;volatile
  5184                           
  5185                           ;lm629.c: 309:   PORTAbits.RA0=0;
  5186  001496  9080               	bcf	128,0,c	;volatile
  5187                           
  5188                           ;lm629.c: 310:   PORTBbits.RB4=1;
  5189  001498  8881               	bsf	129,4,c	;volatile
  5190                           
  5191                           ;lm629.c: 311:  }
  5192  00149A  EF62  F00A         	goto	l1527
  5193  00149E                     l1523:
  5194  00149E  0E03               	movlw	3
  5195  0014A0  1801               	xorwf	chip_select@chip^0,w,c
  5196  0014A2  A4D8               	btfss	status,2,c
  5197  0014A4  EF56  F00A         	goto	u671
  5198  0014A8  EF58  F00A         	goto	u670
  5199  0014AC                     u671:
  5200  0014AC  EF5E  F00A         	goto	l191
  5201  0014B0                     u670:
  5202  0014B0                     
  5203                           ;lm629.c: 313:  {;lm629.c: 314:   PORTDbits.RD3=1;
  5204  0014B0  8683               	bsf	131,3,c	;volatile
  5205                           
  5206                           ;lm629.c: 315:   PORTBbits.RB2=1;
  5207  0014B2  8481               	bsf	129,2,c	;volatile
  5208                           
  5209                           ;lm629.c: 316:   PORTAbits.RA0=1;
  5210  0014B4  8080               	bsf	128,0,c	;volatile
  5211                           
  5212                           ;lm629.c: 317:   PORTBbits.RB4=0;
  5213  0014B6  9881               	bcf	129,4,c	;volatile
  5214                           
  5215                           ;lm629.c: 318:  }
  5216  0014B8  EF62  F00A         	goto	l1527
  5217  0014BC                     l191:
  5218                           
  5219                           ;lm629.c: 320:  {;lm629.c: 321:   PORTDbits.RD3=1;
  5220  0014BC  8683               	bsf	131,3,c	;volatile
  5221                           
  5222                           ;lm629.c: 322:   PORTBbits.RB2=1;
  5223  0014BE  8481               	bsf	129,2,c	;volatile
  5224                           
  5225                           ;lm629.c: 323:   PORTAbits.RA0=1;
  5226  0014C0  8080               	bsf	128,0,c	;volatile
  5227                           
  5228                           ;lm629.c: 324:   PORTBbits.RB4=1;
  5229  0014C2  8881               	bsf	129,4,c	;volatile
  5230  0014C4                     l1527:
  5231                           
  5232                           ;lm629.c: 327:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  5233  0014C4  0E35               	movlw	53
  5234  0014C6                     u1147:
  5235  0014C6  2EE8               	decfsz	wreg,f,c
  5236  0014C8  D7FE               	bra	u1147
  5237  0014CA  F000               	nop	
  5238  0014CC  0012               	return		;funcret
  5239  0014CE                     __end_of_chip_select:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function _SPI_ISR *****************
  5243 ;; Defined at:
  5244 ;;		line 36 in file "spi.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;Total ram usage:        0 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		Interrupt level 2
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	intcode
  5272  000008                     __pintcode:
  5273                           	callstack 0
  5274  000008                     _SPI_ISR:
  5275                           	callstack 25
  5276                           
  5277                           ;incstack = 0
  5278  000008  820F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5279  00000A                     
  5280                           ;spi.c: 38:     if(SSPIF)
  5281  00000A  A69E               	btfss	3998,3,c	;volatile
  5282  00000C  EF0A  F000         	goto	i2u94_41
  5283  000010  EF0C  F000         	goto	i2u94_40
  5284  000014                     i2u94_41:
  5285  000014  EF11  F000         	goto	i2l281
  5286  000018                     i2u94_40:
  5287  000018                     
  5288                           ;spi.c: 39:     {;spi.c: 40:         spi_read_data=SSP1BUF;
  5289  000018  CFC9 F00E          	movff	4041,_spi_read_data	;volatile
  5290                           
  5291                           ;spi.c: 41:         SSP1IF=0;
  5292  00001C  969E               	bcf	3998,3,c	;volatile
  5293  00001E                     
  5294                           ;spi.c: 42:         SSP1BUF = 0x55;
  5295  00001E  0E55               	movlw	85
  5296  000020  6EC9               	movwf	201,c	;volatile
  5297  000022                     i2l281:
  5298  000022  920F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5299  000024  0011               	retfie		f
  5300  000026                     __end_of_SPI_ISR:
  5301                           	callstack 0
  5302  0000                     
  5303                           	psect	rparam
  5304  0000                     
  5305                           	psect	temp
  5306  00000F                     btemp:
  5307                           	callstack 0
  5308  00000F                     	ds	1
  5309  0000                     int$flags	set	btemp
  5310  0000                     wtemp8	set	btemp+1
  5311  0000                     ttemp5	set	btemp+1
  5312  0000                     ttemp6	set	btemp+4
  5313  0000                     ttemp7	set	btemp+8
  5314                           
  5315                           	psect	idloc
  5316                           
  5317                           ;Config register IDLOC0 @ 0x200000
  5318                           ;	unspecified, using default values
  5319  200000                     	org	2097152
  5320  200000  FF                 	db	255
  5321                           
  5322                           ;Config register IDLOC1 @ 0x200001
  5323                           ;	unspecified, using default values
  5324  200001                     	org	2097153
  5325  200001  FF                 	db	255
  5326                           
  5327                           ;Config register IDLOC2 @ 0x200002
  5328                           ;	unspecified, using default values
  5329  200002                     	org	2097154
  5330  200002  FF                 	db	255
  5331                           
  5332                           ;Config register IDLOC3 @ 0x200003
  5333                           ;	unspecified, using default values
  5334  200003                     	org	2097155
  5335  200003  FF                 	db	255
  5336                           
  5337                           ;Config register IDLOC4 @ 0x200004
  5338                           ;	unspecified, using default values
  5339  200004                     	org	2097156
  5340  200004  FF                 	db	255
  5341                           
  5342                           ;Config register IDLOC5 @ 0x200005
  5343                           ;	unspecified, using default values
  5344  200005                     	org	2097157
  5345  200005  FF                 	db	255
  5346                           
  5347                           ;Config register IDLOC6 @ 0x200006
  5348                           ;	unspecified, using default values
  5349  200006                     	org	2097158
  5350  200006  FF                 	db	255
  5351                           
  5352                           ;Config register IDLOC7 @ 0x200007
  5353                           ;	unspecified, using default values
  5354  200007                     	org	2097159
  5355  200007  FF                 	db	255
  5356                           
  5357                           	psect	config
  5358                           
  5359                           ; Padding undefined space
  5360  300000                     	org	3145728
  5361  300000  FF                 	db	255
  5362                           
  5363                           ;Config register CONFIG1H @ 0x300001
  5364                           ;	Oscillator Selection bits
  5365                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  5366                           ;	4X PLL Enable
  5367                           ;	PLLCFG = ON, Oscillator multiplied by 4
  5368                           ;	Primary clock enable bit
  5369                           ;	PRICLKEN = ON, Primary clock is always enabled
  5370                           ;	Fail-Safe Clock Monitor Enable bit
  5371                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5372                           ;	Internal/External Oscillator Switchover bit
  5373                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5374  300001                     	org	3145729
  5375  300001  32                 	db	50
  5376                           
  5377                           ;Config register CONFIG2L @ 0x300002
  5378                           ;	Power-up Timer Enable bit
  5379                           ;	PWRTEN = OFF, Power up timer disabled
  5380                           ;	Brown-out Reset Enable bits
  5381                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5382                           ;	Brown Out Reset Voltage bits
  5383                           ;	BORV = 0x3, unprogrammed default
  5384  300002                     	org	3145730
  5385  300002  19                 	db	25
  5386                           
  5387                           ;Config register CONFIG2H @ 0x300003
  5388                           ;	Watchdog Timer Enable bits
  5389                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5390                           ;	Watchdog Timer Postscale Select bits
  5391                           ;	WDTPS = 0xF, unprogrammed default
  5392  300003                     	org	3145731
  5393  300003  3C                 	db	60
  5394                           
  5395                           ; Padding undefined space
  5396  300004                     	org	3145732
  5397  300004  FF                 	db	255
  5398                           
  5399                           ;Config register CONFIG3H @ 0x300005
  5400                           ;	CCP2 MUX bit
  5401                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5402                           ;	PORTB A/D Enable bit
  5403                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  5404                           ;	P3A/CCP3 Mux bit
  5405                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  5406                           ;	HFINTOSC Fast Start-up
  5407                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  5408                           ;	Timer3 Clock input mux bit
  5409                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5410                           ;	ECCP2 B output mux bit
  5411                           ;	P2BMX = PORTC0, P2B is on RC0
  5412                           ;	MCLR Pin Enable bit
  5413                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5414  300005                     	org	3145733
  5415  300005  91                 	db	145
  5416                           
  5417                           ;Config register CONFIG4L @ 0x300006
  5418                           ;	Stack Full/Underflow Reset Enable bit
  5419                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5420                           ;	Single-Supply ICSP Enable bit
  5421                           ;	LVP = OFF, Single-Supply ICSP disabled
  5422                           ;	Extended Instruction Set Enable bit
  5423                           ;	XINST = 0x0, unprogrammed default
  5424                           ;	Background Debug
  5425                           ;	DEBUG = OFF, Disabled
  5426  300006                     	org	3145734
  5427  300006  81                 	db	129
  5428                           
  5429                           ; Padding undefined space
  5430  300007                     	org	3145735
  5431  300007  FF                 	db	255
  5432                           
  5433                           ;Config register CONFIG5L @ 0x300008
  5434                           ;	Code Protection Block 0
  5435                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5436                           ;	Code Protection Block 1
  5437                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5438                           ;	Code Protection Block 2
  5439                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5440                           ;	Code Protection Block 3
  5441                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5442  300008                     	org	3145736
  5443  300008  0F                 	db	15
  5444                           
  5445                           ;Config register CONFIG5H @ 0x300009
  5446                           ;	Boot Block Code Protection bit
  5447                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5448                           ;	Data EEPROM Code Protection bit
  5449                           ;	CPD = OFF, Data EEPROM not code-protected
  5450  300009                     	org	3145737
  5451  300009  C0                 	db	192
  5452                           
  5453                           ;Config register CONFIG6L @ 0x30000A
  5454                           ;	Write Protection Block 0
  5455                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5456                           ;	Write Protection Block 1
  5457                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5458                           ;	Write Protection Block 2
  5459                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5460                           ;	Write Protection Block 3
  5461                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5462  30000A                     	org	3145738
  5463  30000A  0F                 	db	15
  5464                           
  5465                           ;Config register CONFIG6H @ 0x30000B
  5466                           ;	Configuration Register Write Protection bit
  5467                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5468                           ;	Boot Block Write Protection bit
  5469                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5470                           ;	Data EEPROM Write Protection bit
  5471                           ;	WRTD = OFF, Data EEPROM not write-protected
  5472  30000B                     	org	3145739
  5473  30000B  E0                 	db	224
  5474                           
  5475                           ;Config register CONFIG7L @ 0x30000C
  5476                           ;	Table Read Protection Block 0
  5477                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5478                           ;	Table Read Protection Block 1
  5479                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5480                           ;	Table Read Protection Block 2
  5481                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5482                           ;	Table Read Protection Block 3
  5483                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5484  30000C                     	org	3145740
  5485  30000C  0F                 	db	15
  5486                           
  5487                           ;Config register CONFIG7H @ 0x30000D
  5488                           ;	Boot Block Table Read Protection bit
  5489                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5490  30000D                     	org	3145741
  5491  30000D  40                 	db	64
  5492                           tosu	equ	0xFFF
  5493                           tosh	equ	0xFFE
  5494                           tosl	equ	0xFFD
  5495                           stkptr	equ	0xFFC
  5496                           pclatu	equ	0xFFB
  5497                           pclath	equ	0xFFA
  5498                           pcl	equ	0xFF9
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           indf0	equ	0xFEF
  5506                           postinc0	equ	0xFEE
  5507                           postdec0	equ	0xFED
  5508                           preinc0	equ	0xFEC
  5509                           plusw0	equ	0xFEB
  5510                           fsr0h	equ	0xFEA
  5511                           fsr0l	equ	0xFE9
  5512                           wreg	equ	0xFE8
  5513                           indf1	equ	0xFE7
  5514                           postinc1	equ	0xFE6
  5515                           postdec1	equ	0xFE5
  5516                           preinc1	equ	0xFE4
  5517                           plusw1	equ	0xFE3
  5518                           fsr1h	equ	0xFE2
  5519                           fsr1l	equ	0xFE1
  5520                           bsr	equ	0xFE0
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           preinc2	equ	0xFDC
  5525                           plusw2	equ	0xFDB
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     13      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LM629_init
    _right->_check_busy
    _right->_write_data
    _reverse_right->_check_busy
    _reverse_right->_write_data
    _reverse_left->_check_busy
    _reverse_left->_write_data
    _reverse->_check_busy
    _reverse->_write_data
    _left->_check_busy
    _left->_write_data
    _forward_right->_check_busy
    _forward_right->_write_data
    _forward_left->_check_busy
    _forward_left->_write_data
    _forward->_check_busy
    _forward->_write_data
    _motor_off->_check_busy
    _motor_off->_write_data
    _motor_break->_check_busy
    _motor_break->_write_data
    _LM629_init->_check_busy
    _LM629_init->_write_data
    _filter_module->_check_busy
    _filter_module->_write_data
    _write_data->_DATABUS
    _write_command->_DATABUS
    _check_busy->_read_status
    _read_status->_DATABUS

Critical Paths under _SPI_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SPI_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SPI_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SPI_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SPI_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SPI_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SPI_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SPI_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SPI_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SPI_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SPI_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SPI_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SPI_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  340284
                                              9 COMRAM     4     4      0
                         _LM629_init
                          _all_break
                            _all_off
                            _forward
                       _forward_left
                      _forward_right
                               _left
                            _reverse
                       _reverse_left
                      _reverse_right
                              _right
                           _spi_data
                     _spi_slave_init
 ---------------------------------------------------------------------------------
 (1) _spi_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _right                                                0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_right                                        0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_left                                         0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse                                              0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _left                                                 0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_right                                        0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_left                                         0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0   33864
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_off                                              0     0      0   16976
                        _chip_select
                          _motor_off
 ---------------------------------------------------------------------------------
 (2) _motor_off                                            0     0      0   16888
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_break                                            0     0      0   16976
                        _chip_select
                        _motor_break
 ---------------------------------------------------------------------------------
 (2) _motor_break                                          0     0      0   16888
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _LM629_init                                           2     2      0   35153
                                              7 COMRAM     2     2      0
                         _check_busy
                        _chip_select
                      _filter_module
                        _read_status
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _filter_module                                        0     0      0   16888
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           2     1      1   15009
                                              5 COMRAM     2     1      1
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (2) _write_command                                        1     1      0     927
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _check_busy                                           1     1      0     952
                                              6 COMRAM     1     1      0
                        _read_status
 ---------------------------------------------------------------------------------
 (4) _read_status                                          1     1      0     928
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _DATABUS_DIR                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATABUS                                              5     4      1     861
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _chip_select                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SPI_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM629_init
     _check_busy
       _read_status
         _DATABUS
         _DATABUS_DIR
     _chip_select
     _filter_module
       _check_busy
       _write_command
         _DATABUS
         _DATABUS_DIR
       _write_data
         _DATABUS
         _DATABUS_DIR
     _read_status
     _write_command
     _write_data
   _all_break
     _chip_select
     _motor_break
       _check_busy
       _write_command
       _write_data
   _all_off
     _chip_select
     _motor_off
       _check_busy
       _write_command
       _write_data
   _forward
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _spi_data
   _spi_slave_init

 _SPI_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      D       E       1       14.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlllhh      24      0       0      48        0.0%
BITBIGSFRllhhhh     22      0       0      43        0.0%
BITBIGSFRhl         21      0       0      38        0.0%
BITBIGSFRllhhlh      E      0       0      45        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhl        B      0       0      47        0.0%
BITBIGSFRllhhhh      6      0       0      44        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRlhh         4      0       0      39        0.0%
BITBIGSFRlllll       4      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRllllh       2      0       0      50        0.0%
BITBIGSFRlhlh        1      0       0      40        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRlhll        1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      33        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Aug 06 23:06:56 2022

                     l91 143E            _filter_module 14CE                      l202 16B2  
                    l220 12A2                      l205 1688                      l142 1632  
                    l151 15FC                      l223 0BBA                      l208 1528  
                    l232 10E8                      l241 0846                      l170 02E2  
                    l226 068C                      l139 1710                      l235 0F2E  
                    l148 1584                      l229 0D74                      l182 04D2  
                    l238 0A00                      l191 14BC                      l176 15C4  
                    l272 165E                      l193 14CC                      l275 1724  
                    l196 16D6                      l199 16FA                      _GIE 007F97  
                    u500 02F6                      u501 02F2                      u600 048E  
                    u601 0486                      u610 04AA                      u611 04A2  
                    u515 038C                      u620 04C6                      u540 03F8  
                    u700 00CA                      u621 04BE                      u541 03F4  
                    u525 03B0                      u701 00C6                      u550 0408  
                    u630 1710                      u710 00DC                      u551 0402  
                    u535 03D0                      u631 170C                      u711 00D8  
                    u640 1458                      u608 0490                      u560 041E  
                    u480 1598                      u800 025A                      u720 011E  
                    u641 1454                      u561 0416                      u481 1594  
                    u801 0256                      u721 011A                      u650 1474  
                    u618 04AC                      u570 043A                      u490 15B8  
                    u810 026C                      u730 0130                      u651 1470  
                    u571 0432                      u491 15B4                      u811 0268  
                    u731 012C                      u660 1492                      u628 04C8  
                    u580 0456                      u556 040A                      u820 02A4  
                    u740 0168                      u900 13D8                      u661 148E  
                    u581 044E                      u821 02A0                      u741 0164  
                    u901 13D4                      u670 14B0                      u590 0472  
                    u830 02B6                      u750 017A                      u910 13F6  
                    u671 14AC                      u591 046A                      u831 02B2  
                    u751 0176                      u911 13F2                      u568 0420  
                    u760 01BC                      u680 0080                      u920 1414  
                    u840 132C                      u761 01B8                      u681 007C  
                    u921 1410                      u841 1328                      u578 043C  
                    u770 01CE                      u690 0092                      u930 1432  
                    u850 134A                      u771 01CA                      u691 008E  
                    u931 142E                      u851 1346                      u588 0458  
                    u780 0206                      u860 1368                      u781 0202  
                    u861 1364                      u598 0474                      u790 0218  
                    u870 1386                      u791 0214                      u871 1382  
                    u880 13A4                      u881 13A0                      u890 13BE  
                    u891 13BA                      u957 12FA                      u967 004A  
                    u977 0054                      u987 0060                      u997 00E8  
        __end_of_DATABUS 04D4                      wreg 000FE8                     l1411 1598  
                   l1421 03E0                     l1413 15A8                     l1501 15E6  
                   l1511 1448                     l1423 03E8                     l1415 15B8  
                   l1431 15FE                     l1503 15EC                     l1521 1492  
                   l1513 1458                     l1425 03F8                     l1417 02E6  
                   l1409 1588                     l1441 1624                     l1433 1604  
                   l1505 15EE                     l1601 00F8                     l1523 149E  
                   l1515 1464                     l1427 04D0                     l1419 02F6  
                   l1443 1626                     l1435 1606                     l1451 16FC  
                   l1507 15F2                     l1603 0106                     l1531 16B4  
                   l1525 14B0                     l1517 1474                     l1445 162E  
                   l1437 160E                     l1509 15F4                     l1461 153A  
                   l1621 017E                     l1613 0134                     l1605 010C  
                   l1541 002E                     l1533 16D8                     l1701 165C  
                   l1519 1480                     l1527 14C4                     l1447 1630  
                   l1439 1610                     l1455 1702                     l1471 1554  
                   l1463 153C                     l1631 0196                     l1623 0184  
                   l1615 0156                     l1607 011E                     l1551 0038  
                   l1543 0030                     l1535 002A                     l1711 0BBC  
                   l1703 1720                     l1481 156C                     l1473 155A  
                   l1465 1540                     l1457 152C                     l1529 14CE  
                   l1633 01A4                     l1625 018C                     l1617 0168  
                   l1561 0042                     l1553 003A                     l1545 0032  
                   l1537 002A                     l1705 1660                     l1721 0848  
                   l1713 04D4                     l1801 13C6                     l1491 15C8  
                   l1483 1576                     l1475 155C                     l1467 1542  
                   l1459 1534                     l1651 021C                     l1643 01D2  
                   l1635 01AA                     l1627 018E                     l1571 005A  
                   l1563 0048                     l1555 003C                     l1547 0034  
                   l1539 002C                     l1715 168A                     l1707 10EA  
                   l1723 068E                     l1811 1414                     l1803 13D8  
                   l1731 12AE                     l1493 15CE                     l1485 157C  
                   l1477 1564                     l1469 154A                     l1661 0234  
                   l1653 0222                     l1645 01F4                     l1637 01BC  
                   l1629 0194                     l1573 0068                     l1565 0050  
                   l1557 003E                     l1549 0036                     l1717 0D76  
                   l1709 0A02                     l1813 1420                     l1805 13E4  
                   l1741 12C4                     l1733 12B4                     l1725 12A4  
                   l1495 15D0                     l1487 157E                     l1479 1566  
                   l1663 0242                     l1655 022A                     l1647 0206  
                   l1591 00E0                     l1583 0096                     l1575 006E  
                   l1567 0052                     l1559 0040                     l1719 0F30  
                   l1815 1432                     l1807 13F6                     l1751 12D6  
                   l1743 12C8                     l1735 12B8                     l1727 12A8  
                   l1497 15D4                     l1489 1582                     l1681 02BA  
                   l1673 0270                     l1665 0248                     l1657 022C  
                   l1593 00E6                     l1585 00B8                     l1577 0080  
                   l1569 0058                     l1809 1402                     l1761 12E4  
                   l1753 12D8                     l1745 12CC                     l1737 12BC  
                   l1729 12AA                     l1499 15D6                     l1675 0292  
                   l1667 025A                     l1659 0232                     l1595 00EE  
                   l1587 00CA                     l1691 1652                     l1683 1634  
                   l1771 130C                     l1763 12E8                     l1755 12DA  
                   l1747 12D0                     l1739 12C0          ?_spi_slave_init 0001  
                   l1677 02A4                     l1597 00F0                     l1693 1654  
                   l1685 163A                     l1781 1338                     l1773 1310  
                   l1765 12EC                     l1757 12DC                     l1749 12D4  
                   l1599 00F6                     l1695 1656                     l1687 164E  
                   l1791 1386                     l1783 134A                     l1775 1316  
                   l1767 12F0                     l1759 12E0                     l1697 1658  
                   l1689 1650                     l1793 1392                     l1785 1356  
                   l1777 131A                     l1769 1308                     l1699 165A  
                   l1795 13A4                     l1787 1368                     l1779 132C  
                   l1797 13AC                     l1789 1374                     l1799 13BE  
                   u1007 00F2                     u1017 00FE                     u1107 15F6  
                   u1027 0186                     u1117 1608                     u1037 0190  
                   u1127 1612                     u1047 019C                     u1137 1628  
                   u1057 0224                     u1147 14C6                     u1067 022E  
                   u1077 023A                     u1087 152E                     u1097 155E  
                   _PEIE 007F96                     _RCON 000FD0                     _main 12A4  
                   _left 0BBC          __end_of_SPI_ISR 0026                     btemp 000F  
                   start 0026             ___param_bank 000000          spi_data@tx_data 0001  
         ?_filter_module 0001                    ?_main 0001                    ?_left 0001  
                  i2l281 0022                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _SSPIF 007CF3  
        __end_of_all_off 168A          __end_of_forward 12A4                    _right 04D4  
           ?_read_status 0001          __end_of_reverse 0BBC                    ttemp5 0010  
                  ttemp6 0013                    ttemp7 0017                    status 000FD8  
                  wtemp8 0010          write_data@byte1 0007          write_data@byte2 0006  
        __initialization 1712             __end_of_main 1446             __end_of_left 0D76  
              ??_DATABUS 0002                   ??_main 000A                   ??_left 0008  
          __activetblptr 000000        main@received_data 000D                   _ADCON0 000FC2  
                 _ADCON1 000FC1                ??_SPI_ISR 0001                   ?_right 0001  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C                   i2l1853 000A  
                 i2l1855 0018                   i2l1857 001E                   _INTCON 000FF2  
      read_status@status 0006                   _SRCON0 000F47                   _SSP1IE 007CEB  
                 _SSP1IF 007CF3            ?_forward_left 0001          ??_filter_module 0008  
              ??_all_off 0008                   isa$std 000001             ?_motor_break 0001  
           ??_LM629_init 0008                ??_forward 0008         __end_of_spi_data 1726  
              ??_reverse 0008               __accesstop 0060  __end_of__initialization 1714  
   write_command@command 0006            ___rparam_used 000001           ??_forward_left 0008  
         __pcstackCOMRAM 0001       __end_of_LM629_init 02E4            __end_of_right 068E  
       ??_spi_slave_init 0001                  ??_right 0008               _check_busy 16FC  
  __end_of_reverse_right 0848            _forward_right 0D76                  _CM1CON0 000F79  
                _CM2CON0 000F78                  _DATABUS 02E4                  _HLVDCON 000F9C  
          ??_DATABUS_DIR 0001                  i2u94_40 0018                  i2u94_41 0014  
                _SSP1BUF 000FC9                  _SPI_ISR 0008           main@dummy_data 000C  
      __end_of_all_break 16B4            _write_command 15C6           ?_forward_right 0001  
                __Hparam 0000                  __Lparam 0000                ?_spi_data 0001  
           DATABUS@byte0 0001                  __pcinit 1712                  _all_off 1660  
                __ramtop 1000                  __ptext0 12A4                  __ptext1 1634  
                __ptext2 171E                  __ptext3 04D4                  __ptext4 068E  
                __ptext5 0848                  __ptext6 0A02                  __ptext7 0BBC  
                __ptext8 0D76                  __ptext9 0F30                  _forward 10EA  
          ?_reverse_left 0001     __end_of_forward_left 10EA                  _reverse 0A02  
   end_of_initialization 1714              ?_check_busy 0001      __end_of_DATABUS_DIR 15C6  
         ?_write_command 0001        __end_of_motor_off 16D8            ??_chip_select 0001  
             ??_spi_data 0001                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82                _PORTDbits 000F83           ??_reverse_left 0008  
        chip_select@chip 0001                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94                _TRISDbits 000F95          ??_forward_right 0008  
             _write_data 152A    __end_of_filter_module 152A      __end_of_chip_select 14CE  
    start_initialization 1712              _DATABUS_DIR 1586          ??_write_command 0006  
               DATABUS@x 0005                 ?_DATABUS 0001              __pbssCOMRAM 000E  
          ??_read_status 0006                 ?_SPI_ISR 0001           DATABUS_DIR@dir 0001  
   __end_of_reverse_left 0A02                _all_break 168A             _forward_left 0F30  
            _chip_select 1446                __pintcode 0008              ?_write_data 0006  
               ?_all_off 0001                 ?_forward 0001                 ?_reverse 0001  
            DATABUS@dir1 0004             ??_check_busy 0007                 _CTMUCONH 000F45  
    __end_of_read_status 1634               ?_all_break 0001                _motor_off 16B4  
               _SSP1CON1 000FC6                 _SSP1CON3 000FCB                 _SSP2CON1 000F6C  
               _VREFCON0 000F42                 _VREFCON1 000F41            ??_motor_break 0008  
     __end_of_check_busy 1712                 __Hrparam 0000            _reverse_right 068E  
               __Lrparam 0000               ?_motor_off 0001              check_busy@x 0007  
             _LM629_init 002A      __end_of_motor_break 16FC             ?_DATABUS_DIR 0001  
               __ptext10 10EA                 __ptext11 1660                 __ptext20 15FE  
               __ptext12 16B4                 __ptext21 1586                 __ptext13 168A  
               __ptext22 02E4                 __ptext14 16D8                 __ptext23 1446  
               __ptext15 002A                 __ptext16 14CE                 __ptext17 152A  
               __ptext18 15C6                 __ptext19 16FC             _SSP1CON1bits 000FC6  
            _read_status 15FE           ?_reverse_right 0001    __end_of_forward_right 0F30  
            ??_all_break 0008                 isa$xinst 000000                 _spi_data 171E  
               int$flags 000F              LM629_init@x 0009             _SSP1STATbits 000FC7  
           _reverse_left 0848                 intlevel2 0000           _spi_slave_init 1634  
  __end_of_write_command 15FE            _spi_read_data 000E             ?_chip_select 0001  
            ??_motor_off 0008             ??_write_data 0007              _motor_break 16D8  
            ?_LM629_init 0001   __end_of_spi_slave_init 1660          ??_reverse_right 0008  
     __end_of_write_data 1586  
