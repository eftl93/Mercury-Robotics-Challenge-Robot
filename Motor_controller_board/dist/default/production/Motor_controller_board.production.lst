

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 10 14:32:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.35
    36                           ; Generated 05/05/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _TRISC	set	3988
    71  0000                     _TRISD	set	3989
    72  0000                     _TRISA	set	3986
    73  0000                     _PORTB	set	3969
    74  0000                     _SSP1CON1	set	4038
    75  0000                     _INTCON	set	4082
    76  0000                     _TRISCbits	set	3988
    77  0000                     _GIE	set	32663
    78  0000                     _SSP1IE	set	31979
    79  0000                     _SSP1IF	set	31987
    80  0000                     _VREFCON1	set	3905
    81  0000                     _VREFCON0	set	3906
    82  0000                     _CTMUCONH	set	3909
    83  0000                     _SSP2CON1	set	3948
    84  0000                     _ANSELE	set	3900
    85  0000                     _ANSELD	set	3899
    86  0000                     _ANSELC	set	3898
    87  0000                     _ANSELB	set	3897
    88  0000                     _ANSELA	set	3896
    89  0000                     _PORTAbits	set	3968
    90  0000                     _PORTBbits	set	3969
    91  0000                     _PORTCbits	set	3970
    92  0000                     _TRISAbits	set	3986
    93  0000                     _TRISB	set	3987
    94  0000                     _PORTDbits	set	3971
    95  0000                     _HLVDCON	set	3996
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIR1bits	set	3998
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON0	set	4034
   100  0000                     _SSPCON1	set	4038
   101  0000                     _SSPSTAT	set	4039
   102  0000                     _SSP1BUF	set	4041
   103  0000                     _SSP1CON3	set	4043
   104  0000                     _PEIE	set	32662
   105  0000                     _IPEN	set	32391
   106  0000                     _CM2CON0	set	3960
   107  0000                     _CM1CON0	set	3961
   108  0000                     _SRCON0	set	3911
   109                           
   110                           ; #config settings
   111                           
   112                           	psect	cinit
   113  000F02                     __pcinit:
   114                           	callstack 0
   115  000F02                     start_initialization:
   116                           	callstack 0
   117  000F02                     __initialization:
   118                           	callstack 0
   119                           
   120                           ; Clear objects allocated to COMRAM (1 bytes)
   121  000F02  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   122  000F04                     end_of_initialization:
   123                           	callstack 0
   124  000F04                     __end_of__initialization:
   125                           	callstack 0
   126  000F04  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127  000F06  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128  000F08  0100               	movlb	0
   129  000F0A  EF95  F005         	goto	_main	;jump to C main() function
   130                           
   131                           	psect	bssCOMRAM
   132  00000B                     __pbssCOMRAM:
   133                           	callstack 0
   134  00000B                     _spi_read_data:
   135                           	callstack 0
   136  00000B                     	ds	1
   137                           
   138                           	psect	cstackCOMRAM
   139  000001                     __pcstackCOMRAM:
   140                           	callstack 0
   141  000001                     DATABUS_DIR@dir:
   142                           	callstack 0
   143  000001                     DATABUS@byte0:
   144                           	callstack 0
   145  000001                     chip_select@chip:
   146                           	callstack 0
   147  000001                     spi_data@tx_data:
   148                           	callstack 0
   149                           
   150                           ; 1 bytes @ 0x0
   151  000001                     	ds	1
   152  000002                     ??_DATABUS:
   153                           
   154                           ; 1 bytes @ 0x1
   155  000002                     	ds	2
   156  000004                     DATABUS@dir1:
   157                           	callstack 0
   158                           
   159                           ; 1 bytes @ 0x3
   160  000004                     	ds	1
   161  000005                     DATABUS@x:
   162                           	callstack 0
   163                           
   164                           ; 1 bytes @ 0x4
   165  000005                     	ds	1
   166  000006                     read_status@status:
   167                           	callstack 0
   168  000006                     write_data@byte2:
   169                           	callstack 0
   170  000006                     write_command@command:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x5
   174  000006                     	ds	1
   175  000007                     check_busy@x:
   176                           	callstack 0
   177  000007                     write_data@byte1:
   178                           	callstack 0
   179                           
   180                           ; 1 bytes @ 0x6
   181  000007                     	ds	1
   182  000008                     ??_LM629_init:
   183  000008                     
   184                           ; 1 bytes @ 0x7
   185  000008                     	ds	1
   186  000009                     LM629_init@x:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x8
   190  000009                     	ds	1
   191  00000A                     main@received_data:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x9
   195  00000A                     	ds	1
   196                           
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 128 in file "main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;  received_dat    1    9[COMRAM] unsigned char 
   207 ;;  temp_clear      1    0        unsigned char 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   221 ;;Total ram usage:        1 bytes
   222 ;; Hardware stack levels required when called: 6
   223 ;; This function calls:
   224 ;;		_LM629_init
   225 ;;		_all_break
   226 ;;		_all_off
   227 ;;		_forward
   228 ;;		_left
   229 ;;		_reverse
   230 ;;		_right
   231 ;;		_spi_data
   232 ;;		_spi_slave_init
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text0
   239  000B2A                     __ptext0:
   240                           	callstack 0
   241  000B2A                     _main:
   242                           	callstack 25
   243  000B2A                     
   244                           ;main.c: 130: IPEN=0;
   245  000B2A  9ED0               	bcf	4048,7,c	;volatile
   246  000B2C                     
   247                           ;main.c: 131: INTCON=0;
   248  000B2C  0E00               	movlw	0
   249  000B2E  6EF2               	movwf	242,c	;volatile
   250                           
   251                           ;main.c: 132: ANSELA=0;
   252  000B30  0E00               	movlw	0
   253  000B32  010F               	movlb	15	; () banked
   254  000B34  6F38               	movwf	56,b	;volatile
   255                           
   256                           ;main.c: 133: ANSELB=0;
   257  000B36  0E00               	movlw	0
   258  000B38  6F39               	movwf	57,b	;volatile
   259                           
   260                           ;main.c: 134: ANSELC=0;
   261  000B3A  0E00               	movlw	0
   262  000B3C  6F3A               	movwf	58,b	;volatile
   263                           
   264                           ;main.c: 135: ANSELD=0;
   265  000B3E  0E00               	movlw	0
   266  000B40  6F3B               	movwf	59,b	;volatile
   267                           
   268                           ;main.c: 136: ANSELE=0;
   269  000B42  0E00               	movlw	0
   270  000B44  6F3C               	movwf	60,b	;volatile
   271                           
   272                           ;main.c: 137: SSP1CON1=0x00;
   273  000B46  0E00               	movlw	0
   274  000B48  6EC6               	movwf	198,c	;volatile
   275                           
   276                           ;main.c: 138: SSP2CON1=0x00;
   277  000B4A  0E00               	movlw	0
   278  000B4C  6E6C               	movwf	108,c	;volatile
   279                           
   280                           ;main.c: 139: CM1CON0=0b00000000;
   281  000B4E  0E00               	movlw	0
   282  000B50  6E79               	movwf	121,c	;volatile
   283                           
   284                           ;main.c: 140: CM2CON0=0b00000000;
   285  000B52  0E00               	movlw	0
   286  000B54  6E78               	movwf	120,c	;volatile
   287                           
   288                           ;main.c: 141: PORTB=0x00;
   289  000B56  0E00               	movlw	0
   290  000B58  6E81               	movwf	129,c	;volatile
   291                           
   292                           ;main.c: 142: TRISA=0x00;
   293  000B5A  0E00               	movlw	0
   294  000B5C  6E92               	movwf	146,c	;volatile
   295                           
   296                           ;main.c: 143: TRISD=0x00;
   297  000B5E  0E00               	movlw	0
   298  000B60  6E95               	movwf	149,c	;volatile
   299                           
   300                           ;main.c: 144: TRISB=0x00;
   301  000B62  0E00               	movlw	0
   302  000B64  6E93               	movwf	147,c	;volatile
   303                           
   304                           ;main.c: 145: TRISC=0x00;
   305  000B66  0E00               	movlw	0
   306  000B68  6E94               	movwf	148,c	;volatile
   307                           
   308                           ;main.c: 146: CTMUCONH=0x00;
   309  000B6A  0E00               	movlw	0
   310  000B6C  6F45               	movwf	69,b	;volatile
   311                           
   312                           ;main.c: 147: SRCON0=0x00;
   313  000B6E  0E00               	movlw	0
   314  000B70  6F47               	movwf	71,b	;volatile
   315                           
   316                           ;main.c: 148: VREFCON0=0x00;
   317  000B72  0E00               	movlw	0
   318  000B74  6F42               	movwf	66,b	;volatile
   319                           
   320                           ;main.c: 149: VREFCON1=0x00;
   321  000B76  0E00               	movlw	0
   322  000B78  6F41               	movwf	65,b	;volatile
   323                           
   324                           ;main.c: 150: HLVDCON=0x00;
   325  000B7A  0E00               	movlw	0
   326  000B7C  6E9C               	movwf	156,c	;volatile
   327  000B7E                     
   328                           ; BSR set to: 15
   329                           ;main.c: 151: LM629_init();
   330  000B7E  EC1A  F000         	call	_LM629_init	;wreg free
   331  000B82                     
   332                           ;main.c: 152: spi_slave_init();
   333  000B82  EC40  F007         	call	_spi_slave_init	;wreg free
   334  000B86                     l2627:
   335  000B86  50C9               	movf	201,w,c	;volatile
   336  000B88                     
   337                           ;main.c: 159: spi_data(0b01010100);
   338  000B88  0E54               	movlw	84
   339  000B8A  EC87  F007         	call	_spi_data
   340  000B8E                     
   341                           ;main.c: 160: received_data=spi_read_data;
   342  000B8E  C00B  F00A         	movff	_spi_read_data,main@received_data
   343  000B92                     
   344                           ;main.c: 162: if(received_data==0x77)
   345  000B92  0E77               	movlw	119
   346  000B94  180A               	xorwf	main@received_data^0,w,c
   347  000B96  A4D8               	btfss	status,2,c
   348  000B98  EFD0  F005         	goto	u651
   349  000B9C  EFD2  F005         	goto	u650
   350  000BA0                     u651:
   351  000BA0  EFD8  F005         	goto	l2637
   352  000BA4                     u650:
   353  000BA4                     
   354                           ;main.c: 163: {;main.c: 164: all_off();
   355  000BA4  EC16  F007         	call	_all_off	;wreg free
   356                           
   357                           ;main.c: 165: forward();
   358  000BA8  ECB8  F004         	call	_forward	;wreg free
   359                           
   360                           ;main.c: 166: }
   361  000BAC  EFC3  F005         	goto	l2627
   362  000BB0                     l2637:
   363  000BB0  0E73               	movlw	115
   364  000BB2  180A               	xorwf	main@received_data^0,w,c
   365  000BB4  A4D8               	btfss	status,2,c
   366  000BB6  EFDF  F005         	goto	u661
   367  000BBA  EFE1  F005         	goto	u660
   368  000BBE                     u661:
   369  000BBE  EFE7  F005         	goto	l2641
   370  000BC2                     u660:
   371  000BC2                     
   372                           ;main.c: 169: {;main.c: 170: all_off();
   373  000BC2  EC16  F007         	call	_all_off	;wreg free
   374                           
   375                           ;main.c: 171: reverse();
   376  000BC6  ECFE  F002         	call	_reverse	;wreg free
   377                           
   378                           ;main.c: 172: }
   379  000BCA  EFC3  F005         	goto	l2627
   380  000BCE                     l2641:
   381  000BCE  0E61               	movlw	97
   382  000BD0  180A               	xorwf	main@received_data^0,w,c
   383  000BD2  A4D8               	btfss	status,2,c
   384  000BD4  EFEE  F005         	goto	u671
   385  000BD8  EFF0  F005         	goto	u670
   386  000BDC                     u671:
   387  000BDC  EFF6  F005         	goto	l2645
   388  000BE0                     u670:
   389  000BE0                     
   390                           ;main.c: 175: {;main.c: 176: all_off();
   391  000BE0  EC16  F007         	call	_all_off	;wreg free
   392                           
   393                           ;main.c: 177: left();
   394  000BE4  ECDB  F003         	call	_left	;wreg free
   395                           
   396                           ;main.c: 178: }
   397  000BE8  EFC3  F005         	goto	l2627
   398  000BEC                     l2645:
   399  000BEC  0E64               	movlw	100
   400  000BEE  180A               	xorwf	main@received_data^0,w,c
   401  000BF0  A4D8               	btfss	status,2,c
   402  000BF2  EFFD  F005         	goto	u681
   403  000BF6  EFFF  F005         	goto	u680
   404  000BFA                     u681:
   405  000BFA  EF05  F006         	goto	l2649
   406  000BFE                     u680:
   407  000BFE                     
   408                           ;main.c: 181: {;main.c: 182: all_off();
   409  000BFE  EC16  F007         	call	_all_off	;wreg free
   410                           
   411                           ;main.c: 183: right();
   412  000C02  EC21  F002         	call	_right	;wreg free
   413                           
   414                           ;main.c: 184: }
   415  000C06  EFC3  F005         	goto	l2627
   416  000C0A                     l2649:
   417  000C0A  0E6F               	movlw	111
   418  000C0C  180A               	xorwf	main@received_data^0,w,c
   419  000C0E  A4D8               	btfss	status,2,c
   420  000C10  EF0C  F006         	goto	u691
   421  000C14  EF0E  F006         	goto	u690
   422  000C18                     u691:
   423  000C18  EF12  F006         	goto	l2653
   424  000C1C                     u690:
   425  000C1C                     
   426                           ;main.c: 187: {;main.c: 188: all_off();
   427  000C1C  EC16  F007         	call	_all_off	;wreg free
   428                           
   429                           ;main.c: 189: }
   430  000C20  EFC3  F005         	goto	l2627
   431  000C24                     l2653:
   432  000C24  0E62               	movlw	98
   433  000C26  180A               	xorwf	main@received_data^0,w,c
   434  000C28  A4D8               	btfss	status,2,c
   435  000C2A  EF19  F006         	goto	u701
   436  000C2E  EF1B  F006         	goto	u700
   437  000C32                     u701:
   438  000C32  EF1F  F006         	goto	l213
   439  000C36                     u700:
   440  000C36                     
   441                           ;main.c: 192: {;main.c: 193: all_break();
   442  000C36  EC2B  F007         	call	_all_break	;wreg free
   443                           
   444                           ;main.c: 194: }
   445  000C3A  EFC3  F005         	goto	l2627
   446  000C3E                     l213:
   447  000C3E  EFC3  F005         	goto	l2627
   448  000C42  EF18  F000         	goto	start
   449  000C46                     __end_of_main:
   450                           	callstack 0
   451                           
   452 ;; *************** function _spi_slave_init *****************
   453 ;; Defined at:
   454 ;;		line 48 in file "./spi.h"
   455 ;; Parameters:    Size  Location     Type
   456 ;;		None
   457 ;; Auto vars:     Size  Location     Type
   458 ;;		None
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;Total ram usage:        0 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; Hardware stack levels required when called: 1
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text1
   483  000E80                     __ptext1:
   484                           	callstack 0
   485  000E80                     _spi_slave_init:
   486                           	callstack 29
   487  000E80                     
   488                           ;./spi.h: 50: SSP1IE=1;
   489  000E80  869D               	bsf	3997,3,c	;volatile
   490                           
   491                           ;./spi.h: 51: PEIE=1;
   492  000E82  8CF2               	bsf	4082,6,c	;volatile
   493                           
   494                           ;./spi.h: 52: GIE=1;
   495  000E84  8EF2               	bsf	4082,7,c	;volatile
   496  000E86                     
   497                           ;./spi.h: 53: SSPSTAT=0x00;
   498  000E86  0E00               	movlw	0
   499  000E88  6EC7               	movwf	199,c	;volatile
   500                           
   501                           ;./spi.h: 54: SSPCON1=0b00100100;
   502  000E8A  0E24               	movlw	36
   503  000E8C  6EC6               	movwf	198,c	;volatile
   504                           
   505                           ;./spi.h: 55: SSP1CON3=0b00010000;
   506  000E8E  0E10               	movlw	16
   507  000E90  6ECB               	movwf	203,c	;volatile
   508                           
   509                           ;./spi.h: 56: ADCON0=0x00;
   510  000E92  0E00               	movlw	0
   511  000E94  6EC2               	movwf	194,c	;volatile
   512                           
   513                           ;./spi.h: 57: ADCON1=0x00;
   514  000E96  0E00               	movlw	0
   515  000E98  6EC1               	movwf	193,c	;volatile
   516  000E9A                     
   517                           ;./spi.h: 58: TRISAbits.RA5 =1;
   518  000E9A  8A92               	bsf	146,5,c	;volatile
   519  000E9C                     
   520                           ;./spi.h: 59: TRISCbits.RC3=1;
   521  000E9C  8694               	bsf	148,3,c	;volatile
   522  000E9E                     
   523                           ;./spi.h: 60: TRISCbits.RC5=0;
   524  000E9E  9A94               	bcf	148,5,c	;volatile
   525  000EA0                     
   526                           ;./spi.h: 61: TRISCbits.RC4=1;
   527  000EA0  8894               	bsf	148,4,c	;volatile
   528  000EA2  0012               	return		;funcret
   529  000EA4                     __end_of_spi_slave_init:
   530                           	callstack 0
   531                           
   532 ;; *************** function _spi_data *****************
   533 ;; Defined at:
   534 ;;		line 64 in file "./spi.h"
   535 ;; Parameters:    Size  Location     Type
   536 ;;  tx_data         1    wreg     unsigned char 
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  tx_data         1    0[COMRAM] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;Total ram usage:        1 bytes
   553 ;; Hardware stack levels used: 1
   554 ;; Hardware stack levels required when called: 1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text2
   563  000F0E                     __ptext2:
   564                           	callstack 0
   565  000F0E                     _spi_data:
   566                           	callstack 29
   567                           
   568                           ;incstack = 0
   569                           ;spi_data@tx_data stored from wreg
   570  000F0E  6E01               	movwf	spi_data@tx_data^0,c
   571  000F10                     
   572                           ;./spi.h: 64: void spi_data(unsigned char tx_data);./spi.h: 65: {;./spi.h: 66: SSP1BUF=t
      +                          x_data;
   573  000F10  C001  FFC9         	movff	spi_data@tx_data,4041	;volatile
   574  000F14  0012               	return		;funcret
   575  000F16                     __end_of_spi_data:
   576                           	callstack 0
   577                           
   578 ;; *************** function _right *****************
   579 ;; Defined at:
   580 ;;		line 692 in file "./lm629.h"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; Hardware stack levels required when called: 5
   601 ;; This function calls:
   602 ;;		_check_busy
   603 ;;		_chip_select
   604 ;;		_motor_off
   605 ;;		_write_command
   606 ;;		_write_data
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text3
   613  000442                     __ptext3:
   614                           	callstack 0
   615  000442                     _right:
   616                           	callstack 25
   617  000442                     
   618                           ;./lm629.h: 694: chip_select(0);
   619  000442  0E00               	movlw	0
   620  000444  EC23  F006         	call	_chip_select
   621  000448                     
   622                           ;./lm629.h: 695: check_busy();
   623  000448  EC76  F007         	call	_check_busy	;wreg free
   624  00044C                     
   625                           ;./lm629.h: 696: motor_off();
   626  00044C  EC52  F007         	call	_motor_off	;wreg free
   627  000450                     
   628                           ;./lm629.h: 697: write_command(0x1F);
   629  000450  0E1F               	movlw	31
   630  000452  ECE3  F006         	call	_write_command
   631  000456                     
   632                           ;./lm629.h: 698: check_busy();
   633  000456  EC76  F007         	call	_check_busy	;wreg free
   634  00045A                     
   635                           ;./lm629.h: 699: write_data(0x08,0x28);
   636  00045A  0E28               	movlw	40
   637  00045C  6E06               	movwf	write_data@byte2^0,c
   638  00045E  0E08               	movlw	8
   639  000460  EC95  F006         	call	_write_data
   640  000464                     
   641                           ;./lm629.h: 700: check_busy();
   642  000464  EC76  F007         	call	_check_busy	;wreg free
   643  000468                     
   644                           ;./lm629.h: 702: write_data(0x00,0x00);
   645  000468  0E00               	movlw	0
   646  00046A  6E06               	movwf	write_data@byte2^0,c
   647  00046C  0E00               	movlw	0
   648  00046E  EC95  F006         	call	_write_data
   649  000472                     
   650                           ;./lm629.h: 703: check_busy();
   651  000472  EC76  F007         	call	_check_busy	;wreg free
   652  000476                     
   653                           ;./lm629.h: 704: write_data(0x00,0x48);
   654  000476  0E48               	movlw	72
   655  000478  6E06               	movwf	write_data@byte2^0,c
   656  00047A  0E00               	movlw	0
   657  00047C  EC95  F006         	call	_write_data
   658  000480                     
   659                           ;./lm629.h: 705: check_busy();
   660  000480  EC76  F007         	call	_check_busy	;wreg free
   661  000484                     
   662                           ;./lm629.h: 707: write_data(0x00,0x01);
   663  000484  0E01               	movlw	1
   664  000486  6E06               	movwf	write_data@byte2^0,c
   665  000488  0E00               	movlw	0
   666  00048A  EC95  F006         	call	_write_data
   667  00048E                     
   668                           ;./lm629.h: 708: check_busy();
   669  00048E  EC76  F007         	call	_check_busy	;wreg free
   670  000492                     
   671                           ;./lm629.h: 709: write_data(0xFA,0xD0);
   672  000492  0ED0               	movlw	208
   673  000494  6E06               	movwf	write_data@byte2^0,c
   674  000496  0EFA               	movlw	250
   675  000498  EC95  F006         	call	_write_data
   676  00049C                     
   677                           ;./lm629.h: 710: check_busy();
   678  00049C  EC76  F007         	call	_check_busy	;wreg free
   679                           
   680                           ;./lm629.h: 713: chip_select(1);
   681  0004A0  0E01               	movlw	1
   682  0004A2  EC23  F006         	call	_chip_select
   683  0004A6                     
   684                           ;./lm629.h: 714: check_busy();
   685  0004A6  EC76  F007         	call	_check_busy	;wreg free
   686  0004AA                     
   687                           ;./lm629.h: 715: motor_off();
   688  0004AA  EC52  F007         	call	_motor_off	;wreg free
   689  0004AE                     
   690                           ;./lm629.h: 716: write_command(0x1F);
   691  0004AE  0E1F               	movlw	31
   692  0004B0  ECE3  F006         	call	_write_command
   693  0004B4                     
   694                           ;./lm629.h: 717: check_busy();
   695  0004B4  EC76  F007         	call	_check_busy	;wreg free
   696  0004B8                     
   697                           ;./lm629.h: 718: write_data(0x08,0x28);
   698  0004B8  0E28               	movlw	40
   699  0004BA  6E06               	movwf	write_data@byte2^0,c
   700  0004BC  0E08               	movlw	8
   701  0004BE  EC95  F006         	call	_write_data
   702  0004C2                     
   703                           ;./lm629.h: 719: check_busy();
   704  0004C2  EC76  F007         	call	_check_busy	;wreg free
   705  0004C6                     
   706                           ;./lm629.h: 721: write_data(0x00,0x00);
   707  0004C6  0E00               	movlw	0
   708  0004C8  6E06               	movwf	write_data@byte2^0,c
   709  0004CA  0E00               	movlw	0
   710  0004CC  EC95  F006         	call	_write_data
   711  0004D0                     
   712                           ;./lm629.h: 722: check_busy();
   713  0004D0  EC76  F007         	call	_check_busy	;wreg free
   714  0004D4                     
   715                           ;./lm629.h: 723: write_data(0x00,0x48);
   716  0004D4  0E48               	movlw	72
   717  0004D6  6E06               	movwf	write_data@byte2^0,c
   718  0004D8  0E00               	movlw	0
   719  0004DA  EC95  F006         	call	_write_data
   720  0004DE                     
   721                           ;./lm629.h: 724: check_busy();
   722  0004DE  EC76  F007         	call	_check_busy	;wreg free
   723  0004E2                     
   724                           ;./lm629.h: 726: write_data(0x00,0x01);
   725  0004E2  0E01               	movlw	1
   726  0004E4  6E06               	movwf	write_data@byte2^0,c
   727  0004E6  0E00               	movlw	0
   728  0004E8  EC95  F006         	call	_write_data
   729  0004EC                     
   730                           ;./lm629.h: 727: check_busy();
   731  0004EC  EC76  F007         	call	_check_busy	;wreg free
   732  0004F0                     
   733                           ;./lm629.h: 728: write_data(0xFA,0xD0);
   734  0004F0  0ED0               	movlw	208
   735  0004F2  6E06               	movwf	write_data@byte2^0,c
   736  0004F4  0EFA               	movlw	250
   737  0004F6  EC95  F006         	call	_write_data
   738  0004FA                     
   739                           ;./lm629.h: 729: check_busy();
   740  0004FA  EC76  F007         	call	_check_busy	;wreg free
   741                           
   742                           ;./lm629.h: 732: chip_select(2);
   743  0004FE  0E02               	movlw	2
   744  000500  EC23  F006         	call	_chip_select
   745  000504                     
   746                           ;./lm629.h: 733: check_busy();
   747  000504  EC76  F007         	call	_check_busy	;wreg free
   748  000508                     
   749                           ;./lm629.h: 734: motor_off();
   750  000508  EC52  F007         	call	_motor_off	;wreg free
   751  00050C                     
   752                           ;./lm629.h: 735: write_command(0x1F);
   753  00050C  0E1F               	movlw	31
   754  00050E  ECE3  F006         	call	_write_command
   755  000512                     
   756                           ;./lm629.h: 736: check_busy();
   757  000512  EC76  F007         	call	_check_busy	;wreg free
   758  000516                     
   759                           ;./lm629.h: 737: write_data(0x08,0x28);
   760  000516  0E28               	movlw	40
   761  000518  6E06               	movwf	write_data@byte2^0,c
   762  00051A  0E08               	movlw	8
   763  00051C  EC95  F006         	call	_write_data
   764  000520                     
   765                           ;./lm629.h: 738: check_busy();
   766  000520  EC76  F007         	call	_check_busy	;wreg free
   767  000524                     
   768                           ;./lm629.h: 740: write_data(0x00,0x00);
   769  000524  0E00               	movlw	0
   770  000526  6E06               	movwf	write_data@byte2^0,c
   771  000528  0E00               	movlw	0
   772  00052A  EC95  F006         	call	_write_data
   773  00052E                     
   774                           ;./lm629.h: 741: check_busy();
   775  00052E  EC76  F007         	call	_check_busy	;wreg free
   776  000532                     
   777                           ;./lm629.h: 742: write_data(0x00,0x48);
   778  000532  0E48               	movlw	72
   779  000534  6E06               	movwf	write_data@byte2^0,c
   780  000536  0E00               	movlw	0
   781  000538  EC95  F006         	call	_write_data
   782  00053C                     
   783                           ;./lm629.h: 743: check_busy();
   784  00053C  EC76  F007         	call	_check_busy	;wreg free
   785  000540                     
   786                           ;./lm629.h: 745: write_data(0x00,0x01);
   787  000540  0E01               	movlw	1
   788  000542  6E06               	movwf	write_data@byte2^0,c
   789  000544  0E00               	movlw	0
   790  000546  EC95  F006         	call	_write_data
   791  00054A                     
   792                           ;./lm629.h: 746: check_busy();
   793  00054A  EC76  F007         	call	_check_busy	;wreg free
   794  00054E                     
   795                           ;./lm629.h: 747: write_data(0xFA,0xD0);
   796  00054E  0ED0               	movlw	208
   797  000550  6E06               	movwf	write_data@byte2^0,c
   798  000552  0EFA               	movlw	250
   799  000554  EC95  F006         	call	_write_data
   800  000558                     
   801                           ;./lm629.h: 748: check_busy();
   802  000558  EC76  F007         	call	_check_busy	;wreg free
   803                           
   804                           ;./lm629.h: 751: chip_select(3);
   805  00055C  0E03               	movlw	3
   806  00055E  EC23  F006         	call	_chip_select
   807  000562                     
   808                           ;./lm629.h: 752: check_busy();
   809  000562  EC76  F007         	call	_check_busy	;wreg free
   810  000566                     
   811                           ;./lm629.h: 753: motor_off();
   812  000566  EC52  F007         	call	_motor_off	;wreg free
   813  00056A                     
   814                           ;./lm629.h: 754: write_command(0x1F);
   815  00056A  0E1F               	movlw	31
   816  00056C  ECE3  F006         	call	_write_command
   817  000570                     
   818                           ;./lm629.h: 755: check_busy();
   819  000570  EC76  F007         	call	_check_busy	;wreg free
   820  000574                     
   821                           ;./lm629.h: 756: write_data(0x08,0x28);
   822  000574  0E28               	movlw	40
   823  000576  6E06               	movwf	write_data@byte2^0,c
   824  000578  0E08               	movlw	8
   825  00057A  EC95  F006         	call	_write_data
   826  00057E                     
   827                           ;./lm629.h: 757: check_busy();
   828  00057E  EC76  F007         	call	_check_busy	;wreg free
   829  000582                     
   830                           ;./lm629.h: 759: write_data(0x00,0x00);
   831  000582  0E00               	movlw	0
   832  000584  6E06               	movwf	write_data@byte2^0,c
   833  000586  0E00               	movlw	0
   834  000588  EC95  F006         	call	_write_data
   835  00058C                     
   836                           ;./lm629.h: 760: check_busy();
   837  00058C  EC76  F007         	call	_check_busy	;wreg free
   838  000590                     
   839                           ;./lm629.h: 761: write_data(0x00,0x48);
   840  000590  0E48               	movlw	72
   841  000592  6E06               	movwf	write_data@byte2^0,c
   842  000594  0E00               	movlw	0
   843  000596  EC95  F006         	call	_write_data
   844  00059A                     
   845                           ;./lm629.h: 762: check_busy();
   846  00059A  EC76  F007         	call	_check_busy	;wreg free
   847  00059E                     
   848                           ;./lm629.h: 764: write_data(0x00,0x01);
   849  00059E  0E01               	movlw	1
   850  0005A0  6E06               	movwf	write_data@byte2^0,c
   851  0005A2  0E00               	movlw	0
   852  0005A4  EC95  F006         	call	_write_data
   853  0005A8                     
   854                           ;./lm629.h: 765: check_busy();
   855  0005A8  EC76  F007         	call	_check_busy	;wreg free
   856  0005AC                     
   857                           ;./lm629.h: 766: write_data(0xFA,0xD0);
   858  0005AC  0ED0               	movlw	208
   859  0005AE  6E06               	movwf	write_data@byte2^0,c
   860  0005B0  0EFA               	movlw	250
   861  0005B2  EC95  F006         	call	_write_data
   862  0005B6                     
   863                           ;./lm629.h: 767: check_busy();
   864  0005B6  EC76  F007         	call	_check_busy	;wreg free
   865                           
   866                           ;./lm629.h: 770: chip_select(0);
   867  0005BA  0E00               	movlw	0
   868  0005BC  EC23  F006         	call	_chip_select
   869  0005C0                     
   870                           ;./lm629.h: 771: write_command(0x01);
   871  0005C0  0E01               	movlw	1
   872  0005C2  ECE3  F006         	call	_write_command
   873  0005C6                     
   874                           ;./lm629.h: 772: check_busy();
   875  0005C6  EC76  F007         	call	_check_busy	;wreg free
   876                           
   877                           ;./lm629.h: 774: chip_select(2);
   878  0005CA  0E02               	movlw	2
   879  0005CC  EC23  F006         	call	_chip_select
   880  0005D0                     
   881                           ;./lm629.h: 775: write_command(0x01);
   882  0005D0  0E01               	movlw	1
   883  0005D2  ECE3  F006         	call	_write_command
   884  0005D6                     
   885                           ;./lm629.h: 776: check_busy();
   886  0005D6  EC76  F007         	call	_check_busy	;wreg free
   887                           
   888                           ;./lm629.h: 778: chip_select(1);
   889  0005DA  0E01               	movlw	1
   890  0005DC  EC23  F006         	call	_chip_select
   891  0005E0                     
   892                           ;./lm629.h: 779: write_command(0x01);
   893  0005E0  0E01               	movlw	1
   894  0005E2  ECE3  F006         	call	_write_command
   895  0005E6                     
   896                           ;./lm629.h: 780: check_busy();
   897  0005E6  EC76  F007         	call	_check_busy	;wreg free
   898                           
   899                           ;./lm629.h: 782: chip_select(3);
   900  0005EA  0E03               	movlw	3
   901  0005EC  EC23  F006         	call	_chip_select
   902  0005F0                     
   903                           ;./lm629.h: 783: write_command(0x01);
   904  0005F0  0E01               	movlw	1
   905  0005F2  ECE3  F006         	call	_write_command
   906  0005F6                     
   907                           ;./lm629.h: 784: check_busy();
   908  0005F6  EC76  F007         	call	_check_busy	;wreg free
   909  0005FA  0012               	return		;funcret
   910  0005FC                     __end_of_right:
   911                           	callstack 0
   912                           
   913 ;; *************** function _reverse *****************
   914 ;; Defined at:
   915 ;;		line 597 in file "./lm629.h"
   916 ;; Parameters:    Size  Location     Type
   917 ;;		None
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   933 ;;Total ram usage:        0 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 5
   936 ;; This function calls:
   937 ;;		_check_busy
   938 ;;		_chip_select
   939 ;;		_motor_off
   940 ;;		_write_command
   941 ;;		_write_data
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text4
   948  0005FC                     __ptext4:
   949                           	callstack 0
   950  0005FC                     _reverse:
   951                           	callstack 25
   952  0005FC                     
   953                           ;./lm629.h: 599: chip_select(1);
   954  0005FC  0E01               	movlw	1
   955  0005FE  EC23  F006         	call	_chip_select
   956  000602                     
   957                           ;./lm629.h: 600: check_busy();
   958  000602  EC76  F007         	call	_check_busy	;wreg free
   959  000606                     
   960                           ;./lm629.h: 601: motor_off();
   961  000606  EC52  F007         	call	_motor_off	;wreg free
   962  00060A                     
   963                           ;./lm629.h: 602: write_command(0x1F);
   964  00060A  0E1F               	movlw	31
   965  00060C  ECE3  F006         	call	_write_command
   966  000610                     
   967                           ;./lm629.h: 603: check_busy();
   968  000610  EC76  F007         	call	_check_busy	;wreg free
   969  000614                     
   970                           ;./lm629.h: 604: write_data(0x18,0x28);
   971  000614  0E28               	movlw	40
   972  000616  6E06               	movwf	write_data@byte2^0,c
   973  000618  0E18               	movlw	24
   974  00061A  EC95  F006         	call	_write_data
   975  00061E                     
   976                           ;./lm629.h: 605: check_busy();
   977  00061E  EC76  F007         	call	_check_busy	;wreg free
   978  000622                     
   979                           ;./lm629.h: 607: write_data(0x00,0x00);
   980  000622  0E00               	movlw	0
   981  000624  6E06               	movwf	write_data@byte2^0,c
   982  000626  0E00               	movlw	0
   983  000628  EC95  F006         	call	_write_data
   984  00062C                     
   985                           ;./lm629.h: 608: check_busy();
   986  00062C  EC76  F007         	call	_check_busy	;wreg free
   987  000630                     
   988                           ;./lm629.h: 609: write_data(0x00,0x48);
   989  000630  0E48               	movlw	72
   990  000632  6E06               	movwf	write_data@byte2^0,c
   991  000634  0E00               	movlw	0
   992  000636  EC95  F006         	call	_write_data
   993  00063A                     
   994                           ;./lm629.h: 610: check_busy();
   995  00063A  EC76  F007         	call	_check_busy	;wreg free
   996  00063E                     
   997                           ;./lm629.h: 612: write_data(0x00,0x01);
   998  00063E  0E01               	movlw	1
   999  000640  6E06               	movwf	write_data@byte2^0,c
  1000  000642  0E00               	movlw	0
  1001  000644  EC95  F006         	call	_write_data
  1002  000648                     
  1003                           ;./lm629.h: 613: check_busy();
  1004  000648  EC76  F007         	call	_check_busy	;wreg free
  1005  00064C                     
  1006                           ;./lm629.h: 614: write_data(0xFA,0xD0);
  1007  00064C  0ED0               	movlw	208
  1008  00064E  6E06               	movwf	write_data@byte2^0,c
  1009  000650  0EFA               	movlw	250
  1010  000652  EC95  F006         	call	_write_data
  1011  000656                     
  1012                           ;./lm629.h: 615: check_busy();
  1013  000656  EC76  F007         	call	_check_busy	;wreg free
  1014                           
  1015                           ;./lm629.h: 618: chip_select(0);
  1016  00065A  0E00               	movlw	0
  1017  00065C  EC23  F006         	call	_chip_select
  1018  000660                     
  1019                           ;./lm629.h: 619: check_busy();
  1020  000660  EC76  F007         	call	_check_busy	;wreg free
  1021  000664                     
  1022                           ;./lm629.h: 620: motor_off();
  1023  000664  EC52  F007         	call	_motor_off	;wreg free
  1024  000668                     
  1025                           ;./lm629.h: 621: write_command(0x1F);
  1026  000668  0E1F               	movlw	31
  1027  00066A  ECE3  F006         	call	_write_command
  1028  00066E                     
  1029                           ;./lm629.h: 622: check_busy();
  1030  00066E  EC76  F007         	call	_check_busy	;wreg free
  1031  000672                     
  1032                           ;./lm629.h: 623: write_data(0x08,0x28);
  1033  000672  0E28               	movlw	40
  1034  000674  6E06               	movwf	write_data@byte2^0,c
  1035  000676  0E08               	movlw	8
  1036  000678  EC95  F006         	call	_write_data
  1037  00067C                     
  1038                           ;./lm629.h: 624: check_busy();
  1039  00067C  EC76  F007         	call	_check_busy	;wreg free
  1040  000680                     
  1041                           ;./lm629.h: 626: write_data(0x00,0x00);
  1042  000680  0E00               	movlw	0
  1043  000682  6E06               	movwf	write_data@byte2^0,c
  1044  000684  0E00               	movlw	0
  1045  000686  EC95  F006         	call	_write_data
  1046  00068A                     
  1047                           ;./lm629.h: 627: check_busy();
  1048  00068A  EC76  F007         	call	_check_busy	;wreg free
  1049  00068E                     
  1050                           ;./lm629.h: 628: write_data(0x00,0x48);
  1051  00068E  0E48               	movlw	72
  1052  000690  6E06               	movwf	write_data@byte2^0,c
  1053  000692  0E00               	movlw	0
  1054  000694  EC95  F006         	call	_write_data
  1055  000698                     
  1056                           ;./lm629.h: 629: check_busy();
  1057  000698  EC76  F007         	call	_check_busy	;wreg free
  1058  00069C                     
  1059                           ;./lm629.h: 631: write_data(0x00,0x01);
  1060  00069C  0E01               	movlw	1
  1061  00069E  6E06               	movwf	write_data@byte2^0,c
  1062  0006A0  0E00               	movlw	0
  1063  0006A2  EC95  F006         	call	_write_data
  1064  0006A6                     
  1065                           ;./lm629.h: 632: check_busy();
  1066  0006A6  EC76  F007         	call	_check_busy	;wreg free
  1067  0006AA                     
  1068                           ;./lm629.h: 633: write_data(0xFA,0xD0);
  1069  0006AA  0ED0               	movlw	208
  1070  0006AC  6E06               	movwf	write_data@byte2^0,c
  1071  0006AE  0EFA               	movlw	250
  1072  0006B0  EC95  F006         	call	_write_data
  1073  0006B4                     
  1074                           ;./lm629.h: 634: check_busy();
  1075  0006B4  EC76  F007         	call	_check_busy	;wreg free
  1076                           
  1077                           ;./lm629.h: 638: chip_select(3);
  1078  0006B8  0E03               	movlw	3
  1079  0006BA  EC23  F006         	call	_chip_select
  1080  0006BE                     
  1081                           ;./lm629.h: 639: check_busy();
  1082  0006BE  EC76  F007         	call	_check_busy	;wreg free
  1083  0006C2                     
  1084                           ;./lm629.h: 640: motor_off();
  1085  0006C2  EC52  F007         	call	_motor_off	;wreg free
  1086  0006C6                     
  1087                           ;./lm629.h: 641: write_command(0x1F);
  1088  0006C6  0E1F               	movlw	31
  1089  0006C8  ECE3  F006         	call	_write_command
  1090  0006CC                     
  1091                           ;./lm629.h: 642: check_busy();
  1092  0006CC  EC76  F007         	call	_check_busy	;wreg free
  1093  0006D0                     
  1094                           ;./lm629.h: 643: write_data(0x08,0x28);
  1095  0006D0  0E28               	movlw	40
  1096  0006D2  6E06               	movwf	write_data@byte2^0,c
  1097  0006D4  0E08               	movlw	8
  1098  0006D6  EC95  F006         	call	_write_data
  1099  0006DA                     
  1100                           ;./lm629.h: 644: check_busy();
  1101  0006DA  EC76  F007         	call	_check_busy	;wreg free
  1102  0006DE                     
  1103                           ;./lm629.h: 646: write_data(0x00,0x00);
  1104  0006DE  0E00               	movlw	0
  1105  0006E0  6E06               	movwf	write_data@byte2^0,c
  1106  0006E2  0E00               	movlw	0
  1107  0006E4  EC95  F006         	call	_write_data
  1108  0006E8                     
  1109                           ;./lm629.h: 647: check_busy();
  1110  0006E8  EC76  F007         	call	_check_busy	;wreg free
  1111  0006EC                     
  1112                           ;./lm629.h: 648: write_data(0x00,0x48);
  1113  0006EC  0E48               	movlw	72
  1114  0006EE  6E06               	movwf	write_data@byte2^0,c
  1115  0006F0  0E00               	movlw	0
  1116  0006F2  EC95  F006         	call	_write_data
  1117  0006F6                     
  1118                           ;./lm629.h: 649: check_busy();
  1119  0006F6  EC76  F007         	call	_check_busy	;wreg free
  1120  0006FA                     
  1121                           ;./lm629.h: 651: write_data(0x00,0x01);
  1122  0006FA  0E01               	movlw	1
  1123  0006FC  6E06               	movwf	write_data@byte2^0,c
  1124  0006FE  0E00               	movlw	0
  1125  000700  EC95  F006         	call	_write_data
  1126  000704                     
  1127                           ;./lm629.h: 652: check_busy();
  1128  000704  EC76  F007         	call	_check_busy	;wreg free
  1129  000708                     
  1130                           ;./lm629.h: 653: write_data(0xFA,0xD0);
  1131  000708  0ED0               	movlw	208
  1132  00070A  6E06               	movwf	write_data@byte2^0,c
  1133  00070C  0EFA               	movlw	250
  1134  00070E  EC95  F006         	call	_write_data
  1135  000712                     
  1136                           ;./lm629.h: 654: check_busy();
  1137  000712  EC76  F007         	call	_check_busy	;wreg free
  1138                           
  1139                           ;./lm629.h: 656: chip_select(2);
  1140  000716  0E02               	movlw	2
  1141  000718  EC23  F006         	call	_chip_select
  1142  00071C                     
  1143                           ;./lm629.h: 657: check_busy();
  1144  00071C  EC76  F007         	call	_check_busy	;wreg free
  1145  000720                     
  1146                           ;./lm629.h: 658: motor_off();
  1147  000720  EC52  F007         	call	_motor_off	;wreg free
  1148  000724                     
  1149                           ;./lm629.h: 659: write_command(0x1F);
  1150  000724  0E1F               	movlw	31
  1151  000726  ECE3  F006         	call	_write_command
  1152  00072A                     
  1153                           ;./lm629.h: 660: check_busy();
  1154  00072A  EC76  F007         	call	_check_busy	;wreg free
  1155  00072E                     
  1156                           ;./lm629.h: 661: write_data(0x18,0x28);
  1157  00072E  0E28               	movlw	40
  1158  000730  6E06               	movwf	write_data@byte2^0,c
  1159  000732  0E18               	movlw	24
  1160  000734  EC95  F006         	call	_write_data
  1161  000738                     
  1162                           ;./lm629.h: 662: check_busy();
  1163  000738  EC76  F007         	call	_check_busy	;wreg free
  1164  00073C                     
  1165                           ;./lm629.h: 664: write_data(0x00,0x00);
  1166  00073C  0E00               	movlw	0
  1167  00073E  6E06               	movwf	write_data@byte2^0,c
  1168  000740  0E00               	movlw	0
  1169  000742  EC95  F006         	call	_write_data
  1170  000746                     
  1171                           ;./lm629.h: 665: check_busy();
  1172  000746  EC76  F007         	call	_check_busy	;wreg free
  1173  00074A                     
  1174                           ;./lm629.h: 666: write_data(0x00,0x48);
  1175  00074A  0E48               	movlw	72
  1176  00074C  6E06               	movwf	write_data@byte2^0,c
  1177  00074E  0E00               	movlw	0
  1178  000750  EC95  F006         	call	_write_data
  1179  000754                     
  1180                           ;./lm629.h: 667: check_busy();
  1181  000754  EC76  F007         	call	_check_busy	;wreg free
  1182  000758                     
  1183                           ;./lm629.h: 669: write_data(0x00,0x01);
  1184  000758  0E01               	movlw	1
  1185  00075A  6E06               	movwf	write_data@byte2^0,c
  1186  00075C  0E00               	movlw	0
  1187  00075E  EC95  F006         	call	_write_data
  1188  000762                     
  1189                           ;./lm629.h: 670: check_busy();
  1190  000762  EC76  F007         	call	_check_busy	;wreg free
  1191  000766                     
  1192                           ;./lm629.h: 671: write_data(0xFA,0xD0);
  1193  000766  0ED0               	movlw	208
  1194  000768  6E06               	movwf	write_data@byte2^0,c
  1195  00076A  0EFA               	movlw	250
  1196  00076C  EC95  F006         	call	_write_data
  1197  000770                     
  1198                           ;./lm629.h: 672: check_busy();
  1199  000770  EC76  F007         	call	_check_busy	;wreg free
  1200                           
  1201                           ;./lm629.h: 675: chip_select(0);
  1202  000774  0E00               	movlw	0
  1203  000776  EC23  F006         	call	_chip_select
  1204  00077A                     
  1205                           ;./lm629.h: 676: write_command(0x01);
  1206  00077A  0E01               	movlw	1
  1207  00077C  ECE3  F006         	call	_write_command
  1208  000780                     
  1209                           ;./lm629.h: 677: check_busy();
  1210  000780  EC76  F007         	call	_check_busy	;wreg free
  1211                           
  1212                           ;./lm629.h: 679: chip_select(2);
  1213  000784  0E02               	movlw	2
  1214  000786  EC23  F006         	call	_chip_select
  1215  00078A                     
  1216                           ;./lm629.h: 680: write_command(0x01);
  1217  00078A  0E01               	movlw	1
  1218  00078C  ECE3  F006         	call	_write_command
  1219  000790                     
  1220                           ;./lm629.h: 681: check_busy();
  1221  000790  EC76  F007         	call	_check_busy	;wreg free
  1222                           
  1223                           ;./lm629.h: 683: chip_select(1);
  1224  000794  0E01               	movlw	1
  1225  000796  EC23  F006         	call	_chip_select
  1226  00079A                     
  1227                           ;./lm629.h: 684: write_command(0x01);
  1228  00079A  0E01               	movlw	1
  1229  00079C  ECE3  F006         	call	_write_command
  1230  0007A0                     
  1231                           ;./lm629.h: 685: check_busy();
  1232  0007A0  EC76  F007         	call	_check_busy	;wreg free
  1233                           
  1234                           ;./lm629.h: 687: chip_select(3);
  1235  0007A4  0E03               	movlw	3
  1236  0007A6  EC23  F006         	call	_chip_select
  1237  0007AA                     
  1238                           ;./lm629.h: 688: write_command(0x01);
  1239  0007AA  0E01               	movlw	1
  1240  0007AC  ECE3  F006         	call	_write_command
  1241  0007B0                     
  1242                           ;./lm629.h: 689: check_busy();
  1243  0007B0  EC76  F007         	call	_check_busy	;wreg free
  1244  0007B4  0012               	return		;funcret
  1245  0007B6                     __end_of_reverse:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _left *****************
  1249 ;; Defined at:
  1250 ;;		line 787 in file "./lm629.h"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 5
  1271 ;; This function calls:
  1272 ;;		_check_busy
  1273 ;;		_chip_select
  1274 ;;		_motor_off
  1275 ;;		_write_command
  1276 ;;		_write_data
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text5
  1283  0007B6                     __ptext5:
  1284                           	callstack 0
  1285  0007B6                     _left:
  1286                           	callstack 25
  1287  0007B6                     
  1288                           ;./lm629.h: 789: chip_select(0);
  1289  0007B6  0E00               	movlw	0
  1290  0007B8  EC23  F006         	call	_chip_select
  1291  0007BC                     
  1292                           ;./lm629.h: 790: check_busy();
  1293  0007BC  EC76  F007         	call	_check_busy	;wreg free
  1294  0007C0                     
  1295                           ;./lm629.h: 791: motor_off();
  1296  0007C0  EC52  F007         	call	_motor_off	;wreg free
  1297  0007C4                     
  1298                           ;./lm629.h: 792: write_command(0x1F);
  1299  0007C4  0E1F               	movlw	31
  1300  0007C6  ECE3  F006         	call	_write_command
  1301  0007CA                     
  1302                           ;./lm629.h: 793: check_busy();
  1303  0007CA  EC76  F007         	call	_check_busy	;wreg free
  1304  0007CE                     
  1305                           ;./lm629.h: 794: write_data(0x18,0x28);
  1306  0007CE  0E28               	movlw	40
  1307  0007D0  6E06               	movwf	write_data@byte2^0,c
  1308  0007D2  0E18               	movlw	24
  1309  0007D4  EC95  F006         	call	_write_data
  1310  0007D8                     
  1311                           ;./lm629.h: 795: check_busy();
  1312  0007D8  EC76  F007         	call	_check_busy	;wreg free
  1313  0007DC                     
  1314                           ;./lm629.h: 797: write_data(0x00,0x00);
  1315  0007DC  0E00               	movlw	0
  1316  0007DE  6E06               	movwf	write_data@byte2^0,c
  1317  0007E0  0E00               	movlw	0
  1318  0007E2  EC95  F006         	call	_write_data
  1319  0007E6                     
  1320                           ;./lm629.h: 798: check_busy();
  1321  0007E6  EC76  F007         	call	_check_busy	;wreg free
  1322  0007EA                     
  1323                           ;./lm629.h: 799: write_data(0x00,0x48);
  1324  0007EA  0E48               	movlw	72
  1325  0007EC  6E06               	movwf	write_data@byte2^0,c
  1326  0007EE  0E00               	movlw	0
  1327  0007F0  EC95  F006         	call	_write_data
  1328  0007F4                     
  1329                           ;./lm629.h: 800: check_busy();
  1330  0007F4  EC76  F007         	call	_check_busy	;wreg free
  1331  0007F8                     
  1332                           ;./lm629.h: 802: write_data(0x00,0x01);
  1333  0007F8  0E01               	movlw	1
  1334  0007FA  6E06               	movwf	write_data@byte2^0,c
  1335  0007FC  0E00               	movlw	0
  1336  0007FE  EC95  F006         	call	_write_data
  1337  000802                     
  1338                           ;./lm629.h: 803: check_busy();
  1339  000802  EC76  F007         	call	_check_busy	;wreg free
  1340  000806                     
  1341                           ;./lm629.h: 804: write_data(0xFA,0xD0);
  1342  000806  0ED0               	movlw	208
  1343  000808  6E06               	movwf	write_data@byte2^0,c
  1344  00080A  0EFA               	movlw	250
  1345  00080C  EC95  F006         	call	_write_data
  1346  000810                     
  1347                           ;./lm629.h: 805: check_busy();
  1348  000810  EC76  F007         	call	_check_busy	;wreg free
  1349                           
  1350                           ;./lm629.h: 807: chip_select(1);
  1351  000814  0E01               	movlw	1
  1352  000816  EC23  F006         	call	_chip_select
  1353  00081A                     
  1354                           ;./lm629.h: 808: check_busy();
  1355  00081A  EC76  F007         	call	_check_busy	;wreg free
  1356  00081E                     
  1357                           ;./lm629.h: 809: motor_off();
  1358  00081E  EC52  F007         	call	_motor_off	;wreg free
  1359  000822                     
  1360                           ;./lm629.h: 810: write_command(0x1F);
  1361  000822  0E1F               	movlw	31
  1362  000824  ECE3  F006         	call	_write_command
  1363  000828                     
  1364                           ;./lm629.h: 811: check_busy();
  1365  000828  EC76  F007         	call	_check_busy	;wreg free
  1366  00082C                     
  1367                           ;./lm629.h: 812: write_data(0x18,0x28);
  1368  00082C  0E28               	movlw	40
  1369  00082E  6E06               	movwf	write_data@byte2^0,c
  1370  000830  0E18               	movlw	24
  1371  000832  EC95  F006         	call	_write_data
  1372  000836                     
  1373                           ;./lm629.h: 813: check_busy();
  1374  000836  EC76  F007         	call	_check_busy	;wreg free
  1375  00083A                     
  1376                           ;./lm629.h: 815: write_data(0x00,0x00);
  1377  00083A  0E00               	movlw	0
  1378  00083C  6E06               	movwf	write_data@byte2^0,c
  1379  00083E  0E00               	movlw	0
  1380  000840  EC95  F006         	call	_write_data
  1381  000844                     
  1382                           ;./lm629.h: 816: check_busy();
  1383  000844  EC76  F007         	call	_check_busy	;wreg free
  1384  000848                     
  1385                           ;./lm629.h: 817: write_data(0x00,0x48);
  1386  000848  0E48               	movlw	72
  1387  00084A  6E06               	movwf	write_data@byte2^0,c
  1388  00084C  0E00               	movlw	0
  1389  00084E  EC95  F006         	call	_write_data
  1390  000852                     
  1391                           ;./lm629.h: 818: check_busy();
  1392  000852  EC76  F007         	call	_check_busy	;wreg free
  1393  000856                     
  1394                           ;./lm629.h: 820: write_data(0x00,0x01);
  1395  000856  0E01               	movlw	1
  1396  000858  6E06               	movwf	write_data@byte2^0,c
  1397  00085A  0E00               	movlw	0
  1398  00085C  EC95  F006         	call	_write_data
  1399  000860                     
  1400                           ;./lm629.h: 821: check_busy();
  1401  000860  EC76  F007         	call	_check_busy	;wreg free
  1402  000864                     
  1403                           ;./lm629.h: 822: write_data(0xFA,0xD0);
  1404  000864  0ED0               	movlw	208
  1405  000866  6E06               	movwf	write_data@byte2^0,c
  1406  000868  0EFA               	movlw	250
  1407  00086A  EC95  F006         	call	_write_data
  1408  00086E                     
  1409                           ;./lm629.h: 823: check_busy();
  1410  00086E  EC76  F007         	call	_check_busy	;wreg free
  1411                           
  1412                           ;./lm629.h: 826: chip_select(2);
  1413  000872  0E02               	movlw	2
  1414  000874  EC23  F006         	call	_chip_select
  1415  000878                     
  1416                           ;./lm629.h: 827: check_busy();
  1417  000878  EC76  F007         	call	_check_busy	;wreg free
  1418  00087C                     
  1419                           ;./lm629.h: 828: motor_off();
  1420  00087C  EC52  F007         	call	_motor_off	;wreg free
  1421  000880                     
  1422                           ;./lm629.h: 829: write_command(0x1F);
  1423  000880  0E1F               	movlw	31
  1424  000882  ECE3  F006         	call	_write_command
  1425  000886                     
  1426                           ;./lm629.h: 830: check_busy();
  1427  000886  EC76  F007         	call	_check_busy	;wreg free
  1428  00088A                     
  1429                           ;./lm629.h: 831: write_data(0x18,0x28);
  1430  00088A  0E28               	movlw	40
  1431  00088C  6E06               	movwf	write_data@byte2^0,c
  1432  00088E  0E18               	movlw	24
  1433  000890  EC95  F006         	call	_write_data
  1434  000894                     
  1435                           ;./lm629.h: 832: check_busy();
  1436  000894  EC76  F007         	call	_check_busy	;wreg free
  1437  000898                     
  1438                           ;./lm629.h: 834: write_data(0x00,0x00);
  1439  000898  0E00               	movlw	0
  1440  00089A  6E06               	movwf	write_data@byte2^0,c
  1441  00089C  0E00               	movlw	0
  1442  00089E  EC95  F006         	call	_write_data
  1443  0008A2                     
  1444                           ;./lm629.h: 835: check_busy();
  1445  0008A2  EC76  F007         	call	_check_busy	;wreg free
  1446  0008A6                     
  1447                           ;./lm629.h: 836: write_data(0x00,0x48);
  1448  0008A6  0E48               	movlw	72
  1449  0008A8  6E06               	movwf	write_data@byte2^0,c
  1450  0008AA  0E00               	movlw	0
  1451  0008AC  EC95  F006         	call	_write_data
  1452  0008B0                     
  1453                           ;./lm629.h: 837: check_busy();
  1454  0008B0  EC76  F007         	call	_check_busy	;wreg free
  1455  0008B4                     
  1456                           ;./lm629.h: 839: write_data(0x00,0x01);
  1457  0008B4  0E01               	movlw	1
  1458  0008B6  6E06               	movwf	write_data@byte2^0,c
  1459  0008B8  0E00               	movlw	0
  1460  0008BA  EC95  F006         	call	_write_data
  1461  0008BE                     
  1462                           ;./lm629.h: 840: check_busy();
  1463  0008BE  EC76  F007         	call	_check_busy	;wreg free
  1464  0008C2                     
  1465                           ;./lm629.h: 841: write_data(0xFA,0xD0);
  1466  0008C2  0ED0               	movlw	208
  1467  0008C4  6E06               	movwf	write_data@byte2^0,c
  1468  0008C6  0EFA               	movlw	250
  1469  0008C8  EC95  F006         	call	_write_data
  1470  0008CC                     
  1471                           ;./lm629.h: 842: check_busy();
  1472  0008CC  EC76  F007         	call	_check_busy	;wreg free
  1473                           
  1474                           ;./lm629.h: 845: chip_select(3);
  1475  0008D0  0E03               	movlw	3
  1476  0008D2  EC23  F006         	call	_chip_select
  1477  0008D6                     
  1478                           ;./lm629.h: 846: check_busy();
  1479  0008D6  EC76  F007         	call	_check_busy	;wreg free
  1480  0008DA                     
  1481                           ;./lm629.h: 847: motor_off();
  1482  0008DA  EC52  F007         	call	_motor_off	;wreg free
  1483  0008DE                     
  1484                           ;./lm629.h: 848: write_command(0x1F);
  1485  0008DE  0E1F               	movlw	31
  1486  0008E0  ECE3  F006         	call	_write_command
  1487  0008E4                     
  1488                           ;./lm629.h: 849: check_busy();
  1489  0008E4  EC76  F007         	call	_check_busy	;wreg free
  1490  0008E8                     
  1491                           ;./lm629.h: 850: write_data(0x18,0x28);
  1492  0008E8  0E28               	movlw	40
  1493  0008EA  6E06               	movwf	write_data@byte2^0,c
  1494  0008EC  0E18               	movlw	24
  1495  0008EE  EC95  F006         	call	_write_data
  1496  0008F2                     
  1497                           ;./lm629.h: 851: check_busy();
  1498  0008F2  EC76  F007         	call	_check_busy	;wreg free
  1499  0008F6                     
  1500                           ;./lm629.h: 853: write_data(0x00,0x00);
  1501  0008F6  0E00               	movlw	0
  1502  0008F8  6E06               	movwf	write_data@byte2^0,c
  1503  0008FA  0E00               	movlw	0
  1504  0008FC  EC95  F006         	call	_write_data
  1505  000900                     
  1506                           ;./lm629.h: 854: check_busy();
  1507  000900  EC76  F007         	call	_check_busy	;wreg free
  1508  000904                     
  1509                           ;./lm629.h: 855: write_data(0x00,0x48);
  1510  000904  0E48               	movlw	72
  1511  000906  6E06               	movwf	write_data@byte2^0,c
  1512  000908  0E00               	movlw	0
  1513  00090A  EC95  F006         	call	_write_data
  1514  00090E                     
  1515                           ;./lm629.h: 856: check_busy();
  1516  00090E  EC76  F007         	call	_check_busy	;wreg free
  1517  000912                     
  1518                           ;./lm629.h: 858: write_data(0x00,0x01);
  1519  000912  0E01               	movlw	1
  1520  000914  6E06               	movwf	write_data@byte2^0,c
  1521  000916  0E00               	movlw	0
  1522  000918  EC95  F006         	call	_write_data
  1523  00091C                     
  1524                           ;./lm629.h: 859: check_busy();
  1525  00091C  EC76  F007         	call	_check_busy	;wreg free
  1526  000920                     
  1527                           ;./lm629.h: 860: write_data(0xFA,0xD0);
  1528  000920  0ED0               	movlw	208
  1529  000922  6E06               	movwf	write_data@byte2^0,c
  1530  000924  0EFA               	movlw	250
  1531  000926  EC95  F006         	call	_write_data
  1532  00092A                     
  1533                           ;./lm629.h: 861: check_busy();
  1534  00092A  EC76  F007         	call	_check_busy	;wreg free
  1535                           
  1536                           ;./lm629.h: 864: chip_select(0);
  1537  00092E  0E00               	movlw	0
  1538  000930  EC23  F006         	call	_chip_select
  1539  000934                     
  1540                           ;./lm629.h: 865: write_command(0x01);
  1541  000934  0E01               	movlw	1
  1542  000936  ECE3  F006         	call	_write_command
  1543  00093A                     
  1544                           ;./lm629.h: 866: check_busy();
  1545  00093A  EC76  F007         	call	_check_busy	;wreg free
  1546                           
  1547                           ;./lm629.h: 868: chip_select(2);
  1548  00093E  0E02               	movlw	2
  1549  000940  EC23  F006         	call	_chip_select
  1550  000944                     
  1551                           ;./lm629.h: 869: write_command(0x01);
  1552  000944  0E01               	movlw	1
  1553  000946  ECE3  F006         	call	_write_command
  1554  00094A                     
  1555                           ;./lm629.h: 870: check_busy();
  1556  00094A  EC76  F007         	call	_check_busy	;wreg free
  1557                           
  1558                           ;./lm629.h: 872: chip_select(1);
  1559  00094E  0E01               	movlw	1
  1560  000950  EC23  F006         	call	_chip_select
  1561  000954                     
  1562                           ;./lm629.h: 873: write_command(0x01);
  1563  000954  0E01               	movlw	1
  1564  000956  ECE3  F006         	call	_write_command
  1565  00095A                     
  1566                           ;./lm629.h: 874: check_busy();
  1567  00095A  EC76  F007         	call	_check_busy	;wreg free
  1568                           
  1569                           ;./lm629.h: 876: chip_select(3);
  1570  00095E  0E03               	movlw	3
  1571  000960  EC23  F006         	call	_chip_select
  1572  000964                     
  1573                           ;./lm629.h: 877: write_command(0x01);
  1574  000964  0E01               	movlw	1
  1575  000966  ECE3  F006         	call	_write_command
  1576  00096A                     
  1577                           ;./lm629.h: 878: check_busy();
  1578  00096A  EC76  F007         	call	_check_busy	;wreg free
  1579  00096E  0012               	return		;funcret
  1580  000970                     __end_of_left:
  1581                           	callstack 0
  1582                           
  1583 ;; *************** function _forward *****************
  1584 ;; Defined at:
  1585 ;;		line 501 in file "./lm629.h"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 5
  1606 ;; This function calls:
  1607 ;;		_check_busy
  1608 ;;		_chip_select
  1609 ;;		_motor_off
  1610 ;;		_write_command
  1611 ;;		_write_data
  1612 ;; This function is called by:
  1613 ;;		_main
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text6
  1618  000970                     __ptext6:
  1619                           	callstack 0
  1620  000970                     _forward:
  1621                           	callstack 25
  1622  000970                     
  1623                           ;./lm629.h: 503: chip_select(0);
  1624  000970  0E00               	movlw	0
  1625  000972  EC23  F006         	call	_chip_select
  1626  000976                     
  1627                           ;./lm629.h: 504: check_busy();
  1628  000976  EC76  F007         	call	_check_busy	;wreg free
  1629  00097A                     
  1630                           ;./lm629.h: 505: motor_off();
  1631  00097A  EC52  F007         	call	_motor_off	;wreg free
  1632  00097E                     
  1633                           ;./lm629.h: 506: write_command(0x1F);
  1634  00097E  0E1F               	movlw	31
  1635  000980  ECE3  F006         	call	_write_command
  1636  000984                     
  1637                           ;./lm629.h: 507: check_busy();
  1638  000984  EC76  F007         	call	_check_busy	;wreg free
  1639  000988                     
  1640                           ;./lm629.h: 508: write_data(0x18,0x28);
  1641  000988  0E28               	movlw	40
  1642  00098A  6E06               	movwf	write_data@byte2^0,c
  1643  00098C  0E18               	movlw	24
  1644  00098E  EC95  F006         	call	_write_data
  1645  000992                     
  1646                           ;./lm629.h: 509: check_busy();
  1647  000992  EC76  F007         	call	_check_busy	;wreg free
  1648  000996                     
  1649                           ;./lm629.h: 511: write_data(0x00,0x00);
  1650  000996  0E00               	movlw	0
  1651  000998  6E06               	movwf	write_data@byte2^0,c
  1652  00099A  0E00               	movlw	0
  1653  00099C  EC95  F006         	call	_write_data
  1654  0009A0                     
  1655                           ;./lm629.h: 512: check_busy();
  1656  0009A0  EC76  F007         	call	_check_busy	;wreg free
  1657  0009A4                     
  1658                           ;./lm629.h: 513: write_data(0x00,0x48);
  1659  0009A4  0E48               	movlw	72
  1660  0009A6  6E06               	movwf	write_data@byte2^0,c
  1661  0009A8  0E00               	movlw	0
  1662  0009AA  EC95  F006         	call	_write_data
  1663  0009AE                     
  1664                           ;./lm629.h: 514: check_busy();
  1665  0009AE  EC76  F007         	call	_check_busy	;wreg free
  1666  0009B2                     
  1667                           ;./lm629.h: 516: write_data(0x00,0x01);
  1668  0009B2  0E01               	movlw	1
  1669  0009B4  6E06               	movwf	write_data@byte2^0,c
  1670  0009B6  0E00               	movlw	0
  1671  0009B8  EC95  F006         	call	_write_data
  1672  0009BC                     
  1673                           ;./lm629.h: 517: check_busy();
  1674  0009BC  EC76  F007         	call	_check_busy	;wreg free
  1675  0009C0                     
  1676                           ;./lm629.h: 518: write_data(0xFA,0xD0);
  1677  0009C0  0ED0               	movlw	208
  1678  0009C2  6E06               	movwf	write_data@byte2^0,c
  1679  0009C4  0EFA               	movlw	250
  1680  0009C6  EC95  F006         	call	_write_data
  1681  0009CA                     
  1682                           ;./lm629.h: 519: check_busy();
  1683  0009CA  EC76  F007         	call	_check_busy	;wreg free
  1684                           
  1685                           ;./lm629.h: 522: chip_select(1);
  1686  0009CE  0E01               	movlw	1
  1687  0009D0  EC23  F006         	call	_chip_select
  1688  0009D4                     
  1689                           ;./lm629.h: 523: check_busy();
  1690  0009D4  EC76  F007         	call	_check_busy	;wreg free
  1691  0009D8                     
  1692                           ;./lm629.h: 524: motor_off();
  1693  0009D8  EC52  F007         	call	_motor_off	;wreg free
  1694  0009DC                     
  1695                           ;./lm629.h: 525: write_command(0x1F);
  1696  0009DC  0E1F               	movlw	31
  1697  0009DE  ECE3  F006         	call	_write_command
  1698  0009E2                     
  1699                           ;./lm629.h: 526: check_busy();
  1700  0009E2  EC76  F007         	call	_check_busy	;wreg free
  1701  0009E6                     
  1702                           ;./lm629.h: 527: write_data(0x08,0x28);
  1703  0009E6  0E28               	movlw	40
  1704  0009E8  6E06               	movwf	write_data@byte2^0,c
  1705  0009EA  0E08               	movlw	8
  1706  0009EC  EC95  F006         	call	_write_data
  1707  0009F0                     
  1708                           ;./lm629.h: 528: check_busy();
  1709  0009F0  EC76  F007         	call	_check_busy	;wreg free
  1710  0009F4                     
  1711                           ;./lm629.h: 530: write_data(0x00,0x00);
  1712  0009F4  0E00               	movlw	0
  1713  0009F6  6E06               	movwf	write_data@byte2^0,c
  1714  0009F8  0E00               	movlw	0
  1715  0009FA  EC95  F006         	call	_write_data
  1716  0009FE                     
  1717                           ;./lm629.h: 531: check_busy();
  1718  0009FE  EC76  F007         	call	_check_busy	;wreg free
  1719  000A02                     
  1720                           ;./lm629.h: 532: write_data(0x00,0x48);
  1721  000A02  0E48               	movlw	72
  1722  000A04  6E06               	movwf	write_data@byte2^0,c
  1723  000A06  0E00               	movlw	0
  1724  000A08  EC95  F006         	call	_write_data
  1725  000A0C                     
  1726                           ;./lm629.h: 533: check_busy();
  1727  000A0C  EC76  F007         	call	_check_busy	;wreg free
  1728  000A10                     
  1729                           ;./lm629.h: 535: write_data(0x00,0x01);
  1730  000A10  0E01               	movlw	1
  1731  000A12  6E06               	movwf	write_data@byte2^0,c
  1732  000A14  0E00               	movlw	0
  1733  000A16  EC95  F006         	call	_write_data
  1734  000A1A                     
  1735                           ;./lm629.h: 536: check_busy();
  1736  000A1A  EC76  F007         	call	_check_busy	;wreg free
  1737  000A1E                     
  1738                           ;./lm629.h: 537: write_data(0xFA,0xD0);
  1739  000A1E  0ED0               	movlw	208
  1740  000A20  6E06               	movwf	write_data@byte2^0,c
  1741  000A22  0EFA               	movlw	250
  1742  000A24  EC95  F006         	call	_write_data
  1743  000A28                     
  1744                           ;./lm629.h: 538: check_busy();
  1745  000A28  EC76  F007         	call	_check_busy	;wreg free
  1746                           
  1747                           ;./lm629.h: 541: chip_select(2);
  1748  000A2C  0E02               	movlw	2
  1749  000A2E  EC23  F006         	call	_chip_select
  1750  000A32                     
  1751                           ;./lm629.h: 542: check_busy();
  1752  000A32  EC76  F007         	call	_check_busy	;wreg free
  1753  000A36                     
  1754                           ;./lm629.h: 543: motor_off();
  1755  000A36  EC52  F007         	call	_motor_off	;wreg free
  1756  000A3A                     
  1757                           ;./lm629.h: 544: write_command(0x1F);
  1758  000A3A  0E1F               	movlw	31
  1759  000A3C  ECE3  F006         	call	_write_command
  1760  000A40                     
  1761                           ;./lm629.h: 545: check_busy();
  1762  000A40  EC76  F007         	call	_check_busy	;wreg free
  1763  000A44                     
  1764                           ;./lm629.h: 546: write_data(0x08,0x28);
  1765  000A44  0E28               	movlw	40
  1766  000A46  6E06               	movwf	write_data@byte2^0,c
  1767  000A48  0E08               	movlw	8
  1768  000A4A  EC95  F006         	call	_write_data
  1769  000A4E                     
  1770                           ;./lm629.h: 547: check_busy();
  1771  000A4E  EC76  F007         	call	_check_busy	;wreg free
  1772  000A52                     
  1773                           ;./lm629.h: 549: write_data(0x00,0x00);
  1774  000A52  0E00               	movlw	0
  1775  000A54  6E06               	movwf	write_data@byte2^0,c
  1776  000A56  0E00               	movlw	0
  1777  000A58  EC95  F006         	call	_write_data
  1778  000A5C                     
  1779                           ;./lm629.h: 550: check_busy();
  1780  000A5C  EC76  F007         	call	_check_busy	;wreg free
  1781  000A60                     
  1782                           ;./lm629.h: 551: write_data(0x00,0x48);
  1783  000A60  0E48               	movlw	72
  1784  000A62  6E06               	movwf	write_data@byte2^0,c
  1785  000A64  0E00               	movlw	0
  1786  000A66  EC95  F006         	call	_write_data
  1787  000A6A                     
  1788                           ;./lm629.h: 552: check_busy();
  1789  000A6A  EC76  F007         	call	_check_busy	;wreg free
  1790  000A6E                     
  1791                           ;./lm629.h: 554: write_data(0x00,0x01);
  1792  000A6E  0E01               	movlw	1
  1793  000A70  6E06               	movwf	write_data@byte2^0,c
  1794  000A72  0E00               	movlw	0
  1795  000A74  EC95  F006         	call	_write_data
  1796  000A78                     
  1797                           ;./lm629.h: 555: check_busy();
  1798  000A78  EC76  F007         	call	_check_busy	;wreg free
  1799  000A7C                     
  1800                           ;./lm629.h: 556: write_data(0xFA,0xD0);
  1801  000A7C  0ED0               	movlw	208
  1802  000A7E  6E06               	movwf	write_data@byte2^0,c
  1803  000A80  0EFA               	movlw	250
  1804  000A82  EC95  F006         	call	_write_data
  1805  000A86                     
  1806                           ;./lm629.h: 557: check_busy();
  1807  000A86  EC76  F007         	call	_check_busy	;wreg free
  1808                           
  1809                           ;./lm629.h: 560: chip_select(3);
  1810  000A8A  0E03               	movlw	3
  1811  000A8C  EC23  F006         	call	_chip_select
  1812  000A90                     
  1813                           ;./lm629.h: 561: check_busy();
  1814  000A90  EC76  F007         	call	_check_busy	;wreg free
  1815  000A94                     
  1816                           ;./lm629.h: 562: motor_off();
  1817  000A94  EC52  F007         	call	_motor_off	;wreg free
  1818  000A98                     
  1819                           ;./lm629.h: 563: write_command(0x1F);
  1820  000A98  0E1F               	movlw	31
  1821  000A9A  ECE3  F006         	call	_write_command
  1822  000A9E                     
  1823                           ;./lm629.h: 564: check_busy();
  1824  000A9E  EC76  F007         	call	_check_busy	;wreg free
  1825  000AA2                     
  1826                           ;./lm629.h: 565: write_data(0x18,0x28);
  1827  000AA2  0E28               	movlw	40
  1828  000AA4  6E06               	movwf	write_data@byte2^0,c
  1829  000AA6  0E18               	movlw	24
  1830  000AA8  EC95  F006         	call	_write_data
  1831  000AAC                     
  1832                           ;./lm629.h: 566: check_busy();
  1833  000AAC  EC76  F007         	call	_check_busy	;wreg free
  1834  000AB0                     
  1835                           ;./lm629.h: 568: write_data(0x00,0x00);
  1836  000AB0  0E00               	movlw	0
  1837  000AB2  6E06               	movwf	write_data@byte2^0,c
  1838  000AB4  0E00               	movlw	0
  1839  000AB6  EC95  F006         	call	_write_data
  1840  000ABA                     
  1841                           ;./lm629.h: 569: check_busy();
  1842  000ABA  EC76  F007         	call	_check_busy	;wreg free
  1843  000ABE                     
  1844                           ;./lm629.h: 570: write_data(0x00,0x48);
  1845  000ABE  0E48               	movlw	72
  1846  000AC0  6E06               	movwf	write_data@byte2^0,c
  1847  000AC2  0E00               	movlw	0
  1848  000AC4  EC95  F006         	call	_write_data
  1849  000AC8                     
  1850                           ;./lm629.h: 571: check_busy();
  1851  000AC8  EC76  F007         	call	_check_busy	;wreg free
  1852  000ACC                     
  1853                           ;./lm629.h: 573: write_data(0x00,0x01);
  1854  000ACC  0E01               	movlw	1
  1855  000ACE  6E06               	movwf	write_data@byte2^0,c
  1856  000AD0  0E00               	movlw	0
  1857  000AD2  EC95  F006         	call	_write_data
  1858  000AD6                     
  1859                           ;./lm629.h: 574: check_busy();
  1860  000AD6  EC76  F007         	call	_check_busy	;wreg free
  1861  000ADA                     
  1862                           ;./lm629.h: 575: write_data(0xFA,0xD0);
  1863  000ADA  0ED0               	movlw	208
  1864  000ADC  6E06               	movwf	write_data@byte2^0,c
  1865  000ADE  0EFA               	movlw	250
  1866  000AE0  EC95  F006         	call	_write_data
  1867  000AE4                     
  1868                           ;./lm629.h: 576: check_busy();
  1869  000AE4  EC76  F007         	call	_check_busy	;wreg free
  1870                           
  1871                           ;./lm629.h: 579: chip_select(0);
  1872  000AE8  0E00               	movlw	0
  1873  000AEA  EC23  F006         	call	_chip_select
  1874  000AEE                     
  1875                           ;./lm629.h: 580: write_command(0x01);
  1876  000AEE  0E01               	movlw	1
  1877  000AF0  ECE3  F006         	call	_write_command
  1878  000AF4                     
  1879                           ;./lm629.h: 581: check_busy();
  1880  000AF4  EC76  F007         	call	_check_busy	;wreg free
  1881                           
  1882                           ;./lm629.h: 583: chip_select(2);
  1883  000AF8  0E02               	movlw	2
  1884  000AFA  EC23  F006         	call	_chip_select
  1885  000AFE                     
  1886                           ;./lm629.h: 584: write_command(0x01);
  1887  000AFE  0E01               	movlw	1
  1888  000B00  ECE3  F006         	call	_write_command
  1889  000B04                     
  1890                           ;./lm629.h: 585: check_busy();
  1891  000B04  EC76  F007         	call	_check_busy	;wreg free
  1892                           
  1893                           ;./lm629.h: 587: chip_select(1);
  1894  000B08  0E01               	movlw	1
  1895  000B0A  EC23  F006         	call	_chip_select
  1896  000B0E                     
  1897                           ;./lm629.h: 588: write_command(0x01);
  1898  000B0E  0E01               	movlw	1
  1899  000B10  ECE3  F006         	call	_write_command
  1900  000B14                     
  1901                           ;./lm629.h: 589: check_busy();
  1902  000B14  EC76  F007         	call	_check_busy	;wreg free
  1903                           
  1904                           ;./lm629.h: 591: chip_select(3);
  1905  000B18  0E03               	movlw	3
  1906  000B1A  EC23  F006         	call	_chip_select
  1907  000B1E                     
  1908                           ;./lm629.h: 592: write_command(0x01);
  1909  000B1E  0E01               	movlw	1
  1910  000B20  ECE3  F006         	call	_write_command
  1911  000B24                     
  1912                           ;./lm629.h: 593: check_busy();
  1913  000B24  EC76  F007         	call	_check_busy	;wreg free
  1914  000B28  0012               	return		;funcret
  1915  000B2A                     __end_of_forward:
  1916                           	callstack 0
  1917                           
  1918 ;; *************** function _all_off *****************
  1919 ;; Defined at:
  1920 ;;		line 424 in file "./lm629.h"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;Total ram usage:        0 bytes
  1939 ;; Hardware stack levels used: 1
  1940 ;; Hardware stack levels required when called: 5
  1941 ;; This function calls:
  1942 ;;		_chip_select
  1943 ;;		_motor_off
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text7
  1950  000E2C                     __ptext7:
  1951                           	callstack 0
  1952  000E2C                     _all_off:
  1953                           	callstack 25
  1954  000E2C                     
  1955                           ;./lm629.h: 426: chip_select(0);
  1956  000E2C  0E00               	movlw	0
  1957  000E2E  EC23  F006         	call	_chip_select
  1958  000E32                     
  1959                           ;./lm629.h: 427: motor_off();
  1960  000E32  EC52  F007         	call	_motor_off	;wreg free
  1961  000E36                     
  1962                           ;./lm629.h: 428: chip_select(1);
  1963  000E36  0E01               	movlw	1
  1964  000E38  EC23  F006         	call	_chip_select
  1965                           
  1966                           ;./lm629.h: 429: motor_off();
  1967  000E3C  EC52  F007         	call	_motor_off	;wreg free
  1968  000E40                     
  1969                           ;./lm629.h: 430: chip_select(2);
  1970  000E40  0E02               	movlw	2
  1971  000E42  EC23  F006         	call	_chip_select
  1972  000E46                     
  1973                           ;./lm629.h: 431: motor_off();
  1974  000E46  EC52  F007         	call	_motor_off	;wreg free
  1975                           
  1976                           ;./lm629.h: 432: chip_select(3);
  1977  000E4A  0E03               	movlw	3
  1978  000E4C  EC23  F006         	call	_chip_select
  1979  000E50                     
  1980                           ;./lm629.h: 433: motor_off();
  1981  000E50  EC52  F007         	call	_motor_off	;wreg free
  1982  000E54  0012               	return		;funcret
  1983  000E56                     __end_of_all_off:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _motor_off *****************
  1987 ;; Defined at:
  1988 ;;		line 392 in file "./lm629.h"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;		None
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;Total ram usage:        0 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 4
  2009 ;; This function calls:
  2010 ;;		_check_busy
  2011 ;;		_write_command
  2012 ;;		_write_data
  2013 ;; This function is called by:
  2014 ;;		_all_off
  2015 ;;		_forward
  2016 ;;		_reverse
  2017 ;;		_right
  2018 ;;		_left
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text8
  2023  000EA4                     __ptext8:
  2024                           	callstack 0
  2025  000EA4                     _motor_off:
  2026                           	callstack 25
  2027  000EA4                     
  2028                           ;./lm629.h: 394: write_command(0x1F);
  2029  000EA4  0E1F               	movlw	31
  2030  000EA6  ECE3  F006         	call	_write_command
  2031                           
  2032                           ;./lm629.h: 395: check_busy();
  2033  000EAA  EC76  F007         	call	_check_busy	;wreg free
  2034                           
  2035                           ;./lm629.h: 396: write_data(0x01,0x00);
  2036  000EAE  0E00               	movlw	0
  2037  000EB0  6E06               	movwf	write_data@byte2^0,c
  2038  000EB2  0E01               	movlw	1
  2039  000EB4  EC95  F006         	call	_write_data
  2040                           
  2041                           ;./lm629.h: 397: check_busy();
  2042  000EB8  EC76  F007         	call	_check_busy	;wreg free
  2043                           
  2044                           ;./lm629.h: 398: write_command(0x01);
  2045  000EBC  0E01               	movlw	1
  2046  000EBE  ECE3  F006         	call	_write_command
  2047                           
  2048                           ;./lm629.h: 399: check_busy();
  2049  000EC2  EC76  F007         	call	_check_busy	;wreg free
  2050  000EC6  0012               	return		;funcret
  2051  000EC8                     __end_of_motor_off:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _all_break *****************
  2055 ;; Defined at:
  2056 ;;		line 412 in file "./lm629.h"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 5
  2077 ;; This function calls:
  2078 ;;		_chip_select
  2079 ;;		_motor_break
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text9
  2086  000E56                     __ptext9:
  2087                           	callstack 0
  2088  000E56                     _all_break:
  2089                           	callstack 25
  2090  000E56                     
  2091                           ;./lm629.h: 414: chip_select(0);
  2092  000E56  0E00               	movlw	0
  2093  000E58  EC23  F006         	call	_chip_select
  2094  000E5C                     
  2095                           ;./lm629.h: 415: motor_break();
  2096  000E5C  EC64  F007         	call	_motor_break	;wreg free
  2097  000E60                     
  2098                           ;./lm629.h: 416: chip_select(1);
  2099  000E60  0E01               	movlw	1
  2100  000E62  EC23  F006         	call	_chip_select
  2101                           
  2102                           ;./lm629.h: 417: motor_break();
  2103  000E66  EC64  F007         	call	_motor_break	;wreg free
  2104  000E6A                     
  2105                           ;./lm629.h: 418: chip_select(2);
  2106  000E6A  0E02               	movlw	2
  2107  000E6C  EC23  F006         	call	_chip_select
  2108  000E70                     
  2109                           ;./lm629.h: 419: motor_break();
  2110  000E70  EC64  F007         	call	_motor_break	;wreg free
  2111                           
  2112                           ;./lm629.h: 420: chip_select(3);
  2113  000E74  0E03               	movlw	3
  2114  000E76  EC23  F006         	call	_chip_select
  2115  000E7A                     
  2116                           ;./lm629.h: 421: motor_break();
  2117  000E7A  EC64  F007         	call	_motor_break	;wreg free
  2118  000E7E  0012               	return		;funcret
  2119  000E80                     __end_of_all_break:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _motor_break *****************
  2123 ;; Defined at:
  2124 ;;		line 402 in file "./lm629.h"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 4
  2145 ;; This function calls:
  2146 ;;		_check_busy
  2147 ;;		_write_command
  2148 ;;		_write_data
  2149 ;; This function is called by:
  2150 ;;		_all_break
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text10
  2155  000EC8                     __ptext10:
  2156                           	callstack 0
  2157  000EC8                     _motor_break:
  2158                           	callstack 25
  2159  000EC8                     
  2160                           ;./lm629.h: 404: write_command(0x1F);
  2161  000EC8  0E1F               	movlw	31
  2162  000ECA  ECE3  F006         	call	_write_command
  2163                           
  2164                           ;./lm629.h: 405: check_busy();
  2165  000ECE  EC76  F007         	call	_check_busy	;wreg free
  2166                           
  2167                           ;./lm629.h: 406: write_data(0x02,0x00);
  2168  000ED2  0E00               	movlw	0
  2169  000ED4  6E06               	movwf	write_data@byte2^0,c
  2170  000ED6  0E02               	movlw	2
  2171  000ED8  EC95  F006         	call	_write_data
  2172                           
  2173                           ;./lm629.h: 407: check_busy();
  2174  000EDC  EC76  F007         	call	_check_busy	;wreg free
  2175                           
  2176                           ;./lm629.h: 408: write_command(0x01);
  2177  000EE0  0E01               	movlw	1
  2178  000EE2  ECE3  F006         	call	_write_command
  2179                           
  2180                           ;./lm629.h: 409: check_busy();
  2181  000EE6  EC76  F007         	call	_check_busy	;wreg free
  2182  000EEA  0012               	return		;funcret
  2183  000EEC                     __end_of_motor_break:
  2184                           	callstack 0
  2185                           
  2186 ;; *************** function _LM629_init *****************
  2187 ;; Defined at:
  2188 ;;		line 202 in file "./lm629.h"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  x               1    8[COMRAM] unsigned char 
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2204 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;Total ram usage:        2 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 5
  2209 ;; This function calls:
  2210 ;;		_check_busy
  2211 ;;		_chip_select
  2212 ;;		_filter_module
  2213 ;;		_read_status
  2214 ;;		_write_command
  2215 ;;		_write_data
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text11
  2222  000034                     __ptext11:
  2223                           	callstack 0
  2224  000034                     _LM629_init:
  2225                           	callstack 25
  2226  000034                     
  2227                           ;./lm629.h: 206:  TRISB&=0b11000011;
  2228  000034  0EC3               	movlw	195
  2229  000036  1693               	andwf	147,f,c	;volatile
  2230  000038                     
  2231                           ;./lm629.h: 207:  TRISD&=0b11110001;
  2232  000038  0EF1               	movlw	241
  2233  00003A  1695               	andwf	149,f,c	;volatile
  2234  00003C                     
  2235                           ;./lm629.h: 208:  TRISC&=0b11111011;
  2236  00003C  9494               	bcf	148,2,c	;volatile
  2237  00003E                     
  2238                           ;./lm629.h: 209:  PORTCbits.RC2=1;
  2239  00003E  8482               	bsf	130,2,c	;volatile
  2240  000040                     
  2241                           ;./lm629.h: 210:  PORTDbits.RD2=1;
  2242  000040  8483               	bsf	131,2,c	;volatile
  2243  000042                     
  2244                           ;./lm629.h: 211:  PORTDbits.RD1=1;
  2245  000042  8283               	bsf	131,1,c	;volatile
  2246  000044                     
  2247                           ;./lm629.h: 212:  PORTBbits.RB5=1;
  2248  000044  8A81               	bsf	129,5,c	;volatile
  2249  000046                     
  2250                           ;./lm629.h: 213:  chip_select(0);
  2251  000046  0E00               	movlw	0
  2252  000048  EC23  F006         	call	_chip_select
  2253  00004C                     l1935:
  2254                           
  2255                           ;./lm629.h: 215:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  2256  00004C  0E35               	movlw	53
  2257  00004E                     u717:
  2258  00004E  2EE8               	decfsz	wreg,f,c
  2259  000050  D7FE               	bra	u717
  2260  000052  F000               	nop	
  2261  000054                     
  2262                           ;./lm629.h: 216:  PORTBbits.RB5=0;
  2263  000054  9A81               	bcf	129,5,c	;volatile
  2264  000056                     
  2265                           ;./lm629.h: 217:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  2266  000056  0E0A               	movlw	10
  2267  000058                     u727:
  2268  000058  2EE8               	decfsz	wreg,f,c
  2269  00005A  D7FE               	bra	u727
  2270  00005C  D000               	nop2	
  2271  00005E                     
  2272                           ;./lm629.h: 218:  PORTBbits.RB5=1;
  2273  00005E  8A81               	bsf	129,5,c	;volatile
  2274  000060                     
  2275                           ;./lm629.h: 219:  _delay((unsigned long)((2)*(64000000/4000.0)));
  2276  000060  0E2A               	movlw	42
  2277  000062  6E08               	movwf	??_LM629_init^0,c
  2278  000064  0E8E               	movlw	142
  2279  000066                     u737:
  2280  000066  2EE8               	decfsz	wreg,f,c
  2281  000068  D7FE               	bra	u737
  2282  00006A  2E08               	decfsz	??_LM629_init^0,f,c
  2283  00006C  D7FC               	bra	u737
  2284  00006E                     
  2285                           ;./lm629.h: 220:  x=read_status();
  2286  00006E  ECFF  F006         	call	_read_status	;wreg free
  2287  000072  6E09               	movwf	LM629_init@x^0,c
  2288  000074                     
  2289                           ;./lm629.h: 221:  if(!(x==0xC4 || x==0x84))
  2290  000074  0EC4               	movlw	196
  2291  000076  1809               	xorwf	LM629_init@x^0,w,c
  2292  000078  B4D8               	btfsc	status,2,c
  2293  00007A  EF41  F000         	goto	u531
  2294  00007E  EF43  F000         	goto	u530
  2295  000082                     u531:
  2296  000082  EF4E  F000         	goto	l1955
  2297  000086                     u530:
  2298  000086  0E84               	movlw	132
  2299  000088  1809               	xorwf	LM629_init@x^0,w,c
  2300  00008A  B4D8               	btfsc	status,2,c
  2301  00008C  EF4A  F000         	goto	u541
  2302  000090  EF4C  F000         	goto	u540
  2303  000094                     u541:
  2304  000094  EF4E  F000         	goto	l1955
  2305  000098                     u540:
  2306  000098  EF26  F000         	goto	l1935
  2307  00009C                     l1955:
  2308                           
  2309                           ;./lm629.h: 226:   {;./lm629.h: 227:    check_busy();
  2310  00009C  EC76  F007         	call	_check_busy	;wreg free
  2311                           
  2312                           ;./lm629.h: 228:    write_command(0x1D);
  2313  0000A0  0E1D               	movlw	29
  2314  0000A2  ECE3  F006         	call	_write_command
  2315                           
  2316                           ;./lm629.h: 229:          check_busy();
  2317  0000A6  EC76  F007         	call	_check_busy	;wreg free
  2318                           
  2319                           ;./lm629.h: 230:    write_data(0x00,0x00);
  2320  0000AA  0E00               	movlw	0
  2321  0000AC  6E06               	movwf	write_data@byte2^0,c
  2322  0000AE  0E00               	movlw	0
  2323  0000B0  EC95  F006         	call	_write_data
  2324                           
  2325                           ;./lm629.h: 231:    check_busy();
  2326  0000B4  EC76  F007         	call	_check_busy	;wreg free
  2327                           
  2328                           ;./lm629.h: 232:    x=read_status();
  2329  0000B8  ECFF  F006         	call	_read_status	;wreg free
  2330  0000BC  6E09               	movwf	LM629_init@x^0,c
  2331  0000BE                     
  2332                           ;./lm629.h: 233:             if(!(x==0xC0 || x==0x80))
  2333  0000BE  0EC0               	movlw	192
  2334  0000C0  1809               	xorwf	LM629_init@x^0,w,c
  2335  0000C2  B4D8               	btfsc	status,2,c
  2336  0000C4  EF66  F000         	goto	u551
  2337  0000C8  EF68  F000         	goto	u550
  2338  0000CC                     u551:
  2339  0000CC  EF73  F000         	goto	l1963
  2340  0000D0                     u550:
  2341  0000D0  0E80               	movlw	128
  2342  0000D2  1809               	xorwf	LM629_init@x^0,w,c
  2343  0000D4  B4D8               	btfsc	status,2,c
  2344  0000D6  EF6F  F000         	goto	u561
  2345  0000DA  EF71  F000         	goto	u560
  2346  0000DE                     u561:
  2347  0000DE  EF73  F000         	goto	l1963
  2348  0000E2                     u560:
  2349  0000E2  EF26  F000         	goto	l1935
  2350  0000E6                     l1963:
  2351                           
  2352                           ;./lm629.h: 239:  chip_select(1);
  2353  0000E6  0E01               	movlw	1
  2354  0000E8  EC23  F006         	call	_chip_select
  2355  0000EC                     l1965:
  2356                           
  2357                           ;./lm629.h: 241:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  2358  0000EC  0E35               	movlw	53
  2359  0000EE                     u747:
  2360  0000EE  2EE8               	decfsz	wreg,f,c
  2361  0000F0  D7FE               	bra	u747
  2362  0000F2  F000               	nop	
  2363  0000F4                     
  2364                           ;./lm629.h: 242:  PORTBbits.RB5=0;
  2365  0000F4  9A81               	bcf	129,5,c	;volatile
  2366  0000F6                     
  2367                           ;./lm629.h: 243:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  2368  0000F6  0E0A               	movlw	10
  2369  0000F8                     u757:
  2370  0000F8  2EE8               	decfsz	wreg,f,c
  2371  0000FA  D7FE               	bra	u757
  2372  0000FC  D000               	nop2	
  2373  0000FE                     
  2374                           ;./lm629.h: 244:  PORTBbits.RB5=1;
  2375  0000FE  8A81               	bsf	129,5,c	;volatile
  2376  000100                     
  2377                           ;./lm629.h: 245:  _delay((unsigned long)((2)*(64000000/4000.0)));
  2378  000100  0E2A               	movlw	42
  2379  000102  6E08               	movwf	??_LM629_init^0,c
  2380  000104  0E8E               	movlw	142
  2381  000106                     u767:
  2382  000106  2EE8               	decfsz	wreg,f,c
  2383  000108  D7FE               	bra	u767
  2384  00010A  2E08               	decfsz	??_LM629_init^0,f,c
  2385  00010C  D7FC               	bra	u767
  2386  00010E                     
  2387                           ;./lm629.h: 246:  x=read_status();
  2388  00010E  ECFF  F006         	call	_read_status	;wreg free
  2389  000112  6E09               	movwf	LM629_init@x^0,c
  2390  000114                     
  2391                           ;./lm629.h: 247:  if(!(x==0xC4 || x==0x84))
  2392  000114  0EC4               	movlw	196
  2393  000116  1809               	xorwf	LM629_init@x^0,w,c
  2394  000118  B4D8               	btfsc	status,2,c
  2395  00011A  EF91  F000         	goto	u571
  2396  00011E  EF93  F000         	goto	u570
  2397  000122                     u571:
  2398  000122  EF9E  F000         	goto	l1985
  2399  000126                     u570:
  2400  000126  0E84               	movlw	132
  2401  000128  1809               	xorwf	LM629_init@x^0,w,c
  2402  00012A  B4D8               	btfsc	status,2,c
  2403  00012C  EF9A  F000         	goto	u581
  2404  000130  EF9C  F000         	goto	u580
  2405  000134                     u581:
  2406  000134  EF9E  F000         	goto	l1985
  2407  000138                     u580:
  2408  000138  EF76  F000         	goto	l1965
  2409  00013C                     l1985:
  2410                           
  2411                           ;./lm629.h: 252:   {;./lm629.h: 253:    check_busy();
  2412  00013C  EC76  F007         	call	_check_busy	;wreg free
  2413                           
  2414                           ;./lm629.h: 254:    write_command(0x1D);
  2415  000140  0E1D               	movlw	29
  2416  000142  ECE3  F006         	call	_write_command
  2417                           
  2418                           ;./lm629.h: 255:          check_busy();
  2419  000146  EC76  F007         	call	_check_busy	;wreg free
  2420                           
  2421                           ;./lm629.h: 256:    write_data(0x00,0x00);
  2422  00014A  0E00               	movlw	0
  2423  00014C  6E06               	movwf	write_data@byte2^0,c
  2424  00014E  0E00               	movlw	0
  2425  000150  EC95  F006         	call	_write_data
  2426                           
  2427                           ;./lm629.h: 257:    check_busy();
  2428  000154  EC76  F007         	call	_check_busy	;wreg free
  2429                           
  2430                           ;./lm629.h: 258:    x=read_status();
  2431  000158  ECFF  F006         	call	_read_status	;wreg free
  2432  00015C  6E09               	movwf	LM629_init@x^0,c
  2433  00015E                     
  2434                           ;./lm629.h: 259:             if(!(x==0xC0 || x==0x80))
  2435  00015E  0EC0               	movlw	192
  2436  000160  1809               	xorwf	LM629_init@x^0,w,c
  2437  000162  B4D8               	btfsc	status,2,c
  2438  000164  EFB6  F000         	goto	u591
  2439  000168  EFB8  F000         	goto	u590
  2440  00016C                     u591:
  2441  00016C  EFC3  F000         	goto	l1993
  2442  000170                     u590:
  2443  000170  0E80               	movlw	128
  2444  000172  1809               	xorwf	LM629_init@x^0,w,c
  2445  000174  B4D8               	btfsc	status,2,c
  2446  000176  EFBF  F000         	goto	u601
  2447  00017A  EFC1  F000         	goto	u600
  2448  00017E                     u601:
  2449  00017E  EFC3  F000         	goto	l1993
  2450  000182                     u600:
  2451  000182  EF76  F000         	goto	l1965
  2452  000186                     l1993:
  2453                           
  2454                           ;./lm629.h: 265:  chip_select(3);
  2455  000186  0E03               	movlw	3
  2456  000188  EC23  F006         	call	_chip_select
  2457  00018C                     l1995:
  2458                           
  2459                           ;./lm629.h: 267:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  2460  00018C  0E35               	movlw	53
  2461  00018E                     u777:
  2462  00018E  2EE8               	decfsz	wreg,f,c
  2463  000190  D7FE               	bra	u777
  2464  000192  F000               	nop	
  2465  000194                     
  2466                           ;./lm629.h: 268:  PORTBbits.RB5=0;
  2467  000194  9A81               	bcf	129,5,c	;volatile
  2468  000196                     
  2469                           ;./lm629.h: 269:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  2470  000196  0E0A               	movlw	10
  2471  000198                     u787:
  2472  000198  2EE8               	decfsz	wreg,f,c
  2473  00019A  D7FE               	bra	u787
  2474  00019C  D000               	nop2	
  2475  00019E                     
  2476                           ;./lm629.h: 270:  PORTBbits.RB5=1;
  2477  00019E  8A81               	bsf	129,5,c	;volatile
  2478  0001A0                     
  2479                           ;./lm629.h: 271:  _delay((unsigned long)((2)*(64000000/4000.0)));
  2480  0001A0  0E2A               	movlw	42
  2481  0001A2  6E08               	movwf	??_LM629_init^0,c
  2482  0001A4  0E8E               	movlw	142
  2483  0001A6                     u797:
  2484  0001A6  2EE8               	decfsz	wreg,f,c
  2485  0001A8  D7FE               	bra	u797
  2486  0001AA  2E08               	decfsz	??_LM629_init^0,f,c
  2487  0001AC  D7FC               	bra	u797
  2488  0001AE                     
  2489                           ;./lm629.h: 272:  x=read_status();
  2490  0001AE  ECFF  F006         	call	_read_status	;wreg free
  2491  0001B2  6E09               	movwf	LM629_init@x^0,c
  2492  0001B4                     
  2493                           ;./lm629.h: 273:  if(!(x==0xC4 || x==0x84))
  2494  0001B4  0EC4               	movlw	196
  2495  0001B6  1809               	xorwf	LM629_init@x^0,w,c
  2496  0001B8  B4D8               	btfsc	status,2,c
  2497  0001BA  EFE1  F000         	goto	u611
  2498  0001BE  EFE3  F000         	goto	u610
  2499  0001C2                     u611:
  2500  0001C2  EFEE  F000         	goto	l2015
  2501  0001C6                     u610:
  2502  0001C6  0E84               	movlw	132
  2503  0001C8  1809               	xorwf	LM629_init@x^0,w,c
  2504  0001CA  B4D8               	btfsc	status,2,c
  2505  0001CC  EFEA  F000         	goto	u621
  2506  0001D0  EFEC  F000         	goto	u620
  2507  0001D4                     u621:
  2508  0001D4  EFEE  F000         	goto	l2015
  2509  0001D8                     u620:
  2510  0001D8  EFC6  F000         	goto	l1995
  2511  0001DC                     l2015:
  2512                           
  2513                           ;./lm629.h: 278:   {;./lm629.h: 279:    check_busy();
  2514  0001DC  EC76  F007         	call	_check_busy	;wreg free
  2515                           
  2516                           ;./lm629.h: 280:    write_command(0x1D);
  2517  0001E0  0E1D               	movlw	29
  2518  0001E2  ECE3  F006         	call	_write_command
  2519                           
  2520                           ;./lm629.h: 281:          check_busy();
  2521  0001E6  EC76  F007         	call	_check_busy	;wreg free
  2522                           
  2523                           ;./lm629.h: 282:    write_data(0x00,0x00);
  2524  0001EA  0E00               	movlw	0
  2525  0001EC  6E06               	movwf	write_data@byte2^0,c
  2526  0001EE  0E00               	movlw	0
  2527  0001F0  EC95  F006         	call	_write_data
  2528                           
  2529                           ;./lm629.h: 283:    check_busy();
  2530  0001F4  EC76  F007         	call	_check_busy	;wreg free
  2531                           
  2532                           ;./lm629.h: 284:    x=read_status();
  2533  0001F8  ECFF  F006         	call	_read_status	;wreg free
  2534  0001FC  6E09               	movwf	LM629_init@x^0,c
  2535  0001FE                     
  2536                           ;./lm629.h: 285:             if(!(x==0xC0 || x==0x80))
  2537  0001FE  0EC0               	movlw	192
  2538  000200  1809               	xorwf	LM629_init@x^0,w,c
  2539  000202  B4D8               	btfsc	status,2,c
  2540  000204  EF06  F001         	goto	u631
  2541  000208  EF08  F001         	goto	u630
  2542  00020C                     u631:
  2543  00020C  EF13  F001         	goto	l2023
  2544  000210                     u630:
  2545  000210  0E80               	movlw	128
  2546  000212  1809               	xorwf	LM629_init@x^0,w,c
  2547  000214  B4D8               	btfsc	status,2,c
  2548  000216  EF0F  F001         	goto	u641
  2549  00021A  EF11  F001         	goto	u640
  2550  00021E                     u641:
  2551  00021E  EF13  F001         	goto	l2023
  2552  000222                     u640:
  2553  000222  EFC6  F000         	goto	l1995
  2554  000226                     l2023:
  2555                           
  2556                           ;./lm629.h: 290: chip_select(0);
  2557  000226  0E00               	movlw	0
  2558  000228  EC23  F006         	call	_chip_select
  2559  00022C                     
  2560                           ;./lm629.h: 291: filter_module();
  2561  00022C  EC67  F006         	call	_filter_module	;wreg free
  2562  000230                     
  2563                           ;./lm629.h: 292: chip_select(1);
  2564  000230  0E01               	movlw	1
  2565  000232  EC23  F006         	call	_chip_select
  2566                           
  2567                           ;./lm629.h: 293: filter_module();
  2568  000236  EC67  F006         	call	_filter_module	;wreg free
  2569  00023A                     
  2570                           ;./lm629.h: 294: chip_select(2);
  2571  00023A  0E02               	movlw	2
  2572  00023C  EC23  F006         	call	_chip_select
  2573  000240                     
  2574                           ;./lm629.h: 295: filter_module();
  2575  000240  EC67  F006         	call	_filter_module	;wreg free
  2576                           
  2577                           ;./lm629.h: 296: chip_select(3);
  2578  000244  0E03               	movlw	3
  2579  000246  EC23  F006         	call	_chip_select
  2580  00024A                     
  2581                           ;./lm629.h: 297: filter_module();
  2582  00024A  EC67  F006         	call	_filter_module	;wreg free
  2583  00024E  0012               	return		;funcret
  2584  000250                     __end_of_LM629_init:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _filter_module *****************
  2588 ;; Defined at:
  2589 ;;		line 436 in file "./lm629.h"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 4
  2610 ;; This function calls:
  2611 ;;		_check_busy
  2612 ;;		_write_command
  2613 ;;		_write_data
  2614 ;; This function is called by:
  2615 ;;		_LM629_init
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text12
  2620  000CCE                     __ptext12:
  2621                           	callstack 0
  2622  000CCE                     _filter_module:
  2623                           	callstack 25
  2624  000CCE                     
  2625                           ;./lm629.h: 438: write_command(0x1E);
  2626  000CCE  0E1E               	movlw	30
  2627  000CD0  ECE3  F006         	call	_write_command
  2628                           
  2629                           ;./lm629.h: 439: check_busy();
  2630  000CD4  EC76  F007         	call	_check_busy	;wreg free
  2631                           
  2632                           ;./lm629.h: 440: write_data(0x00,0x0F);
  2633  000CD8  0E0F               	movlw	15
  2634  000CDA  6E06               	movwf	write_data@byte2^0,c
  2635  000CDC  0E00               	movlw	0
  2636  000CDE  EC95  F006         	call	_write_data
  2637                           
  2638                           ;./lm629.h: 441: check_busy();
  2639  000CE2  EC76  F007         	call	_check_busy	;wreg free
  2640                           
  2641                           ;./lm629.h: 442: write_data(0x01,0x0F);
  2642  000CE6  0E0F               	movlw	15
  2643  000CE8  6E06               	movwf	write_data@byte2^0,c
  2644  000CEA  0E01               	movlw	1
  2645  000CEC  EC95  F006         	call	_write_data
  2646                           
  2647                           ;./lm629.h: 443: check_busy();
  2648  000CF0  EC76  F007         	call	_check_busy	;wreg free
  2649                           
  2650                           ;./lm629.h: 444: write_data(0x00,0x04);
  2651  000CF4  0E04               	movlw	4
  2652  000CF6  6E06               	movwf	write_data@byte2^0,c
  2653  000CF8  0E00               	movlw	0
  2654  000CFA  EC95  F006         	call	_write_data
  2655                           
  2656                           ;./lm629.h: 445: check_busy();
  2657  000CFE  EC76  F007         	call	_check_busy	;wreg free
  2658                           
  2659                           ;./lm629.h: 446: write_data(0x7F,0xFF);
  2660  000D02  0EFF               	movlw	255
  2661  000D04  6E06               	movwf	write_data@byte2^0,c
  2662  000D06  0E7F               	movlw	127
  2663  000D08  EC95  F006         	call	_write_data
  2664                           
  2665                           ;./lm629.h: 447: check_busy();
  2666  000D0C  EC76  F007         	call	_check_busy	;wreg free
  2667                           
  2668                           ;./lm629.h: 448: write_data(0x00,0xFF);
  2669  000D10  0EFF               	movlw	255
  2670  000D12  6E06               	movwf	write_data@byte2^0,c
  2671  000D14  0E00               	movlw	0
  2672  000D16  EC95  F006         	call	_write_data
  2673                           
  2674                           ;./lm629.h: 449: check_busy();
  2675  000D1A  EC76  F007         	call	_check_busy	;wreg free
  2676                           
  2677                           ;./lm629.h: 450: write_command(0x04);
  2678  000D1E  0E04               	movlw	4
  2679  000D20  ECE3  F006         	call	_write_command
  2680                           
  2681                           ;./lm629.h: 451: check_busy();
  2682  000D24  EC76  F007         	call	_check_busy	;wreg free
  2683  000D28  0012               	return		;funcret
  2684  000D2A                     __end_of_filter_module:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function _write_data *****************
  2688 ;; Defined at:
  2689 ;;		line 164 in file "./lm629.h"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  byte1           1    wreg     unsigned char 
  2692 ;;  byte2           1    5[COMRAM] unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  byte1           1    6[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2704 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 2
  2711 ;; This function calls:
  2712 ;;		_DATABUS
  2713 ;;		_DATABUS_DIR
  2714 ;; This function is called by:
  2715 ;;		_LM629_init
  2716 ;;		_motor_off
  2717 ;;		_motor_break
  2718 ;;		_filter_module
  2719 ;;		_forward
  2720 ;;		_reverse
  2721 ;;		_right
  2722 ;;		_left
  2723 ;;		_simple_absolute_postion
  2724 ;;		_simple_relative_position
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text13
  2729  000D2A                     __ptext13:
  2730                           	callstack 0
  2731  000D2A                     _write_data:
  2732                           	callstack 27
  2733                           
  2734                           ;incstack = 0
  2735                           ;write_data@byte1 stored from wreg
  2736  000D2A  6E07               	movwf	write_data@byte1^0,c
  2737  000D2C                     
  2738                           ;./lm629.h: 164: void write_data( unsigned char byte1, unsigned char byte2);./lm629.h: 1
      +                          65: {;./lm629.h: 166:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  2739  000D2C  0E05               	movlw	5
  2740  000D2E                     u807:
  2741  000D2E  2EE8               	decfsz	wreg,f,c
  2742  000D30  D7FE               	bra	u807
  2743  000D32  F000               	nop	
  2744  000D34                     
  2745                           ;./lm629.h: 167:  DATABUS_DIR(0);
  2746  000D34  0E00               	movlw	0
  2747  000D36  ECC3  F006         	call	_DATABUS_DIR
  2748  000D3A                     
  2749                           ;./lm629.h: 168:  PORTCbits.RC2=1;
  2750  000D3A  8482               	bsf	130,2,c	;volatile
  2751  000D3C                     
  2752                           ;./lm629.h: 169:  _delay(3);
  2753  000D3C  D000               	nop2		;2 cycle nop
  2754  000D3E  F000               	nop	
  2755  000D40                     
  2756                           ;./lm629.h: 170:  PORTDbits.RD1=0;
  2757  000D40  9283               	bcf	131,1,c	;volatile
  2758  000D42                     
  2759                           ;./lm629.h: 171:  _delay(8);
  2760  000D42  D000               	nop2		;2 cycle nop
  2761  000D44  D000               	nop2		;2 cycle nop
  2762  000D46  D000               	nop2		;2 cycle nop
  2763  000D48  D000               	nop2		;2 cycle nop
  2764  000D4A                     
  2765                           ;./lm629.h: 172:  DATABUS(0,byte1);
  2766  000D4A  C007  F001         	movff	write_data@byte1,DATABUS@byte0
  2767  000D4E  0E00               	movlw	0
  2768  000D50  EC28  F001         	call	_DATABUS
  2769  000D54                     
  2770                           ;./lm629.h: 173:  _delay(5);
  2771  000D54  D000               	nop2		;2 cycle nop
  2772  000D56  D000               	nop2		;2 cycle nop
  2773  000D58  F000               	nop	
  2774  000D5A                     
  2775                           ;./lm629.h: 174:  PORTDbits.RD1=1;
  2776  000D5A  8283               	bsf	131,1,c	;volatile
  2777  000D5C                     
  2778                           ;./lm629.h: 175:  _delay(10);
  2779  000D5C  0E03               	movlw	3
  2780  000D5E                     u817:
  2781  000D5E  2EE8               	decfsz	wreg,f,c
  2782  000D60  D7FE               	bra	u817
  2783  000D62  F000               	nop	
  2784  000D64                     
  2785                           ;./lm629.h: 176:  PORTDbits.RD1=0;
  2786  000D64  9283               	bcf	131,1,c	;volatile
  2787  000D66                     
  2788                           ;./lm629.h: 177:  _delay(5);
  2789  000D66  D000               	nop2		;2 cycle nop
  2790  000D68  D000               	nop2		;2 cycle nop
  2791  000D6A  F000               	nop	
  2792  000D6C                     
  2793                           ;./lm629.h: 178:  DATABUS(0,byte2);
  2794  000D6C  C006  F001         	movff	write_data@byte2,DATABUS@byte0
  2795  000D70  0E00               	movlw	0
  2796  000D72  EC28  F001         	call	_DATABUS
  2797  000D76                     
  2798                           ;./lm629.h: 179:  _delay(5);
  2799  000D76  D000               	nop2		;2 cycle nop
  2800  000D78  D000               	nop2		;2 cycle nop
  2801  000D7A  F000               	nop	
  2802  000D7C                     
  2803                           ;./lm629.h: 180:  PORTDbits.RD1=1;
  2804  000D7C  8283               	bsf	131,1,c	;volatile
  2805  000D7E                     
  2806                           ;./lm629.h: 181:  _delay(3);
  2807  000D7E  D000               	nop2		;2 cycle nop
  2808  000D80  F000               	nop	
  2809  000D82                     
  2810                           ;./lm629.h: 182:  PORTCbits.RC2=1;
  2811  000D82  8482               	bsf	130,2,c	;volatile
  2812  000D84  0012               	return		;funcret
  2813  000D86                     __end_of_write_data:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _write_command *****************
  2817 ;; Defined at:
  2818 ;;		line 186 in file "./lm629.h"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  command         1    wreg     unsigned char 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  command         1    5[COMRAM] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        1 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 2
  2839 ;; This function calls:
  2840 ;;		_DATABUS
  2841 ;;		_DATABUS_DIR
  2842 ;; This function is called by:
  2843 ;;		_LM629_init
  2844 ;;		_motor_off
  2845 ;;		_motor_break
  2846 ;;		_filter_module
  2847 ;;		_forward
  2848 ;;		_reverse
  2849 ;;		_right
  2850 ;;		_left
  2851 ;;		_simple_absolute_postion
  2852 ;;		_simple_relative_position
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	text14
  2857  000DC6                     __ptext14:
  2858                           	callstack 0
  2859  000DC6                     _write_command:
  2860                           	callstack 27
  2861                           
  2862                           ;incstack = 0
  2863                           ;write_command@command stored from wreg
  2864  000DC6  6E06               	movwf	write_command@command^0,c
  2865  000DC8                     
  2866                           ;./lm629.h: 186: void write_command(unsigned char command);./lm629.h: 187: {;./lm629.h: 
      +                          188:  DATABUS_DIR(0);
  2867  000DC8  0E00               	movlw	0
  2868  000DCA  ECC3  F006         	call	_DATABUS_DIR
  2869  000DCE                     
  2870                           ;./lm629.h: 189:  PORTCbits.RC2=0;
  2871  000DCE  9482               	bcf	130,2,c	;volatile
  2872  000DD0                     
  2873                           ;./lm629.h: 190:  _delay(3);
  2874  000DD0  D000               	nop2		;2 cycle nop
  2875  000DD2  F000               	nop	
  2876  000DD4                     
  2877                           ;./lm629.h: 191:  PORTDbits.RD1=0;
  2878  000DD4  9283               	bcf	131,1,c	;volatile
  2879  000DD6                     
  2880                           ;./lm629.h: 192:  _delay(5);
  2881  000DD6  D000               	nop2		;2 cycle nop
  2882  000DD8  D000               	nop2		;2 cycle nop
  2883  000DDA  F000               	nop	
  2884  000DDC                     
  2885                           ;./lm629.h: 193:  DATABUS(0,command);
  2886  000DDC  C006  F001         	movff	write_command@command,DATABUS@byte0
  2887  000DE0  0E00               	movlw	0
  2888  000DE2  EC28  F001         	call	_DATABUS
  2889  000DE6                     
  2890                           ;./lm629.h: 194:  _delay(5);
  2891  000DE6  D000               	nop2		;2 cycle nop
  2892  000DE8  D000               	nop2		;2 cycle nop
  2893  000DEA  F000               	nop	
  2894  000DEC                     
  2895                           ;./lm629.h: 195:  PORTDbits.RD1=1;
  2896  000DEC  8283               	bsf	131,1,c	;volatile
  2897  000DEE                     
  2898                           ;./lm629.h: 196:  _delay(3);
  2899  000DEE  D000               	nop2		;2 cycle nop
  2900  000DF0  F000               	nop	
  2901  000DF2                     
  2902                           ;./lm629.h: 197:  PORTCbits.RC2=1;
  2903  000DF2  8482               	bsf	130,2,c	;volatile
  2904  000DF4                     
  2905                           ;./lm629.h: 198:  _delay(11);
  2906  000DF4  0E03               	movlw	3
  2907  000DF6                     u827:
  2908  000DF6  2EE8               	decfsz	wreg,f,c
  2909  000DF8  D7FE               	bra	u827
  2910  000DFA  D000               	nop2	
  2911  000DFC  0012               	return		;funcret
  2912  000DFE                     __end_of_write_command:
  2913                           	callstack 0
  2914                           
  2915 ;; *************** function _check_busy *****************
  2916 ;; Defined at:
  2917 ;;		line 110 in file "./lm629.h"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  x               1    6[COMRAM] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;Total ram usage:        1 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 3
  2938 ;; This function calls:
  2939 ;;		_read_status
  2940 ;; This function is called by:
  2941 ;;		_LM629_init
  2942 ;;		_motor_off
  2943 ;;		_motor_break
  2944 ;;		_filter_module
  2945 ;;		_forward
  2946 ;;		_reverse
  2947 ;;		_right
  2948 ;;		_left
  2949 ;;		_simple_absolute_postion
  2950 ;;		_simple_relative_position
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text15
  2955  000EEC                     __ptext15:
  2956                           	callstack 0
  2957  000EEC                     _check_busy:
  2958                           	callstack 25
  2959  000EEC                     l1849:
  2960                           
  2961                           ;./lm629.h: 112:  unsigned char x;;./lm629.h: 113:  x=read_status();
  2962  000EEC  ECFF  F006         	call	_read_status	;wreg free
  2963  000EF0  6E07               	movwf	check_busy@x^0,c
  2964  000EF2                     
  2965                           ;./lm629.h: 114:  while (x & 0x01)
  2966  000EF2  B007               	btfsc	check_busy@x^0,0,c
  2967  000EF4  EF7E  F007         	goto	u521
  2968  000EF8  EF80  F007         	goto	u520
  2969  000EFC                     u521:
  2970  000EFC  EF76  F007         	goto	l1849
  2971  000F00                     u520:
  2972  000F00  0012               	return		;funcret
  2973  000F02                     __end_of_check_busy:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _read_status *****************
  2977 ;; Defined at:
  2978 ;;		line 122 in file "./lm629.h"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  status          1    5[COMRAM] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      unsigned char 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;Total ram usage:        1 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 2
  2999 ;; This function calls:
  3000 ;;		_DATABUS
  3001 ;;		_DATABUS_DIR
  3002 ;; This function is called by:
  3003 ;;		_check_busy
  3004 ;;		_LM629_init
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text16
  3009  000DFE                     __ptext16:
  3010                           	callstack 0
  3011  000DFE                     _read_status:
  3012                           	callstack 25
  3013  000DFE                     
  3014                           ;./lm629.h: 124:  unsigned char status;;./lm629.h: 125:  DATABUS_DIR(0xFF);
  3015  000DFE  0EFF               	movlw	255
  3016  000E00  ECC3  F006         	call	_DATABUS_DIR
  3017  000E04                     
  3018                           ;./lm629.h: 126:  PORTCbits.RC2=0;
  3019  000E04  9482               	bcf	130,2,c	;volatile
  3020  000E06                     
  3021                           ;./lm629.h: 127:  _delay(3);
  3022  000E06  D000               	nop2		;2 cycle nop
  3023  000E08  F000               	nop	
  3024  000E0A                     
  3025                           ;./lm629.h: 128:  PORTDbits.RD2=0;
  3026  000E0A  9483               	bcf	131,2,c	;volatile
  3027  000E0C                     
  3028                           ;./lm629.h: 129:  _delay(12);
  3029  000E0C  0E04               	movlw	4
  3030  000E0E                     u837:
  3031  000E0E  2EE8               	decfsz	wreg,f,c
  3032  000E10  D7FE               	bra	u837
  3033  000E12                     
  3034                           ;./lm629.h: 130:  status=DATABUS(0xFF,0);
  3035  000E12  0E00               	movlw	0
  3036  000E14  6E01               	movwf	DATABUS@byte0^0,c
  3037  000E16  0EFF               	movlw	255
  3038  000E18  EC28  F001         	call	_DATABUS
  3039  000E1C  6E06               	movwf	read_status@status^0,c
  3040  000E1E                     
  3041                           ;./lm629.h: 131:  PORTDbits.RD2=1;
  3042  000E1E  8483               	bsf	131,2,c	;volatile
  3043  000E20                     
  3044                           ;./lm629.h: 132:  _delay(5);
  3045  000E20  D000               	nop2		;2 cycle nop
  3046  000E22  D000               	nop2		;2 cycle nop
  3047  000E24  F000               	nop	
  3048  000E26                     
  3049                           ;./lm629.h: 133:  PORTCbits.RC2=1;
  3050  000E26  8482               	bsf	130,2,c	;volatile
  3051  000E28                     
  3052                           ;./lm629.h: 135: return status;
  3053  000E28  5006               	movf	read_status@status^0,w,c
  3054  000E2A  0012               	return		;funcret
  3055  000E2C                     __end_of_read_status:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _DATABUS_DIR *****************
  3059 ;; Defined at:
  3060 ;;		line 302 in file "./lm629.h"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  dir             1    wreg     unsigned char 
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;  dir             1    0[COMRAM] unsigned char 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;Total ram usage:        1 bytes
  3079 ;; Hardware stack levels used: 1
  3080 ;; Hardware stack levels required when called: 1
  3081 ;; This function calls:
  3082 ;;		Nothing
  3083 ;; This function is called by:
  3084 ;;		_read_status
  3085 ;;		_write_data
  3086 ;;		_write_command
  3087 ;;		_read_data
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text17
  3092  000D86                     __ptext17:
  3093                           	callstack 0
  3094  000D86                     _DATABUS_DIR:
  3095                           	callstack 27
  3096                           
  3097                           ;incstack = 0
  3098                           ;DATABUS_DIR@dir stored from wreg
  3099  000D86  6E01               	movwf	DATABUS_DIR@dir^0,c
  3100  000D88                     
  3101                           ;./lm629.h: 302: void DATABUS_DIR(unsigned char dir);./lm629.h: 303: {;./lm629.h: 304: i
      +                          f(dir==0)
  3102  000D88  5001               	movf	DATABUS_DIR@dir^0,w,c
  3103  000D8A  A4D8               	btfss	status,2,c
  3104  000D8C  EFCA  F006         	goto	u11
  3105  000D90  EFCC  F006         	goto	u10
  3106  000D94                     u11:
  3107  000D94  EFD4  F006         	goto	l897
  3108  000D98                     u10:
  3109  000D98                     
  3110                           ;./lm629.h: 305: {;./lm629.h: 306: TRISC&=0b00111111;
  3111  000D98  0E3F               	movlw	63
  3112  000D9A  1694               	andwf	148,f,c	;volatile
  3113                           
  3114                           ;./lm629.h: 307: TRISD&=0b00001111;
  3115  000D9C  0E0F               	movlw	15
  3116  000D9E  1695               	andwf	149,f,c	;volatile
  3117                           
  3118                           ;./lm629.h: 308: TRISB&=0b11111100;
  3119  000DA0  0EFC               	movlw	252
  3120  000DA2  1693               	andwf	147,f,c	;volatile
  3121                           
  3122                           ;./lm629.h: 309: }
  3123  000DA4  EFE2  F006         	goto	l129
  3124  000DA8                     l897:
  3125  000DA8  2801               	incf	DATABUS_DIR@dir^0,w,c
  3126  000DAA  A4D8               	btfss	status,2,c
  3127  000DAC  EFDA  F006         	goto	u21
  3128  000DB0  EFDC  F006         	goto	u20
  3129  000DB4                     u21:
  3130  000DB4  EFE2  F006         	goto	l129
  3131  000DB8                     u20:
  3132  000DB8                     
  3133                           ;./lm629.h: 311: {;./lm629.h: 312: TRISC|=0b11000000;
  3134  000DB8  0EC0               	movlw	192
  3135  000DBA  1294               	iorwf	148,f,c	;volatile
  3136                           
  3137                           ;./lm629.h: 313: TRISD|=0b11110000;
  3138  000DBC  0EF0               	movlw	240
  3139  000DBE  1295               	iorwf	149,f,c	;volatile
  3140                           
  3141                           ;./lm629.h: 314: TRISB|=0b00000011;
  3142  000DC0  0E03               	movlw	3
  3143  000DC2  1293               	iorwf	147,f,c	;volatile
  3144  000DC4                     l129:
  3145  000DC4  0012               	return		;funcret
  3146  000DC6                     __end_of_DATABUS_DIR:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function _DATABUS *****************
  3150 ;; Defined at:
  3151 ;;		line 321 in file "./lm629.h"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  dir1            1    wreg     unsigned char 
  3154 ;;  byte0           1    0[COMRAM] unsigned char 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  dir1            1    3[COMRAM] unsigned char 
  3157 ;;  x               1    4[COMRAM] unsigned char 
  3158 ;; Return value:  Size  Location     Type
  3159 ;;                  1    wreg      unsigned char 
  3160 ;; Registers used:
  3161 ;;		wreg, status,2, status,0, prodl, prodh
  3162 ;; Tracked objects:
  3163 ;;		On entry : 0/0
  3164 ;;		On exit  : 0/0
  3165 ;;		Unchanged: 0/0
  3166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;Total ram usage:        5 bytes
  3172 ;; Hardware stack levels used: 1
  3173 ;; Hardware stack levels required when called: 1
  3174 ;; This function calls:
  3175 ;;		Nothing
  3176 ;; This function is called by:
  3177 ;;		_read_status
  3178 ;;		_write_data
  3179 ;;		_write_command
  3180 ;;		_read_data
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text18
  3185  000250                     __ptext18:
  3186                           	callstack 0
  3187  000250                     _DATABUS:
  3188                           	callstack 27
  3189                           
  3190                           ;incstack = 0
  3191                           ;DATABUS@dir1 stored from wreg
  3192  000250  6E04               	movwf	DATABUS@dir1^0,c
  3193  000252                     
  3194                           ;./lm629.h: 321: unsigned char DATABUS(unsigned char dir1, unsigned char byte0);./lm629.
      +                          h: 322: {;./lm629.h: 323: unsigned char x;;./lm629.h: 324: if(dir1==0)
  3195  000252  5004               	movf	DATABUS@dir1^0,w,c
  3196  000254  A4D8               	btfss	status,2,c
  3197  000256  EF2F  F001         	goto	u401
  3198  00025A  EF31  F001         	goto	u400
  3199  00025E                     u401:
  3200  00025E  EFAA  F001         	goto	l1805
  3201  000262                     u400:
  3202  000262                     
  3203                           ;./lm629.h: 325: {;./lm629.h: 326: PORTCbits.RC6 = ((byte0 & 0x01) >> 0);
  3204  000262  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  3205  000266  0E01               	movlw	1
  3206  000268  1602               	andwf	??_DATABUS^0,f,c
  3207  00026A  3A02               	swapf	??_DATABUS^0,f,c
  3208  00026C  4602               	rlncf	??_DATABUS^0,f,c
  3209  00026E  4602               	rlncf	??_DATABUS^0,f,c
  3210  000270  5082               	movf	130,w,c	;volatile
  3211  000272  1802               	xorwf	??_DATABUS^0,w,c
  3212  000274  0BBF               	andlw	-65
  3213  000276  1802               	xorwf	??_DATABUS^0,w,c
  3214  000278  6E82               	movwf	130,c	;volatile
  3215                           
  3216                           ;./lm629.h: 327: PORTCbits.RC7 = ((byte0 & 0x02) >> 1);
  3217  00027A  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  3218  00027E  90D8               	bcf	status,0,c
  3219  000280  3202               	rrcf	??_DATABUS^0,f,c
  3220  000282  0E01               	movlw	1
  3221  000284  1602               	andwf	??_DATABUS^0,f,c
  3222  000286  3202               	rrcf	??_DATABUS^0,f,c
  3223  000288  3202               	rrcf	??_DATABUS^0,f,c
  3224  00028A  5082               	movf	130,w,c	;volatile
  3225  00028C  1802               	xorwf	??_DATABUS^0,w,c
  3226  00028E  0B7F               	andlw	-129
  3227  000290  1802               	xorwf	??_DATABUS^0,w,c
  3228  000292  6E82               	movwf	130,c	;volatile
  3229                           
  3230                           ;./lm629.h: 328: PORTDbits.RD4 = ((byte0 & 0x04) >> 2);
  3231  000294  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  3232  000298  90D8               	bcf	status,0,c
  3233  00029A  3202               	rrcf	??_DATABUS^0,f,c
  3234  00029C  90D8               	bcf	status,0,c
  3235  00029E  3202               	rrcf	??_DATABUS^0,f,c
  3236  0002A0  0E01               	movlw	1
  3237  0002A2  1602               	andwf	??_DATABUS^0,f,c
  3238  0002A4  3A02               	swapf	??_DATABUS^0,f,c
  3239  0002A6  5083               	movf	131,w,c	;volatile
  3240  0002A8  1802               	xorwf	??_DATABUS^0,w,c
  3241  0002AA  0BEF               	andlw	-17
  3242  0002AC  1802               	xorwf	??_DATABUS^0,w,c
  3243  0002AE  6E83               	movwf	131,c	;volatile
  3244                           
  3245                           ;./lm629.h: 329: PORTDbits.RD5 = ((byte0 & 0x08) >> 3);
  3246  0002B0  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  3247  0002B4  90D8               	bcf	status,0,c
  3248  0002B6  3202               	rrcf	??_DATABUS^0,f,c
  3249  0002B8  90D8               	bcf	status,0,c
  3250  0002BA  3202               	rrcf	??_DATABUS^0,f,c
  3251  0002BC  90D8               	bcf	status,0,c
  3252  0002BE  3202               	rrcf	??_DATABUS^0,f,c
  3253  0002C0  0E01               	movlw	1
  3254  0002C2  1602               	andwf	??_DATABUS^0,f,c
  3255  0002C4  3A02               	swapf	??_DATABUS^0,f,c
  3256  0002C6  4602               	rlncf	??_DATABUS^0,f,c
  3257  0002C8  5083               	movf	131,w,c	;volatile
  3258  0002CA  1802               	xorwf	??_DATABUS^0,w,c
  3259  0002CC  0BDF               	andlw	-33
  3260  0002CE  1802               	xorwf	??_DATABUS^0,w,c
  3261  0002D0  6E83               	movwf	131,c	;volatile
  3262                           
  3263                           ;./lm629.h: 330: PORTDbits.RD6 = ((byte0 & 0x10) >> 4);
  3264  0002D2  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  3265  0002D6  3A02               	swapf	??_DATABUS^0,f,c
  3266  0002D8  0E0F               	movlw	15
  3267  0002DA  1602               	andwf	??_DATABUS^0,f,c
  3268  0002DC  0E01               	movlw	1
  3269  0002DE  1602               	andwf	??_DATABUS^0,f,c
  3270  0002E0  3A02               	swapf	??_DATABUS^0,f,c
  3271  0002E2  4602               	rlncf	??_DATABUS^0,f,c
  3272  0002E4  4602               	rlncf	??_DATABUS^0,f,c
  3273  0002E6  5083               	movf	131,w,c	;volatile
  3274  0002E8  1802               	xorwf	??_DATABUS^0,w,c
  3275  0002EA  0BBF               	andlw	-65
  3276  0002EC  1802               	xorwf	??_DATABUS^0,w,c
  3277  0002EE  6E83               	movwf	131,c	;volatile
  3278                           
  3279                           ;./lm629.h: 331: PORTDbits.RD7 = ((byte0 & 0x20) >> 5);
  3280  0002F0  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  3281  0002F4  0E05               	movlw	5
  3282  0002F6  6E03               	movwf	(??_DATABUS+1)^0,c
  3283  0002F8                     u415:
  3284  0002F8  90D8               	bcf	status,0,c
  3285  0002FA  3202               	rrcf	??_DATABUS^0,f,c
  3286  0002FC  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  3287  0002FE  EF7C  F001         	goto	u415
  3288  000302  0E01               	movlw	1
  3289  000304  1602               	andwf	??_DATABUS^0,f,c
  3290  000306  3202               	rrcf	??_DATABUS^0,f,c
  3291  000308  3202               	rrcf	??_DATABUS^0,f,c
  3292  00030A  5083               	movf	131,w,c	;volatile
  3293  00030C  1802               	xorwf	??_DATABUS^0,w,c
  3294  00030E  0B7F               	andlw	-129
  3295  000310  1802               	xorwf	??_DATABUS^0,w,c
  3296  000312  6E83               	movwf	131,c	;volatile
  3297                           
  3298                           ;./lm629.h: 332: PORTBbits.RB0 = ((byte0 & 0x40) >> 6);
  3299  000314  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  3300  000318  0E06               	movlw	6
  3301  00031A  6E03               	movwf	(??_DATABUS+1)^0,c
  3302  00031C                     u425:
  3303  00031C  90D8               	bcf	status,0,c
  3304  00031E  3202               	rrcf	??_DATABUS^0,f,c
  3305  000320  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  3306  000322  EF8E  F001         	goto	u425
  3307  000326  0E01               	movlw	1
  3308  000328  1602               	andwf	??_DATABUS^0,f,c
  3309  00032A  5081               	movf	129,w,c	;volatile
  3310  00032C  1802               	xorwf	??_DATABUS^0,w,c
  3311  00032E  0BFE               	andlw	-2
  3312  000330  1802               	xorwf	??_DATABUS^0,w,c
  3313  000332  6E81               	movwf	129,c	;volatile
  3314                           
  3315                           ;./lm629.h: 333: PORTBbits.RB1 = ((byte0 & 0x80) >> 7);
  3316  000334  6A02               	clrf	??_DATABUS^0,c
  3317  000336  AE01               	btfss	DATABUS@byte0^0,7,c
  3318  000338  D001               	bra	u435
  3319  00033A  2A02               	incf	??_DATABUS^0,f,c
  3320  00033C                     u435:
  3321  00033C  0E01               	movlw	1
  3322  00033E  1602               	andwf	??_DATABUS^0,f,c
  3323  000340  4602               	rlncf	??_DATABUS^0,f,c
  3324  000342  5081               	movf	129,w,c	;volatile
  3325  000344  1802               	xorwf	??_DATABUS^0,w,c
  3326  000346  0BFD               	andlw	-3
  3327  000348  1802               	xorwf	??_DATABUS^0,w,c
  3328  00034A  6E81               	movwf	129,c	;volatile
  3329  00034C                     
  3330                           ;./lm629.h: 334: x=0;
  3331  00034C  0E00               	movlw	0
  3332  00034E  6E05               	movwf	DATABUS@x^0,c
  3333                           
  3334                           ;./lm629.h: 335: }
  3335  000350  EF1F  F002         	goto	l1823
  3336  000354                     l1805:
  3337  000354  2804               	incf	DATABUS@dir1^0,w,c
  3338  000356  A4D8               	btfss	status,2,c
  3339  000358  EFB0  F001         	goto	u441
  3340  00035C  EFB2  F001         	goto	u440
  3341  000360                     u441:
  3342  000360  EF1F  F002         	goto	l1823
  3343  000364                     u440:
  3344  000364                     
  3345                           ;./lm629.h: 338: {;./lm629.h: 339: x=PORTBbits.RB1;
  3346  000364  0E00               	movlw	0
  3347  000366  B281               	btfsc	129,1,c	;volatile
  3348  000368  0E01               	movlw	1
  3349  00036A  6E05               	movwf	DATABUS@x^0,c
  3350  00036C                     
  3351                           ;./lm629.h: 340: x=(x<<1)+PORTBbits.RB0;
  3352  00036C  B081               	btfsc	129,0,c	;volatile
  3353  00036E  EFBB  F001         	goto	u451
  3354  000372  EFBF  F001         	goto	u450
  3355  000376                     u451:
  3356  000376  6A02               	clrf	??_DATABUS^0,c
  3357  000378  2A02               	incf	??_DATABUS^0,f,c
  3358  00037A  EFC0  F001         	goto	u458
  3359  00037E                     u450:
  3360  00037E  6A02               	clrf	??_DATABUS^0,c
  3361  000380                     u458:
  3362  000380  5005               	movf	DATABUS@x^0,w,c
  3363  000382  0D02               	mullw	2
  3364  000384  50F3               	movf	243,w,c
  3365  000386  2402               	addwf	??_DATABUS^0,w,c
  3366  000388  6E05               	movwf	DATABUS@x^0,c
  3367  00038A                     
  3368                           ;./lm629.h: 341: x=(x<<1)+PORTDbits.RD7;
  3369  00038A  BE83               	btfsc	131,7,c	;volatile
  3370  00038C  EFCA  F001         	goto	u461
  3371  000390  EFCE  F001         	goto	u460
  3372  000394                     u461:
  3373  000394  6A02               	clrf	??_DATABUS^0,c
  3374  000396  2A02               	incf	??_DATABUS^0,f,c
  3375  000398  EFCF  F001         	goto	u468
  3376  00039C                     u460:
  3377  00039C  6A02               	clrf	??_DATABUS^0,c
  3378  00039E                     u468:
  3379  00039E  5005               	movf	DATABUS@x^0,w,c
  3380  0003A0  0D02               	mullw	2
  3381  0003A2  50F3               	movf	243,w,c
  3382  0003A4  2402               	addwf	??_DATABUS^0,w,c
  3383  0003A6  6E05               	movwf	DATABUS@x^0,c
  3384  0003A8                     
  3385                           ;./lm629.h: 342: x=(x<<1)+PORTDbits.RD6;
  3386  0003A8  BC83               	btfsc	131,6,c	;volatile
  3387  0003AA  EFD9  F001         	goto	u471
  3388  0003AE  EFDD  F001         	goto	u470
  3389  0003B2                     u471:
  3390  0003B2  6A02               	clrf	??_DATABUS^0,c
  3391  0003B4  2A02               	incf	??_DATABUS^0,f,c
  3392  0003B6  EFDE  F001         	goto	u478
  3393  0003BA                     u470:
  3394  0003BA  6A02               	clrf	??_DATABUS^0,c
  3395  0003BC                     u478:
  3396  0003BC  5005               	movf	DATABUS@x^0,w,c
  3397  0003BE  0D02               	mullw	2
  3398  0003C0  50F3               	movf	243,w,c
  3399  0003C2  2402               	addwf	??_DATABUS^0,w,c
  3400  0003C4  6E05               	movwf	DATABUS@x^0,c
  3401  0003C6                     
  3402                           ;./lm629.h: 343: x=(x<<1)+PORTDbits.RD5;
  3403  0003C6  BA83               	btfsc	131,5,c	;volatile
  3404  0003C8  EFE8  F001         	goto	u481
  3405  0003CC  EFEC  F001         	goto	u480
  3406  0003D0                     u481:
  3407  0003D0  6A02               	clrf	??_DATABUS^0,c
  3408  0003D2  2A02               	incf	??_DATABUS^0,f,c
  3409  0003D4  EFED  F001         	goto	u488
  3410  0003D8                     u480:
  3411  0003D8  6A02               	clrf	??_DATABUS^0,c
  3412  0003DA                     u488:
  3413  0003DA  5005               	movf	DATABUS@x^0,w,c
  3414  0003DC  0D02               	mullw	2
  3415  0003DE  50F3               	movf	243,w,c
  3416  0003E0  2402               	addwf	??_DATABUS^0,w,c
  3417  0003E2  6E05               	movwf	DATABUS@x^0,c
  3418  0003E4                     
  3419                           ;./lm629.h: 344: x=(x<<1)+PORTDbits.RD4;
  3420  0003E4  B883               	btfsc	131,4,c	;volatile
  3421  0003E6  EFF7  F001         	goto	u491
  3422  0003EA  EFFB  F001         	goto	u490
  3423  0003EE                     u491:
  3424  0003EE  6A02               	clrf	??_DATABUS^0,c
  3425  0003F0  2A02               	incf	??_DATABUS^0,f,c
  3426  0003F2  EFFC  F001         	goto	u498
  3427  0003F6                     u490:
  3428  0003F6  6A02               	clrf	??_DATABUS^0,c
  3429  0003F8                     u498:
  3430  0003F8  5005               	movf	DATABUS@x^0,w,c
  3431  0003FA  0D02               	mullw	2
  3432  0003FC  50F3               	movf	243,w,c
  3433  0003FE  2402               	addwf	??_DATABUS^0,w,c
  3434  000400  6E05               	movwf	DATABUS@x^0,c
  3435  000402                     
  3436                           ;./lm629.h: 345: x=(x<<1)+PORTCbits.RC7;
  3437  000402  BE82               	btfsc	130,7,c	;volatile
  3438  000404  EF06  F002         	goto	u501
  3439  000408  EF0A  F002         	goto	u500
  3440  00040C                     u501:
  3441  00040C  6A02               	clrf	??_DATABUS^0,c
  3442  00040E  2A02               	incf	??_DATABUS^0,f,c
  3443  000410  EF0B  F002         	goto	u508
  3444  000414                     u500:
  3445  000414  6A02               	clrf	??_DATABUS^0,c
  3446  000416                     u508:
  3447  000416  5005               	movf	DATABUS@x^0,w,c
  3448  000418  0D02               	mullw	2
  3449  00041A  50F3               	movf	243,w,c
  3450  00041C  2402               	addwf	??_DATABUS^0,w,c
  3451  00041E  6E05               	movwf	DATABUS@x^0,c
  3452  000420                     
  3453                           ;./lm629.h: 346: x=(x<<1)+PORTCbits.RC6;
  3454  000420  BC82               	btfsc	130,6,c	;volatile
  3455  000422  EF15  F002         	goto	u511
  3456  000426  EF19  F002         	goto	u510
  3457  00042A                     u511:
  3458  00042A  6A02               	clrf	??_DATABUS^0,c
  3459  00042C  2A02               	incf	??_DATABUS^0,f,c
  3460  00042E  EF1A  F002         	goto	u518
  3461  000432                     u510:
  3462  000432  6A02               	clrf	??_DATABUS^0,c
  3463  000434                     u518:
  3464  000434  5005               	movf	DATABUS@x^0,w,c
  3465  000436  0D02               	mullw	2
  3466  000438  50F3               	movf	243,w,c
  3467  00043A  2402               	addwf	??_DATABUS^0,w,c
  3468  00043C  6E05               	movwf	DATABUS@x^0,c
  3469  00043E                     l1823:
  3470                           
  3471                           ;./lm629.h: 348: return x;
  3472  00043E  5005               	movf	DATABUS@x^0,w,c
  3473  000440  0012               	return		;funcret
  3474  000442                     __end_of_DATABUS:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _chip_select *****************
  3478 ;; Defined at:
  3479 ;;		line 351 in file "./lm629.h"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;  chip            1    wreg     unsigned char 
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  chip            1    0[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;Total ram usage:        1 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 1
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_LM629_init
  3504 ;;		_all_break
  3505 ;;		_all_off
  3506 ;;		_forward
  3507 ;;		_reverse
  3508 ;;		_right
  3509 ;;		_left
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text19
  3514  000C46                     __ptext19:
  3515                           	callstack 0
  3516  000C46                     _chip_select:
  3517                           	callstack 28
  3518                           
  3519                           ;incstack = 0
  3520                           ;chip_select@chip stored from wreg
  3521  000C46  6E01               	movwf	chip_select@chip^0,c
  3522  000C48                     
  3523                           ;./lm629.h: 351: void chip_select(unsigned char chip);./lm629.h: 352: {;./lm629.h: 353: 
      +                           if(chip==0)
  3524  000C48  5001               	movf	chip_select@chip^0,w,c
  3525  000C4A  A4D8               	btfss	status,2,c
  3526  000C4C  EF2A  F006         	goto	u161
  3527  000C50  EF2C  F006         	goto	u160
  3528  000C54                     u161:
  3529  000C54  EF32  F006         	goto	l1017
  3530  000C58                     u160:
  3531  000C58                     
  3532                           ;./lm629.h: 354:  {;./lm629.h: 355:   PORTDbits.RD3=0;
  3533  000C58  9683               	bcf	131,3,c	;volatile
  3534                           
  3535                           ;./lm629.h: 356:   PORTBbits.RB2=1;
  3536  000C5A  8481               	bsf	129,2,c	;volatile
  3537                           
  3538                           ;./lm629.h: 357:   PORTAbits.RA0=1;
  3539  000C5C  8080               	bsf	128,0,c	;volatile
  3540                           
  3541                           ;./lm629.h: 358:   PORTBbits.RB4=1;
  3542  000C5E  8881               	bsf	129,4,c	;volatile
  3543                           
  3544                           ;./lm629.h: 359:  }
  3545  000C60  EF62  F006         	goto	l1029
  3546  000C64                     l1017:
  3547  000C64  0401               	decf	chip_select@chip^0,w,c
  3548  000C66  A4D8               	btfss	status,2,c
  3549  000C68  EF38  F006         	goto	u171
  3550  000C6C  EF3A  F006         	goto	u170
  3551  000C70                     u171:
  3552  000C70  EF40  F006         	goto	l1021
  3553  000C74                     u170:
  3554  000C74                     
  3555                           ;./lm629.h: 361:  {;./lm629.h: 362:   PORTDbits.RD3=1;
  3556  000C74  8683               	bsf	131,3,c	;volatile
  3557                           
  3558                           ;./lm629.h: 363:   PORTBbits.RB2=0;
  3559  000C76  9481               	bcf	129,2,c	;volatile
  3560                           
  3561                           ;./lm629.h: 364:   PORTAbits.RA0=1;
  3562  000C78  8080               	bsf	128,0,c	;volatile
  3563                           
  3564                           ;./lm629.h: 365:   PORTBbits.RB4=1;
  3565  000C7A  8881               	bsf	129,4,c	;volatile
  3566                           
  3567                           ;./lm629.h: 366:  }
  3568  000C7C  EF62  F006         	goto	l1029
  3569  000C80                     l1021:
  3570  000C80  0E02               	movlw	2
  3571  000C82  1801               	xorwf	chip_select@chip^0,w,c
  3572  000C84  A4D8               	btfss	status,2,c
  3573  000C86  EF47  F006         	goto	u181
  3574  000C8A  EF49  F006         	goto	u180
  3575  000C8E                     u181:
  3576  000C8E  EF4F  F006         	goto	l1025
  3577  000C92                     u180:
  3578  000C92                     
  3579                           ;./lm629.h: 368:  {;./lm629.h: 369:   PORTDbits.RD3=1;
  3580  000C92  8683               	bsf	131,3,c	;volatile
  3581                           
  3582                           ;./lm629.h: 370:   PORTBbits.RB2=1;
  3583  000C94  8481               	bsf	129,2,c	;volatile
  3584                           
  3585                           ;./lm629.h: 371:   PORTAbits.RA0=0;
  3586  000C96  9080               	bcf	128,0,c	;volatile
  3587                           
  3588                           ;./lm629.h: 372:   PORTBbits.RB4=1;
  3589  000C98  8881               	bsf	129,4,c	;volatile
  3590                           
  3591                           ;./lm629.h: 373:  }
  3592  000C9A  EF62  F006         	goto	l1029
  3593  000C9E                     l1025:
  3594  000C9E  0E03               	movlw	3
  3595  000CA0  1801               	xorwf	chip_select@chip^0,w,c
  3596  000CA2  A4D8               	btfss	status,2,c
  3597  000CA4  EF56  F006         	goto	u191
  3598  000CA8  EF58  F006         	goto	u190
  3599  000CAC                     u191:
  3600  000CAC  EF5E  F006         	goto	l144
  3601  000CB0                     u190:
  3602  000CB0                     
  3603                           ;./lm629.h: 375:  {;./lm629.h: 376:   PORTDbits.RD3=1;
  3604  000CB0  8683               	bsf	131,3,c	;volatile
  3605                           
  3606                           ;./lm629.h: 377:   PORTBbits.RB2=1;
  3607  000CB2  8481               	bsf	129,2,c	;volatile
  3608                           
  3609                           ;./lm629.h: 378:   PORTAbits.RA0=1;
  3610  000CB4  8080               	bsf	128,0,c	;volatile
  3611                           
  3612                           ;./lm629.h: 379:   PORTBbits.RB4=0;
  3613  000CB6  9881               	bcf	129,4,c	;volatile
  3614                           
  3615                           ;./lm629.h: 380:  }
  3616  000CB8  EF62  F006         	goto	l1029
  3617  000CBC                     l144:
  3618                           
  3619                           ;./lm629.h: 382:  {;./lm629.h: 383:   PORTDbits.RD3=1;
  3620  000CBC  8683               	bsf	131,3,c	;volatile
  3621                           
  3622                           ;./lm629.h: 384:   PORTBbits.RB2=1;
  3623  000CBE  8481               	bsf	129,2,c	;volatile
  3624                           
  3625                           ;./lm629.h: 385:   PORTAbits.RA0=1;
  3626  000CC0  8080               	bsf	128,0,c	;volatile
  3627                           
  3628                           ;./lm629.h: 386:   PORTBbits.RB4=1;
  3629  000CC2  8881               	bsf	129,4,c	;volatile
  3630  000CC4                     l1029:
  3631                           
  3632                           ;./lm629.h: 389:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3633  000CC4  0E35               	movlw	53
  3634  000CC6                     u847:
  3635  000CC6  2EE8               	decfsz	wreg,f,c
  3636  000CC8  D7FE               	bra	u847
  3637  000CCA  F000               	nop	
  3638  000CCC  0012               	return		;funcret
  3639  000CCE                     __end_of_chip_select:
  3640                           	callstack 0
  3641                           
  3642 ;; *************** function _SPI *****************
  3643 ;; Defined at:
  3644 ;;		line 38 in file "./spi.h"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  1    wreg      void 
  3651 ;; Registers used:
  3652 ;;		None
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;Total ram usage:        0 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		Interrupt level 2
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	intcode
  3672  000008                     __pintcode:
  3673                           	callstack 0
  3674  000008                     _SPI:
  3675                           	callstack 25
  3676                           
  3677                           ;incstack = 0
  3678  000008  820C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3679  00000A                     
  3680                           ;./spi.h: 40: if(PIR1bits.SSP1IF&&PIE1bits.SSP1IE)
  3681  00000A  A69E               	btfss	158,3,c	;volatile
  3682  00000C  EF0A  F000         	goto	i2u32_41
  3683  000010  EF0C  F000         	goto	i2u32_40
  3684  000014                     i2u32_41:
  3685  000014  EF16  F000         	goto	i2l190
  3686  000018                     i2u32_40:
  3687  000018  A69D               	btfss	157,3,c	;volatile
  3688  00001A  EF11  F000         	goto	i2u33_41
  3689  00001E  EF13  F000         	goto	i2u33_40
  3690  000022                     i2u33_41:
  3691  000022  EF16  F000         	goto	i2l190
  3692  000026                     i2u33_40:
  3693  000026                     
  3694                           ;./spi.h: 41: {;./spi.h: 43: spi_read_data=SSP1BUF;
  3695  000026  CFC9 F00B          	movff	4041,_spi_read_data	;volatile
  3696                           
  3697                           ;./spi.h: 44: SSP1IF=0;
  3698  00002A  969E               	bcf	3998,3,c	;volatile
  3699  00002C                     i2l190:
  3700  00002C  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3701  00002E  0011               	retfie		f
  3702  000030                     __end_of_SPI:
  3703                           	callstack 0
  3704  0000                     
  3705                           	psect	rparam
  3706  0000                     
  3707                           	psect	temp
  3708  00000C                     btemp:
  3709                           	callstack 0
  3710  00000C                     	ds	1
  3711  0000                     int$flags	set	btemp
  3712  0000                     wtemp8	set	btemp+1
  3713  0000                     ttemp5	set	btemp+1
  3714  0000                     ttemp6	set	btemp+4
  3715  0000                     ttemp7	set	btemp+8
  3716                           
  3717                           	psect	idloc
  3718                           
  3719                           ;Config register IDLOC0 @ 0x200000
  3720                           ;	unspecified, using default values
  3721  200000                     	org	2097152
  3722  200000  FF                 	db	255
  3723                           
  3724                           ;Config register IDLOC1 @ 0x200001
  3725                           ;	unspecified, using default values
  3726  200001                     	org	2097153
  3727  200001  FF                 	db	255
  3728                           
  3729                           ;Config register IDLOC2 @ 0x200002
  3730                           ;	unspecified, using default values
  3731  200002                     	org	2097154
  3732  200002  FF                 	db	255
  3733                           
  3734                           ;Config register IDLOC3 @ 0x200003
  3735                           ;	unspecified, using default values
  3736  200003                     	org	2097155
  3737  200003  FF                 	db	255
  3738                           
  3739                           ;Config register IDLOC4 @ 0x200004
  3740                           ;	unspecified, using default values
  3741  200004                     	org	2097156
  3742  200004  FF                 	db	255
  3743                           
  3744                           ;Config register IDLOC5 @ 0x200005
  3745                           ;	unspecified, using default values
  3746  200005                     	org	2097157
  3747  200005  FF                 	db	255
  3748                           
  3749                           ;Config register IDLOC6 @ 0x200006
  3750                           ;	unspecified, using default values
  3751  200006                     	org	2097158
  3752  200006  FF                 	db	255
  3753                           
  3754                           ;Config register IDLOC7 @ 0x200007
  3755                           ;	unspecified, using default values
  3756  200007                     	org	2097159
  3757  200007  FF                 	db	255
  3758                           
  3759                           	psect	config
  3760                           
  3761                           ; Padding undefined space
  3762  300000                     	org	3145728
  3763  300000  FF                 	db	255
  3764                           
  3765                           ;Config register CONFIG1H @ 0x300001
  3766                           ;	unspecified, using default values
  3767                           ;	Oscillator Selection bits
  3768                           ;	FOSC = 0x5, unprogrammed default
  3769                           ;	4X PLL Enable
  3770                           ;	PLLCFG = 0x0, unprogrammed default
  3771                           ;	Primary clock enable bit
  3772                           ;	PRICLKEN = 0x1, unprogrammed default
  3773                           ;	Fail-Safe Clock Monitor Enable bit
  3774                           ;	FCMEN = 0x0, unprogrammed default
  3775                           ;	Internal/External Oscillator Switchover bit
  3776                           ;	IESO = 0x0, unprogrammed default
  3777  300001                     	org	3145729
  3778  300001  25                 	db	37
  3779                           
  3780                           ;Config register CONFIG2L @ 0x300002
  3781                           ;	unspecified, using default values
  3782                           ;	Power-up Timer Enable bit
  3783                           ;	PWRTEN = 0x1, unprogrammed default
  3784                           ;	Brown-out Reset Enable bits
  3785                           ;	BOREN = 0x3, unprogrammed default
  3786                           ;	Brown Out Reset Voltage bits
  3787                           ;	BORV = 0x3, unprogrammed default
  3788  300002                     	org	3145730
  3789  300002  1F                 	db	31
  3790                           
  3791                           ;Config register CONFIG2H @ 0x300003
  3792                           ;	unspecified, using default values
  3793                           ;	Watchdog Timer Enable bits
  3794                           ;	WDTEN = 0x3, unprogrammed default
  3795                           ;	Watchdog Timer Postscale Select bits
  3796                           ;	WDTPS = 0xF, unprogrammed default
  3797  300003                     	org	3145731
  3798  300003  3F                 	db	63
  3799                           
  3800                           ; Padding undefined space
  3801  300004                     	org	3145732
  3802  300004  FF                 	db	255
  3803                           
  3804                           ;Config register CONFIG3H @ 0x300005
  3805                           ;	unspecified, using default values
  3806                           ;	CCP2 MUX bit
  3807                           ;	CCP2MX = 0x1, unprogrammed default
  3808                           ;	PORTB A/D Enable bit
  3809                           ;	PBADEN = 0x1, unprogrammed default
  3810                           ;	P3A/CCP3 Mux bit
  3811                           ;	CCP3MX = 0x1, unprogrammed default
  3812                           ;	HFINTOSC Fast Start-up
  3813                           ;	HFOFST = 0x1, unprogrammed default
  3814                           ;	Timer3 Clock input mux bit
  3815                           ;	T3CMX = 0x1, unprogrammed default
  3816                           ;	ECCP2 B output mux bit
  3817                           ;	P2BMX = 0x1, unprogrammed default
  3818                           ;	MCLR Pin Enable bit
  3819                           ;	MCLRE = 0x1, unprogrammed default
  3820  300005                     	org	3145733
  3821  300005  BF                 	db	191
  3822                           
  3823                           ;Config register CONFIG4L @ 0x300006
  3824                           ;	unspecified, using default values
  3825                           ;	Stack Full/Underflow Reset Enable bit
  3826                           ;	STVREN = 0x1, unprogrammed default
  3827                           ;	Single-Supply ICSP Enable bit
  3828                           ;	LVP = 0x1, unprogrammed default
  3829                           ;	Extended Instruction Set Enable bit
  3830                           ;	XINST = 0x0, unprogrammed default
  3831                           ;	Background Debug
  3832                           ;	DEBUG = 0x1, unprogrammed default
  3833  300006                     	org	3145734
  3834  300006  85                 	db	133
  3835                           
  3836                           ; Padding undefined space
  3837  300007                     	org	3145735
  3838  300007  FF                 	db	255
  3839                           
  3840                           ;Config register CONFIG5L @ 0x300008
  3841                           ;	unspecified, using default values
  3842                           ;	Code Protection Block 0
  3843                           ;	CP0 = 0x1, unprogrammed default
  3844                           ;	Code Protection Block 1
  3845                           ;	CP1 = 0x1, unprogrammed default
  3846                           ;	Code Protection Block 2
  3847                           ;	CP2 = 0x1, unprogrammed default
  3848                           ;	Code Protection Block 3
  3849                           ;	CP3 = 0x1, unprogrammed default
  3850  300008                     	org	3145736
  3851  300008  0F                 	db	15
  3852                           
  3853                           ;Config register CONFIG5H @ 0x300009
  3854                           ;	unspecified, using default values
  3855                           ;	Boot Block Code Protection bit
  3856                           ;	CPB = 0x1, unprogrammed default
  3857                           ;	Data EEPROM Code Protection bit
  3858                           ;	CPD = 0x1, unprogrammed default
  3859  300009                     	org	3145737
  3860  300009  C0                 	db	192
  3861                           
  3862                           ;Config register CONFIG6L @ 0x30000A
  3863                           ;	unspecified, using default values
  3864                           ;	Write Protection Block 0
  3865                           ;	WRT0 = 0x1, unprogrammed default
  3866                           ;	Write Protection Block 1
  3867                           ;	WRT1 = 0x1, unprogrammed default
  3868                           ;	Write Protection Block 2
  3869                           ;	WRT2 = 0x1, unprogrammed default
  3870                           ;	Write Protection Block 3
  3871                           ;	WRT3 = 0x1, unprogrammed default
  3872  30000A                     	org	3145738
  3873  30000A  0F                 	db	15
  3874                           
  3875                           ;Config register CONFIG6H @ 0x30000B
  3876                           ;	unspecified, using default values
  3877                           ;	Configuration Register Write Protection bit
  3878                           ;	WRTC = 0x1, unprogrammed default
  3879                           ;	Boot Block Write Protection bit
  3880                           ;	WRTB = 0x1, unprogrammed default
  3881                           ;	Data EEPROM Write Protection bit
  3882                           ;	WRTD = 0x1, unprogrammed default
  3883  30000B                     	org	3145739
  3884  30000B  E0                 	db	224
  3885                           
  3886                           ;Config register CONFIG7L @ 0x30000C
  3887                           ;	unspecified, using default values
  3888                           ;	Table Read Protection Block 0
  3889                           ;	EBTR0 = 0x1, unprogrammed default
  3890                           ;	Table Read Protection Block 1
  3891                           ;	EBTR1 = 0x1, unprogrammed default
  3892                           ;	Table Read Protection Block 2
  3893                           ;	EBTR2 = 0x1, unprogrammed default
  3894                           ;	Table Read Protection Block 3
  3895                           ;	EBTR3 = 0x1, unprogrammed default
  3896  30000C                     	org	3145740
  3897  30000C  0F                 	db	15
  3898                           
  3899                           ;Config register CONFIG7H @ 0x30000D
  3900                           ;	unspecified, using default values
  3901                           ;	Boot Block Table Read Protection bit
  3902                           ;	EBTRB = 0x1, unprogrammed default
  3903  30000D                     	org	3145741
  3904  30000D  40                 	db	64
  3905                           tosu	equ	0xFFF
  3906                           tosh	equ	0xFFE
  3907                           tosl	equ	0xFFD
  3908                           stkptr	equ	0xFFC
  3909                           pclatu	equ	0xFFB
  3910                           pclath	equ	0xFFA
  3911                           pcl	equ	0xFF9
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           prodh	equ	0xFF4
  3917                           prodl	equ	0xFF3
  3918                           indf0	equ	0xFEF
  3919                           postinc0	equ	0xFEE
  3920                           postdec0	equ	0xFED
  3921                           preinc0	equ	0xFEC
  3922                           plusw0	equ	0xFEB
  3923                           fsr0h	equ	0xFEA
  3924                           fsr0l	equ	0xFE9
  3925                           wreg	equ	0xFE8
  3926                           indf1	equ	0xFE7
  3927                           postinc1	equ	0xFE6
  3928                           postdec1	equ	0xFE5
  3929                           preinc1	equ	0xFE4
  3930                           plusw1	equ	0xFE3
  3931                           fsr1h	equ	0xFE2
  3932                           fsr1l	equ	0xFE1
  3933                           bsr	equ	0xFE0
  3934                           indf2	equ	0xFDF
  3935                           postinc2	equ	0xFDE
  3936                           postdec2	equ	0xFDD
  3937                           preinc2	equ	0xFDC
  3938                           plusw2	equ	0xFDB
  3939                           fsr2h	equ	0xFDA
  3940                           fsr2l	equ	0xFD9
  3941                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LM629_init
    _right->_check_busy
    _right->_write_data
    _reverse->_check_busy
    _reverse->_write_data
    _left->_check_busy
    _left->_write_data
    _forward->_check_busy
    _forward->_write_data
    _motor_off->_check_busy
    _motor_off->_write_data
    _motor_break->_check_busy
    _motor_break->_write_data
    _LM629_init->_check_busy
    _LM629_init->_write_data
    _filter_module->_check_busy
    _filter_module->_write_data
    _write_data->_DATABUS
    _write_command->_DATABUS
    _check_busy->_read_status
    _read_status->_DATABUS

Critical Paths under _SPI in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SPI in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SPI in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SPI in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SPI in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SPI in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SPI in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SPI in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SPI in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SPI in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SPI in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SPI in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SPI in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  130056
                                              9 COMRAM     1     1      0
                         _LM629_init
                          _all_break
                            _all_off
                            _forward
                               _left
                            _reverse
                              _right
                           _spi_data
                     _spi_slave_init
 ---------------------------------------------------------------------------------
 (1) _spi_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _right                                                0     0      0   21440
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse                                              0     0      0   21440
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _left                                                 0     0      0   21440
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0   21440
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_off                                              0     0      0   10750
                        _chip_select
                          _motor_off
 ---------------------------------------------------------------------------------
 (2) _motor_off                                            0     0      0   10690
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_break                                            0     0      0   10750
                        _chip_select
                        _motor_break
 ---------------------------------------------------------------------------------
 (2) _motor_break                                          0     0      0   10690
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _LM629_init                                           2     2      0   22625
                                              7 COMRAM     2     2      0
                         _check_busy
                        _chip_select
                      _filter_module
                        _read_status
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _filter_module                                        0     0      0   10690
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           2     1      1    8839
                                              5 COMRAM     2     1      1
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (2) _write_command                                        1     1      0     913
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _check_busy                                           1     1      0     938
                                              6 COMRAM     1     1      0
                        _read_status
 ---------------------------------------------------------------------------------
 (4) _read_status                                          1     1      0     914
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _DATABUS_DIR                                          1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATABUS                                              5     4      1     861
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _chip_select                                          1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SPI                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM629_init
     _check_busy
       _read_status
         _DATABUS
         _DATABUS_DIR
     _chip_select
     _filter_module
       _check_busy
       _write_command
         _DATABUS
         _DATABUS_DIR
       _write_data
         _DATABUS
         _DATABUS_DIR
     _read_status
     _write_command
     _write_data
   _all_break
     _chip_select
     _motor_break
       _check_busy
       _write_command
       _write_data
   _all_off
     _chip_select
     _motor_off
       _check_busy
       _write_command
       _write_data
   _forward
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _spi_data
   _spi_slave_init

 _SPI (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A       B       1       11.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRllhh       24      0       0      48        0.0%
BITBIGSFRhhhhll     22      0       0      43        0.0%
BITBIGSFRhhhhhl     21      0       0      38        0.0%
BITBIGSFRhl          E      0       0      45        0.0%
BITBIGSFRhhhhhh      D      0       0      37        0.0%
BITBIGSFRlhl         B      0       0      47        0.0%
BITBIGSFRlhh         6      0       0      46        0.0%
BITBIGSFRhhhl        6      0       0      44        0.0%
BITBIGSFRhhhhhl      4      0       0      39        0.0%
BITBIGSFRllll        4      0       0      51        0.0%
BITBIGSFRhhhhll      3      0       0      42        0.0%
BITBIGSFRlllh        2      0       0      50        0.0%
BITBIGSFRllhl        1      0       0      49        0.0%
BITBIGSFRhhhhlh      1      0       0      41        0.0%
BITBIGSFRhhhhhl      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      33        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 10 14:32:25 2022

                     l96 0F00                       l99 0E2A                       u10 0D98  
                     u11 0D94                       u20 0DB8                       u21 0DB4  
          _filter_module 0CCE                      l105 0D84                      l123 024E  
                    l108 0DFC                      l213 0C3E                      l135 0440  
                    l144 0CBC                      l152 0EEA                      l129 0DC4  
                    l161 0D28                      l146 0CCC                      l155 0E7E  
                    l149 0EC6                      l173 0B28                      l158 0E54  
                    l182 096E                      l176 07B4                      l193 0EA2  
                    l179 05FA                      l196 0F14                      l893 0D88  
                    l895 0D98                      l897 0DA8                      l899 0DB8  
                    _GIE 007F97                      u160 0C58                      u400 0262  
                    u161 0C54                      u401 025E                      u170 0C74  
                    u171 0C70                      u180 0C92                      u500 0414  
                    u181 0C8E                      u501 040C                      u190 0CB0  
                    u510 0432                      u191 0CAC                      u511 042A  
                    u415 02F8                      u440 0364                      u520 0F00  
                    u600 0182                      u441 0360                      u425 031C  
                    u521 0EFC                      u601 017E                      u450 037E  
                    u610 01C6                      u530 0086                      u451 0376  
                    u435 033C                      u611 01C2                      u531 0082  
                    u508 0416                      u460 039C                      u620 01D8  
                    u540 0098                      u700 0C36                      u461 0394  
                    u621 01D4                      u541 0094                      u701 0C32  
                    u518 0434                      u470 03BA                      u630 0210  
                    u550 00D0                      u471 03B2                      u631 020C  
                    u551 00CC                      u480 03D8                      u640 0222  
                    u560 00E2                      u481 03D0                      u641 021E  
                    u561 00DE                      u490 03F6                      u458 0380  
                    u570 0126                      u650 0BA4                      u491 03EE  
                    u571 0122                      u651 0BA0                      u468 039E  
                    u580 0138                      u660 0BC2                      u581 0134  
                    u717 004E                      u661 0BBE                      u478 03BC  
                    u590 0170                      u670 0BE0                      u807 0D2E  
                    u591 016C                      u727 0058                      u671 0BDC  
                    u488 03DA                      u680 0BFE                      u817 0D5E  
                    u737 0066                      u681 0BFA                      u498 03F8  
                    u690 0C1C                      u827 0DF6                      u747 00EE  
                    u691 0C18                      u837 0E0E                      u757 00F8  
                    u847 0CC6                      u767 0106                      u777 018E  
                    u787 0198                      u797 01A6                      _SPI 0008  
        __end_of_DATABUS 0442                      wreg 000FE8                     ?_SPI 0001  
                   l1021 0C80                     l1013 0C48                     l1023 0C92  
                   l1015 0C58                     l1025 0C9E                     l1017 0C64  
                   l2001 019E                     l1027 0CB0                     l1019 0C74  
                   l2003 01A0                     l1029 0CC4                     l2005 01AE  
                   l2101 09F4                     l2031 0240                     l2023 0226  
                   l2015 01DC                     l2007 01B4                     l2111 0A1A  
                   l2103 09FE                     l2033 024A                     l2025 022C  
                   l2017 01FE                     l2009 01C6                     l2041 0E6A  
                   l2121 0A3A                     l2113 0A1E                     l2105 0A02  
                   l2201 061E                     l2027 0230                     l2019 0210  
                   l2043 0E70                     l2035 0E56                     l2051 0E36  
                   l2131 0A5C                     l2123 0A40                     l2115 0A28  
                   l2107 0A0C                     l2211 063E                     l2203 0622  
                   l2029 023A                     l2045 0E7A                     l2037 0E5C  
                   l2053 0E40                     l2141 0A7C                     l2133 0A60  
                   l2125 0A44                     l2117 0A32                     l2109 0A10  
                   l2061 0976                     l2301 0770                     l2221 0664  
                   l2213 0648                     l2205 062C                     l2039 0E60  
                   l2055 0E46                     l2047 0E2C                     l2151 0A9E  
                   l2143 0A86                     l2135 0A6A                     l2127 0A4E  
                   l2119 0A36                     l2071 0992                     l2063 097A  
                   l2311 079A                     l2303 077A                     l2231 0680  
                   l2223 0668                     l2215 064C                     l2207 0630  
                   l2057 0E50                     l2049 0E32                     l2161 0ABE  
                   l2153 0AA2                     l2145 0A90                     l2137 0A6E  
                   l2129 0A52                     l2081 09B2                     l2073 0996  
                   l2065 097E                     l2313 07A0                     l2305 0780  
                   l2241 06A6                     l2233 068A                     l2225 066E  
                   l2217 0656                     l2209 063A                     l2401 054E  
                   l2321 0448                     l2171 0AE4                     l2163 0AC8  
                   l2155 0AAC                     l2147 0A94                     l2139 0A78  
                   l2091 09D8                     l2083 09BC                     l2075 09A0  
                   l2067 0984                     l2059 0970                     l2315 07AA  
                   l2307 078A                     l2251 06C6                     l2243 06AA  
                   l2235 068E                     l2227 0672                     l2219 0660  
                   l2411 0570                     l2403 0558                     l2331 0464  
                   l2323 044C                     l2181 0B0E                     l2173 0AEE  
                   l2165 0ACC                     l2157 0AB0                     l2149 0A98  
                   l2093 09DC                     l2085 09C0                     l2077 09A4  
                   l2069 0988                     l2501 0860                     l2317 07B0  
                   l2309 0790                     l2261 06E8                     l2253 06CC  
                   l2245 06B4                     l2237 0698                     l2229 067C  
                   l2421 0590                     l2413 0574                     l2405 0562  
                   l2341 0484                     l2333 0468                     l2325 0450  
                   l1701 0E86                     l2183 0B14                     l2175 0AF4  
                   l2167 0AD6                     l2159 0ABA                     l2095 09E2  
                   l2087 09CA                     l2079 09AE                     l2511 0880  
                   l2503 0864                     l2271 0708                     l2263 06EC  
                   l2255 06D0                     l2247 06BE                     l2239 069C  
                   l2191 0602                     l2431 05B6                     l2423 059A  
                   l2415 057E                     l2407 0566                     l2351 04AA  
                   l2343 048E                     l2335 0472                     l2327 0456  
                   l2319 0442                     l1711 0F10                     l1703 0E9A  
                   l1801 0262                     l2185 0B1E                     l2177 0AFE  
                   l2169 0ADA                     l2097 09E6                     l2089 09D4  
                   l2521 08A2                     l2513 0886                     l2505 086E  
                   l2281 072A                     l2273 0712                     l2265 06F6  
                   l2257 06DA                     l2249 06C2                     l2193 0606  
                   l2441 05E0                     l2433 05C0                     l2425 059E  
                   l2417 0582                     l2409 056A                     l2361 04C6  
                   l2353 04AE                     l2345 0492                     l2337 0476  
                   l2329 045A                     l1705 0E9C                     l1811 038A  
                   l1803 034C                     l2187 0B24                     l2179 0B04  
                   l2099 09F0                     l2531 08C2                     l2523 08A6  
                   l2515 088A                     l2507 0878                     l2451 07BC  
                   l2291 074A                     l2283 072E                     l2275 071C  
                   l2267 06FA                     l2259 06DE                     l2195 060A  
                   l2443 05E6                     l2435 05C6                     l2427 05A8  
                   l2419 058C                     l2371 04EC                     l2363 04D0  
                   l2355 04B4                     l2347 049C                     l2339 0480  
                   l1707 0E9E                     l1821 0420                     l1813 03A8  
                   l1805 0354                     l1901 0DE6                     l2541 08E4  
                   l2533 08CC                     l2525 08B0                     l2517 0894  
                   l2509 087C                     l2461 07D8                     l2453 07C0  
                   l2293 0754                     l2285 0738                     l2277 0720  
                   l2269 0704                     l2197 0610                     l2189 05FC  
                   l2445 05F0                     l2437 05D0                     l2429 05AC  
                   l2381 050C                     l2373 04F0                     l2365 04D4  
                   l2357 04B8                     l2349 04A6                     l1709 0EA0  
                   l2621 0B2C                     l1815 03C6                     l1807 0364  
                   l1823 043E                     l1831 0E06                     l1903 0DEC  
                   l1911 0CCE                     l2551 0904                     l2543 08E8  
                   l2535 08D6                     l2527 08B4                     l2519 0898  
                   l2471 07F8                     l2463 07DC                     l2455 07C4  
                   l2295 0758                     l2287 073C                     l2279 0724  
                   l2199 0614                     l2447 05F6                     l2439 05D6  
                   l2391 052E                     l2383 0512                     l2375 04FA  
                   l2367 04DE                     l2359 04C2                     l2631 0B8E  
                   l2623 0B7E                     l1817 03E4                     l1809 036C  
                   l1841 0E20                     l1833 0E0A                     l1905 0DEE  
                   l1921 0038                     l1913 0EA4                     l2561 092A  
                   l2553 090E                     l2545 08F2                     l2537 08DA  
                   l2529 08BE                     l2481 081E                     l2473 0802  
                   l2465 07E6                     l2457 07CA                     l2449 07B6  
                   l2297 0762                     l2289 0746                     l2393 0532  
                   l2385 0516                     l2377 0504                     l2369 04E2  
                   l2641 0BCE                     l2633 0B92                     l2625 0B82  
                   l1819 0402                     l1843 0E26                     l1835 0E0C  
                   l1827 0DFE                     l1907 0DF2                     l1931 0044  
                   l1923 003C                     l1915 0EC8                     l2571 0954  
                   l2563 0934                     l2555 0912                     l2547 08F6  
                   l2539 08DE                     l2491 083A                     l2483 0822  
                   l2475 0806                     l2467 07EA                     l2459 07CE  
                   l2299 0766                     l2395 053C                     l2387 0520  
                   l2379 0508                     l2651 0C1C                     l2643 0BE0  
                   l2635 0BA4                     l2627 0B86                     l2619 0B2A  
        ?_spi_slave_init 0001                     l1845 0E28                     l1837 0E12  
                   l1829 0E04                     l1853 0EF2                     l1909 0DF4  
                   l1861 0D3C                     l1941 005E                     l1933 0046  
                   l1925 003E                     l1917 0034                     l2573 095A  
                   l2565 093A                     l2557 091C                     l2549 0900  
                   l2493 0844                     l2485 0828                     l2477 0810  
                   l2469 07F4                     l2397 0540                     l2389 0524  
                   l2653 0C24                     l2645 0BEC                     l2637 0BB0  
                   l2629 0B88                     l1839 0E1E                     l1871 0D5A  
                   l1863 0D40                     l1855 0D2C                     l1943 0060  
                   l1935 004C                     l1927 0040                     l1919 0034  
                   l2575 0964                     l2567 0944                     l2559 0920  
                   l2495 0848                     l2487 082C                     l2479 081A  
                   l2399 054A                     l2655 0C36                     l2647 0BFE  
                   l2639 0BC2                     l1849 0EEC                     l1881 0D76  
                   l1873 0D5C                     l1865 0D42                     l1857 0D34  
                   l1945 006E                     l1937 0054                     l1929 0042  
                   l2577 096A                     l2569 094A                     l2497 0852  
                   l2489 0836                     l2649 0C0A                     l1891 0DCE  
                   l1883 0D7C                     l1875 0D64                     l1867 0D4A  
                   l1859 0D3A                     l1971 00FE                     l1963 00E6  
                   l1955 009C                     l1947 0074                     l1939 0056  
                   l2499 0856                     l1699 0E80                     l1893 0DD0  
                   l1885 0D7E                     l1877 0D66                     l1869 0D54  
                   l1973 0100                     l1965 00EC                     l1957 00BE  
                   l1949 0086                     l1799 0252                     l1895 0DD4  
                   l1887 0D82                     l1879 0D6C                     l1975 010E  
                   l1967 00F4                     l1959 00D0                     l1897 0DD6  
                   l1889 0DC8                     l1993 0186                     l1985 013C  
                   l1977 0114                     l1969 00F6                     l1899 0DDC  
                   l1995 018C                     l1987 015E                     l1979 0126  
                   l1997 0194                     l1989 0170                     l1999 0196  
                   _IPEN 007E87                     _PEIE 007F96                     _main 0B2A  
                   _left 07B6                     btemp 000C                     prodl 000FF3  
                   start 0030             ___param_bank 000000          spi_data@tx_data 0001  
                  ??_SPI 0001           ?_filter_module 0001                    ?_main 0001  
                  ?_left 0001                    i2l190 002C                    _PORTB 000F81  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95          __end_of_all_off 0E56          __end_of_forward 0B2A  
                  _right 0442             ?_read_status 0001          __end_of_reverse 07B6  
                  ttemp5 000D                    ttemp6 0010                    ttemp7 0014  
                  status 000FD8                    wtemp8 000D          write_data@byte1 0007  
        write_data@byte2 0006          __initialization 0F02             __end_of_main 0C46  
           __end_of_left 0970                ??_DATABUS 0002                   ??_main 000A  
                 ??_left 0008            __activetblptr 000000        main@received_data 000A  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   ?_right 0001  
                 _ANSELA 000F38                   _ANSELB 000F39                   _ANSELC 000F3A  
                 _ANSELD 000F3B                   _ANSELE 000F3C                   i2l1753 000A  
                 i2l1755 0018                   i2l1757 0026                   _INTCON 000FF2  
      read_status@status 0006                   _SRCON0 000F47                   _SSP1IE 007CEB  
                 _SSP1IF 007CF3          ??_filter_module 0008                ??_all_off 0008  
                 isa$std 000001             ?_motor_break 0001             ??_LM629_init 0008  
              ??_forward 0008         __end_of_spi_data 0F16                ??_reverse 0008  
             __accesstop 0060  __end_of__initialization 0F04     write_command@command 0006  
          ___rparam_used 000001           __pcstackCOMRAM 0001       __end_of_LM629_init 0250  
          __end_of_right 05FC         ??_spi_slave_init 0001                  ??_right 0008  
             _check_busy 0EEC                  _CM1CON0 000F79                  _CM2CON0 000F78  
                _DATABUS 0250                  _HLVDCON 000F9C            ??_DATABUS_DIR 0001  
                i2u32_40 0018                  i2u32_41 0014                  i2u33_40 0026  
                i2u33_41 0022                  _SSP1BUF 000FC9                  _SSPCON1 000FC6  
                _SSPSTAT 000FC7        __end_of_all_break 0E80            _write_command 0DC6  
                __Hparam 0000                  __Lparam 0000                ?_spi_data 0001  
           DATABUS@byte0 0001                  __pcinit 0F02                  _all_off 0E2C  
                __ramtop 1000                  __ptext0 0B2A                  __ptext1 0E80  
                __ptext2 0F0E                  __ptext3 0442                  __ptext4 05FC  
                __ptext5 07B6                  __ptext6 0970                  __ptext7 0E2C  
                __ptext8 0EA4                  __ptext9 0E56                  _forward 0970  
                _reverse 05FC     end_of_initialization 0F04              ?_check_busy 0001  
    __end_of_DATABUS_DIR 0DC6           ?_write_command 0001        __end_of_motor_off 0EC8  
          ??_chip_select 0001               ??_spi_data 0001                _PORTAbits 000F80  
              _PORTBbits 000F81                _PORTCbits 000F82                _PORTDbits 000F83  
        chip_select@chip 0001                _TRISAbits 000F92                _TRISCbits 000F94  
             _write_data 0D2A    __end_of_filter_module 0D2A      __end_of_chip_select 0CCE  
    start_initialization 0F02              __end_of_SPI 0030              _DATABUS_DIR 0D86  
        ??_write_command 0006                 DATABUS@x 0005                 ?_DATABUS 0001  
            __pbssCOMRAM 000B            ??_read_status 0006           DATABUS_DIR@dir 0001  
              _all_break 0E56              _chip_select 0C46                __pintcode 0008  
            ?_write_data 0006                 ?_all_off 0001                 ?_forward 0001  
               ?_reverse 0001              DATABUS@dir1 0004             ??_check_busy 0007  
               _CTMUCONH 000F45      __end_of_read_status 0E2C                 _PIE1bits 000F9D  
             ?_all_break 0001                 _PIR1bits 000F9E                _motor_off 0EA4  
               _SSP1CON1 000FC6                 _SSP1CON3 000FCB                 _SSP2CON1 000F6C  
               _VREFCON0 000F42                 _VREFCON1 000F41            ??_motor_break 0008  
     __end_of_check_busy 0F02                 __Hrparam 0000                 __Lrparam 0000  
             ?_motor_off 0001              check_busy@x 0007               _LM629_init 0034  
    __end_of_motor_break 0EEC             ?_DATABUS_DIR 0001                 __ptext10 0EC8  
               __ptext11 0034                 __ptext12 0CCE                 __ptext13 0D2A  
               __ptext14 0DC6                 __ptext15 0EEC                 __ptext16 0DFE  
               __ptext17 0D86                 __ptext18 0250                 __ptext19 0C46  
            _read_status 0DFE              ??_all_break 0008                 isa$xinst 000000  
               _spi_data 0F0E                 int$flags 000C              LM629_init@x 0009  
               intlevel2 0000           _spi_slave_init 0E80    __end_of_write_command 0DFE  
          _spi_read_data 000B             ?_chip_select 0001              ??_motor_off 0008  
           ??_write_data 0007              _motor_break 0EC8              ?_LM629_init 0001  
 __end_of_spi_slave_init 0EA4       __end_of_write_data 0D86  
