

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 10 22:15:26 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38  0000                     
    39                           ; Version 2.35
    40                           ; Generated 05/05/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F46K22 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISB	set	3987
    76  0000                     _TRISD	set	3989
    77  0000                     _TRISCbits	set	3988
    78  0000                     _TRISAbits	set	3986
    79  0000                     _SSPCON1	set	4038
    80  0000                     _PORTBbits	set	3969
    81  0000                     _SSP1IF	set	31987
    82  0000                     _GIE	set	32663
    83  0000                     _PEIE	set	32662
    84  0000                     _VREFCON1	set	3905
    85  0000                     _VREFCON0	set	3906
    86  0000                     _CTMUCONH	set	3909
    87  0000                     _SSP2CON1	set	3948
    88  0000                     _SSP1CON1	set	4038
    89  0000                     _ANSELE	set	3900
    90  0000                     _ANSELD	set	3899
    91  0000                     _ANSELC	set	3898
    92  0000                     _ANSELB	set	3897
    93  0000                     _ANSELA	set	3896
    94  0000                     _IPEN	set	32391
    95  0000                     _INTCON	set	4082
    96  0000                     _SSP1BUF	set	4041
    97  0000                     _SSP1CON3	set	4043
    98  0000                     _SSPSTAT	set	4039
    99  0000                     _CM2CON0	set	3960
   100  0000                     _CM1CON0	set	3961
   101  0000                     _PORTAbits	set	3968
   102  0000                     _PORTB	set	3969
   103  0000                     _PORTDbits	set	3971
   104  0000                     _PORTCbits	set	3970
   105  0000                     _TRISA	set	3986
   106  0000                     _HLVDCON	set	3996
   107  0000                     _SRCON0	set	3911
   108  0000                     _ADCON1	set	4033
   109  0000                     _ADCON0	set	4034
   110  0000                     _SSPIF	set	31987
   111  0000                     _SSP1IE	set	31979
   112                           
   113                           ; #config settings
   114                           
   115                           	psect	cinit
   116  001476                     __pcinit:
   117                           	callstack 0
   118  001476                     start_initialization:
   119                           	callstack 0
   120  001476                     __initialization:
   121                           	callstack 0
   122                           
   123                           ; Clear objects allocated to COMRAM (1 bytes)
   124  001476  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   125  001478                     end_of_initialization:
   126                           	callstack 0
   127  001478                     __end_of__initialization:
   128                           	callstack 0
   129  001478  900C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   130  00147A  920C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   131  00147C  0100               	movlb	0
   132  00147E  EF85  F008         	goto	_main	;jump to C main() function
   133                           
   134                           	psect	bssCOMRAM
   135  00000B                     __pbssCOMRAM:
   136                           	callstack 0
   137  00000B                     _spi_read_data:
   138                           	callstack 0
   139  00000B                     	ds	1
   140                           
   141                           	psect	cstackCOMRAM
   142  000001                     __pcstackCOMRAM:
   143                           	callstack 0
   144  000001                     DATABUS_DIR@dir:
   145                           	callstack 0
   146  000001                     DATABUS@byte0:
   147                           	callstack 0
   148  000001                     chip_select@chip:
   149                           	callstack 0
   150  000001                     spi_data@tx_data:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x0
   154  000001                     	ds	1
   155  000002                     ??_DATABUS:
   156                           
   157                           ; 1 bytes @ 0x1
   158  000002                     	ds	2
   159  000004                     DATABUS@dir1:
   160                           	callstack 0
   161                           
   162                           ; 1 bytes @ 0x3
   163  000004                     	ds	1
   164  000005                     DATABUS@x:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x4
   168  000005                     	ds	1
   169  000006                     read_status@status:
   170                           	callstack 0
   171  000006                     write_data@byte2:
   172                           	callstack 0
   173  000006                     write_command@command:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x5
   177  000006                     	ds	1
   178  000007                     check_busy@x:
   179                           	callstack 0
   180  000007                     write_data@byte1:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x6
   184  000007                     	ds	1
   185  000008                     ??_LM629_init:
   186  000008                     
   187                           ; 1 bytes @ 0x7
   188  000008                     	ds	1
   189  000009                     LM629_init@x:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x8
   193  000009                     	ds	1
   194  00000A                     main@received_data:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x9
   198  00000A                     	ds	1
   199                           
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 128 in file "main.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;  received_dat    1    9[COMRAM] unsigned char 
   210 ;;  dummy_data      1    0        unsigned char 
   211 ;; Return value:  Size  Location     Type
   212 ;;                  1    wreg      void 
   213 ;; Registers used:
   214 ;;		wreg, status,2, status,0, cstack
   215 ;; Tracked objects:
   216 ;;		On entry : 0/0
   217 ;;		On exit  : 0/0
   218 ;;		Unchanged: 0/0
   219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   224 ;;Total ram usage:        1 bytes
   225 ;; Hardware stack levels required when called: 6
   226 ;; This function calls:
   227 ;;		_LM629_init
   228 ;;		_all_break
   229 ;;		_all_off
   230 ;;		_forward
   231 ;;		_forward_left
   232 ;;		_forward_right
   233 ;;		_left
   234 ;;		_reverse
   235 ;;		_reverse_left
   236 ;;		_reverse_right
   237 ;;		_right
   238 ;;		_spi_data
   239 ;;		_spi_slave_init
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           	psect	text0
   246  00110A                     __ptext0:
   247                           	callstack 0
   248  00110A                     _main:
   249                           	callstack 25
   250                           
   251                           ;main.c: 130:     IPEN=0;
   252                           
   253                           ;incstack = 0
   254  00110A  9ED0               	bcf	4048,7,c	;volatile
   255                           
   256                           ;main.c: 131:     INTCON=0;
   257  00110C  0E00               	movlw	0
   258  00110E  6EF2               	movwf	242,c	;volatile
   259                           
   260                           ;main.c: 132:     ANSELA=0;
   261  001110  0E00               	movlw	0
   262  001112  010F               	movlb	15	; () banked
   263  001114  6F38               	movwf	56,b	;volatile
   264                           
   265                           ;main.c: 133:     ANSELB=0;
   266  001116  0E00               	movlw	0
   267  001118  6F39               	movwf	57,b	;volatile
   268                           
   269                           ;main.c: 134:     ANSELC=0;
   270  00111A  0E00               	movlw	0
   271  00111C  6F3A               	movwf	58,b	;volatile
   272                           
   273                           ;main.c: 135:     ANSELD=0;
   274  00111E  0E00               	movlw	0
   275  001120  6F3B               	movwf	59,b	;volatile
   276                           
   277                           ;main.c: 136:     ANSELE=0;
   278  001122  0E00               	movlw	0
   279  001124  6F3C               	movwf	60,b	;volatile
   280                           
   281                           ;main.c: 137:     SSP1CON1=0x00;
   282  001126  0E00               	movlw	0
   283  001128  6EC6               	movwf	198,c	;volatile
   284                           
   285                           ;main.c: 138:     SSP2CON1=0x00;
   286  00112A  0E00               	movlw	0
   287  00112C  6E6C               	movwf	108,c	;volatile
   288                           
   289                           ;main.c: 139:     CM1CON0=0b00000000;
   290  00112E  0E00               	movlw	0
   291  001130  6E79               	movwf	121,c	;volatile
   292                           
   293                           ;main.c: 140:     CM2CON0=0b00000000;
   294  001132  0E00               	movlw	0
   295  001134  6E78               	movwf	120,c	;volatile
   296                           
   297                           ;main.c: 141:     PORTB=0x00;
   298  001136  0E00               	movlw	0
   299  001138  6E81               	movwf	129,c	;volatile
   300                           
   301                           ;main.c: 142:     TRISA=0x00;
   302  00113A  0E00               	movlw	0
   303  00113C  6E92               	movwf	146,c	;volatile
   304                           
   305                           ;main.c: 143:     TRISD=0x00;
   306  00113E  0E00               	movlw	0
   307  001140  6E95               	movwf	149,c	;volatile
   308                           
   309                           ;main.c: 144:     TRISB=0x00;
   310  001142  0E00               	movlw	0
   311  001144  6E93               	movwf	147,c	;volatile
   312                           
   313                           ;main.c: 145:     TRISC=0x00;
   314  001146  0E00               	movlw	0
   315  001148  6E94               	movwf	148,c	;volatile
   316                           
   317                           ;main.c: 146:     CTMUCONH=0x00;
   318  00114A  0E00               	movlw	0
   319  00114C  6F45               	movwf	69,b	;volatile
   320                           
   321                           ;main.c: 147:     SRCON0=0x00;
   322  00114E  0E00               	movlw	0
   323  001150  6F47               	movwf	71,b	;volatile
   324                           
   325                           ;main.c: 148:     VREFCON0=0x00;
   326  001152  0E00               	movlw	0
   327  001154  6F42               	movwf	66,b	;volatile
   328                           
   329                           ;main.c: 149:     VREFCON1=0x00;
   330  001156  0E00               	movlw	0
   331  001158  6F41               	movwf	65,b	;volatile
   332                           
   333                           ;main.c: 150:     HLVDCON=0x00;
   334  00115A  0E00               	movlw	0
   335  00115C  6E9C               	movwf	156,c	;volatile
   336                           
   337                           ; BSR set to: 15
   338                           ;main.c: 151:     LM629_init();
   339  00115E  ECBF  F007         	call	_LM629_init	;wreg free
   340                           
   341                           ;main.c: 152:     spi_slave_init();
   342  001162  EC05  F00A         	call	_spi_slave_init	;wreg free
   343                           
   344                           ;main.c: 157:     spi_data(dummy_data);
   345  001166  0E55               	movlw	85
   346  001168  EC47  F00A         	call	_spi_data
   347  00116C                     l1577:
   348                           
   349                           ;main.c: 160:     {;main.c: 161:         received_data = spi_read_data;
   350  00116C  C00B  F00A         	movff	_spi_read_data,main@received_data	;volatile
   351                           
   352                           ;main.c: 163:         if(received_data==0x77)
   353  001170  0E77               	movlw	119
   354  001172  180A               	xorwf	main@received_data^0,w,c
   355  001174  A4D8               	btfss	status,2,c
   356  001176  D005               	goto	l1583
   357                           
   358                           ;main.c: 164:         {;main.c: 165:             all_off();
   359  001178  ECC6  F009         	call	_all_off	;wreg free
   360                           
   361                           ;main.c: 166:             forward();
   362  00117C  EC1B  F006         	call	_forward	;wreg free
   363                           
   364                           ;main.c: 167:         }
   365  001180  D7F5               	goto	l1577
   366  001182                     l1583:
   367  001182  0E73               	movlw	115
   368  001184  180A               	xorwf	main@received_data^0,w,c
   369  001186  A4D8               	btfss	status,2,c
   370  001188  D005               	goto	l1587
   371                           
   372                           ;main.c: 170:         {;main.c: 171:             all_off();
   373  00118A  ECC6  F009         	call	_all_off	;wreg free
   374                           
   375                           ;main.c: 172:             reverse();
   376  00118E  ECA7  F002         	call	_reverse	;wreg free
   377                           
   378                           ;main.c: 173:         }
   379  001192  D7EC               	goto	l1577
   380  001194                     l1587:
   381  001194  0E61               	movlw	97
   382  001196  180A               	xorwf	main@received_data^0,w,c
   383  001198  A4D8               	btfss	status,2,c
   384  00119A  D005               	goto	l1591
   385                           
   386                           ;main.c: 176:         {;main.c: 177:             all_off();
   387  00119C  ECC6  F009         	call	_all_off	;wreg free
   388                           
   389                           ;main.c: 178:             left();
   390  0011A0  EC84  F003         	call	_left	;wreg free
   391                           
   392                           ;main.c: 179:         }
   393  0011A4  D7E3               	goto	l1577
   394  0011A6                     l1591:
   395  0011A6  0E64               	movlw	100
   396  0011A8  180A               	xorwf	main@received_data^0,w,c
   397  0011AA  A4D8               	btfss	status,2,c
   398  0011AC  D005               	goto	l1595
   399                           
   400                           ;main.c: 182:         {;main.c: 183:             all_off();
   401  0011AE  ECC6  F009         	call	_all_off	;wreg free
   402                           
   403                           ;main.c: 184:             right();
   404  0011B2  EC10  F000         	call	_right	;wreg free
   405                           
   406                           ;main.c: 185:         }
   407  0011B6  D7DA               	goto	l1577
   408  0011B8                     l1595:
   409  0011B8  0E6F               	movlw	111
   410  0011BA  180A               	xorwf	main@received_data^0,w,c
   411  0011BC  A4D8               	btfss	status,2,c
   412  0011BE  D003               	goto	l1599
   413  0011C0                     u870:
   414                           
   415                           ;main.c: 188:         {;main.c: 189:             all_off();
   416  0011C0  ECC6  F009         	call	_all_off	;wreg free
   417                           
   418                           ;main.c: 190:         }
   419  0011C4  D7D3               	goto	l1577
   420  0011C6                     l1599:
   421  0011C6  0E62               	movlw	98
   422  0011C8  180A               	xorwf	main@received_data^0,w,c
   423  0011CA  A4D8               	btfss	status,2,c
   424  0011CC  D003               	goto	l1603
   425                           
   426                           ;main.c: 193:         {;main.c: 194:             all_break();
   427  0011CE  ECDB  F009         	call	_all_break	;wreg free
   428                           
   429                           ;main.c: 195:         }
   430  0011D2  D7CC               	goto	l1577
   431  0011D4                     l1603:
   432  0011D4  500A               	movf	main@received_data^0,w,c
   433  0011D6  B4D8               	btfsc	status,2,c
   434  0011D8  D7F3               	goto	u870
   435  0011DA  0E34               	movlw	52
   436  0011DC  180A               	xorwf	main@received_data^0,w,c
   437  0011DE  A4D8               	btfss	status,2,c
   438  0011E0  D005               	goto	l1611
   439                           
   440                           ;main.c: 203:         {;main.c: 204:             all_off();
   441  0011E2  ECC6  F009         	call	_all_off	;wreg free
   442                           
   443                           ;main.c: 205:             forward_right();
   444  0011E6  EC61  F004         	call	_forward_right	;wreg free
   445                           
   446                           ;main.c: 206:         }
   447  0011EA  D7C0               	goto	l1577
   448  0011EC                     l1611:
   449  0011EC  0E31               	movlw	49
   450  0011EE  180A               	xorwf	main@received_data^0,w,c
   451  0011F0  A4D8               	btfss	status,2,c
   452  0011F2  D005               	goto	l1615
   453                           
   454                           ;main.c: 209:         {;main.c: 210:             all_off();
   455  0011F4  ECC6  F009         	call	_all_off	;wreg free
   456                           
   457                           ;main.c: 211:             forward_left();
   458  0011F8  EC3E  F005         	call	_forward_left	;wreg free
   459                           
   460                           ;main.c: 212:         }
   461  0011FC  D7B7               	goto	l1577
   462  0011FE                     l1615:
   463  0011FE  0E32               	movlw	50
   464  001200  180A               	xorwf	main@received_data^0,w,c
   465  001202  A4D8               	btfss	status,2,c
   466  001204  D005               	goto	l1619
   467                           
   468                           ;main.c: 215:         {;main.c: 216:             all_off();
   469  001206  ECC6  F009         	call	_all_off	;wreg free
   470                           
   471                           ;main.c: 217:             reverse_left();
   472  00120A  ECCA  F001         	call	_reverse_left	;wreg free
   473                           
   474                           ;main.c: 218:         }
   475  00120E  D7AE               	goto	l1577
   476  001210                     l1619:
   477  001210  0E33               	movlw	51
   478  001212  180A               	xorwf	main@received_data^0,w,c
   479  001214  A4D8               	btfss	status,2,c
   480  001216  D7AA               	goto	l1577
   481                           
   482                           ;main.c: 221:         {;main.c: 222:             all_off();
   483  001218  ECC6  F009         	call	_all_off	;wreg free
   484                           
   485                           ;main.c: 223:             reverse_right();
   486  00121C  ECED  F000         	call	_reverse_right	;wreg free
   487  001220  D7A5               	goto	l1577
   488  001222                     __end_of_main:
   489                           	callstack 0
   490                           
   491 ;; *************** function _spi_slave_init *****************
   492 ;; Defined at:
   493 ;;		line 10 in file "spi.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2
   502 ;; Tracked objects:
   503 ;;		On entry : 0/F
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_main
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text1
   522  00140A                     __ptext1:
   523                           	callstack 0
   524  00140A                     _spi_slave_init:
   525                           	callstack 29
   526                           
   527                           ;spi.c: 12:     SSPSTAT = 0x00;
   528                           
   529                           ;incstack = 0
   530  00140A  0E00               	movlw	0
   531  00140C  6EC7               	movwf	199,c	;volatile
   532                           
   533                           ;spi.c: 13:     SSPCON1 = 0b00100100;
   534  00140E  0E24               	movlw	36
   535  001410  6EC6               	movwf	198,c	;volatile
   536                           
   537                           ;spi.c: 14:     SSP1CON3 = 0b00010000;
   538  001412  0E10               	movlw	16
   539  001414  6ECB               	movwf	203,c	;volatile
   540                           
   541                           ;spi.c: 15:     ADCON0 = 0x00;
   542  001416  0E00               	movlw	0
   543  001418  6EC2               	movwf	194,c	;volatile
   544                           
   545                           ;spi.c: 16:     ADCON1 = 0x00;
   546  00141A  0E00               	movlw	0
   547  00141C  6EC1               	movwf	193,c	;volatile
   548                           
   549                           ;spi.c: 17:     TRISAbits.RA5 = 1;
   550  00141E  8A92               	bsf	146,5,c	;volatile
   551                           
   552                           ;spi.c: 18:     TRISCbits.RC3 = 1;
   553  001420  8694               	bsf	148,3,c	;volatile
   554                           
   555                           ;spi.c: 19:     TRISCbits.RC5 = 0;
   556  001422  9A94               	bcf	148,5,c	;volatile
   557                           
   558                           ;spi.c: 20:     TRISCbits.RC4 = 1;
   559  001424  8894               	bsf	148,4,c	;volatile
   560                           
   561                           ;spi.c: 21:     SSP1IE=1;
   562  001426  869D               	bsf	3997,3,c	;volatile
   563                           
   564                           ;spi.c: 22:     PEIE=1;
   565  001428  8CF2               	bsf	4082,6,c	;volatile
   566                           
   567                           ;spi.c: 23:     GIE=1;
   568  00142A  8EF2               	bsf	4082,7,c	;volatile
   569  00142C  0012               	return		;funcret
   570  00142E                     __end_of_spi_slave_init:
   571                           	callstack 0
   572                           
   573 ;; *************** function _spi_data *****************
   574 ;; Defined at:
   575 ;;		line 26 in file "spi.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  tx_data         1    wreg     unsigned char 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  tx_data         1    0[COMRAM] unsigned char 
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg
   584 ;; Tracked objects:
   585 ;;		On entry : 0/F
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        1 bytes
   594 ;; Hardware stack levels used: 1
   595 ;; Hardware stack levels required when called: 1
   596 ;; This function calls:
   597 ;;		Nothing
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text2
   604  00148E                     __ptext2:
   605                           	callstack 0
   606  00148E                     _spi_data:
   607                           	callstack 29
   608                           
   609                           ;incstack = 0
   610                           ;spi_data@tx_data stored from wreg
   611  00148E  6E01               	movwf	spi_data@tx_data^0,c
   612                           
   613                           ;spi.c: 26: void spi_data(unsigned char tx_data);spi.c: 27: {;spi.c: 28:     SSP1BUF=tx_
      +                          data;
   614  001490  C001  FFC9         	movff	spi_data@tx_data,4041	;volatile
   615  001494  0012               	return		;funcret
   616  001496                     __end_of_spi_data:
   617                           	callstack 0
   618                           
   619 ;; *************** function _right *****************
   620 ;; Defined at:
   621 ;;		line 610 in file "lm629.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2, status,0, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : 0/F
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used: 1
   641 ;; Hardware stack levels required when called: 5
   642 ;; This function calls:
   643 ;;		_check_busy
   644 ;;		_chip_select
   645 ;;		_motor_off
   646 ;;		_write_command
   647 ;;		_write_data
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text3
   654  000020                     __ptext3:
   655                           	callstack 0
   656  000020                     _right:
   657                           	callstack 25
   658                           
   659                           ;lm629.c: 612:     chip_select(0);
   660                           
   661                           ;incstack = 0
   662  000020  0E00               	movlw	0
   663  000022  EC6D  F009         	call	_chip_select
   664                           
   665                           ;lm629.c: 613:     check_busy();
   666  000026  EC41  F00A         	call	_check_busy	;wreg free
   667                           
   668                           ;lm629.c: 614:     motor_off();
   669  00002A  EC17  F00A         	call	_motor_off	;wreg free
   670                           
   671                           ;lm629.c: 615:     write_command(0x1F);
   672  00002E  0E1F               	movlw	31
   673  000030  EC93  F009         	call	_write_command
   674                           
   675                           ;lm629.c: 616:     check_busy();
   676  000034  EC41  F00A         	call	_check_busy	;wreg free
   677                           
   678                           ;lm629.c: 617:     write_data(0x08,0x28);
   679  000038  0E28               	movlw	40
   680  00003A  6E06               	movwf	write_data@byte2^0,c
   681  00003C  0E08               	movlw	8
   682  00003E  EC3F  F009         	call	_write_data
   683                           
   684                           ;lm629.c: 618:     check_busy();
   685  000042  EC41  F00A         	call	_check_busy	;wreg free
   686                           
   687                           ;lm629.c: 620:     write_data(0x00,0x00);
   688  000046  0E00               	movlw	0
   689  000048  6E06               	movwf	write_data@byte2^0,c
   690  00004A  0E00               	movlw	0
   691  00004C  EC3F  F009         	call	_write_data
   692                           
   693                           ;lm629.c: 621:     check_busy();
   694  000050  EC41  F00A         	call	_check_busy	;wreg free
   695                           
   696                           ;lm629.c: 622:     write_data(0x00,0x48);
   697  000054  0E48               	movlw	72
   698  000056  6E06               	movwf	write_data@byte2^0,c
   699  000058  0E00               	movlw	0
   700  00005A  EC3F  F009         	call	_write_data
   701                           
   702                           ;lm629.c: 623:     check_busy();
   703  00005E  EC41  F00A         	call	_check_busy	;wreg free
   704                           
   705                           ;lm629.c: 625:     write_data(0x00,0x01);
   706  000062  0E01               	movlw	1
   707  000064  6E06               	movwf	write_data@byte2^0,c
   708  000066  0E00               	movlw	0
   709  000068  EC3F  F009         	call	_write_data
   710                           
   711                           ;lm629.c: 626:     check_busy();
   712  00006C  EC41  F00A         	call	_check_busy	;wreg free
   713                           
   714                           ;lm629.c: 627:     write_data(0xFA,0xD0);
   715  000070  0ED0               	movlw	208
   716  000072  6E06               	movwf	write_data@byte2^0,c
   717  000074  0EFA               	movlw	250
   718  000076  EC3F  F009         	call	_write_data
   719                           
   720                           ;lm629.c: 628:     check_busy();
   721  00007A  EC41  F00A         	call	_check_busy	;wreg free
   722                           
   723                           ;lm629.c: 631:     chip_select(1);
   724  00007E  0E01               	movlw	1
   725  000080  EC6D  F009         	call	_chip_select
   726                           
   727                           ;lm629.c: 632:     check_busy();
   728  000084  EC41  F00A         	call	_check_busy	;wreg free
   729                           
   730                           ;lm629.c: 633:     motor_off();
   731  000088  EC17  F00A         	call	_motor_off	;wreg free
   732                           
   733                           ;lm629.c: 634:     write_command(0x1F);
   734  00008C  0E1F               	movlw	31
   735  00008E  EC93  F009         	call	_write_command
   736                           
   737                           ;lm629.c: 635:     check_busy();
   738  000092  EC41  F00A         	call	_check_busy	;wreg free
   739                           
   740                           ;lm629.c: 636:     write_data(0x08,0x28);
   741  000096  0E28               	movlw	40
   742  000098  6E06               	movwf	write_data@byte2^0,c
   743  00009A  0E08               	movlw	8
   744  00009C  EC3F  F009         	call	_write_data
   745                           
   746                           ;lm629.c: 637:     check_busy();
   747  0000A0  EC41  F00A         	call	_check_busy	;wreg free
   748                           
   749                           ;lm629.c: 639:     write_data(0x00,0x00);
   750  0000A4  0E00               	movlw	0
   751  0000A6  6E06               	movwf	write_data@byte2^0,c
   752  0000A8  0E00               	movlw	0
   753  0000AA  EC3F  F009         	call	_write_data
   754                           
   755                           ;lm629.c: 640:     check_busy();
   756  0000AE  EC41  F00A         	call	_check_busy	;wreg free
   757                           
   758                           ;lm629.c: 641:     write_data(0x00,0x48);
   759  0000B2  0E48               	movlw	72
   760  0000B4  6E06               	movwf	write_data@byte2^0,c
   761  0000B6  0E00               	movlw	0
   762  0000B8  EC3F  F009         	call	_write_data
   763                           
   764                           ;lm629.c: 642:     check_busy();
   765  0000BC  EC41  F00A         	call	_check_busy	;wreg free
   766                           
   767                           ;lm629.c: 644:     write_data(0x00,0x01);
   768  0000C0  0E01               	movlw	1
   769  0000C2  6E06               	movwf	write_data@byte2^0,c
   770  0000C4  0E00               	movlw	0
   771  0000C6  EC3F  F009         	call	_write_data
   772                           
   773                           ;lm629.c: 645:     check_busy();
   774  0000CA  EC41  F00A         	call	_check_busy	;wreg free
   775                           
   776                           ;lm629.c: 646:     write_data(0xFA,0xD0);
   777  0000CE  0ED0               	movlw	208
   778  0000D0  6E06               	movwf	write_data@byte2^0,c
   779  0000D2  0EFA               	movlw	250
   780  0000D4  EC3F  F009         	call	_write_data
   781                           
   782                           ;lm629.c: 647:     check_busy();
   783  0000D8  EC41  F00A         	call	_check_busy	;wreg free
   784                           
   785                           ;lm629.c: 650:     chip_select(2);
   786  0000DC  0E02               	movlw	2
   787  0000DE  EC6D  F009         	call	_chip_select
   788                           
   789                           ;lm629.c: 651:     check_busy();
   790  0000E2  EC41  F00A         	call	_check_busy	;wreg free
   791                           
   792                           ;lm629.c: 652:     motor_off();
   793  0000E6  EC17  F00A         	call	_motor_off	;wreg free
   794                           
   795                           ;lm629.c: 653:     write_command(0x1F);
   796  0000EA  0E1F               	movlw	31
   797  0000EC  EC93  F009         	call	_write_command
   798                           
   799                           ;lm629.c: 654:     check_busy();
   800  0000F0  EC41  F00A         	call	_check_busy	;wreg free
   801                           
   802                           ;lm629.c: 655:     write_data(0x08,0x28);
   803  0000F4  0E28               	movlw	40
   804  0000F6  6E06               	movwf	write_data@byte2^0,c
   805  0000F8  0E08               	movlw	8
   806  0000FA  EC3F  F009         	call	_write_data
   807                           
   808                           ;lm629.c: 656:     check_busy();
   809  0000FE  EC41  F00A         	call	_check_busy	;wreg free
   810                           
   811                           ;lm629.c: 658:     write_data(0x00,0x00);
   812  000102  0E00               	movlw	0
   813  000104  6E06               	movwf	write_data@byte2^0,c
   814  000106  0E00               	movlw	0
   815  000108  EC3F  F009         	call	_write_data
   816                           
   817                           ;lm629.c: 659:     check_busy();
   818  00010C  EC41  F00A         	call	_check_busy	;wreg free
   819                           
   820                           ;lm629.c: 660:     write_data(0x00,0x48);
   821  000110  0E48               	movlw	72
   822  000112  6E06               	movwf	write_data@byte2^0,c
   823  000114  0E00               	movlw	0
   824  000116  EC3F  F009         	call	_write_data
   825                           
   826                           ;lm629.c: 661:     check_busy();
   827  00011A  EC41  F00A         	call	_check_busy	;wreg free
   828                           
   829                           ;lm629.c: 663:     write_data(0x00,0x01);
   830  00011E  0E01               	movlw	1
   831  000120  6E06               	movwf	write_data@byte2^0,c
   832  000122  0E00               	movlw	0
   833  000124  EC3F  F009         	call	_write_data
   834                           
   835                           ;lm629.c: 664:     check_busy();
   836  000128  EC41  F00A         	call	_check_busy	;wreg free
   837                           
   838                           ;lm629.c: 665:     write_data(0xFA,0xD0);
   839  00012C  0ED0               	movlw	208
   840  00012E  6E06               	movwf	write_data@byte2^0,c
   841  000130  0EFA               	movlw	250
   842  000132  EC3F  F009         	call	_write_data
   843                           
   844                           ;lm629.c: 666:     check_busy();
   845  000136  EC41  F00A         	call	_check_busy	;wreg free
   846                           
   847                           ;lm629.c: 669:     chip_select(3);
   848  00013A  0E03               	movlw	3
   849  00013C  EC6D  F009         	call	_chip_select
   850                           
   851                           ;lm629.c: 670:     check_busy();
   852  000140  EC41  F00A         	call	_check_busy	;wreg free
   853                           
   854                           ;lm629.c: 671:     motor_off();
   855  000144  EC17  F00A         	call	_motor_off	;wreg free
   856                           
   857                           ;lm629.c: 672:     write_command(0x1F);
   858  000148  0E1F               	movlw	31
   859  00014A  EC93  F009         	call	_write_command
   860                           
   861                           ;lm629.c: 673:     check_busy();
   862  00014E  EC41  F00A         	call	_check_busy	;wreg free
   863                           
   864                           ;lm629.c: 674:     write_data(0x08,0x28);
   865  000152  0E28               	movlw	40
   866  000154  6E06               	movwf	write_data@byte2^0,c
   867  000156  0E08               	movlw	8
   868  000158  EC3F  F009         	call	_write_data
   869                           
   870                           ;lm629.c: 675:     check_busy();
   871  00015C  EC41  F00A         	call	_check_busy	;wreg free
   872                           
   873                           ;lm629.c: 677:     write_data(0x00,0x00);
   874  000160  0E00               	movlw	0
   875  000162  6E06               	movwf	write_data@byte2^0,c
   876  000164  0E00               	movlw	0
   877  000166  EC3F  F009         	call	_write_data
   878                           
   879                           ;lm629.c: 678:     check_busy();
   880  00016A  EC41  F00A         	call	_check_busy	;wreg free
   881                           
   882                           ;lm629.c: 679:     write_data(0x00,0x48);
   883  00016E  0E48               	movlw	72
   884  000170  6E06               	movwf	write_data@byte2^0,c
   885  000172  0E00               	movlw	0
   886  000174  EC3F  F009         	call	_write_data
   887                           
   888                           ;lm629.c: 680:     check_busy();
   889  000178  EC41  F00A         	call	_check_busy	;wreg free
   890                           
   891                           ;lm629.c: 682:     write_data(0x00,0x01);
   892  00017C  0E01               	movlw	1
   893  00017E  6E06               	movwf	write_data@byte2^0,c
   894  000180  0E00               	movlw	0
   895  000182  EC3F  F009         	call	_write_data
   896                           
   897                           ;lm629.c: 683:     check_busy();
   898  000186  EC41  F00A         	call	_check_busy	;wreg free
   899                           
   900                           ;lm629.c: 684:     write_data(0xFA,0xD0);
   901  00018A  0ED0               	movlw	208
   902  00018C  6E06               	movwf	write_data@byte2^0,c
   903  00018E  0EFA               	movlw	250
   904  000190  EC3F  F009         	call	_write_data
   905                           
   906                           ;lm629.c: 685:     check_busy();
   907  000194  EC41  F00A         	call	_check_busy	;wreg free
   908                           
   909                           ;lm629.c: 688:     chip_select(0);
   910  000198  0E00               	movlw	0
   911  00019A  EC6D  F009         	call	_chip_select
   912                           
   913                           ;lm629.c: 689:     write_command(0x01);
   914  00019E  0E01               	movlw	1
   915  0001A0  EC93  F009         	call	_write_command
   916                           
   917                           ;lm629.c: 690:     check_busy();
   918  0001A4  EC41  F00A         	call	_check_busy	;wreg free
   919                           
   920                           ;lm629.c: 692:     chip_select(2);
   921  0001A8  0E02               	movlw	2
   922  0001AA  EC6D  F009         	call	_chip_select
   923                           
   924                           ;lm629.c: 693:     write_command(0x01);
   925  0001AE  0E01               	movlw	1
   926  0001B0  EC93  F009         	call	_write_command
   927                           
   928                           ;lm629.c: 694:     check_busy();
   929  0001B4  EC41  F00A         	call	_check_busy	;wreg free
   930                           
   931                           ;lm629.c: 696:     chip_select(1);
   932  0001B8  0E01               	movlw	1
   933  0001BA  EC6D  F009         	call	_chip_select
   934                           
   935                           ;lm629.c: 697:     write_command(0x01);
   936  0001BE  0E01               	movlw	1
   937  0001C0  EC93  F009         	call	_write_command
   938                           
   939                           ;lm629.c: 698:     check_busy();
   940  0001C4  EC41  F00A         	call	_check_busy	;wreg free
   941                           
   942                           ;lm629.c: 700:     chip_select(3);
   943  0001C8  0E03               	movlw	3
   944  0001CA  EC6D  F009         	call	_chip_select
   945                           
   946                           ;lm629.c: 701:     write_command(0x01);
   947  0001CE  0E01               	movlw	1
   948  0001D0  EC93  F009         	call	_write_command
   949                           
   950                           ;lm629.c: 702:     check_busy();
   951  0001D4  EC41  F00A         	call	_check_busy	;wreg free
   952  0001D8  0012               	return		;funcret
   953  0001DA                     __end_of_right:
   954                           	callstack 0
   955                           
   956 ;; *************** function _reverse_right *****************
   957 ;; Defined at:
   958 ;;		line 1084 in file "lm629.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/F
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;Total ram usage:        0 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 5
   979 ;; This function calls:
   980 ;;		_check_busy
   981 ;;		_chip_select
   982 ;;		_motor_off
   983 ;;		_write_command
   984 ;;		_write_data
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text4
   991  0001DA                     __ptext4:
   992                           	callstack 0
   993  0001DA                     _reverse_right:
   994                           	callstack 25
   995                           
   996                           ;lm629.c: 1086:     chip_select(1);
   997                           
   998                           ;incstack = 0
   999  0001DA  0E01               	movlw	1
  1000  0001DC  EC6D  F009         	call	_chip_select
  1001                           
  1002                           ;lm629.c: 1087:     check_busy();
  1003  0001E0  EC41  F00A         	call	_check_busy	;wreg free
  1004                           
  1005                           ;lm629.c: 1088:     motor_off();
  1006  0001E4  EC17  F00A         	call	_motor_off	;wreg free
  1007                           
  1008                           ;lm629.c: 1089:     write_command(0x1F);
  1009  0001E8  0E1F               	movlw	31
  1010  0001EA  EC93  F009         	call	_write_command
  1011                           
  1012                           ;lm629.c: 1090:     check_busy();
  1013  0001EE  EC41  F00A         	call	_check_busy	;wreg free
  1014                           
  1015                           ;lm629.c: 1091:     write_data(0x18,0x28);
  1016  0001F2  0E28               	movlw	40
  1017  0001F4  6E06               	movwf	write_data@byte2^0,c
  1018  0001F6  0E18               	movlw	24
  1019  0001F8  EC3F  F009         	call	_write_data
  1020                           
  1021                           ;lm629.c: 1092:     check_busy();
  1022  0001FC  EC41  F00A         	call	_check_busy	;wreg free
  1023                           
  1024                           ;lm629.c: 1094:     write_data(0x00,0x00);
  1025  000200  0E00               	movlw	0
  1026  000202  6E06               	movwf	write_data@byte2^0,c
  1027  000204  0E00               	movlw	0
  1028  000206  EC3F  F009         	call	_write_data
  1029                           
  1030                           ;lm629.c: 1095:     check_busy();
  1031  00020A  EC41  F00A         	call	_check_busy	;wreg free
  1032                           
  1033                           ;lm629.c: 1096:     write_data(0x00,0x48);
  1034  00020E  0E48               	movlw	72
  1035  000210  6E06               	movwf	write_data@byte2^0,c
  1036  000212  0E00               	movlw	0
  1037  000214  EC3F  F009         	call	_write_data
  1038                           
  1039                           ;lm629.c: 1097:     check_busy();
  1040  000218  EC41  F00A         	call	_check_busy	;wreg free
  1041                           
  1042                           ;lm629.c: 1099:     write_data(0x00,0x00);
  1043  00021C  0E00               	movlw	0
  1044  00021E  6E06               	movwf	write_data@byte2^0,c
  1045  000220  0E00               	movlw	0
  1046  000222  EC3F  F009         	call	_write_data
  1047                           
  1048                           ;lm629.c: 1100:     check_busy();
  1049  000226  EC41  F00A         	call	_check_busy	;wreg free
  1050                           
  1051                           ;lm629.c: 1101:     write_data(0xFD,0x68);
  1052  00022A  0E68               	movlw	104
  1053  00022C  6E06               	movwf	write_data@byte2^0,c
  1054  00022E  0EFD               	movlw	253
  1055  000230  EC3F  F009         	call	_write_data
  1056                           
  1057                           ;lm629.c: 1102:     check_busy();
  1058  000234  EC41  F00A         	call	_check_busy	;wreg free
  1059                           
  1060                           ;lm629.c: 1105:     chip_select(0);
  1061  000238  0E00               	movlw	0
  1062  00023A  EC6D  F009         	call	_chip_select
  1063                           
  1064                           ;lm629.c: 1106:     check_busy();
  1065  00023E  EC41  F00A         	call	_check_busy	;wreg free
  1066                           
  1067                           ;lm629.c: 1107:     motor_off();
  1068  000242  EC17  F00A         	call	_motor_off	;wreg free
  1069                           
  1070                           ;lm629.c: 1108:     write_command(0x1F);
  1071  000246  0E1F               	movlw	31
  1072  000248  EC93  F009         	call	_write_command
  1073                           
  1074                           ;lm629.c: 1109:     check_busy();
  1075  00024C  EC41  F00A         	call	_check_busy	;wreg free
  1076                           
  1077                           ;lm629.c: 1110:     write_data(0x08,0x28);
  1078  000250  0E28               	movlw	40
  1079  000252  6E06               	movwf	write_data@byte2^0,c
  1080  000254  0E08               	movlw	8
  1081  000256  EC3F  F009         	call	_write_data
  1082                           
  1083                           ;lm629.c: 1111:     check_busy();
  1084  00025A  EC41  F00A         	call	_check_busy	;wreg free
  1085                           
  1086                           ;lm629.c: 1113:     write_data(0x00,0x00);
  1087  00025E  0E00               	movlw	0
  1088  000260  6E06               	movwf	write_data@byte2^0,c
  1089  000262  0E00               	movlw	0
  1090  000264  EC3F  F009         	call	_write_data
  1091                           
  1092                           ;lm629.c: 1114:     check_busy();
  1093  000268  EC41  F00A         	call	_check_busy	;wreg free
  1094                           
  1095                           ;lm629.c: 1115:     write_data(0x00,0x48);
  1096  00026C  0E48               	movlw	72
  1097  00026E  6E06               	movwf	write_data@byte2^0,c
  1098  000270  0E00               	movlw	0
  1099  000272  EC3F  F009         	call	_write_data
  1100                           
  1101                           ;lm629.c: 1116:     check_busy();
  1102  000276  EC41  F00A         	call	_check_busy	;wreg free
  1103                           
  1104                           ;lm629.c: 1118:     write_data(0x00,0x01);
  1105  00027A  0E01               	movlw	1
  1106  00027C  6E06               	movwf	write_data@byte2^0,c
  1107  00027E  0E00               	movlw	0
  1108  000280  EC3F  F009         	call	_write_data
  1109                           
  1110                           ;lm629.c: 1119:     check_busy();
  1111  000284  EC41  F00A         	call	_check_busy	;wreg free
  1112                           
  1113                           ;lm629.c: 1120:     write_data(0xFA,0xD0);
  1114  000288  0ED0               	movlw	208
  1115  00028A  6E06               	movwf	write_data@byte2^0,c
  1116  00028C  0EFA               	movlw	250
  1117  00028E  EC3F  F009         	call	_write_data
  1118                           
  1119                           ;lm629.c: 1121:     check_busy();
  1120  000292  EC41  F00A         	call	_check_busy	;wreg free
  1121                           
  1122                           ;lm629.c: 1125:     chip_select(3);
  1123  000296  0E03               	movlw	3
  1124  000298  EC6D  F009         	call	_chip_select
  1125                           
  1126                           ;lm629.c: 1126:     check_busy();
  1127  00029C  EC41  F00A         	call	_check_busy	;wreg free
  1128                           
  1129                           ;lm629.c: 1127:     motor_off();
  1130  0002A0  EC17  F00A         	call	_motor_off	;wreg free
  1131                           
  1132                           ;lm629.c: 1128:     write_command(0x1F);
  1133  0002A4  0E1F               	movlw	31
  1134  0002A6  EC93  F009         	call	_write_command
  1135                           
  1136                           ;lm629.c: 1129:     check_busy();
  1137  0002AA  EC41  F00A         	call	_check_busy	;wreg free
  1138                           
  1139                           ;lm629.c: 1130:     write_data(0x08,0x28);
  1140  0002AE  0E28               	movlw	40
  1141  0002B0  6E06               	movwf	write_data@byte2^0,c
  1142  0002B2  0E08               	movlw	8
  1143  0002B4  EC3F  F009         	call	_write_data
  1144                           
  1145                           ;lm629.c: 1131:     check_busy();
  1146  0002B8  EC41  F00A         	call	_check_busy	;wreg free
  1147                           
  1148                           ;lm629.c: 1133:     write_data(0x00,0x00);
  1149  0002BC  0E00               	movlw	0
  1150  0002BE  6E06               	movwf	write_data@byte2^0,c
  1151  0002C0  0E00               	movlw	0
  1152  0002C2  EC3F  F009         	call	_write_data
  1153                           
  1154                           ;lm629.c: 1134:     check_busy();
  1155  0002C6  EC41  F00A         	call	_check_busy	;wreg free
  1156                           
  1157                           ;lm629.c: 1135:     write_data(0x00,0x48);
  1158  0002CA  0E48               	movlw	72
  1159  0002CC  6E06               	movwf	write_data@byte2^0,c
  1160  0002CE  0E00               	movlw	0
  1161  0002D0  EC3F  F009         	call	_write_data
  1162                           
  1163                           ;lm629.c: 1136:     check_busy();
  1164  0002D4  EC41  F00A         	call	_check_busy	;wreg free
  1165                           
  1166                           ;lm629.c: 1138:     write_data(0x00,0x01);
  1167  0002D8  0E01               	movlw	1
  1168  0002DA  6E06               	movwf	write_data@byte2^0,c
  1169  0002DC  0E00               	movlw	0
  1170  0002DE  EC3F  F009         	call	_write_data
  1171                           
  1172                           ;lm629.c: 1139:     check_busy();
  1173  0002E2  EC41  F00A         	call	_check_busy	;wreg free
  1174                           
  1175                           ;lm629.c: 1140:     write_data(0xFA,0xD0);
  1176  0002E6  0ED0               	movlw	208
  1177  0002E8  6E06               	movwf	write_data@byte2^0,c
  1178  0002EA  0EFA               	movlw	250
  1179  0002EC  EC3F  F009         	call	_write_data
  1180                           
  1181                           ;lm629.c: 1141:     check_busy();
  1182  0002F0  EC41  F00A         	call	_check_busy	;wreg free
  1183                           
  1184                           ;lm629.c: 1143:     chip_select(2);
  1185  0002F4  0E02               	movlw	2
  1186  0002F6  EC6D  F009         	call	_chip_select
  1187                           
  1188                           ;lm629.c: 1144:     check_busy();
  1189  0002FA  EC41  F00A         	call	_check_busy	;wreg free
  1190                           
  1191                           ;lm629.c: 1145:     motor_off();
  1192  0002FE  EC17  F00A         	call	_motor_off	;wreg free
  1193                           
  1194                           ;lm629.c: 1146:     write_command(0x1F);
  1195  000302  0E1F               	movlw	31
  1196  000304  EC93  F009         	call	_write_command
  1197                           
  1198                           ;lm629.c: 1147:     check_busy();
  1199  000308  EC41  F00A         	call	_check_busy	;wreg free
  1200                           
  1201                           ;lm629.c: 1148:     write_data(0x18,0x28);
  1202  00030C  0E28               	movlw	40
  1203  00030E  6E06               	movwf	write_data@byte2^0,c
  1204  000310  0E18               	movlw	24
  1205  000312  EC3F  F009         	call	_write_data
  1206                           
  1207                           ;lm629.c: 1149:     check_busy();
  1208  000316  EC41  F00A         	call	_check_busy	;wreg free
  1209                           
  1210                           ;lm629.c: 1151:     write_data(0x00,0x00);
  1211  00031A  0E00               	movlw	0
  1212  00031C  6E06               	movwf	write_data@byte2^0,c
  1213  00031E  0E00               	movlw	0
  1214  000320  EC3F  F009         	call	_write_data
  1215                           
  1216                           ;lm629.c: 1152:     check_busy();
  1217  000324  EC41  F00A         	call	_check_busy	;wreg free
  1218                           
  1219                           ;lm629.c: 1153:     write_data(0x00,0x48);
  1220  000328  0E48               	movlw	72
  1221  00032A  6E06               	movwf	write_data@byte2^0,c
  1222  00032C  0E00               	movlw	0
  1223  00032E  EC3F  F009         	call	_write_data
  1224                           
  1225                           ;lm629.c: 1154:     check_busy();
  1226  000332  EC41  F00A         	call	_check_busy	;wreg free
  1227                           
  1228                           ;lm629.c: 1156:     write_data(0x00,0x00);
  1229  000336  0E00               	movlw	0
  1230  000338  6E06               	movwf	write_data@byte2^0,c
  1231  00033A  0E00               	movlw	0
  1232  00033C  EC3F  F009         	call	_write_data
  1233                           
  1234                           ;lm629.c: 1157:     check_busy();
  1235  000340  EC41  F00A         	call	_check_busy	;wreg free
  1236                           
  1237                           ;lm629.c: 1158:     write_data(0xFD,0x68);
  1238  000344  0E68               	movlw	104
  1239  000346  6E06               	movwf	write_data@byte2^0,c
  1240  000348  0EFD               	movlw	253
  1241  00034A  EC3F  F009         	call	_write_data
  1242                           
  1243                           ;lm629.c: 1159:     check_busy();
  1244  00034E  EC41  F00A         	call	_check_busy	;wreg free
  1245                           
  1246                           ;lm629.c: 1162:     chip_select(0);
  1247  000352  0E00               	movlw	0
  1248  000354  EC6D  F009         	call	_chip_select
  1249                           
  1250                           ;lm629.c: 1163:     write_command(0x01);
  1251  000358  0E01               	movlw	1
  1252  00035A  EC93  F009         	call	_write_command
  1253                           
  1254                           ;lm629.c: 1164:     check_busy();
  1255  00035E  EC41  F00A         	call	_check_busy	;wreg free
  1256                           
  1257                           ;lm629.c: 1166:     chip_select(2);
  1258  000362  0E02               	movlw	2
  1259  000364  EC6D  F009         	call	_chip_select
  1260                           
  1261                           ;lm629.c: 1167:     write_command(0x01);
  1262  000368  0E01               	movlw	1
  1263  00036A  EC93  F009         	call	_write_command
  1264                           
  1265                           ;lm629.c: 1168:     check_busy();
  1266  00036E  EC41  F00A         	call	_check_busy	;wreg free
  1267                           
  1268                           ;lm629.c: 1170:     chip_select(1);
  1269  000372  0E01               	movlw	1
  1270  000374  EC6D  F009         	call	_chip_select
  1271                           
  1272                           ;lm629.c: 1171:     write_command(0x01);
  1273  000378  0E01               	movlw	1
  1274  00037A  EC93  F009         	call	_write_command
  1275                           
  1276                           ;lm629.c: 1172:     check_busy();
  1277  00037E  EC41  F00A         	call	_check_busy	;wreg free
  1278                           
  1279                           ;lm629.c: 1174:     chip_select(3);
  1280  000382  0E03               	movlw	3
  1281  000384  EC6D  F009         	call	_chip_select
  1282                           
  1283                           ;lm629.c: 1175:     write_command(0x01);
  1284  000388  0E01               	movlw	1
  1285  00038A  EC93  F009         	call	_write_command
  1286                           
  1287                           ;lm629.c: 1176:     check_busy();
  1288  00038E  EC41  F00A         	call	_check_busy	;wreg free
  1289  000392  0012               	return		;funcret
  1290  000394                     __end_of_reverse_right:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _reverse_left *****************
  1294 ;; Defined at:
  1295 ;;		line 989 in file "lm629.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/F
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 5
  1316 ;; This function calls:
  1317 ;;		_check_busy
  1318 ;;		_chip_select
  1319 ;;		_motor_off
  1320 ;;		_write_command
  1321 ;;		_write_data
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text5
  1328  000394                     __ptext5:
  1329                           	callstack 0
  1330  000394                     _reverse_left:
  1331                           	callstack 25
  1332                           
  1333                           ;lm629.c: 991:     chip_select(1);
  1334                           
  1335                           ;incstack = 0
  1336  000394  0E01               	movlw	1
  1337  000396  EC6D  F009         	call	_chip_select
  1338                           
  1339                           ;lm629.c: 992:     check_busy();
  1340  00039A  EC41  F00A         	call	_check_busy	;wreg free
  1341                           
  1342                           ;lm629.c: 993:     motor_off();
  1343  00039E  EC17  F00A         	call	_motor_off	;wreg free
  1344                           
  1345                           ;lm629.c: 994:     write_command(0x1F);
  1346  0003A2  0E1F               	movlw	31
  1347  0003A4  EC93  F009         	call	_write_command
  1348                           
  1349                           ;lm629.c: 995:     check_busy();
  1350  0003A8  EC41  F00A         	call	_check_busy	;wreg free
  1351                           
  1352                           ;lm629.c: 996:     write_data(0x18,0x28);
  1353  0003AC  0E28               	movlw	40
  1354  0003AE  6E06               	movwf	write_data@byte2^0,c
  1355  0003B0  0E18               	movlw	24
  1356  0003B2  EC3F  F009         	call	_write_data
  1357                           
  1358                           ;lm629.c: 997:     check_busy();
  1359  0003B6  EC41  F00A         	call	_check_busy	;wreg free
  1360                           
  1361                           ;lm629.c: 999:     write_data(0x00,0x00);
  1362  0003BA  0E00               	movlw	0
  1363  0003BC  6E06               	movwf	write_data@byte2^0,c
  1364  0003BE  0E00               	movlw	0
  1365  0003C0  EC3F  F009         	call	_write_data
  1366                           
  1367                           ;lm629.c: 1000:     check_busy();
  1368  0003C4  EC41  F00A         	call	_check_busy	;wreg free
  1369                           
  1370                           ;lm629.c: 1001:     write_data(0x00,0x48);
  1371  0003C8  0E48               	movlw	72
  1372  0003CA  6E06               	movwf	write_data@byte2^0,c
  1373  0003CC  0E00               	movlw	0
  1374  0003CE  EC3F  F009         	call	_write_data
  1375                           
  1376                           ;lm629.c: 1002:     check_busy();
  1377  0003D2  EC41  F00A         	call	_check_busy	;wreg free
  1378                           
  1379                           ;lm629.c: 1004:     write_data(0x00,0x01);
  1380  0003D6  0E01               	movlw	1
  1381  0003D8  6E06               	movwf	write_data@byte2^0,c
  1382  0003DA  0E00               	movlw	0
  1383  0003DC  EC3F  F009         	call	_write_data
  1384                           
  1385                           ;lm629.c: 1005:     check_busy();
  1386  0003E0  EC41  F00A         	call	_check_busy	;wreg free
  1387                           
  1388                           ;lm629.c: 1006:     write_data(0xFA,0xD0);
  1389  0003E4  0ED0               	movlw	208
  1390  0003E6  6E06               	movwf	write_data@byte2^0,c
  1391  0003E8  0EFA               	movlw	250
  1392  0003EA  EC3F  F009         	call	_write_data
  1393                           
  1394                           ;lm629.c: 1007:     check_busy();
  1395  0003EE  EC41  F00A         	call	_check_busy	;wreg free
  1396                           
  1397                           ;lm629.c: 1010:     chip_select(0);
  1398  0003F2  0E00               	movlw	0
  1399  0003F4  EC6D  F009         	call	_chip_select
  1400                           
  1401                           ;lm629.c: 1011:     check_busy();
  1402  0003F8  EC41  F00A         	call	_check_busy	;wreg free
  1403                           
  1404                           ;lm629.c: 1012:     motor_off();
  1405  0003FC  EC17  F00A         	call	_motor_off	;wreg free
  1406                           
  1407                           ;lm629.c: 1013:     write_command(0x1F);
  1408  000400  0E1F               	movlw	31
  1409  000402  EC93  F009         	call	_write_command
  1410                           
  1411                           ;lm629.c: 1014:     check_busy();
  1412  000406  EC41  F00A         	call	_check_busy	;wreg free
  1413                           
  1414                           ;lm629.c: 1015:     write_data(0x08,0x28);
  1415  00040A  0E28               	movlw	40
  1416  00040C  6E06               	movwf	write_data@byte2^0,c
  1417  00040E  0E08               	movlw	8
  1418  000410  EC3F  F009         	call	_write_data
  1419                           
  1420                           ;lm629.c: 1016:     check_busy();
  1421  000414  EC41  F00A         	call	_check_busy	;wreg free
  1422                           
  1423                           ;lm629.c: 1018:     write_data(0x00,0x00);
  1424  000418  0E00               	movlw	0
  1425  00041A  6E06               	movwf	write_data@byte2^0,c
  1426  00041C  0E00               	movlw	0
  1427  00041E  EC3F  F009         	call	_write_data
  1428                           
  1429                           ;lm629.c: 1019:     check_busy();
  1430  000422  EC41  F00A         	call	_check_busy	;wreg free
  1431                           
  1432                           ;lm629.c: 1020:     write_data(0x00,0x48);
  1433  000426  0E48               	movlw	72
  1434  000428  6E06               	movwf	write_data@byte2^0,c
  1435  00042A  0E00               	movlw	0
  1436  00042C  EC3F  F009         	call	_write_data
  1437                           
  1438                           ;lm629.c: 1021:     check_busy();
  1439  000430  EC41  F00A         	call	_check_busy	;wreg free
  1440                           
  1441                           ;lm629.c: 1023:     write_data(0x00,0x00);
  1442  000434  0E00               	movlw	0
  1443  000436  6E06               	movwf	write_data@byte2^0,c
  1444  000438  0E00               	movlw	0
  1445  00043A  EC3F  F009         	call	_write_data
  1446                           
  1447                           ;lm629.c: 1024:     check_busy();
  1448  00043E  EC41  F00A         	call	_check_busy	;wreg free
  1449                           
  1450                           ;lm629.c: 1025:     write_data(0xFD,0x68);
  1451  000442  0E68               	movlw	104
  1452  000444  6E06               	movwf	write_data@byte2^0,c
  1453  000446  0EFD               	movlw	253
  1454  000448  EC3F  F009         	call	_write_data
  1455                           
  1456                           ;lm629.c: 1026:     check_busy();
  1457  00044C  EC41  F00A         	call	_check_busy	;wreg free
  1458                           
  1459                           ;lm629.c: 1030:     chip_select(3);
  1460  000450  0E03               	movlw	3
  1461  000452  EC6D  F009         	call	_chip_select
  1462                           
  1463                           ;lm629.c: 1031:     check_busy();
  1464  000456  EC41  F00A         	call	_check_busy	;wreg free
  1465                           
  1466                           ;lm629.c: 1032:     motor_off();
  1467  00045A  EC17  F00A         	call	_motor_off	;wreg free
  1468                           
  1469                           ;lm629.c: 1033:     write_command(0x1F);
  1470  00045E  0E1F               	movlw	31
  1471  000460  EC93  F009         	call	_write_command
  1472                           
  1473                           ;lm629.c: 1034:     check_busy();
  1474  000464  EC41  F00A         	call	_check_busy	;wreg free
  1475                           
  1476                           ;lm629.c: 1035:     write_data(0x08,0x28);
  1477  000468  0E28               	movlw	40
  1478  00046A  6E06               	movwf	write_data@byte2^0,c
  1479  00046C  0E08               	movlw	8
  1480  00046E  EC3F  F009         	call	_write_data
  1481                           
  1482                           ;lm629.c: 1036:     check_busy();
  1483  000472  EC41  F00A         	call	_check_busy	;wreg free
  1484                           
  1485                           ;lm629.c: 1038:     write_data(0x00,0x00);
  1486  000476  0E00               	movlw	0
  1487  000478  6E06               	movwf	write_data@byte2^0,c
  1488  00047A  0E00               	movlw	0
  1489  00047C  EC3F  F009         	call	_write_data
  1490                           
  1491                           ;lm629.c: 1039:     check_busy();
  1492  000480  EC41  F00A         	call	_check_busy	;wreg free
  1493                           
  1494                           ;lm629.c: 1040:     write_data(0x00,0x48);
  1495  000484  0E48               	movlw	72
  1496  000486  6E06               	movwf	write_data@byte2^0,c
  1497  000488  0E00               	movlw	0
  1498  00048A  EC3F  F009         	call	_write_data
  1499                           
  1500                           ;lm629.c: 1041:     check_busy();
  1501  00048E  EC41  F00A         	call	_check_busy	;wreg free
  1502                           
  1503                           ;lm629.c: 1043:     write_data(0x00,0x00);
  1504  000492  0E00               	movlw	0
  1505  000494  6E06               	movwf	write_data@byte2^0,c
  1506  000496  0E00               	movlw	0
  1507  000498  EC3F  F009         	call	_write_data
  1508                           
  1509                           ;lm629.c: 1044:     check_busy();
  1510  00049C  EC41  F00A         	call	_check_busy	;wreg free
  1511                           
  1512                           ;lm629.c: 1045:     write_data(0xFD,0x68);
  1513  0004A0  0E68               	movlw	104
  1514  0004A2  6E06               	movwf	write_data@byte2^0,c
  1515  0004A4  0EFD               	movlw	253
  1516  0004A6  EC3F  F009         	call	_write_data
  1517                           
  1518                           ;lm629.c: 1046:     check_busy();
  1519  0004AA  EC41  F00A         	call	_check_busy	;wreg free
  1520                           
  1521                           ;lm629.c: 1048:     chip_select(2);
  1522  0004AE  0E02               	movlw	2
  1523  0004B0  EC6D  F009         	call	_chip_select
  1524                           
  1525                           ;lm629.c: 1049:     check_busy();
  1526  0004B4  EC41  F00A         	call	_check_busy	;wreg free
  1527                           
  1528                           ;lm629.c: 1050:     motor_off();
  1529  0004B8  EC17  F00A         	call	_motor_off	;wreg free
  1530                           
  1531                           ;lm629.c: 1051:     write_command(0x1F);
  1532  0004BC  0E1F               	movlw	31
  1533  0004BE  EC93  F009         	call	_write_command
  1534                           
  1535                           ;lm629.c: 1052:     check_busy();
  1536  0004C2  EC41  F00A         	call	_check_busy	;wreg free
  1537                           
  1538                           ;lm629.c: 1053:     write_data(0x18,0x28);
  1539  0004C6  0E28               	movlw	40
  1540  0004C8  6E06               	movwf	write_data@byte2^0,c
  1541  0004CA  0E18               	movlw	24
  1542  0004CC  EC3F  F009         	call	_write_data
  1543                           
  1544                           ;lm629.c: 1054:     check_busy();
  1545  0004D0  EC41  F00A         	call	_check_busy	;wreg free
  1546                           
  1547                           ;lm629.c: 1056:     write_data(0x00,0x00);
  1548  0004D4  0E00               	movlw	0
  1549  0004D6  6E06               	movwf	write_data@byte2^0,c
  1550  0004D8  0E00               	movlw	0
  1551  0004DA  EC3F  F009         	call	_write_data
  1552                           
  1553                           ;lm629.c: 1057:     check_busy();
  1554  0004DE  EC41  F00A         	call	_check_busy	;wreg free
  1555                           
  1556                           ;lm629.c: 1058:     write_data(0x00,0x48);
  1557  0004E2  0E48               	movlw	72
  1558  0004E4  6E06               	movwf	write_data@byte2^0,c
  1559  0004E6  0E00               	movlw	0
  1560  0004E8  EC3F  F009         	call	_write_data
  1561                           
  1562                           ;lm629.c: 1059:     check_busy();
  1563  0004EC  EC41  F00A         	call	_check_busy	;wreg free
  1564                           
  1565                           ;lm629.c: 1061:     write_data(0x00,0x01);
  1566  0004F0  0E01               	movlw	1
  1567  0004F2  6E06               	movwf	write_data@byte2^0,c
  1568  0004F4  0E00               	movlw	0
  1569  0004F6  EC3F  F009         	call	_write_data
  1570                           
  1571                           ;lm629.c: 1062:     check_busy();
  1572  0004FA  EC41  F00A         	call	_check_busy	;wreg free
  1573                           
  1574                           ;lm629.c: 1063:     write_data(0xFA,0xD0);
  1575  0004FE  0ED0               	movlw	208
  1576  000500  6E06               	movwf	write_data@byte2^0,c
  1577  000502  0EFA               	movlw	250
  1578  000504  EC3F  F009         	call	_write_data
  1579                           
  1580                           ;lm629.c: 1064:     check_busy();
  1581  000508  EC41  F00A         	call	_check_busy	;wreg free
  1582                           
  1583                           ;lm629.c: 1067:     chip_select(0);
  1584  00050C  0E00               	movlw	0
  1585  00050E  EC6D  F009         	call	_chip_select
  1586                           
  1587                           ;lm629.c: 1068:     write_command(0x01);
  1588  000512  0E01               	movlw	1
  1589  000514  EC93  F009         	call	_write_command
  1590                           
  1591                           ;lm629.c: 1069:     check_busy();
  1592  000518  EC41  F00A         	call	_check_busy	;wreg free
  1593                           
  1594                           ;lm629.c: 1071:     chip_select(2);
  1595  00051C  0E02               	movlw	2
  1596  00051E  EC6D  F009         	call	_chip_select
  1597                           
  1598                           ;lm629.c: 1072:     write_command(0x01);
  1599  000522  0E01               	movlw	1
  1600  000524  EC93  F009         	call	_write_command
  1601                           
  1602                           ;lm629.c: 1073:     check_busy();
  1603  000528  EC41  F00A         	call	_check_busy	;wreg free
  1604                           
  1605                           ;lm629.c: 1075:     chip_select(1);
  1606  00052C  0E01               	movlw	1
  1607  00052E  EC6D  F009         	call	_chip_select
  1608                           
  1609                           ;lm629.c: 1076:     write_command(0x01);
  1610  000532  0E01               	movlw	1
  1611  000534  EC93  F009         	call	_write_command
  1612                           
  1613                           ;lm629.c: 1077:     check_busy();
  1614  000538  EC41  F00A         	call	_check_busy	;wreg free
  1615                           
  1616                           ;lm629.c: 1079:     chip_select(3);
  1617  00053C  0E03               	movlw	3
  1618  00053E  EC6D  F009         	call	_chip_select
  1619                           
  1620                           ;lm629.c: 1080:     write_command(0x01);
  1621  000542  0E01               	movlw	1
  1622  000544  EC93  F009         	call	_write_command
  1623                           
  1624                           ;lm629.c: 1081:     check_busy();
  1625  000548  EC41  F00A         	call	_check_busy	;wreg free
  1626  00054C  0012               	return		;funcret
  1627  00054E                     __end_of_reverse_left:
  1628                           	callstack 0
  1629                           
  1630 ;; *************** function _reverse *****************
  1631 ;; Defined at:
  1632 ;;		line 515 in file "lm629.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		wreg, status,2, status,0, cstack
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/F
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used: 1
  1652 ;; Hardware stack levels required when called: 5
  1653 ;; This function calls:
  1654 ;;		_check_busy
  1655 ;;		_chip_select
  1656 ;;		_motor_off
  1657 ;;		_write_command
  1658 ;;		_write_data
  1659 ;; This function is called by:
  1660 ;;		_main
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           	psect	text6
  1665  00054E                     __ptext6:
  1666                           	callstack 0
  1667  00054E                     _reverse:
  1668                           	callstack 25
  1669                           
  1670                           ;lm629.c: 517:     chip_select(1);
  1671                           
  1672                           ;incstack = 0
  1673  00054E  0E01               	movlw	1
  1674  000550  EC6D  F009         	call	_chip_select
  1675                           
  1676                           ;lm629.c: 518:     check_busy();
  1677  000554  EC41  F00A         	call	_check_busy	;wreg free
  1678                           
  1679                           ;lm629.c: 519:     motor_off();
  1680  000558  EC17  F00A         	call	_motor_off	;wreg free
  1681                           
  1682                           ;lm629.c: 520:     write_command(0x1F);
  1683  00055C  0E1F               	movlw	31
  1684  00055E  EC93  F009         	call	_write_command
  1685                           
  1686                           ;lm629.c: 521:     check_busy();
  1687  000562  EC41  F00A         	call	_check_busy	;wreg free
  1688                           
  1689                           ;lm629.c: 522:     write_data(0x18,0x28);
  1690  000566  0E28               	movlw	40
  1691  000568  6E06               	movwf	write_data@byte2^0,c
  1692  00056A  0E18               	movlw	24
  1693  00056C  EC3F  F009         	call	_write_data
  1694                           
  1695                           ;lm629.c: 523:     check_busy();
  1696  000570  EC41  F00A         	call	_check_busy	;wreg free
  1697                           
  1698                           ;lm629.c: 525:     write_data(0x00,0x00);
  1699  000574  0E00               	movlw	0
  1700  000576  6E06               	movwf	write_data@byte2^0,c
  1701  000578  0E00               	movlw	0
  1702  00057A  EC3F  F009         	call	_write_data
  1703                           
  1704                           ;lm629.c: 526:     check_busy();
  1705  00057E  EC41  F00A         	call	_check_busy	;wreg free
  1706                           
  1707                           ;lm629.c: 527:     write_data(0x00,0x48);
  1708  000582  0E48               	movlw	72
  1709  000584  6E06               	movwf	write_data@byte2^0,c
  1710  000586  0E00               	movlw	0
  1711  000588  EC3F  F009         	call	_write_data
  1712                           
  1713                           ;lm629.c: 528:     check_busy();
  1714  00058C  EC41  F00A         	call	_check_busy	;wreg free
  1715                           
  1716                           ;lm629.c: 530:     write_data(0x00,0x01);
  1717  000590  0E01               	movlw	1
  1718  000592  6E06               	movwf	write_data@byte2^0,c
  1719  000594  0E00               	movlw	0
  1720  000596  EC3F  F009         	call	_write_data
  1721                           
  1722                           ;lm629.c: 531:     check_busy();
  1723  00059A  EC41  F00A         	call	_check_busy	;wreg free
  1724                           
  1725                           ;lm629.c: 532:     write_data(0xFA,0xD0);
  1726  00059E  0ED0               	movlw	208
  1727  0005A0  6E06               	movwf	write_data@byte2^0,c
  1728  0005A2  0EFA               	movlw	250
  1729  0005A4  EC3F  F009         	call	_write_data
  1730                           
  1731                           ;lm629.c: 533:     check_busy();
  1732  0005A8  EC41  F00A         	call	_check_busy	;wreg free
  1733                           
  1734                           ;lm629.c: 536:     chip_select(0);
  1735  0005AC  0E00               	movlw	0
  1736  0005AE  EC6D  F009         	call	_chip_select
  1737                           
  1738                           ;lm629.c: 537:     check_busy();
  1739  0005B2  EC41  F00A         	call	_check_busy	;wreg free
  1740                           
  1741                           ;lm629.c: 538:     motor_off();
  1742  0005B6  EC17  F00A         	call	_motor_off	;wreg free
  1743                           
  1744                           ;lm629.c: 539:     write_command(0x1F);
  1745  0005BA  0E1F               	movlw	31
  1746  0005BC  EC93  F009         	call	_write_command
  1747                           
  1748                           ;lm629.c: 540:     check_busy();
  1749  0005C0  EC41  F00A         	call	_check_busy	;wreg free
  1750                           
  1751                           ;lm629.c: 541:     write_data(0x08,0x28);
  1752  0005C4  0E28               	movlw	40
  1753  0005C6  6E06               	movwf	write_data@byte2^0,c
  1754  0005C8  0E08               	movlw	8
  1755  0005CA  EC3F  F009         	call	_write_data
  1756                           
  1757                           ;lm629.c: 542:     check_busy();
  1758  0005CE  EC41  F00A         	call	_check_busy	;wreg free
  1759                           
  1760                           ;lm629.c: 544:     write_data(0x00,0x00);
  1761  0005D2  0E00               	movlw	0
  1762  0005D4  6E06               	movwf	write_data@byte2^0,c
  1763  0005D6  0E00               	movlw	0
  1764  0005D8  EC3F  F009         	call	_write_data
  1765                           
  1766                           ;lm629.c: 545:     check_busy();
  1767  0005DC  EC41  F00A         	call	_check_busy	;wreg free
  1768                           
  1769                           ;lm629.c: 546:     write_data(0x00,0x48);
  1770  0005E0  0E48               	movlw	72
  1771  0005E2  6E06               	movwf	write_data@byte2^0,c
  1772  0005E4  0E00               	movlw	0
  1773  0005E6  EC3F  F009         	call	_write_data
  1774                           
  1775                           ;lm629.c: 547:     check_busy();
  1776  0005EA  EC41  F00A         	call	_check_busy	;wreg free
  1777                           
  1778                           ;lm629.c: 549:     write_data(0x00,0x01);
  1779  0005EE  0E01               	movlw	1
  1780  0005F0  6E06               	movwf	write_data@byte2^0,c
  1781  0005F2  0E00               	movlw	0
  1782  0005F4  EC3F  F009         	call	_write_data
  1783                           
  1784                           ;lm629.c: 550:     check_busy();
  1785  0005F8  EC41  F00A         	call	_check_busy	;wreg free
  1786                           
  1787                           ;lm629.c: 551:     write_data(0xFA,0xD0);
  1788  0005FC  0ED0               	movlw	208
  1789  0005FE  6E06               	movwf	write_data@byte2^0,c
  1790  000600  0EFA               	movlw	250
  1791  000602  EC3F  F009         	call	_write_data
  1792                           
  1793                           ;lm629.c: 552:     check_busy();
  1794  000606  EC41  F00A         	call	_check_busy	;wreg free
  1795                           
  1796                           ;lm629.c: 556:     chip_select(3);
  1797  00060A  0E03               	movlw	3
  1798  00060C  EC6D  F009         	call	_chip_select
  1799                           
  1800                           ;lm629.c: 557:     check_busy();
  1801  000610  EC41  F00A         	call	_check_busy	;wreg free
  1802                           
  1803                           ;lm629.c: 558:     motor_off();
  1804  000614  EC17  F00A         	call	_motor_off	;wreg free
  1805                           
  1806                           ;lm629.c: 559:     write_command(0x1F);
  1807  000618  0E1F               	movlw	31
  1808  00061A  EC93  F009         	call	_write_command
  1809                           
  1810                           ;lm629.c: 560:     check_busy();
  1811  00061E  EC41  F00A         	call	_check_busy	;wreg free
  1812                           
  1813                           ;lm629.c: 561:     write_data(0x08,0x28);
  1814  000622  0E28               	movlw	40
  1815  000624  6E06               	movwf	write_data@byte2^0,c
  1816  000626  0E08               	movlw	8
  1817  000628  EC3F  F009         	call	_write_data
  1818                           
  1819                           ;lm629.c: 562:     check_busy();
  1820  00062C  EC41  F00A         	call	_check_busy	;wreg free
  1821                           
  1822                           ;lm629.c: 564:     write_data(0x00,0x00);
  1823  000630  0E00               	movlw	0
  1824  000632  6E06               	movwf	write_data@byte2^0,c
  1825  000634  0E00               	movlw	0
  1826  000636  EC3F  F009         	call	_write_data
  1827                           
  1828                           ;lm629.c: 565:     check_busy();
  1829  00063A  EC41  F00A         	call	_check_busy	;wreg free
  1830                           
  1831                           ;lm629.c: 566:     write_data(0x00,0x48);
  1832  00063E  0E48               	movlw	72
  1833  000640  6E06               	movwf	write_data@byte2^0,c
  1834  000642  0E00               	movlw	0
  1835  000644  EC3F  F009         	call	_write_data
  1836                           
  1837                           ;lm629.c: 567:     check_busy();
  1838  000648  EC41  F00A         	call	_check_busy	;wreg free
  1839                           
  1840                           ;lm629.c: 569:     write_data(0x00,0x01);
  1841  00064C  0E01               	movlw	1
  1842  00064E  6E06               	movwf	write_data@byte2^0,c
  1843  000650  0E00               	movlw	0
  1844  000652  EC3F  F009         	call	_write_data
  1845                           
  1846                           ;lm629.c: 570:     check_busy();
  1847  000656  EC41  F00A         	call	_check_busy	;wreg free
  1848                           
  1849                           ;lm629.c: 571:     write_data(0xFA,0xD0);
  1850  00065A  0ED0               	movlw	208
  1851  00065C  6E06               	movwf	write_data@byte2^0,c
  1852  00065E  0EFA               	movlw	250
  1853  000660  EC3F  F009         	call	_write_data
  1854                           
  1855                           ;lm629.c: 572:     check_busy();
  1856  000664  EC41  F00A         	call	_check_busy	;wreg free
  1857                           
  1858                           ;lm629.c: 574:     chip_select(2);
  1859  000668  0E02               	movlw	2
  1860  00066A  EC6D  F009         	call	_chip_select
  1861                           
  1862                           ;lm629.c: 575:     check_busy();
  1863  00066E  EC41  F00A         	call	_check_busy	;wreg free
  1864                           
  1865                           ;lm629.c: 576:     motor_off();
  1866  000672  EC17  F00A         	call	_motor_off	;wreg free
  1867                           
  1868                           ;lm629.c: 577:     write_command(0x1F);
  1869  000676  0E1F               	movlw	31
  1870  000678  EC93  F009         	call	_write_command
  1871                           
  1872                           ;lm629.c: 578:     check_busy();
  1873  00067C  EC41  F00A         	call	_check_busy	;wreg free
  1874                           
  1875                           ;lm629.c: 579:     write_data(0x18,0x28);
  1876  000680  0E28               	movlw	40
  1877  000682  6E06               	movwf	write_data@byte2^0,c
  1878  000684  0E18               	movlw	24
  1879  000686  EC3F  F009         	call	_write_data
  1880                           
  1881                           ;lm629.c: 580:     check_busy();
  1882  00068A  EC41  F00A         	call	_check_busy	;wreg free
  1883                           
  1884                           ;lm629.c: 582:     write_data(0x00,0x00);
  1885  00068E  0E00               	movlw	0
  1886  000690  6E06               	movwf	write_data@byte2^0,c
  1887  000692  0E00               	movlw	0
  1888  000694  EC3F  F009         	call	_write_data
  1889                           
  1890                           ;lm629.c: 583:     check_busy();
  1891  000698  EC41  F00A         	call	_check_busy	;wreg free
  1892                           
  1893                           ;lm629.c: 584:     write_data(0x00,0x48);
  1894  00069C  0E48               	movlw	72
  1895  00069E  6E06               	movwf	write_data@byte2^0,c
  1896  0006A0  0E00               	movlw	0
  1897  0006A2  EC3F  F009         	call	_write_data
  1898                           
  1899                           ;lm629.c: 585:     check_busy();
  1900  0006A6  EC41  F00A         	call	_check_busy	;wreg free
  1901                           
  1902                           ;lm629.c: 587:     write_data(0x00,0x01);
  1903  0006AA  0E01               	movlw	1
  1904  0006AC  6E06               	movwf	write_data@byte2^0,c
  1905  0006AE  0E00               	movlw	0
  1906  0006B0  EC3F  F009         	call	_write_data
  1907                           
  1908                           ;lm629.c: 588:     check_busy();
  1909  0006B4  EC41  F00A         	call	_check_busy	;wreg free
  1910                           
  1911                           ;lm629.c: 589:     write_data(0xFA,0xD0);
  1912  0006B8  0ED0               	movlw	208
  1913  0006BA  6E06               	movwf	write_data@byte2^0,c
  1914  0006BC  0EFA               	movlw	250
  1915  0006BE  EC3F  F009         	call	_write_data
  1916                           
  1917                           ;lm629.c: 590:     check_busy();
  1918  0006C2  EC41  F00A         	call	_check_busy	;wreg free
  1919                           
  1920                           ;lm629.c: 593:     chip_select(0);
  1921  0006C6  0E00               	movlw	0
  1922  0006C8  EC6D  F009         	call	_chip_select
  1923                           
  1924                           ;lm629.c: 594:     write_command(0x01);
  1925  0006CC  0E01               	movlw	1
  1926  0006CE  EC93  F009         	call	_write_command
  1927                           
  1928                           ;lm629.c: 595:     check_busy();
  1929  0006D2  EC41  F00A         	call	_check_busy	;wreg free
  1930                           
  1931                           ;lm629.c: 597:     chip_select(2);
  1932  0006D6  0E02               	movlw	2
  1933  0006D8  EC6D  F009         	call	_chip_select
  1934                           
  1935                           ;lm629.c: 598:     write_command(0x01);
  1936  0006DC  0E01               	movlw	1
  1937  0006DE  EC93  F009         	call	_write_command
  1938                           
  1939                           ;lm629.c: 599:     check_busy();
  1940  0006E2  EC41  F00A         	call	_check_busy	;wreg free
  1941                           
  1942                           ;lm629.c: 601:     chip_select(1);
  1943  0006E6  0E01               	movlw	1
  1944  0006E8  EC6D  F009         	call	_chip_select
  1945                           
  1946                           ;lm629.c: 602:     write_command(0x01);
  1947  0006EC  0E01               	movlw	1
  1948  0006EE  EC93  F009         	call	_write_command
  1949                           
  1950                           ;lm629.c: 603:     check_busy();
  1951  0006F2  EC41  F00A         	call	_check_busy	;wreg free
  1952                           
  1953                           ;lm629.c: 605:     chip_select(3);
  1954  0006F6  0E03               	movlw	3
  1955  0006F8  EC6D  F009         	call	_chip_select
  1956                           
  1957                           ;lm629.c: 606:     write_command(0x01);
  1958  0006FC  0E01               	movlw	1
  1959  0006FE  EC93  F009         	call	_write_command
  1960                           
  1961                           ;lm629.c: 607:     check_busy();
  1962  000702  EC41  F00A         	call	_check_busy	;wreg free
  1963  000706  0012               	return		;funcret
  1964  000708                     __end_of_reverse:
  1965                           	callstack 0
  1966                           
  1967 ;; *************** function _left *****************
  1968 ;; Defined at:
  1969 ;;		line 705 in file "lm629.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/F
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;Total ram usage:        0 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 5
  1990 ;; This function calls:
  1991 ;;		_check_busy
  1992 ;;		_chip_select
  1993 ;;		_motor_off
  1994 ;;		_write_command
  1995 ;;		_write_data
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text7
  2002  000708                     __ptext7:
  2003                           	callstack 0
  2004  000708                     _left:
  2005                           	callstack 25
  2006                           
  2007                           ;lm629.c: 707:     chip_select(0);
  2008                           
  2009                           ;incstack = 0
  2010  000708  0E00               	movlw	0
  2011  00070A  EC6D  F009         	call	_chip_select
  2012                           
  2013                           ;lm629.c: 708:     check_busy();
  2014  00070E  EC41  F00A         	call	_check_busy	;wreg free
  2015                           
  2016                           ;lm629.c: 709:     motor_off();
  2017  000712  EC17  F00A         	call	_motor_off	;wreg free
  2018                           
  2019                           ;lm629.c: 710:     write_command(0x1F);
  2020  000716  0E1F               	movlw	31
  2021  000718  EC93  F009         	call	_write_command
  2022                           
  2023                           ;lm629.c: 711:     check_busy();
  2024  00071C  EC41  F00A         	call	_check_busy	;wreg free
  2025                           
  2026                           ;lm629.c: 712:     write_data(0x18,0x28);
  2027  000720  0E28               	movlw	40
  2028  000722  6E06               	movwf	write_data@byte2^0,c
  2029  000724  0E18               	movlw	24
  2030  000726  EC3F  F009         	call	_write_data
  2031                           
  2032                           ;lm629.c: 713:     check_busy();
  2033  00072A  EC41  F00A         	call	_check_busy	;wreg free
  2034                           
  2035                           ;lm629.c: 715:     write_data(0x00,0x00);
  2036  00072E  0E00               	movlw	0
  2037  000730  6E06               	movwf	write_data@byte2^0,c
  2038  000732  0E00               	movlw	0
  2039  000734  EC3F  F009         	call	_write_data
  2040                           
  2041                           ;lm629.c: 716:     check_busy();
  2042  000738  EC41  F00A         	call	_check_busy	;wreg free
  2043                           
  2044                           ;lm629.c: 717:     write_data(0x00,0x48);
  2045  00073C  0E48               	movlw	72
  2046  00073E  6E06               	movwf	write_data@byte2^0,c
  2047  000740  0E00               	movlw	0
  2048  000742  EC3F  F009         	call	_write_data
  2049                           
  2050                           ;lm629.c: 718:     check_busy();
  2051  000746  EC41  F00A         	call	_check_busy	;wreg free
  2052                           
  2053                           ;lm629.c: 720:     write_data(0x00,0x01);
  2054  00074A  0E01               	movlw	1
  2055  00074C  6E06               	movwf	write_data@byte2^0,c
  2056  00074E  0E00               	movlw	0
  2057  000750  EC3F  F009         	call	_write_data
  2058                           
  2059                           ;lm629.c: 721:     check_busy();
  2060  000754  EC41  F00A         	call	_check_busy	;wreg free
  2061                           
  2062                           ;lm629.c: 722:     write_data(0xFA,0xD0);
  2063  000758  0ED0               	movlw	208
  2064  00075A  6E06               	movwf	write_data@byte2^0,c
  2065  00075C  0EFA               	movlw	250
  2066  00075E  EC3F  F009         	call	_write_data
  2067                           
  2068                           ;lm629.c: 723:     check_busy();
  2069  000762  EC41  F00A         	call	_check_busy	;wreg free
  2070                           
  2071                           ;lm629.c: 725:     chip_select(1);
  2072  000766  0E01               	movlw	1
  2073  000768  EC6D  F009         	call	_chip_select
  2074                           
  2075                           ;lm629.c: 726:     check_busy();
  2076  00076C  EC41  F00A         	call	_check_busy	;wreg free
  2077                           
  2078                           ;lm629.c: 727:     motor_off();
  2079  000770  EC17  F00A         	call	_motor_off	;wreg free
  2080                           
  2081                           ;lm629.c: 728:     write_command(0x1F);
  2082  000774  0E1F               	movlw	31
  2083  000776  EC93  F009         	call	_write_command
  2084                           
  2085                           ;lm629.c: 729:     check_busy();
  2086  00077A  EC41  F00A         	call	_check_busy	;wreg free
  2087                           
  2088                           ;lm629.c: 730:     write_data(0x18,0x28);
  2089  00077E  0E28               	movlw	40
  2090  000780  6E06               	movwf	write_data@byte2^0,c
  2091  000782  0E18               	movlw	24
  2092  000784  EC3F  F009         	call	_write_data
  2093                           
  2094                           ;lm629.c: 731:     check_busy();
  2095  000788  EC41  F00A         	call	_check_busy	;wreg free
  2096                           
  2097                           ;lm629.c: 733:     write_data(0x00,0x00);
  2098  00078C  0E00               	movlw	0
  2099  00078E  6E06               	movwf	write_data@byte2^0,c
  2100  000790  0E00               	movlw	0
  2101  000792  EC3F  F009         	call	_write_data
  2102                           
  2103                           ;lm629.c: 734:     check_busy();
  2104  000796  EC41  F00A         	call	_check_busy	;wreg free
  2105                           
  2106                           ;lm629.c: 735:     write_data(0x00,0x48);
  2107  00079A  0E48               	movlw	72
  2108  00079C  6E06               	movwf	write_data@byte2^0,c
  2109  00079E  0E00               	movlw	0
  2110  0007A0  EC3F  F009         	call	_write_data
  2111                           
  2112                           ;lm629.c: 736:     check_busy();
  2113  0007A4  EC41  F00A         	call	_check_busy	;wreg free
  2114                           
  2115                           ;lm629.c: 738:     write_data(0x00,0x01);
  2116  0007A8  0E01               	movlw	1
  2117  0007AA  6E06               	movwf	write_data@byte2^0,c
  2118  0007AC  0E00               	movlw	0
  2119  0007AE  EC3F  F009         	call	_write_data
  2120                           
  2121                           ;lm629.c: 739:     check_busy();
  2122  0007B2  EC41  F00A         	call	_check_busy	;wreg free
  2123                           
  2124                           ;lm629.c: 740:     write_data(0xFA,0xD0);
  2125  0007B6  0ED0               	movlw	208
  2126  0007B8  6E06               	movwf	write_data@byte2^0,c
  2127  0007BA  0EFA               	movlw	250
  2128  0007BC  EC3F  F009         	call	_write_data
  2129                           
  2130                           ;lm629.c: 741:     check_busy();
  2131  0007C0  EC41  F00A         	call	_check_busy	;wreg free
  2132                           
  2133                           ;lm629.c: 744:     chip_select(2);
  2134  0007C4  0E02               	movlw	2
  2135  0007C6  EC6D  F009         	call	_chip_select
  2136                           
  2137                           ;lm629.c: 745:     check_busy();
  2138  0007CA  EC41  F00A         	call	_check_busy	;wreg free
  2139                           
  2140                           ;lm629.c: 746:     motor_off();
  2141  0007CE  EC17  F00A         	call	_motor_off	;wreg free
  2142                           
  2143                           ;lm629.c: 747:     write_command(0x1F);
  2144  0007D2  0E1F               	movlw	31
  2145  0007D4  EC93  F009         	call	_write_command
  2146                           
  2147                           ;lm629.c: 748:     check_busy();
  2148  0007D8  EC41  F00A         	call	_check_busy	;wreg free
  2149                           
  2150                           ;lm629.c: 749:     write_data(0x18,0x28);
  2151  0007DC  0E28               	movlw	40
  2152  0007DE  6E06               	movwf	write_data@byte2^0,c
  2153  0007E0  0E18               	movlw	24
  2154  0007E2  EC3F  F009         	call	_write_data
  2155                           
  2156                           ;lm629.c: 750:     check_busy();
  2157  0007E6  EC41  F00A         	call	_check_busy	;wreg free
  2158                           
  2159                           ;lm629.c: 752:     write_data(0x00,0x00);
  2160  0007EA  0E00               	movlw	0
  2161  0007EC  6E06               	movwf	write_data@byte2^0,c
  2162  0007EE  0E00               	movlw	0
  2163  0007F0  EC3F  F009         	call	_write_data
  2164                           
  2165                           ;lm629.c: 753:     check_busy();
  2166  0007F4  EC41  F00A         	call	_check_busy	;wreg free
  2167                           
  2168                           ;lm629.c: 754:     write_data(0x00,0x48);
  2169  0007F8  0E48               	movlw	72
  2170  0007FA  6E06               	movwf	write_data@byte2^0,c
  2171  0007FC  0E00               	movlw	0
  2172  0007FE  EC3F  F009         	call	_write_data
  2173                           
  2174                           ;lm629.c: 755:     check_busy();
  2175  000802  EC41  F00A         	call	_check_busy	;wreg free
  2176                           
  2177                           ;lm629.c: 757:     write_data(0x00,0x01);
  2178  000806  0E01               	movlw	1
  2179  000808  6E06               	movwf	write_data@byte2^0,c
  2180  00080A  0E00               	movlw	0
  2181  00080C  EC3F  F009         	call	_write_data
  2182                           
  2183                           ;lm629.c: 758:     check_busy();
  2184  000810  EC41  F00A         	call	_check_busy	;wreg free
  2185                           
  2186                           ;lm629.c: 759:     write_data(0xFA,0xD0);
  2187  000814  0ED0               	movlw	208
  2188  000816  6E06               	movwf	write_data@byte2^0,c
  2189  000818  0EFA               	movlw	250
  2190  00081A  EC3F  F009         	call	_write_data
  2191                           
  2192                           ;lm629.c: 760:     check_busy();
  2193  00081E  EC41  F00A         	call	_check_busy	;wreg free
  2194                           
  2195                           ;lm629.c: 763:     chip_select(3);
  2196  000822  0E03               	movlw	3
  2197  000824  EC6D  F009         	call	_chip_select
  2198                           
  2199                           ;lm629.c: 764:     check_busy();
  2200  000828  EC41  F00A         	call	_check_busy	;wreg free
  2201                           
  2202                           ;lm629.c: 765:     motor_off();
  2203  00082C  EC17  F00A         	call	_motor_off	;wreg free
  2204                           
  2205                           ;lm629.c: 766:     write_command(0x1F);
  2206  000830  0E1F               	movlw	31
  2207  000832  EC93  F009         	call	_write_command
  2208                           
  2209                           ;lm629.c: 767:     check_busy();
  2210  000836  EC41  F00A         	call	_check_busy	;wreg free
  2211                           
  2212                           ;lm629.c: 768:     write_data(0x18,0x28);
  2213  00083A  0E28               	movlw	40
  2214  00083C  6E06               	movwf	write_data@byte2^0,c
  2215  00083E  0E18               	movlw	24
  2216  000840  EC3F  F009         	call	_write_data
  2217                           
  2218                           ;lm629.c: 769:     check_busy();
  2219  000844  EC41  F00A         	call	_check_busy	;wreg free
  2220                           
  2221                           ;lm629.c: 771:     write_data(0x00,0x00);
  2222  000848  0E00               	movlw	0
  2223  00084A  6E06               	movwf	write_data@byte2^0,c
  2224  00084C  0E00               	movlw	0
  2225  00084E  EC3F  F009         	call	_write_data
  2226                           
  2227                           ;lm629.c: 772:     check_busy();
  2228  000852  EC41  F00A         	call	_check_busy	;wreg free
  2229                           
  2230                           ;lm629.c: 773:     write_data(0x00,0x48);
  2231  000856  0E48               	movlw	72
  2232  000858  6E06               	movwf	write_data@byte2^0,c
  2233  00085A  0E00               	movlw	0
  2234  00085C  EC3F  F009         	call	_write_data
  2235                           
  2236                           ;lm629.c: 774:     check_busy();
  2237  000860  EC41  F00A         	call	_check_busy	;wreg free
  2238                           
  2239                           ;lm629.c: 776:     write_data(0x00,0x01);
  2240  000864  0E01               	movlw	1
  2241  000866  6E06               	movwf	write_data@byte2^0,c
  2242  000868  0E00               	movlw	0
  2243  00086A  EC3F  F009         	call	_write_data
  2244                           
  2245                           ;lm629.c: 777:     check_busy();
  2246  00086E  EC41  F00A         	call	_check_busy	;wreg free
  2247                           
  2248                           ;lm629.c: 778:     write_data(0xFA,0xD0);
  2249  000872  0ED0               	movlw	208
  2250  000874  6E06               	movwf	write_data@byte2^0,c
  2251  000876  0EFA               	movlw	250
  2252  000878  EC3F  F009         	call	_write_data
  2253                           
  2254                           ;lm629.c: 779:     check_busy();
  2255  00087C  EC41  F00A         	call	_check_busy	;wreg free
  2256                           
  2257                           ;lm629.c: 782:     chip_select(0);
  2258  000880  0E00               	movlw	0
  2259  000882  EC6D  F009         	call	_chip_select
  2260                           
  2261                           ;lm629.c: 783:     write_command(0x01);
  2262  000886  0E01               	movlw	1
  2263  000888  EC93  F009         	call	_write_command
  2264                           
  2265                           ;lm629.c: 784:     check_busy();
  2266  00088C  EC41  F00A         	call	_check_busy	;wreg free
  2267                           
  2268                           ;lm629.c: 786:     chip_select(2);
  2269  000890  0E02               	movlw	2
  2270  000892  EC6D  F009         	call	_chip_select
  2271                           
  2272                           ;lm629.c: 787:     write_command(0x01);
  2273  000896  0E01               	movlw	1
  2274  000898  EC93  F009         	call	_write_command
  2275                           
  2276                           ;lm629.c: 788:     check_busy();
  2277  00089C  EC41  F00A         	call	_check_busy	;wreg free
  2278                           
  2279                           ;lm629.c: 790:     chip_select(1);
  2280  0008A0  0E01               	movlw	1
  2281  0008A2  EC6D  F009         	call	_chip_select
  2282                           
  2283                           ;lm629.c: 791:     write_command(0x01);
  2284  0008A6  0E01               	movlw	1
  2285  0008A8  EC93  F009         	call	_write_command
  2286                           
  2287                           ;lm629.c: 792:     check_busy();
  2288  0008AC  EC41  F00A         	call	_check_busy	;wreg free
  2289                           
  2290                           ;lm629.c: 794:     chip_select(3);
  2291  0008B0  0E03               	movlw	3
  2292  0008B2  EC6D  F009         	call	_chip_select
  2293                           
  2294                           ;lm629.c: 795:     write_command(0x01);
  2295  0008B6  0E01               	movlw	1
  2296  0008B8  EC93  F009         	call	_write_command
  2297                           
  2298                           ;lm629.c: 796:     check_busy();
  2299  0008BC  EC41  F00A         	call	_check_busy	;wreg free
  2300  0008C0  0012               	return		;funcret
  2301  0008C2                     __end_of_left:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _forward_right *****************
  2305 ;; Defined at:
  2306 ;;		line 894 in file "lm629.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/F
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;Total ram usage:        0 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 5
  2327 ;; This function calls:
  2328 ;;		_check_busy
  2329 ;;		_chip_select
  2330 ;;		_motor_off
  2331 ;;		_write_command
  2332 ;;		_write_data
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text8
  2339  0008C2                     __ptext8:
  2340                           	callstack 0
  2341  0008C2                     _forward_right:
  2342                           	callstack 25
  2343                           
  2344                           ;lm629.c: 896:     chip_select(0);
  2345                           
  2346                           ;incstack = 0
  2347  0008C2  0E00               	movlw	0
  2348  0008C4  EC6D  F009         	call	_chip_select
  2349                           
  2350                           ;lm629.c: 897:     check_busy();
  2351  0008C8  EC41  F00A         	call	_check_busy	;wreg free
  2352                           
  2353                           ;lm629.c: 898:     motor_off();
  2354  0008CC  EC17  F00A         	call	_motor_off	;wreg free
  2355                           
  2356                           ;lm629.c: 899:     write_command(0x1F);
  2357  0008D0  0E1F               	movlw	31
  2358  0008D2  EC93  F009         	call	_write_command
  2359                           
  2360                           ;lm629.c: 900:     check_busy();
  2361  0008D6  EC41  F00A         	call	_check_busy	;wreg free
  2362                           
  2363                           ;lm629.c: 901:     write_data(0x18,0x28);
  2364  0008DA  0E28               	movlw	40
  2365  0008DC  6E06               	movwf	write_data@byte2^0,c
  2366  0008DE  0E18               	movlw	24
  2367  0008E0  EC3F  F009         	call	_write_data
  2368                           
  2369                           ;lm629.c: 902:     check_busy();
  2370  0008E4  EC41  F00A         	call	_check_busy	;wreg free
  2371                           
  2372                           ;lm629.c: 904:     write_data(0x00,0x00);
  2373  0008E8  0E00               	movlw	0
  2374  0008EA  6E06               	movwf	write_data@byte2^0,c
  2375  0008EC  0E00               	movlw	0
  2376  0008EE  EC3F  F009         	call	_write_data
  2377                           
  2378                           ;lm629.c: 905:     check_busy();
  2379  0008F2  EC41  F00A         	call	_check_busy	;wreg free
  2380                           
  2381                           ;lm629.c: 906:     write_data(0x00,0x48);
  2382  0008F6  0E48               	movlw	72
  2383  0008F8  6E06               	movwf	write_data@byte2^0,c
  2384  0008FA  0E00               	movlw	0
  2385  0008FC  EC3F  F009         	call	_write_data
  2386                           
  2387                           ;lm629.c: 907:     check_busy();
  2388  000900  EC41  F00A         	call	_check_busy	;wreg free
  2389                           
  2390                           ;lm629.c: 909:     write_data(0x00,0x00);
  2391  000904  0E00               	movlw	0
  2392  000906  6E06               	movwf	write_data@byte2^0,c
  2393  000908  0E00               	movlw	0
  2394  00090A  EC3F  F009         	call	_write_data
  2395                           
  2396                           ;lm629.c: 910:     check_busy();
  2397  00090E  EC41  F00A         	call	_check_busy	;wreg free
  2398                           
  2399                           ;lm629.c: 911:     write_data(0xFD,0x68);
  2400  000912  0E68               	movlw	104
  2401  000914  6E06               	movwf	write_data@byte2^0,c
  2402  000916  0EFD               	movlw	253
  2403  000918  EC3F  F009         	call	_write_data
  2404                           
  2405                           ;lm629.c: 912:     check_busy();
  2406  00091C  EC41  F00A         	call	_check_busy	;wreg free
  2407                           
  2408                           ;lm629.c: 915:     chip_select(1);
  2409  000920  0E01               	movlw	1
  2410  000922  EC6D  F009         	call	_chip_select
  2411                           
  2412                           ;lm629.c: 916:     check_busy();
  2413  000926  EC41  F00A         	call	_check_busy	;wreg free
  2414                           
  2415                           ;lm629.c: 917:     motor_off();
  2416  00092A  EC17  F00A         	call	_motor_off	;wreg free
  2417                           
  2418                           ;lm629.c: 918:     write_command(0x1F);
  2419  00092E  0E1F               	movlw	31
  2420  000930  EC93  F009         	call	_write_command
  2421                           
  2422                           ;lm629.c: 919:     check_busy();
  2423  000934  EC41  F00A         	call	_check_busy	;wreg free
  2424                           
  2425                           ;lm629.c: 920:     write_data(0x08,0x28);
  2426  000938  0E28               	movlw	40
  2427  00093A  6E06               	movwf	write_data@byte2^0,c
  2428  00093C  0E08               	movlw	8
  2429  00093E  EC3F  F009         	call	_write_data
  2430                           
  2431                           ;lm629.c: 921:     check_busy();
  2432  000942  EC41  F00A         	call	_check_busy	;wreg free
  2433                           
  2434                           ;lm629.c: 923:     write_data(0x00,0x00);
  2435  000946  0E00               	movlw	0
  2436  000948  6E06               	movwf	write_data@byte2^0,c
  2437  00094A  0E00               	movlw	0
  2438  00094C  EC3F  F009         	call	_write_data
  2439                           
  2440                           ;lm629.c: 924:     check_busy();
  2441  000950  EC41  F00A         	call	_check_busy	;wreg free
  2442                           
  2443                           ;lm629.c: 925:     write_data(0x00,0x48);
  2444  000954  0E48               	movlw	72
  2445  000956  6E06               	movwf	write_data@byte2^0,c
  2446  000958  0E00               	movlw	0
  2447  00095A  EC3F  F009         	call	_write_data
  2448                           
  2449                           ;lm629.c: 926:     check_busy();
  2450  00095E  EC41  F00A         	call	_check_busy	;wreg free
  2451                           
  2452                           ;lm629.c: 928:     write_data(0x00,0x01);
  2453  000962  0E01               	movlw	1
  2454  000964  6E06               	movwf	write_data@byte2^0,c
  2455  000966  0E00               	movlw	0
  2456  000968  EC3F  F009         	call	_write_data
  2457                           
  2458                           ;lm629.c: 929:     check_busy();
  2459  00096C  EC41  F00A         	call	_check_busy	;wreg free
  2460                           
  2461                           ;lm629.c: 930:     write_data(0xFA,0xD0);
  2462  000970  0ED0               	movlw	208
  2463  000972  6E06               	movwf	write_data@byte2^0,c
  2464  000974  0EFA               	movlw	250
  2465  000976  EC3F  F009         	call	_write_data
  2466                           
  2467                           ;lm629.c: 931:     check_busy();
  2468  00097A  EC41  F00A         	call	_check_busy	;wreg free
  2469                           
  2470                           ;lm629.c: 934:     chip_select(2);
  2471  00097E  0E02               	movlw	2
  2472  000980  EC6D  F009         	call	_chip_select
  2473                           
  2474                           ;lm629.c: 935:     check_busy();
  2475  000984  EC41  F00A         	call	_check_busy	;wreg free
  2476                           
  2477                           ;lm629.c: 936:     motor_off();
  2478  000988  EC17  F00A         	call	_motor_off	;wreg free
  2479                           
  2480                           ;lm629.c: 937:     write_command(0x1F);
  2481  00098C  0E1F               	movlw	31
  2482  00098E  EC93  F009         	call	_write_command
  2483                           
  2484                           ;lm629.c: 938:     check_busy();
  2485  000992  EC41  F00A         	call	_check_busy	;wreg free
  2486                           
  2487                           ;lm629.c: 939:     write_data(0x08,0x28);
  2488  000996  0E28               	movlw	40
  2489  000998  6E06               	movwf	write_data@byte2^0,c
  2490  00099A  0E08               	movlw	8
  2491  00099C  EC3F  F009         	call	_write_data
  2492                           
  2493                           ;lm629.c: 940:     check_busy();
  2494  0009A0  EC41  F00A         	call	_check_busy	;wreg free
  2495                           
  2496                           ;lm629.c: 942:     write_data(0x00,0x00);
  2497  0009A4  0E00               	movlw	0
  2498  0009A6  6E06               	movwf	write_data@byte2^0,c
  2499  0009A8  0E00               	movlw	0
  2500  0009AA  EC3F  F009         	call	_write_data
  2501                           
  2502                           ;lm629.c: 943:     check_busy();
  2503  0009AE  EC41  F00A         	call	_check_busy	;wreg free
  2504                           
  2505                           ;lm629.c: 944:     write_data(0x00,0x48);
  2506  0009B2  0E48               	movlw	72
  2507  0009B4  6E06               	movwf	write_data@byte2^0,c
  2508  0009B6  0E00               	movlw	0
  2509  0009B8  EC3F  F009         	call	_write_data
  2510                           
  2511                           ;lm629.c: 945:     check_busy();
  2512  0009BC  EC41  F00A         	call	_check_busy	;wreg free
  2513                           
  2514                           ;lm629.c: 947:     write_data(0x00,0x01);
  2515  0009C0  0E01               	movlw	1
  2516  0009C2  6E06               	movwf	write_data@byte2^0,c
  2517  0009C4  0E00               	movlw	0
  2518  0009C6  EC3F  F009         	call	_write_data
  2519                           
  2520                           ;lm629.c: 948:     check_busy();
  2521  0009CA  EC41  F00A         	call	_check_busy	;wreg free
  2522                           
  2523                           ;lm629.c: 949:     write_data(0xFA,0xD0);
  2524  0009CE  0ED0               	movlw	208
  2525  0009D0  6E06               	movwf	write_data@byte2^0,c
  2526  0009D2  0EFA               	movlw	250
  2527  0009D4  EC3F  F009         	call	_write_data
  2528                           
  2529                           ;lm629.c: 950:     check_busy();
  2530  0009D8  EC41  F00A         	call	_check_busy	;wreg free
  2531                           
  2532                           ;lm629.c: 953:     chip_select(3);
  2533  0009DC  0E03               	movlw	3
  2534  0009DE  EC6D  F009         	call	_chip_select
  2535                           
  2536                           ;lm629.c: 954:     check_busy();
  2537  0009E2  EC41  F00A         	call	_check_busy	;wreg free
  2538                           
  2539                           ;lm629.c: 955:     motor_off();
  2540  0009E6  EC17  F00A         	call	_motor_off	;wreg free
  2541                           
  2542                           ;lm629.c: 956:     write_command(0x1F);
  2543  0009EA  0E1F               	movlw	31
  2544  0009EC  EC93  F009         	call	_write_command
  2545                           
  2546                           ;lm629.c: 957:     check_busy();
  2547  0009F0  EC41  F00A         	call	_check_busy	;wreg free
  2548                           
  2549                           ;lm629.c: 958:     write_data(0x18,0x28);
  2550  0009F4  0E28               	movlw	40
  2551  0009F6  6E06               	movwf	write_data@byte2^0,c
  2552  0009F8  0E18               	movlw	24
  2553  0009FA  EC3F  F009         	call	_write_data
  2554                           
  2555                           ;lm629.c: 959:     check_busy();
  2556  0009FE  EC41  F00A         	call	_check_busy	;wreg free
  2557                           
  2558                           ;lm629.c: 961:     write_data(0x00,0x00);
  2559  000A02  0E00               	movlw	0
  2560  000A04  6E06               	movwf	write_data@byte2^0,c
  2561  000A06  0E00               	movlw	0
  2562  000A08  EC3F  F009         	call	_write_data
  2563                           
  2564                           ;lm629.c: 962:     check_busy();
  2565  000A0C  EC41  F00A         	call	_check_busy	;wreg free
  2566                           
  2567                           ;lm629.c: 963:     write_data(0x00,0x48);
  2568  000A10  0E48               	movlw	72
  2569  000A12  6E06               	movwf	write_data@byte2^0,c
  2570  000A14  0E00               	movlw	0
  2571  000A16  EC3F  F009         	call	_write_data
  2572                           
  2573                           ;lm629.c: 964:     check_busy();
  2574  000A1A  EC41  F00A         	call	_check_busy	;wreg free
  2575                           
  2576                           ;lm629.c: 966:     write_data(0x00,0x00);
  2577  000A1E  0E00               	movlw	0
  2578  000A20  6E06               	movwf	write_data@byte2^0,c
  2579  000A22  0E00               	movlw	0
  2580  000A24  EC3F  F009         	call	_write_data
  2581                           
  2582                           ;lm629.c: 967:     check_busy();
  2583  000A28  EC41  F00A         	call	_check_busy	;wreg free
  2584                           
  2585                           ;lm629.c: 968:     write_data(0xFD,0x68);
  2586  000A2C  0E68               	movlw	104
  2587  000A2E  6E06               	movwf	write_data@byte2^0,c
  2588  000A30  0EFD               	movlw	253
  2589  000A32  EC3F  F009         	call	_write_data
  2590                           
  2591                           ;lm629.c: 969:     check_busy();
  2592  000A36  EC41  F00A         	call	_check_busy	;wreg free
  2593                           
  2594                           ;lm629.c: 972:     chip_select(0);
  2595  000A3A  0E00               	movlw	0
  2596  000A3C  EC6D  F009         	call	_chip_select
  2597                           
  2598                           ;lm629.c: 973:     write_command(0x01);
  2599  000A40  0E01               	movlw	1
  2600  000A42  EC93  F009         	call	_write_command
  2601                           
  2602                           ;lm629.c: 974:     check_busy();
  2603  000A46  EC41  F00A         	call	_check_busy	;wreg free
  2604                           
  2605                           ;lm629.c: 976:     chip_select(2);
  2606  000A4A  0E02               	movlw	2
  2607  000A4C  EC6D  F009         	call	_chip_select
  2608                           
  2609                           ;lm629.c: 977:     write_command(0x01);
  2610  000A50  0E01               	movlw	1
  2611  000A52  EC93  F009         	call	_write_command
  2612                           
  2613                           ;lm629.c: 978:     check_busy();
  2614  000A56  EC41  F00A         	call	_check_busy	;wreg free
  2615                           
  2616                           ;lm629.c: 980:     chip_select(1);
  2617  000A5A  0E01               	movlw	1
  2618  000A5C  EC6D  F009         	call	_chip_select
  2619                           
  2620                           ;lm629.c: 981:     write_command(0x01);
  2621  000A60  0E01               	movlw	1
  2622  000A62  EC93  F009         	call	_write_command
  2623                           
  2624                           ;lm629.c: 982:     check_busy();
  2625  000A66  EC41  F00A         	call	_check_busy	;wreg free
  2626                           
  2627                           ;lm629.c: 984:     chip_select(3);
  2628  000A6A  0E03               	movlw	3
  2629  000A6C  EC6D  F009         	call	_chip_select
  2630                           
  2631                           ;lm629.c: 985:     write_command(0x01);
  2632  000A70  0E01               	movlw	1
  2633  000A72  EC93  F009         	call	_write_command
  2634                           
  2635                           ;lm629.c: 986:     check_busy();
  2636  000A76  EC41  F00A         	call	_check_busy	;wreg free
  2637  000A7A  0012               	return		;funcret
  2638  000A7C                     __end_of_forward_right:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function _forward_left *****************
  2642 ;; Defined at:
  2643 ;;		line 799 in file "lm629.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/F
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 5
  2664 ;; This function calls:
  2665 ;;		_check_busy
  2666 ;;		_chip_select
  2667 ;;		_motor_off
  2668 ;;		_write_command
  2669 ;;		_write_data
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text9
  2676  000A7C                     __ptext9:
  2677                           	callstack 0
  2678  000A7C                     _forward_left:
  2679                           	callstack 25
  2680                           
  2681                           ;lm629.c: 801:     chip_select(0);
  2682                           
  2683                           ;incstack = 0
  2684  000A7C  0E00               	movlw	0
  2685  000A7E  EC6D  F009         	call	_chip_select
  2686                           
  2687                           ;lm629.c: 802:     check_busy();
  2688  000A82  EC41  F00A         	call	_check_busy	;wreg free
  2689                           
  2690                           ;lm629.c: 803:     motor_off();
  2691  000A86  EC17  F00A         	call	_motor_off	;wreg free
  2692                           
  2693                           ;lm629.c: 804:     write_command(0x1F);
  2694  000A8A  0E1F               	movlw	31
  2695  000A8C  EC93  F009         	call	_write_command
  2696                           
  2697                           ;lm629.c: 805:     check_busy();
  2698  000A90  EC41  F00A         	call	_check_busy	;wreg free
  2699                           
  2700                           ;lm629.c: 806:     write_data(0x18,0x28);
  2701  000A94  0E28               	movlw	40
  2702  000A96  6E06               	movwf	write_data@byte2^0,c
  2703  000A98  0E18               	movlw	24
  2704  000A9A  EC3F  F009         	call	_write_data
  2705                           
  2706                           ;lm629.c: 807:     check_busy();
  2707  000A9E  EC41  F00A         	call	_check_busy	;wreg free
  2708                           
  2709                           ;lm629.c: 809:     write_data(0x00,0x00);
  2710  000AA2  0E00               	movlw	0
  2711  000AA4  6E06               	movwf	write_data@byte2^0,c
  2712  000AA6  0E00               	movlw	0
  2713  000AA8  EC3F  F009         	call	_write_data
  2714                           
  2715                           ;lm629.c: 810:     check_busy();
  2716  000AAC  EC41  F00A         	call	_check_busy	;wreg free
  2717                           
  2718                           ;lm629.c: 811:     write_data(0x00,0x48);
  2719  000AB0  0E48               	movlw	72
  2720  000AB2  6E06               	movwf	write_data@byte2^0,c
  2721  000AB4  0E00               	movlw	0
  2722  000AB6  EC3F  F009         	call	_write_data
  2723                           
  2724                           ;lm629.c: 812:     check_busy();
  2725  000ABA  EC41  F00A         	call	_check_busy	;wreg free
  2726                           
  2727                           ;lm629.c: 814:     write_data(0x00,0x01);
  2728  000ABE  0E01               	movlw	1
  2729  000AC0  6E06               	movwf	write_data@byte2^0,c
  2730  000AC2  0E00               	movlw	0
  2731  000AC4  EC3F  F009         	call	_write_data
  2732                           
  2733                           ;lm629.c: 815:     check_busy();
  2734  000AC8  EC41  F00A         	call	_check_busy	;wreg free
  2735                           
  2736                           ;lm629.c: 816:     write_data(0xFA,0xD0);
  2737  000ACC  0ED0               	movlw	208
  2738  000ACE  6E06               	movwf	write_data@byte2^0,c
  2739  000AD0  0EFA               	movlw	250
  2740  000AD2  EC3F  F009         	call	_write_data
  2741                           
  2742                           ;lm629.c: 817:     check_busy();
  2743  000AD6  EC41  F00A         	call	_check_busy	;wreg free
  2744                           
  2745                           ;lm629.c: 820:     chip_select(1);
  2746  000ADA  0E01               	movlw	1
  2747  000ADC  EC6D  F009         	call	_chip_select
  2748                           
  2749                           ;lm629.c: 821:     check_busy();
  2750  000AE0  EC41  F00A         	call	_check_busy	;wreg free
  2751                           
  2752                           ;lm629.c: 822:     motor_off();
  2753  000AE4  EC17  F00A         	call	_motor_off	;wreg free
  2754                           
  2755                           ;lm629.c: 823:     write_command(0x1F);
  2756  000AE8  0E1F               	movlw	31
  2757  000AEA  EC93  F009         	call	_write_command
  2758                           
  2759                           ;lm629.c: 824:     check_busy();
  2760  000AEE  EC41  F00A         	call	_check_busy	;wreg free
  2761                           
  2762                           ;lm629.c: 825:     write_data(0x08,0x28);
  2763  000AF2  0E28               	movlw	40
  2764  000AF4  6E06               	movwf	write_data@byte2^0,c
  2765  000AF6  0E08               	movlw	8
  2766  000AF8  EC3F  F009         	call	_write_data
  2767                           
  2768                           ;lm629.c: 826:     check_busy();
  2769  000AFC  EC41  F00A         	call	_check_busy	;wreg free
  2770                           
  2771                           ;lm629.c: 828:     write_data(0x00,0x00);
  2772  000B00  0E00               	movlw	0
  2773  000B02  6E06               	movwf	write_data@byte2^0,c
  2774  000B04  0E00               	movlw	0
  2775  000B06  EC3F  F009         	call	_write_data
  2776                           
  2777                           ;lm629.c: 829:     check_busy();
  2778  000B0A  EC41  F00A         	call	_check_busy	;wreg free
  2779                           
  2780                           ;lm629.c: 830:     write_data(0x00,0x48);
  2781  000B0E  0E48               	movlw	72
  2782  000B10  6E06               	movwf	write_data@byte2^0,c
  2783  000B12  0E00               	movlw	0
  2784  000B14  EC3F  F009         	call	_write_data
  2785                           
  2786                           ;lm629.c: 831:     check_busy();
  2787  000B18  EC41  F00A         	call	_check_busy	;wreg free
  2788                           
  2789                           ;lm629.c: 833:     write_data(0x00,0x00);
  2790  000B1C  0E00               	movlw	0
  2791  000B1E  6E06               	movwf	write_data@byte2^0,c
  2792  000B20  0E00               	movlw	0
  2793  000B22  EC3F  F009         	call	_write_data
  2794                           
  2795                           ;lm629.c: 834:     check_busy();
  2796  000B26  EC41  F00A         	call	_check_busy	;wreg free
  2797                           
  2798                           ;lm629.c: 835:     write_data(0xFD,0x68);
  2799  000B2A  0E68               	movlw	104
  2800  000B2C  6E06               	movwf	write_data@byte2^0,c
  2801  000B2E  0EFD               	movlw	253
  2802  000B30  EC3F  F009         	call	_write_data
  2803                           
  2804                           ;lm629.c: 836:     check_busy();
  2805  000B34  EC41  F00A         	call	_check_busy	;wreg free
  2806                           
  2807                           ;lm629.c: 839:     chip_select(2);
  2808  000B38  0E02               	movlw	2
  2809  000B3A  EC6D  F009         	call	_chip_select
  2810                           
  2811                           ;lm629.c: 840:     check_busy();
  2812  000B3E  EC41  F00A         	call	_check_busy	;wreg free
  2813                           
  2814                           ;lm629.c: 841:     motor_off();
  2815  000B42  EC17  F00A         	call	_motor_off	;wreg free
  2816                           
  2817                           ;lm629.c: 842:     write_command(0x1F);
  2818  000B46  0E1F               	movlw	31
  2819  000B48  EC93  F009         	call	_write_command
  2820                           
  2821                           ;lm629.c: 843:     check_busy();
  2822  000B4C  EC41  F00A         	call	_check_busy	;wreg free
  2823                           
  2824                           ;lm629.c: 844:     write_data(0x08,0x28);
  2825  000B50  0E28               	movlw	40
  2826  000B52  6E06               	movwf	write_data@byte2^0,c
  2827  000B54  0E08               	movlw	8
  2828  000B56  EC3F  F009         	call	_write_data
  2829                           
  2830                           ;lm629.c: 845:     check_busy();
  2831  000B5A  EC41  F00A         	call	_check_busy	;wreg free
  2832                           
  2833                           ;lm629.c: 847:     write_data(0x00,0x00);
  2834  000B5E  0E00               	movlw	0
  2835  000B60  6E06               	movwf	write_data@byte2^0,c
  2836  000B62  0E00               	movlw	0
  2837  000B64  EC3F  F009         	call	_write_data
  2838                           
  2839                           ;lm629.c: 848:     check_busy();
  2840  000B68  EC41  F00A         	call	_check_busy	;wreg free
  2841                           
  2842                           ;lm629.c: 849:     write_data(0x00,0x48);
  2843  000B6C  0E48               	movlw	72
  2844  000B6E  6E06               	movwf	write_data@byte2^0,c
  2845  000B70  0E00               	movlw	0
  2846  000B72  EC3F  F009         	call	_write_data
  2847                           
  2848                           ;lm629.c: 850:     check_busy();
  2849  000B76  EC41  F00A         	call	_check_busy	;wreg free
  2850                           
  2851                           ;lm629.c: 852:     write_data(0x00,0x00);
  2852  000B7A  0E00               	movlw	0
  2853  000B7C  6E06               	movwf	write_data@byte2^0,c
  2854  000B7E  0E00               	movlw	0
  2855  000B80  EC3F  F009         	call	_write_data
  2856                           
  2857                           ;lm629.c: 853:     check_busy();
  2858  000B84  EC41  F00A         	call	_check_busy	;wreg free
  2859                           
  2860                           ;lm629.c: 854:     write_data(0xFD,0x68);
  2861  000B88  0E68               	movlw	104
  2862  000B8A  6E06               	movwf	write_data@byte2^0,c
  2863  000B8C  0EFD               	movlw	253
  2864  000B8E  EC3F  F009         	call	_write_data
  2865                           
  2866                           ;lm629.c: 855:     check_busy();
  2867  000B92  EC41  F00A         	call	_check_busy	;wreg free
  2868                           
  2869                           ;lm629.c: 858:     chip_select(3);
  2870  000B96  0E03               	movlw	3
  2871  000B98  EC6D  F009         	call	_chip_select
  2872                           
  2873                           ;lm629.c: 859:     check_busy();
  2874  000B9C  EC41  F00A         	call	_check_busy	;wreg free
  2875                           
  2876                           ;lm629.c: 860:     motor_off();
  2877  000BA0  EC17  F00A         	call	_motor_off	;wreg free
  2878                           
  2879                           ;lm629.c: 861:     write_command(0x1F);
  2880  000BA4  0E1F               	movlw	31
  2881  000BA6  EC93  F009         	call	_write_command
  2882                           
  2883                           ;lm629.c: 862:     check_busy();
  2884  000BAA  EC41  F00A         	call	_check_busy	;wreg free
  2885                           
  2886                           ;lm629.c: 863:     write_data(0x18,0x28);
  2887  000BAE  0E28               	movlw	40
  2888  000BB0  6E06               	movwf	write_data@byte2^0,c
  2889  000BB2  0E18               	movlw	24
  2890  000BB4  EC3F  F009         	call	_write_data
  2891                           
  2892                           ;lm629.c: 864:     check_busy();
  2893  000BB8  EC41  F00A         	call	_check_busy	;wreg free
  2894                           
  2895                           ;lm629.c: 866:     write_data(0x00,0x00);
  2896  000BBC  0E00               	movlw	0
  2897  000BBE  6E06               	movwf	write_data@byte2^0,c
  2898  000BC0  0E00               	movlw	0
  2899  000BC2  EC3F  F009         	call	_write_data
  2900                           
  2901                           ;lm629.c: 867:     check_busy();
  2902  000BC6  EC41  F00A         	call	_check_busy	;wreg free
  2903                           
  2904                           ;lm629.c: 868:     write_data(0x00,0x48);
  2905  000BCA  0E48               	movlw	72
  2906  000BCC  6E06               	movwf	write_data@byte2^0,c
  2907  000BCE  0E00               	movlw	0
  2908  000BD0  EC3F  F009         	call	_write_data
  2909                           
  2910                           ;lm629.c: 869:     check_busy();
  2911  000BD4  EC41  F00A         	call	_check_busy	;wreg free
  2912                           
  2913                           ;lm629.c: 871:     write_data(0x00,0x01);
  2914  000BD8  0E01               	movlw	1
  2915  000BDA  6E06               	movwf	write_data@byte2^0,c
  2916  000BDC  0E00               	movlw	0
  2917  000BDE  EC3F  F009         	call	_write_data
  2918                           
  2919                           ;lm629.c: 872:     check_busy();
  2920  000BE2  EC41  F00A         	call	_check_busy	;wreg free
  2921                           
  2922                           ;lm629.c: 873:     write_data(0xFA,0xD0);
  2923  000BE6  0ED0               	movlw	208
  2924  000BE8  6E06               	movwf	write_data@byte2^0,c
  2925  000BEA  0EFA               	movlw	250
  2926  000BEC  EC3F  F009         	call	_write_data
  2927                           
  2928                           ;lm629.c: 874:     check_busy();
  2929  000BF0  EC41  F00A         	call	_check_busy	;wreg free
  2930                           
  2931                           ;lm629.c: 877:     chip_select(0);
  2932  000BF4  0E00               	movlw	0
  2933  000BF6  EC6D  F009         	call	_chip_select
  2934                           
  2935                           ;lm629.c: 878:     write_command(0x01);
  2936  000BFA  0E01               	movlw	1
  2937  000BFC  EC93  F009         	call	_write_command
  2938                           
  2939                           ;lm629.c: 879:     check_busy();
  2940  000C00  EC41  F00A         	call	_check_busy	;wreg free
  2941                           
  2942                           ;lm629.c: 881:     chip_select(2);
  2943  000C04  0E02               	movlw	2
  2944  000C06  EC6D  F009         	call	_chip_select
  2945                           
  2946                           ;lm629.c: 882:     write_command(0x01);
  2947  000C0A  0E01               	movlw	1
  2948  000C0C  EC93  F009         	call	_write_command
  2949                           
  2950                           ;lm629.c: 883:     check_busy();
  2951  000C10  EC41  F00A         	call	_check_busy	;wreg free
  2952                           
  2953                           ;lm629.c: 885:     chip_select(1);
  2954  000C14  0E01               	movlw	1
  2955  000C16  EC6D  F009         	call	_chip_select
  2956                           
  2957                           ;lm629.c: 886:     write_command(0x01);
  2958  000C1A  0E01               	movlw	1
  2959  000C1C  EC93  F009         	call	_write_command
  2960                           
  2961                           ;lm629.c: 887:     check_busy();
  2962  000C20  EC41  F00A         	call	_check_busy	;wreg free
  2963                           
  2964                           ;lm629.c: 889:     chip_select(3);
  2965  000C24  0E03               	movlw	3
  2966  000C26  EC6D  F009         	call	_chip_select
  2967                           
  2968                           ;lm629.c: 890:     write_command(0x01);
  2969  000C2A  0E01               	movlw	1
  2970  000C2C  EC93  F009         	call	_write_command
  2971                           
  2972                           ;lm629.c: 891:     check_busy();
  2973  000C30  EC41  F00A         	call	_check_busy	;wreg free
  2974  000C34  0012               	return		;funcret
  2975  000C36                     __end_of_forward_left:
  2976                           	callstack 0
  2977                           
  2978 ;; *************** function _forward *****************
  2979 ;; Defined at:
  2980 ;;		line 419 in file "lm629.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/F
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 5
  3001 ;; This function calls:
  3002 ;;		_check_busy
  3003 ;;		_chip_select
  3004 ;;		_motor_off
  3005 ;;		_write_command
  3006 ;;		_write_data
  3007 ;; This function is called by:
  3008 ;;		_main
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text10
  3013  000C36                     __ptext10:
  3014                           	callstack 0
  3015  000C36                     _forward:
  3016                           	callstack 25
  3017                           
  3018                           ;lm629.c: 421:     chip_select(0);
  3019                           
  3020                           ;incstack = 0
  3021  000C36  0E00               	movlw	0
  3022  000C38  EC6D  F009         	call	_chip_select
  3023                           
  3024                           ;lm629.c: 422:     check_busy();
  3025  000C3C  EC41  F00A         	call	_check_busy	;wreg free
  3026                           
  3027                           ;lm629.c: 423:     motor_off();
  3028  000C40  EC17  F00A         	call	_motor_off	;wreg free
  3029                           
  3030                           ;lm629.c: 424:     write_command(0x1F);
  3031  000C44  0E1F               	movlw	31
  3032  000C46  EC93  F009         	call	_write_command
  3033                           
  3034                           ;lm629.c: 425:     check_busy();
  3035  000C4A  EC41  F00A         	call	_check_busy	;wreg free
  3036                           
  3037                           ;lm629.c: 426:     write_data(0x18,0x28);
  3038  000C4E  0E28               	movlw	40
  3039  000C50  6E06               	movwf	write_data@byte2^0,c
  3040  000C52  0E18               	movlw	24
  3041  000C54  EC3F  F009         	call	_write_data
  3042                           
  3043                           ;lm629.c: 427:     check_busy();
  3044  000C58  EC41  F00A         	call	_check_busy	;wreg free
  3045                           
  3046                           ;lm629.c: 429:     write_data(0x00,0x00);
  3047  000C5C  0E00               	movlw	0
  3048  000C5E  6E06               	movwf	write_data@byte2^0,c
  3049  000C60  0E00               	movlw	0
  3050  000C62  EC3F  F009         	call	_write_data
  3051                           
  3052                           ;lm629.c: 430:     check_busy();
  3053  000C66  EC41  F00A         	call	_check_busy	;wreg free
  3054                           
  3055                           ;lm629.c: 431:     write_data(0x00,0x48);
  3056  000C6A  0E48               	movlw	72
  3057  000C6C  6E06               	movwf	write_data@byte2^0,c
  3058  000C6E  0E00               	movlw	0
  3059  000C70  EC3F  F009         	call	_write_data
  3060                           
  3061                           ;lm629.c: 432:     check_busy();
  3062  000C74  EC41  F00A         	call	_check_busy	;wreg free
  3063                           
  3064                           ;lm629.c: 434:     write_data(0x00,0x01);
  3065  000C78  0E01               	movlw	1
  3066  000C7A  6E06               	movwf	write_data@byte2^0,c
  3067  000C7C  0E00               	movlw	0
  3068  000C7E  EC3F  F009         	call	_write_data
  3069                           
  3070                           ;lm629.c: 435:     check_busy();
  3071  000C82  EC41  F00A         	call	_check_busy	;wreg free
  3072                           
  3073                           ;lm629.c: 436:     write_data(0xFA,0xD0);
  3074  000C86  0ED0               	movlw	208
  3075  000C88  6E06               	movwf	write_data@byte2^0,c
  3076  000C8A  0EFA               	movlw	250
  3077  000C8C  EC3F  F009         	call	_write_data
  3078                           
  3079                           ;lm629.c: 437:     check_busy();
  3080  000C90  EC41  F00A         	call	_check_busy	;wreg free
  3081                           
  3082                           ;lm629.c: 440:     chip_select(1);
  3083  000C94  0E01               	movlw	1
  3084  000C96  EC6D  F009         	call	_chip_select
  3085                           
  3086                           ;lm629.c: 441:     check_busy();
  3087  000C9A  EC41  F00A         	call	_check_busy	;wreg free
  3088                           
  3089                           ;lm629.c: 442:     motor_off();
  3090  000C9E  EC17  F00A         	call	_motor_off	;wreg free
  3091                           
  3092                           ;lm629.c: 443:     write_command(0x1F);
  3093  000CA2  0E1F               	movlw	31
  3094  000CA4  EC93  F009         	call	_write_command
  3095                           
  3096                           ;lm629.c: 444:     check_busy();
  3097  000CA8  EC41  F00A         	call	_check_busy	;wreg free
  3098                           
  3099                           ;lm629.c: 445:     write_data(0x08,0x28);
  3100  000CAC  0E28               	movlw	40
  3101  000CAE  6E06               	movwf	write_data@byte2^0,c
  3102  000CB0  0E08               	movlw	8
  3103  000CB2  EC3F  F009         	call	_write_data
  3104                           
  3105                           ;lm629.c: 446:     check_busy();
  3106  000CB6  EC41  F00A         	call	_check_busy	;wreg free
  3107                           
  3108                           ;lm629.c: 448:     write_data(0x00,0x00);
  3109  000CBA  0E00               	movlw	0
  3110  000CBC  6E06               	movwf	write_data@byte2^0,c
  3111  000CBE  0E00               	movlw	0
  3112  000CC0  EC3F  F009         	call	_write_data
  3113                           
  3114                           ;lm629.c: 449:     check_busy();
  3115  000CC4  EC41  F00A         	call	_check_busy	;wreg free
  3116                           
  3117                           ;lm629.c: 450:     write_data(0x00,0x48);
  3118  000CC8  0E48               	movlw	72
  3119  000CCA  6E06               	movwf	write_data@byte2^0,c
  3120  000CCC  0E00               	movlw	0
  3121  000CCE  EC3F  F009         	call	_write_data
  3122                           
  3123                           ;lm629.c: 451:     check_busy();
  3124  000CD2  EC41  F00A         	call	_check_busy	;wreg free
  3125                           
  3126                           ;lm629.c: 453:     write_data(0x00,0x01);
  3127  000CD6  0E01               	movlw	1
  3128  000CD8  6E06               	movwf	write_data@byte2^0,c
  3129  000CDA  0E00               	movlw	0
  3130  000CDC  EC3F  F009         	call	_write_data
  3131                           
  3132                           ;lm629.c: 454:     check_busy();
  3133  000CE0  EC41  F00A         	call	_check_busy	;wreg free
  3134                           
  3135                           ;lm629.c: 455:     write_data(0xFA,0xD0);
  3136  000CE4  0ED0               	movlw	208
  3137  000CE6  6E06               	movwf	write_data@byte2^0,c
  3138  000CE8  0EFA               	movlw	250
  3139  000CEA  EC3F  F009         	call	_write_data
  3140                           
  3141                           ;lm629.c: 456:     check_busy();
  3142  000CEE  EC41  F00A         	call	_check_busy	;wreg free
  3143                           
  3144                           ;lm629.c: 459:     chip_select(2);
  3145  000CF2  0E02               	movlw	2
  3146  000CF4  EC6D  F009         	call	_chip_select
  3147                           
  3148                           ;lm629.c: 460:     check_busy();
  3149  000CF8  EC41  F00A         	call	_check_busy	;wreg free
  3150                           
  3151                           ;lm629.c: 461:     motor_off();
  3152  000CFC  EC17  F00A         	call	_motor_off	;wreg free
  3153                           
  3154                           ;lm629.c: 462:     write_command(0x1F);
  3155  000D00  0E1F               	movlw	31
  3156  000D02  EC93  F009         	call	_write_command
  3157                           
  3158                           ;lm629.c: 463:     check_busy();
  3159  000D06  EC41  F00A         	call	_check_busy	;wreg free
  3160                           
  3161                           ;lm629.c: 464:     write_data(0x08,0x28);
  3162  000D0A  0E28               	movlw	40
  3163  000D0C  6E06               	movwf	write_data@byte2^0,c
  3164  000D0E  0E08               	movlw	8
  3165  000D10  EC3F  F009         	call	_write_data
  3166                           
  3167                           ;lm629.c: 465:     check_busy();
  3168  000D14  EC41  F00A         	call	_check_busy	;wreg free
  3169                           
  3170                           ;lm629.c: 467:     write_data(0x00,0x00);
  3171  000D18  0E00               	movlw	0
  3172  000D1A  6E06               	movwf	write_data@byte2^0,c
  3173  000D1C  0E00               	movlw	0
  3174  000D1E  EC3F  F009         	call	_write_data
  3175                           
  3176                           ;lm629.c: 468:     check_busy();
  3177  000D22  EC41  F00A         	call	_check_busy	;wreg free
  3178                           
  3179                           ;lm629.c: 469:     write_data(0x00,0x48);
  3180  000D26  0E48               	movlw	72
  3181  000D28  6E06               	movwf	write_data@byte2^0,c
  3182  000D2A  0E00               	movlw	0
  3183  000D2C  EC3F  F009         	call	_write_data
  3184                           
  3185                           ;lm629.c: 470:     check_busy();
  3186  000D30  EC41  F00A         	call	_check_busy	;wreg free
  3187                           
  3188                           ;lm629.c: 472:     write_data(0x00,0x01);
  3189  000D34  0E01               	movlw	1
  3190  000D36  6E06               	movwf	write_data@byte2^0,c
  3191  000D38  0E00               	movlw	0
  3192  000D3A  EC3F  F009         	call	_write_data
  3193                           
  3194                           ;lm629.c: 473:     check_busy();
  3195  000D3E  EC41  F00A         	call	_check_busy	;wreg free
  3196                           
  3197                           ;lm629.c: 474:     write_data(0xFA,0xD0);
  3198  000D42  0ED0               	movlw	208
  3199  000D44  6E06               	movwf	write_data@byte2^0,c
  3200  000D46  0EFA               	movlw	250
  3201  000D48  EC3F  F009         	call	_write_data
  3202                           
  3203                           ;lm629.c: 475:     check_busy();
  3204  000D4C  EC41  F00A         	call	_check_busy	;wreg free
  3205                           
  3206                           ;lm629.c: 478:     chip_select(3);
  3207  000D50  0E03               	movlw	3
  3208  000D52  EC6D  F009         	call	_chip_select
  3209                           
  3210                           ;lm629.c: 479:     check_busy();
  3211  000D56  EC41  F00A         	call	_check_busy	;wreg free
  3212                           
  3213                           ;lm629.c: 480:     motor_off();
  3214  000D5A  EC17  F00A         	call	_motor_off	;wreg free
  3215                           
  3216                           ;lm629.c: 481:     write_command(0x1F);
  3217  000D5E  0E1F               	movlw	31
  3218  000D60  EC93  F009         	call	_write_command
  3219                           
  3220                           ;lm629.c: 482:     check_busy();
  3221  000D64  EC41  F00A         	call	_check_busy	;wreg free
  3222                           
  3223                           ;lm629.c: 483:     write_data(0x18,0x28);
  3224  000D68  0E28               	movlw	40
  3225  000D6A  6E06               	movwf	write_data@byte2^0,c
  3226  000D6C  0E18               	movlw	24
  3227  000D6E  EC3F  F009         	call	_write_data
  3228                           
  3229                           ;lm629.c: 484:     check_busy();
  3230  000D72  EC41  F00A         	call	_check_busy	;wreg free
  3231                           
  3232                           ;lm629.c: 486:     write_data(0x00,0x00);
  3233  000D76  0E00               	movlw	0
  3234  000D78  6E06               	movwf	write_data@byte2^0,c
  3235  000D7A  0E00               	movlw	0
  3236  000D7C  EC3F  F009         	call	_write_data
  3237                           
  3238                           ;lm629.c: 487:     check_busy();
  3239  000D80  EC41  F00A         	call	_check_busy	;wreg free
  3240                           
  3241                           ;lm629.c: 488:     write_data(0x00,0x48);
  3242  000D84  0E48               	movlw	72
  3243  000D86  6E06               	movwf	write_data@byte2^0,c
  3244  000D88  0E00               	movlw	0
  3245  000D8A  EC3F  F009         	call	_write_data
  3246                           
  3247                           ;lm629.c: 489:     check_busy();
  3248  000D8E  EC41  F00A         	call	_check_busy	;wreg free
  3249                           
  3250                           ;lm629.c: 491:     write_data(0x00,0x01);
  3251  000D92  0E01               	movlw	1
  3252  000D94  6E06               	movwf	write_data@byte2^0,c
  3253  000D96  0E00               	movlw	0
  3254  000D98  EC3F  F009         	call	_write_data
  3255                           
  3256                           ;lm629.c: 492:     check_busy();
  3257  000D9C  EC41  F00A         	call	_check_busy	;wreg free
  3258                           
  3259                           ;lm629.c: 493:     write_data(0xFA,0xD0);
  3260  000DA0  0ED0               	movlw	208
  3261  000DA2  6E06               	movwf	write_data@byte2^0,c
  3262  000DA4  0EFA               	movlw	250
  3263  000DA6  EC3F  F009         	call	_write_data
  3264                           
  3265                           ;lm629.c: 494:     check_busy();
  3266  000DAA  EC41  F00A         	call	_check_busy	;wreg free
  3267                           
  3268                           ;lm629.c: 497:     chip_select(0);
  3269  000DAE  0E00               	movlw	0
  3270  000DB0  EC6D  F009         	call	_chip_select
  3271                           
  3272                           ;lm629.c: 498:     write_command(0x01);
  3273  000DB4  0E01               	movlw	1
  3274  000DB6  EC93  F009         	call	_write_command
  3275                           
  3276                           ;lm629.c: 499:     check_busy();
  3277  000DBA  EC41  F00A         	call	_check_busy	;wreg free
  3278                           
  3279                           ;lm629.c: 501:     chip_select(2);
  3280  000DBE  0E02               	movlw	2
  3281  000DC0  EC6D  F009         	call	_chip_select
  3282                           
  3283                           ;lm629.c: 502:     write_command(0x01);
  3284  000DC4  0E01               	movlw	1
  3285  000DC6  EC93  F009         	call	_write_command
  3286                           
  3287                           ;lm629.c: 503:     check_busy();
  3288  000DCA  EC41  F00A         	call	_check_busy	;wreg free
  3289                           
  3290                           ;lm629.c: 505:     chip_select(1);
  3291  000DCE  0E01               	movlw	1
  3292  000DD0  EC6D  F009         	call	_chip_select
  3293                           
  3294                           ;lm629.c: 506:     write_command(0x01);
  3295  000DD4  0E01               	movlw	1
  3296  000DD6  EC93  F009         	call	_write_command
  3297                           
  3298                           ;lm629.c: 507:     check_busy();
  3299  000DDA  EC41  F00A         	call	_check_busy	;wreg free
  3300                           
  3301                           ;lm629.c: 509:     chip_select(3);
  3302  000DDE  0E03               	movlw	3
  3303  000DE0  EC6D  F009         	call	_chip_select
  3304                           
  3305                           ;lm629.c: 510:     write_command(0x01);
  3306  000DE4  0E01               	movlw	1
  3307  000DE6  EC93  F009         	call	_write_command
  3308                           
  3309                           ;lm629.c: 511:     check_busy();
  3310  000DEA  EC41  F00A         	call	_check_busy	;wreg free
  3311  000DEE  0012               	return		;funcret
  3312  000DF0                     __end_of_forward:
  3313                           	callstack 0
  3314                           
  3315 ;; *************** function _all_off *****************
  3316 ;; Defined at:
  3317 ;;		line 342 in file "lm629.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/F
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 5
  3338 ;; This function calls:
  3339 ;;		_chip_select
  3340 ;;		_motor_off
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           	psect	text11
  3347  00138C                     __ptext11:
  3348                           	callstack 0
  3349  00138C                     _all_off:
  3350                           	callstack 25
  3351                           
  3352                           ;lm629.c: 344:     chip_select(0);
  3353                           
  3354                           ;incstack = 0
  3355  00138C  0E00               	movlw	0
  3356  00138E  EC6D  F009         	call	_chip_select
  3357                           
  3358                           ;lm629.c: 345:     motor_off();
  3359  001392  EC17  F00A         	call	_motor_off	;wreg free
  3360                           
  3361                           ;lm629.c: 346:     chip_select(1);
  3362  001396  0E01               	movlw	1
  3363  001398  EC6D  F009         	call	_chip_select
  3364                           
  3365                           ;lm629.c: 347:     motor_off();
  3366  00139C  EC17  F00A         	call	_motor_off	;wreg free
  3367                           
  3368                           ;lm629.c: 348:     chip_select(2);
  3369  0013A0  0E02               	movlw	2
  3370  0013A2  EC6D  F009         	call	_chip_select
  3371                           
  3372                           ;lm629.c: 349:     motor_off();
  3373  0013A6  EC17  F00A         	call	_motor_off	;wreg free
  3374                           
  3375                           ;lm629.c: 350:     chip_select(3);
  3376  0013AA  0E03               	movlw	3
  3377  0013AC  EC6D  F009         	call	_chip_select
  3378                           
  3379                           ;lm629.c: 351:     motor_off();
  3380  0013B0  EC17  F00A         	call	_motor_off	;wreg free
  3381  0013B4  0012               	return		;funcret
  3382  0013B6                     __end_of_all_off:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _motor_off *****************
  3386 ;; Defined at:
  3387 ;;		line 310 in file "lm629.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/F
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 4
  3408 ;; This function calls:
  3409 ;;		_check_busy
  3410 ;;		_write_command
  3411 ;;		_write_data
  3412 ;; This function is called by:
  3413 ;;		_all_off
  3414 ;;		_forward
  3415 ;;		_reverse
  3416 ;;		_right
  3417 ;;		_left
  3418 ;;		_forward_left
  3419 ;;		_forward_right
  3420 ;;		_reverse_left
  3421 ;;		_reverse_right
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text12
  3426  00142E                     __ptext12:
  3427                           	callstack 0
  3428  00142E                     _motor_off:
  3429                           	callstack 25
  3430                           
  3431                           ;lm629.c: 312:     write_command(0x1F);
  3432                           
  3433                           ;incstack = 0
  3434  00142E  0E1F               	movlw	31
  3435  001430  EC93  F009         	call	_write_command
  3436                           
  3437                           ;lm629.c: 313:     check_busy();
  3438  001434  EC41  F00A         	call	_check_busy	;wreg free
  3439                           
  3440                           ;lm629.c: 314:     write_data(0x01,0x00);
  3441  001438  0E00               	movlw	0
  3442  00143A  6E06               	movwf	write_data@byte2^0,c
  3443  00143C  0E01               	movlw	1
  3444  00143E  EC3F  F009         	call	_write_data
  3445                           
  3446                           ;lm629.c: 315:     check_busy();
  3447  001442  EC41  F00A         	call	_check_busy	;wreg free
  3448                           
  3449                           ;lm629.c: 316:     write_command(0x01);
  3450  001446  0E01               	movlw	1
  3451  001448  EC93  F009         	call	_write_command
  3452                           
  3453                           ;lm629.c: 317:     check_busy();
  3454  00144C  EC41  F00A         	call	_check_busy	;wreg free
  3455  001450  0012               	return		;funcret
  3456  001452                     __end_of_motor_off:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _all_break *****************
  3460 ;; Defined at:
  3461 ;;		line 330 in file "lm629.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/F
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 5
  3482 ;; This function calls:
  3483 ;;		_chip_select
  3484 ;;		_motor_break
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text13
  3491  0013B6                     __ptext13:
  3492                           	callstack 0
  3493  0013B6                     _all_break:
  3494                           	callstack 25
  3495                           
  3496                           ;lm629.c: 332:     chip_select(0);
  3497                           
  3498                           ;incstack = 0
  3499  0013B6  0E00               	movlw	0
  3500  0013B8  EC6D  F009         	call	_chip_select
  3501                           
  3502                           ;lm629.c: 333:     motor_break();
  3503  0013BC  EC29  F00A         	call	_motor_break	;wreg free
  3504                           
  3505                           ;lm629.c: 334:     chip_select(1);
  3506  0013C0  0E01               	movlw	1
  3507  0013C2  EC6D  F009         	call	_chip_select
  3508                           
  3509                           ;lm629.c: 335:     motor_break();
  3510  0013C6  EC29  F00A         	call	_motor_break	;wreg free
  3511                           
  3512                           ;lm629.c: 336:     chip_select(2);
  3513  0013CA  0E02               	movlw	2
  3514  0013CC  EC6D  F009         	call	_chip_select
  3515                           
  3516                           ;lm629.c: 337:     motor_break();
  3517  0013D0  EC29  F00A         	call	_motor_break	;wreg free
  3518                           
  3519                           ;lm629.c: 338:     chip_select(3);
  3520  0013D4  0E03               	movlw	3
  3521  0013D6  EC6D  F009         	call	_chip_select
  3522                           
  3523                           ;lm629.c: 339:     motor_break();
  3524  0013DA  EC29  F00A         	call	_motor_break	;wreg free
  3525  0013DE  0012               	return		;funcret
  3526  0013E0                     __end_of_all_break:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function _motor_break *****************
  3530 ;; Defined at:
  3531 ;;		line 320 in file "lm629.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/F
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 4
  3552 ;; This function calls:
  3553 ;;		_check_busy
  3554 ;;		_write_command
  3555 ;;		_write_data
  3556 ;; This function is called by:
  3557 ;;		_all_break
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text14
  3562  001452                     __ptext14:
  3563                           	callstack 0
  3564  001452                     _motor_break:
  3565                           	callstack 25
  3566                           
  3567                           ;lm629.c: 322:     write_command(0x1F);
  3568                           
  3569                           ;incstack = 0
  3570  001452  0E1F               	movlw	31
  3571  001454  EC93  F009         	call	_write_command
  3572                           
  3573                           ;lm629.c: 323:     check_busy();
  3574  001458  EC41  F00A         	call	_check_busy	;wreg free
  3575                           
  3576                           ;lm629.c: 324:     write_data(0x02,0x00);
  3577  00145C  0E00               	movlw	0
  3578  00145E  6E06               	movwf	write_data@byte2^0,c
  3579  001460  0E02               	movlw	2
  3580  001462  EC3F  F009         	call	_write_data
  3581                           
  3582                           ;lm629.c: 325:     check_busy();
  3583  001466  EC41  F00A         	call	_check_busy	;wreg free
  3584                           
  3585                           ;lm629.c: 326:     write_command(0x01);
  3586  00146A  0E01               	movlw	1
  3587  00146C  EC93  F009         	call	_write_command
  3588                           
  3589                           ;lm629.c: 327:     check_busy();
  3590  001470  EC41  F00A         	call	_check_busy	;wreg free
  3591  001474  0012               	return		;funcret
  3592  001476                     __end_of_motor_break:
  3593                           	callstack 0
  3594                           
  3595 ;; *************** function _LM629_init *****************
  3596 ;; Defined at:
  3597 ;;		line 105 in file "lm629.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  x               1    8[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 3F/F
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;Total ram usage:        2 bytes
  3616 ;; Hardware stack levels used: 1
  3617 ;; Hardware stack levels required when called: 5
  3618 ;; This function calls:
  3619 ;;		_check_busy
  3620 ;;		_chip_select
  3621 ;;		_filter_module
  3622 ;;		_read_status
  3623 ;;		_write_command
  3624 ;;		_write_data
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text15
  3631  000F7E                     __ptext15:
  3632                           	callstack 0
  3633  000F7E                     _LM629_init:
  3634                           	callstack 25
  3635                           
  3636                           ; BSR set to: 15
  3637                           ;lm629.c: 109:  TRISB&=0b11000011;
  3638                           
  3639                           ; BSR set to: 15
  3640                           
  3641                           ;incstack = 0
  3642  000F7E  0EC3               	movlw	195
  3643  000F80  1693               	andwf	147,f,c	;volatile
  3644                           
  3645                           ; BSR set to: 15
  3646                           ;lm629.c: 110:  TRISD&=0b11110001;
  3647  000F82  0EF1               	movlw	241
  3648  000F84  1695               	andwf	149,f,c	;volatile
  3649                           
  3650                           ; BSR set to: 15
  3651                           ;lm629.c: 111:  TRISC&=0b11111011;
  3652  000F86  9494               	bcf	148,2,c	;volatile
  3653                           
  3654                           ; BSR set to: 15
  3655                           ;lm629.c: 112:  PORTCbits.RC2=1;
  3656  000F88  8482               	bsf	130,2,c	;volatile
  3657                           
  3658                           ; BSR set to: 15
  3659                           ;lm629.c: 113:  PORTDbits.RD2=1;
  3660  000F8A  8483               	bsf	131,2,c	;volatile
  3661                           
  3662                           ; BSR set to: 15
  3663                           ;lm629.c: 114:  PORTDbits.RD1=1;
  3664  000F8C  8283               	bsf	131,1,c	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;lm629.c: 115:  PORTBbits.RB5=1;
  3668  000F8E  8A81               	bsf	129,5,c	;volatile
  3669                           
  3670                           ; BSR set to: 15
  3671                           ;lm629.c: 116:  chip_select(0);
  3672  000F90  0E00               	movlw	0
  3673  000F92  EC6D  F009         	call	_chip_select
  3674  000F96                     l1435:
  3675                           
  3676                           ;lm629.c: 118:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3677  000F96  0E35               	movlw	53
  3678  000F98                     u957:
  3679  000F98  2EE8               	decfsz	wreg,f,c
  3680  000F9A  D7FE               	bra	u957
  3681  000F9C  F000               	nop	
  3682                           
  3683                           ;lm629.c: 119:  PORTBbits.RB5=0;
  3684  000F9E  9A81               	bcf	129,5,c	;volatile
  3685                           
  3686                           ;lm629.c: 120:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3687  000FA0  0E0A               	movlw	10
  3688  000FA2                     u967:
  3689  000FA2  2EE8               	decfsz	wreg,f,c
  3690  000FA4  D7FE               	bra	u967
  3691  000FA6  D000               	nop2	
  3692                           
  3693                           ;lm629.c: 121:  PORTBbits.RB5=1;
  3694  000FA8  8A81               	bsf	129,5,c	;volatile
  3695                           
  3696                           ;lm629.c: 122:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3697  000FAA  0E2A               	movlw	42
  3698  000FAC  6E08               	movwf	??_LM629_init^0,c
  3699  000FAE  0E8E               	movlw	142
  3700  000FB0                     u977:
  3701  000FB0  2EE8               	decfsz	wreg,f,c
  3702  000FB2  D7FE               	bra	u977
  3703  000FB4  2E08               	decfsz	??_LM629_init^0,f,c
  3704  000FB6  D7FC               	bra	u977
  3705                           
  3706                           ;lm629.c: 123:  x=read_status();
  3707  000FB8  ECAF  F009         	call	_read_status	;wreg free
  3708  000FBC  6E09               	movwf	LM629_init@x^0,c
  3709                           
  3710                           ;lm629.c: 124:  if(!(x==0xC4 || x==0x84))
  3711  000FBE  0EC4               	movlw	196
  3712  000FC0  1809               	xorwf	LM629_init@x^0,w,c
  3713  000FC2  B4D8               	btfsc	status,2,c
  3714  000FC4  D004               	goto	l1455
  3715  000FC6  0E84               	movlw	132
  3716  000FC8  1809               	xorwf	LM629_init@x^0,w,c
  3717  000FCA  A4D8               	btfss	status,2,c
  3718  000FCC  D7E4               	goto	l1435
  3719  000FCE                     l1455:
  3720                           
  3721                           ;lm629.c: 129:   {;lm629.c: 130:    check_busy();
  3722  000FCE  EC41  F00A         	call	_check_busy	;wreg free
  3723                           
  3724                           ;lm629.c: 131:    write_command(0x1D);
  3725  000FD2  0E1D               	movlw	29
  3726  000FD4  EC93  F009         	call	_write_command
  3727                           
  3728                           ;lm629.c: 132:          check_busy();
  3729  000FD8  EC41  F00A         	call	_check_busy	;wreg free
  3730                           
  3731                           ;lm629.c: 133:    write_data(0x00,0x00);
  3732  000FDC  0E00               	movlw	0
  3733  000FDE  6E06               	movwf	write_data@byte2^0,c
  3734  000FE0  0E00               	movlw	0
  3735  000FE2  EC3F  F009         	call	_write_data
  3736                           
  3737                           ;lm629.c: 134:    check_busy();
  3738  000FE6  EC41  F00A         	call	_check_busy	;wreg free
  3739                           
  3740                           ;lm629.c: 135:    x=read_status();
  3741  000FEA  ECAF  F009         	call	_read_status	;wreg free
  3742  000FEE  6E09               	movwf	LM629_init@x^0,c
  3743                           
  3744                           ;lm629.c: 136:             if(!(x==0xC0 || x==0x80))
  3745  000FF0  0EC0               	movlw	192
  3746  000FF2  1809               	xorwf	LM629_init@x^0,w,c
  3747  000FF4  B4D8               	btfsc	status,2,c
  3748  000FF6  D004               	goto	l1463
  3749  000FF8  0E80               	movlw	128
  3750  000FFA  1809               	xorwf	LM629_init@x^0,w,c
  3751  000FFC  A4D8               	btfss	status,2,c
  3752  000FFE  D7CB               	goto	l1435
  3753  001000                     l1463:
  3754                           
  3755                           ;lm629.c: 142:  chip_select(1);
  3756  001000  0E01               	movlw	1
  3757  001002  EC6D  F009         	call	_chip_select
  3758  001006                     l1465:
  3759                           
  3760                           ;lm629.c: 144:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3761  001006  0E35               	movlw	53
  3762  001008                     u987:
  3763  001008  2EE8               	decfsz	wreg,f,c
  3764  00100A  D7FE               	bra	u987
  3765  00100C  F000               	nop	
  3766                           
  3767                           ;lm629.c: 145:  PORTBbits.RB5=0;
  3768  00100E  9A81               	bcf	129,5,c	;volatile
  3769                           
  3770                           ;lm629.c: 146:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3771  001010  0E0A               	movlw	10
  3772  001012                     u997:
  3773  001012  2EE8               	decfsz	wreg,f,c
  3774  001014  D7FE               	bra	u997
  3775  001016  D000               	nop2	
  3776                           
  3777                           ;lm629.c: 147:  PORTBbits.RB5=1;
  3778  001018  8A81               	bsf	129,5,c	;volatile
  3779                           
  3780                           ;lm629.c: 148:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3781  00101A  0E2A               	movlw	42
  3782  00101C  6E08               	movwf	??_LM629_init^0,c
  3783  00101E  0E8E               	movlw	142
  3784  001020                     u1007:
  3785  001020  2EE8               	decfsz	wreg,f,c
  3786  001022  D7FE               	bra	u1007
  3787  001024  2E08               	decfsz	??_LM629_init^0,f,c
  3788  001026  D7FC               	bra	u1007
  3789                           
  3790                           ;lm629.c: 149:  x=read_status();
  3791  001028  ECAF  F009         	call	_read_status	;wreg free
  3792  00102C  6E09               	movwf	LM629_init@x^0,c
  3793                           
  3794                           ;lm629.c: 150:  if(!(x==0xC4 || x==0x84))
  3795  00102E  0EC4               	movlw	196
  3796  001030  1809               	xorwf	LM629_init@x^0,w,c
  3797  001032  B4D8               	btfsc	status,2,c
  3798  001034  D004               	goto	l1485
  3799  001036  0E84               	movlw	132
  3800  001038  1809               	xorwf	LM629_init@x^0,w,c
  3801  00103A  A4D8               	btfss	status,2,c
  3802  00103C  D7E4               	goto	l1465
  3803  00103E                     l1485:
  3804                           
  3805                           ;lm629.c: 155:   {;lm629.c: 156:    check_busy();
  3806  00103E  EC41  F00A         	call	_check_busy	;wreg free
  3807                           
  3808                           ;lm629.c: 157:    write_command(0x1D);
  3809  001042  0E1D               	movlw	29
  3810  001044  EC93  F009         	call	_write_command
  3811                           
  3812                           ;lm629.c: 158:          check_busy();
  3813  001048  EC41  F00A         	call	_check_busy	;wreg free
  3814                           
  3815                           ;lm629.c: 159:    write_data(0x00,0x00);
  3816  00104C  0E00               	movlw	0
  3817  00104E  6E06               	movwf	write_data@byte2^0,c
  3818  001050  0E00               	movlw	0
  3819  001052  EC3F  F009         	call	_write_data
  3820                           
  3821                           ;lm629.c: 160:    check_busy();
  3822  001056  EC41  F00A         	call	_check_busy	;wreg free
  3823                           
  3824                           ;lm629.c: 161:    x=read_status();
  3825  00105A  ECAF  F009         	call	_read_status	;wreg free
  3826  00105E  6E09               	movwf	LM629_init@x^0,c
  3827                           
  3828                           ;lm629.c: 162:             if(!(x==0xC0 || x==0x80))
  3829  001060  0EC0               	movlw	192
  3830  001062  1809               	xorwf	LM629_init@x^0,w,c
  3831  001064  B4D8               	btfsc	status,2,c
  3832  001066  D004               	goto	l1493
  3833  001068  0E80               	movlw	128
  3834  00106A  1809               	xorwf	LM629_init@x^0,w,c
  3835  00106C  A4D8               	btfss	status,2,c
  3836  00106E  D7CB               	goto	l1465
  3837  001070                     l1493:
  3838                           
  3839                           ;lm629.c: 168:  chip_select(3);
  3840  001070  0E03               	movlw	3
  3841  001072  EC6D  F009         	call	_chip_select
  3842  001076                     l1495:
  3843                           
  3844                           ;lm629.c: 170:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  3845  001076  0E35               	movlw	53
  3846  001078                     u1017:
  3847  001078  2EE8               	decfsz	wreg,f,c
  3848  00107A  D7FE               	bra	u1017
  3849  00107C  F000               	nop	
  3850                           
  3851                           ;lm629.c: 171:  PORTBbits.RB5=0;
  3852  00107E  9A81               	bcf	129,5,c	;volatile
  3853                           
  3854                           ;lm629.c: 172:  _delay((unsigned long)((2)*(64000000/4000000.0)));
  3855  001080  0E0A               	movlw	10
  3856  001082                     u1027:
  3857  001082  2EE8               	decfsz	wreg,f,c
  3858  001084  D7FE               	bra	u1027
  3859  001086  D000               	nop2	
  3860                           
  3861                           ;lm629.c: 173:  PORTBbits.RB5=1;
  3862  001088  8A81               	bsf	129,5,c	;volatile
  3863                           
  3864                           ;lm629.c: 174:  _delay((unsigned long)((2)*(64000000/4000.0)));
  3865  00108A  0E2A               	movlw	42
  3866  00108C  6E08               	movwf	??_LM629_init^0,c
  3867  00108E  0E8E               	movlw	142
  3868  001090                     u1037:
  3869  001090  2EE8               	decfsz	wreg,f,c
  3870  001092  D7FE               	bra	u1037
  3871  001094  2E08               	decfsz	??_LM629_init^0,f,c
  3872  001096  D7FC               	bra	u1037
  3873                           
  3874                           ;lm629.c: 175:  x=read_status();
  3875  001098  ECAF  F009         	call	_read_status	;wreg free
  3876  00109C  6E09               	movwf	LM629_init@x^0,c
  3877                           
  3878                           ;lm629.c: 176:  if(!(x==0xC4 || x==0x84))
  3879  00109E  0EC4               	movlw	196
  3880  0010A0  1809               	xorwf	LM629_init@x^0,w,c
  3881  0010A2  B4D8               	btfsc	status,2,c
  3882  0010A4  D004               	goto	l1515
  3883  0010A6  0E84               	movlw	132
  3884  0010A8  1809               	xorwf	LM629_init@x^0,w,c
  3885  0010AA  A4D8               	btfss	status,2,c
  3886  0010AC  D7E4               	goto	l1495
  3887  0010AE                     l1515:
  3888                           
  3889                           ;lm629.c: 181:   {;lm629.c: 182:    check_busy();
  3890  0010AE  EC41  F00A         	call	_check_busy	;wreg free
  3891                           
  3892                           ;lm629.c: 183:    write_command(0x1D);
  3893  0010B2  0E1D               	movlw	29
  3894  0010B4  EC93  F009         	call	_write_command
  3895                           
  3896                           ;lm629.c: 184:          check_busy();
  3897  0010B8  EC41  F00A         	call	_check_busy	;wreg free
  3898                           
  3899                           ;lm629.c: 185:    write_data(0x00,0x00);
  3900  0010BC  0E00               	movlw	0
  3901  0010BE  6E06               	movwf	write_data@byte2^0,c
  3902  0010C0  0E00               	movlw	0
  3903  0010C2  EC3F  F009         	call	_write_data
  3904                           
  3905                           ;lm629.c: 186:    check_busy();
  3906  0010C6  EC41  F00A         	call	_check_busy	;wreg free
  3907                           
  3908                           ;lm629.c: 187:    x=read_status();
  3909  0010CA  ECAF  F009         	call	_read_status	;wreg free
  3910  0010CE  6E09               	movwf	LM629_init@x^0,c
  3911                           
  3912                           ;lm629.c: 188:             if(!(x==0xC0 || x==0x80))
  3913  0010D0  0EC0               	movlw	192
  3914  0010D2  1809               	xorwf	LM629_init@x^0,w,c
  3915  0010D4  B4D8               	btfsc	status,2,c
  3916  0010D6  D004               	goto	l1523
  3917  0010D8  0E80               	movlw	128
  3918  0010DA  1809               	xorwf	LM629_init@x^0,w,c
  3919  0010DC  A4D8               	btfss	status,2,c
  3920  0010DE  D7CB               	goto	l1495
  3921  0010E0                     l1523:
  3922                           
  3923                           ;lm629.c: 193: chip_select(0);
  3924  0010E0  0E00               	movlw	0
  3925  0010E2  EC6D  F009         	call	_chip_select
  3926                           
  3927                           ;lm629.c: 194: filter_module();
  3928  0010E6  EC11  F009         	call	_filter_module	;wreg free
  3929                           
  3930                           ;lm629.c: 195: chip_select(1);
  3931  0010EA  0E01               	movlw	1
  3932  0010EC  EC6D  F009         	call	_chip_select
  3933                           
  3934                           ;lm629.c: 196: filter_module();
  3935  0010F0  EC11  F009         	call	_filter_module	;wreg free
  3936                           
  3937                           ;lm629.c: 197: chip_select(2);
  3938  0010F4  0E02               	movlw	2
  3939  0010F6  EC6D  F009         	call	_chip_select
  3940                           
  3941                           ;lm629.c: 198: filter_module();
  3942  0010FA  EC11  F009         	call	_filter_module	;wreg free
  3943                           
  3944                           ;lm629.c: 199: chip_select(3);
  3945  0010FE  0E03               	movlw	3
  3946  001100  EC6D  F009         	call	_chip_select
  3947                           
  3948                           ;lm629.c: 200: filter_module();
  3949  001104  EC11  F009         	call	_filter_module	;wreg free
  3950  001108  0012               	return		;funcret
  3951  00110A                     __end_of_LM629_init:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _filter_module *****************
  3955 ;; Defined at:
  3956 ;;		line 354 in file "lm629.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;		None
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;		None
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/F
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;Total ram usage:        0 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 4
  3977 ;; This function calls:
  3978 ;;		_check_busy
  3979 ;;		_write_command
  3980 ;;		_write_data
  3981 ;; This function is called by:
  3982 ;;		_LM629_init
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text16
  3987  001222                     __ptext16:
  3988                           	callstack 0
  3989  001222                     _filter_module:
  3990                           	callstack 25
  3991                           
  3992                           ;lm629.c: 356:     write_command(0x1E);
  3993                           
  3994                           ;incstack = 0
  3995  001222  0E1E               	movlw	30
  3996  001224  EC93  F009         	call	_write_command
  3997                           
  3998                           ;lm629.c: 357:     check_busy();
  3999  001228  EC41  F00A         	call	_check_busy	;wreg free
  4000                           
  4001                           ;lm629.c: 358:     write_data(0x00,0x0F);
  4002  00122C  0E0F               	movlw	15
  4003  00122E  6E06               	movwf	write_data@byte2^0,c
  4004  001230  0E00               	movlw	0
  4005  001232  EC3F  F009         	call	_write_data
  4006                           
  4007                           ;lm629.c: 359:     check_busy();
  4008  001236  EC41  F00A         	call	_check_busy	;wreg free
  4009                           
  4010                           ;lm629.c: 360:     write_data(0x01,0x0F);
  4011  00123A  0E0F               	movlw	15
  4012  00123C  6E06               	movwf	write_data@byte2^0,c
  4013  00123E  0E01               	movlw	1
  4014  001240  EC3F  F009         	call	_write_data
  4015                           
  4016                           ;lm629.c: 361:     check_busy();
  4017  001244  EC41  F00A         	call	_check_busy	;wreg free
  4018                           
  4019                           ;lm629.c: 362:     write_data(0x00,0x04);
  4020  001248  0E04               	movlw	4
  4021  00124A  6E06               	movwf	write_data@byte2^0,c
  4022  00124C  0E00               	movlw	0
  4023  00124E  EC3F  F009         	call	_write_data
  4024                           
  4025                           ;lm629.c: 363:     check_busy();
  4026  001252  EC41  F00A         	call	_check_busy	;wreg free
  4027                           
  4028                           ;lm629.c: 364:     write_data(0x7F,0xFF);
  4029  001256  0EFF               	movlw	255
  4030  001258  6E06               	movwf	write_data@byte2^0,c
  4031  00125A  0E7F               	movlw	127
  4032  00125C  EC3F  F009         	call	_write_data
  4033                           
  4034                           ;lm629.c: 365:     check_busy();
  4035  001260  EC41  F00A         	call	_check_busy	;wreg free
  4036                           
  4037                           ;lm629.c: 366:     write_data(0x00,0xFF);
  4038  001264  0EFF               	movlw	255
  4039  001266  6E06               	movwf	write_data@byte2^0,c
  4040  001268  0E00               	movlw	0
  4041  00126A  EC3F  F009         	call	_write_data
  4042                           
  4043                           ;lm629.c: 367:     check_busy();
  4044  00126E  EC41  F00A         	call	_check_busy	;wreg free
  4045                           
  4046                           ;lm629.c: 368:     write_command(0x04);
  4047  001272  0E04               	movlw	4
  4048  001274  EC93  F009         	call	_write_command
  4049                           
  4050                           ;lm629.c: 369:     check_busy();
  4051  001278  EC41  F00A         	call	_check_busy	;wreg free
  4052  00127C  0012               	return		;funcret
  4053  00127E                     __end_of_filter_module:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function _write_data *****************
  4057 ;; Defined at:
  4058 ;;		line 67 in file "lm629.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  byte1           1    wreg     unsigned char 
  4061 ;;  byte2           1    5[COMRAM] unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  byte1           1    6[COMRAM] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/F
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4073 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;Total ram usage:        2 bytes
  4078 ;; Hardware stack levels used: 1
  4079 ;; Hardware stack levels required when called: 2
  4080 ;; This function calls:
  4081 ;;		_DATABUS
  4082 ;;		_DATABUS_DIR
  4083 ;; This function is called by:
  4084 ;;		_LM629_init
  4085 ;;		_motor_off
  4086 ;;		_motor_break
  4087 ;;		_filter_module
  4088 ;;		_forward
  4089 ;;		_reverse
  4090 ;;		_right
  4091 ;;		_left
  4092 ;;		_forward_left
  4093 ;;		_forward_right
  4094 ;;		_reverse_left
  4095 ;;		_reverse_right
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text17
  4100  00127E                     __ptext17:
  4101                           	callstack 0
  4102  00127E                     _write_data:
  4103                           	callstack 27
  4104                           
  4105                           ;incstack = 0
  4106                           ;write_data@byte1 stored from wreg
  4107  00127E  6E07               	movwf	write_data@byte1^0,c
  4108                           
  4109                           ;lm629.c: 67: void write_data( unsigned char byte1, unsigned char byte2);lm629.c: 68: {;
      +                          lm629.c: 69:  _delay((unsigned long)((1)*(64000000/4000000.0)));
  4110  001280  0E05               	movlw	5
  4111  001282                     u1047:
  4112  001282  2EE8               	decfsz	wreg,f,c
  4113  001284  D7FE               	bra	u1047
  4114  001286  F000               	nop	
  4115                           
  4116                           ;lm629.c: 70:  DATABUS_DIR(0);
  4117  001288  0E00               	movlw	0
  4118  00128A  ECF0  F009         	call	_DATABUS_DIR
  4119                           
  4120                           ;lm629.c: 71:  PORTCbits.RC2=1;
  4121  00128E  8482               	bsf	130,2,c	;volatile
  4122                           
  4123                           ;lm629.c: 72:  _delay(3);
  4124  001290  D000               	nop2		;2 cycle nop
  4125  001292  F000               	nop	
  4126                           
  4127                           ;lm629.c: 73:  PORTDbits.RD1=0;
  4128  001294  9283               	bcf	131,1,c	;volatile
  4129                           
  4130                           ;lm629.c: 74:  _delay(8);
  4131  001296  D000               	nop2		;2 cycle nop
  4132  001298  D000               	nop2		;2 cycle nop
  4133  00129A  D000               	nop2		;2 cycle nop
  4134  00129C  D000               	nop2		;2 cycle nop
  4135                           
  4136                           ;lm629.c: 75:  DATABUS(0,byte1);
  4137  00129E  C007  F001         	movff	write_data@byte1,DATABUS@byte0
  4138  0012A2  0E00               	movlw	0
  4139  0012A4  ECF8  F006         	call	_DATABUS
  4140                           
  4141                           ;lm629.c: 76:  _delay(5);
  4142  0012A8  D000               	nop2		;2 cycle nop
  4143  0012AA  D000               	nop2		;2 cycle nop
  4144  0012AC  F000               	nop	
  4145                           
  4146                           ;lm629.c: 77:  PORTDbits.RD1=1;
  4147  0012AE  8283               	bsf	131,1,c	;volatile
  4148                           
  4149                           ;lm629.c: 78:  _delay(10);
  4150  0012B0  0E03               	movlw	3
  4151  0012B2                     u1057:
  4152  0012B2  2EE8               	decfsz	wreg,f,c
  4153  0012B4  D7FE               	bra	u1057
  4154  0012B6  F000               	nop	
  4155                           
  4156                           ;lm629.c: 79:  PORTDbits.RD1=0;
  4157  0012B8  9283               	bcf	131,1,c	;volatile
  4158                           
  4159                           ;lm629.c: 80:  _delay(5);
  4160  0012BA  D000               	nop2		;2 cycle nop
  4161  0012BC  D000               	nop2		;2 cycle nop
  4162  0012BE  F000               	nop	
  4163                           
  4164                           ;lm629.c: 81:  DATABUS(0,byte2);
  4165  0012C0  C006  F001         	movff	write_data@byte2,DATABUS@byte0
  4166  0012C4  0E00               	movlw	0
  4167  0012C6  ECF8  F006         	call	_DATABUS
  4168                           
  4169                           ;lm629.c: 82:  _delay(5);
  4170  0012CA  D000               	nop2		;2 cycle nop
  4171  0012CC  D000               	nop2		;2 cycle nop
  4172  0012CE  F000               	nop	
  4173                           
  4174                           ;lm629.c: 83:  PORTDbits.RD1=1;
  4175  0012D0  8283               	bsf	131,1,c	;volatile
  4176                           
  4177                           ;lm629.c: 84:  _delay(3);
  4178  0012D2  D000               	nop2		;2 cycle nop
  4179  0012D4  F000               	nop	
  4180                           
  4181                           ;lm629.c: 85:  PORTCbits.RC2=1;
  4182  0012D6  8482               	bsf	130,2,c	;volatile
  4183  0012D8  0012               	return		;funcret
  4184  0012DA                     __end_of_write_data:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _write_command *****************
  4188 ;; Defined at:
  4189 ;;		line 89 in file "lm629.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  command         1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  command         1    5[COMRAM] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  1    wreg      void 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/F
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:        1 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 2
  4210 ;; This function calls:
  4211 ;;		_DATABUS
  4212 ;;		_DATABUS_DIR
  4213 ;; This function is called by:
  4214 ;;		_LM629_init
  4215 ;;		_motor_off
  4216 ;;		_motor_break
  4217 ;;		_filter_module
  4218 ;;		_forward
  4219 ;;		_reverse
  4220 ;;		_right
  4221 ;;		_left
  4222 ;;		_forward_left
  4223 ;;		_forward_right
  4224 ;;		_reverse_left
  4225 ;;		_reverse_right
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text18
  4230  001326                     __ptext18:
  4231                           	callstack 0
  4232  001326                     _write_command:
  4233                           	callstack 27
  4234                           
  4235                           ;incstack = 0
  4236                           ;write_command@command stored from wreg
  4237  001326  6E06               	movwf	write_command@command^0,c
  4238                           
  4239                           ;lm629.c: 89: void write_command(unsigned char command);lm629.c: 90: {;lm629.c: 91:  DAT
      +                          ABUS_DIR(0);
  4240  001328  0E00               	movlw	0
  4241  00132A  ECF0  F009         	call	_DATABUS_DIR
  4242                           
  4243                           ;lm629.c: 92:  PORTCbits.RC2=0;
  4244  00132E  9482               	bcf	130,2,c	;volatile
  4245                           
  4246                           ;lm629.c: 93:  _delay(3);
  4247  001330  D000               	nop2		;2 cycle nop
  4248  001332  F000               	nop	
  4249                           
  4250                           ;lm629.c: 94:  PORTDbits.RD1=0;
  4251  001334  9283               	bcf	131,1,c	;volatile
  4252                           
  4253                           ;lm629.c: 95:  _delay(5);
  4254  001336  D000               	nop2		;2 cycle nop
  4255  001338  D000               	nop2		;2 cycle nop
  4256  00133A  F000               	nop	
  4257                           
  4258                           ;lm629.c: 96:  DATABUS(0,command);
  4259  00133C  C006  F001         	movff	write_command@command,DATABUS@byte0
  4260  001340  0E00               	movlw	0
  4261  001342  ECF8  F006         	call	_DATABUS
  4262                           
  4263                           ;lm629.c: 97:  _delay(5);
  4264  001346  D000               	nop2		;2 cycle nop
  4265  001348  D000               	nop2		;2 cycle nop
  4266  00134A  F000               	nop	
  4267                           
  4268                           ;lm629.c: 98:  PORTDbits.RD1=1;
  4269  00134C  8283               	bsf	131,1,c	;volatile
  4270                           
  4271                           ;lm629.c: 99:  _delay(3);
  4272  00134E  D000               	nop2		;2 cycle nop
  4273  001350  F000               	nop	
  4274                           
  4275                           ;lm629.c: 100:  PORTCbits.RC2=1;
  4276  001352  8482               	bsf	130,2,c	;volatile
  4277                           
  4278                           ;lm629.c: 101:  _delay(11);
  4279  001354  0E03               	movlw	3
  4280  001356                     u1067:
  4281  001356  2EE8               	decfsz	wreg,f,c
  4282  001358  D7FE               	bra	u1067
  4283  00135A  D000               	nop2	
  4284  00135C  0012               	return		;funcret
  4285  00135E                     __end_of_write_command:
  4286                           	callstack 0
  4287                           
  4288 ;; *************** function _check_busy *****************
  4289 ;; Defined at:
  4290 ;;		line 15 in file "lm629.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  x               1    6[COMRAM] unsigned char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/F
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;Total ram usage:        1 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 3
  4311 ;; This function calls:
  4312 ;;		_read_status
  4313 ;; This function is called by:
  4314 ;;		_LM629_init
  4315 ;;		_motor_off
  4316 ;;		_motor_break
  4317 ;;		_filter_module
  4318 ;;		_forward
  4319 ;;		_reverse
  4320 ;;		_right
  4321 ;;		_left
  4322 ;;		_forward_left
  4323 ;;		_forward_right
  4324 ;;		_reverse_left
  4325 ;;		_reverse_right
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	text19
  4330  001482                     __ptext19:
  4331                           	callstack 0
  4332  001482                     _check_busy:
  4333                           	callstack 25
  4334                           
  4335                           ;lm629.c: 17:  unsigned char x;;lm629.c: 18:  x=read_status();
  4336                           
  4337                           ;incstack = 0
  4338  001482  ECAF  F009         	call	_read_status	;wreg free
  4339  001486  6E07               	movwf	check_busy@x^0,c
  4340                           
  4341                           ;lm629.c: 19:  while (x & 0x01)
  4342                           
  4343                           ;lm629.c: 19:  while (x & 0x01)
  4344  001488  A007               	btfss	check_busy@x^0,0,c
  4345  00148A  0012               	return	
  4346  00148C  D7FA               	goto	__ptext19
  4347  00148E                     __end_of_check_busy:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function _read_status *****************
  4351 ;; Defined at:
  4352 ;;		line 25 in file "lm629.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  status          1    5[COMRAM] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      unsigned char 
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/F
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;Total ram usage:        1 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 2
  4373 ;; This function calls:
  4374 ;;		_DATABUS
  4375 ;;		_DATABUS_DIR
  4376 ;; This function is called by:
  4377 ;;		_check_busy
  4378 ;;		_LM629_init
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text20
  4383  00135E                     __ptext20:
  4384                           	callstack 0
  4385  00135E                     _read_status:
  4386                           	callstack 25
  4387                           
  4388                           ;lm629.c: 27:  unsigned char status;;lm629.c: 28:  DATABUS_DIR(0xFF);
  4389                           
  4390                           ;incstack = 0
  4391  00135E  0EFF               	movlw	255
  4392  001360  ECF0  F009         	call	_DATABUS_DIR
  4393                           
  4394                           ;lm629.c: 29:  PORTCbits.RC2=0;
  4395  001364  9482               	bcf	130,2,c	;volatile
  4396                           
  4397                           ;lm629.c: 30:  _delay(3);
  4398  001366  D000               	nop2		;2 cycle nop
  4399  001368  F000               	nop	
  4400                           
  4401                           ;lm629.c: 31:  PORTDbits.RD2=0;
  4402  00136A  9483               	bcf	131,2,c	;volatile
  4403                           
  4404                           ;lm629.c: 32:  _delay(12);
  4405  00136C  0E04               	movlw	4
  4406  00136E                     u1077:
  4407  00136E  2EE8               	decfsz	wreg,f,c
  4408  001370  D7FE               	bra	u1077
  4409                           
  4410                           ;lm629.c: 33:  status=DATABUS(0xFF,0);
  4411  001372  0E00               	movlw	0
  4412  001374  6E01               	movwf	DATABUS@byte0^0,c
  4413  001376  0EFF               	movlw	255
  4414  001378  ECF8  F006         	call	_DATABUS
  4415  00137C  6E06               	movwf	read_status@status^0,c
  4416                           
  4417                           ;lm629.c: 34:  PORTDbits.RD2=1;
  4418  00137E  8483               	bsf	131,2,c	;volatile
  4419                           
  4420                           ;lm629.c: 35:  _delay(5);
  4421  001380  D000               	nop2		;2 cycle nop
  4422  001382  D000               	nop2		;2 cycle nop
  4423  001384  F000               	nop	
  4424                           
  4425                           ;lm629.c: 36:  PORTCbits.RC2=1;
  4426  001386  8482               	bsf	130,2,c	;volatile
  4427                           
  4428                           ;lm629.c: 38: return status;
  4429  001388  5006               	movf	read_status@status^0,w,c
  4430  00138A  0012               	return		;funcret
  4431  00138C                     __end_of_read_status:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _DATABUS_DIR *****************
  4435 ;; Defined at:
  4436 ;;		line 208 in file "lm629.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  dir             1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  dir             1    0[COMRAM] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/F
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        1 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 1
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_read_status
  4461 ;;		_write_data
  4462 ;;		_write_command
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text21
  4467  0013E0                     __ptext21:
  4468                           	callstack 0
  4469  0013E0                     _DATABUS_DIR:
  4470                           	callstack 27
  4471                           
  4472                           ;incstack = 0
  4473                           ;DATABUS_DIR@dir stored from wreg
  4474  0013E0  6E01               	movwf	DATABUS_DIR@dir^0,c
  4475                           
  4476                           ;lm629.c: 208: void DATABUS_DIR(unsigned char dir);lm629.c: 209: {;lm629.c: 210:     if(
      +                          dir==0)
  4477  0013E2  5001               	movf	DATABUS_DIR@dir^0,w,c
  4478  0013E4  A4D8               	btfss	status,2,c
  4479  0013E6  D007               	goto	l1293
  4480                           
  4481                           ;lm629.c: 211:     {;lm629.c: 212:         TRISC&=0b00111111;
  4482  0013E8  0E3F               	movlw	63
  4483  0013EA  1694               	andwf	148,f,c	;volatile
  4484                           
  4485                           ;lm629.c: 213:         TRISD&=0b00001111;
  4486  0013EC  0E0F               	movlw	15
  4487  0013EE  1695               	andwf	149,f,c	;volatile
  4488                           
  4489                           ;lm629.c: 214:         TRISB&=0b11111100;
  4490  0013F0  0EFC               	movlw	252
  4491  0013F2  1693               	andwf	147,f,c	;volatile
  4492                           
  4493                           ;lm629.c: 215:     }
  4494  0013F4  0012               	return	
  4495  0013F6                     l1293:
  4496  0013F6  2801               	incf	DATABUS_DIR@dir^0,w,c
  4497  0013F8  A4D8               	btfss	status,2,c
  4498  0013FA  0012               	return	
  4499                           
  4500                           ;lm629.c: 217:     {;lm629.c: 218:         TRISC|=0b11000000;
  4501  0013FC  0EC0               	movlw	192
  4502  0013FE  1294               	iorwf	148,f,c	;volatile
  4503                           
  4504                           ;lm629.c: 219:         TRISD|=0b11110000;
  4505  001400  0EF0               	movlw	240
  4506  001402  1295               	iorwf	149,f,c	;volatile
  4507                           
  4508                           ;lm629.c: 220:         TRISB|=0b00000011;
  4509  001404  0E03               	movlw	3
  4510  001406  1293               	iorwf	147,f,c	;volatile
  4511  001408  0012               	return		;funcret
  4512  00140A                     __end_of_DATABUS_DIR:
  4513                           	callstack 0
  4514                           
  4515 ;; *************** function _DATABUS *****************
  4516 ;; Defined at:
  4517 ;;		line 227 in file "lm629.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  dir1            1    wreg     unsigned char 
  4520 ;;  byte0           1    0[COMRAM] unsigned char 
  4521 ;; Auto vars:     Size  Location     Type
  4522 ;;  dir1            1    3[COMRAM] unsigned char 
  4523 ;;  x               1    4[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      unsigned char 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/F
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4533 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;Total ram usage:        5 bytes
  4538 ;; Hardware stack levels used: 1
  4539 ;; Hardware stack levels required when called: 1
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_read_status
  4544 ;;		_write_data
  4545 ;;		_write_command
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text22
  4550  000DF0                     __ptext22:
  4551                           	callstack 0
  4552  000DF0                     _DATABUS:
  4553                           	callstack 27
  4554                           
  4555                           ;incstack = 0
  4556                           ;DATABUS@dir1 stored from wreg
  4557  000DF0  6E04               	movwf	DATABUS@dir1^0,c
  4558                           
  4559                           ;lm629.c: 227: unsigned char DATABUS(unsigned char dir1, unsigned char byte0);lm629.c: 2
      +                          28: {;lm629.c: 229: unsigned char x;;lm629.c: 230: if(dir1==0)
  4560  000DF2  5004               	movf	DATABUS@dir1^0,w,c
  4561  000DF4  A4D8               	btfss	status,2,c
  4562  000DF6  D076               	goto	l1303
  4563                           
  4564                           ;lm629.c: 231: {;lm629.c: 232:     PORTCbits.RC6 = ((byte0 & 0x01) >> 0);
  4565  000DF8  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4566  000DFC  0E01               	movlw	1
  4567  000DFE  1602               	andwf	??_DATABUS^0,f,c
  4568  000E00  3A02               	swapf	??_DATABUS^0,f,c
  4569  000E02  4602               	rlncf	??_DATABUS^0,f,c
  4570  000E04  4602               	rlncf	??_DATABUS^0,f,c
  4571  000E06  5082               	movf	130,w,c	;volatile
  4572  000E08  1802               	xorwf	??_DATABUS^0,w,c
  4573  000E0A  0BBF               	andlw	-65
  4574  000E0C  1802               	xorwf	??_DATABUS^0,w,c
  4575  000E0E  6E82               	movwf	130,c	;volatile
  4576                           
  4577                           ;lm629.c: 233:     PORTCbits.RC7 = ((byte0 & 0x02) >> 1);
  4578  000E10  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4579  000E14  90D8               	bcf	status,0,c
  4580  000E16  3202               	rrcf	??_DATABUS^0,f,c
  4581  000E18  0E01               	movlw	1
  4582  000E1A  1602               	andwf	??_DATABUS^0,f,c
  4583  000E1C  3202               	rrcf	??_DATABUS^0,f,c
  4584  000E1E  3202               	rrcf	??_DATABUS^0,f,c
  4585  000E20  5082               	movf	130,w,c	;volatile
  4586  000E22  1802               	xorwf	??_DATABUS^0,w,c
  4587  000E24  0B7F               	andlw	-129
  4588  000E26  1802               	xorwf	??_DATABUS^0,w,c
  4589  000E28  6E82               	movwf	130,c	;volatile
  4590                           
  4591                           ;lm629.c: 234:     PORTDbits.RD4 = ((byte0 & 0x04) >> 2);
  4592  000E2A  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4593  000E2E  90D8               	bcf	status,0,c
  4594  000E30  3202               	rrcf	??_DATABUS^0,f,c
  4595  000E32  90D8               	bcf	status,0,c
  4596  000E34  3202               	rrcf	??_DATABUS^0,f,c
  4597  000E36  0E01               	movlw	1
  4598  000E38  1602               	andwf	??_DATABUS^0,f,c
  4599  000E3A  3A02               	swapf	??_DATABUS^0,f,c
  4600  000E3C  5083               	movf	131,w,c	;volatile
  4601  000E3E  1802               	xorwf	??_DATABUS^0,w,c
  4602  000E40  0BEF               	andlw	-17
  4603  000E42  1802               	xorwf	??_DATABUS^0,w,c
  4604  000E44  6E83               	movwf	131,c	;volatile
  4605                           
  4606                           ;lm629.c: 235:     PORTDbits.RD5 = ((byte0 & 0x08) >> 3);
  4607  000E46  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4608  000E4A  90D8               	bcf	status,0,c
  4609  000E4C  3202               	rrcf	??_DATABUS^0,f,c
  4610  000E4E  90D8               	bcf	status,0,c
  4611  000E50  3202               	rrcf	??_DATABUS^0,f,c
  4612  000E52  90D8               	bcf	status,0,c
  4613  000E54  3202               	rrcf	??_DATABUS^0,f,c
  4614  000E56  0E01               	movlw	1
  4615  000E58  1602               	andwf	??_DATABUS^0,f,c
  4616  000E5A  3A02               	swapf	??_DATABUS^0,f,c
  4617  000E5C  4602               	rlncf	??_DATABUS^0,f,c
  4618  000E5E  5083               	movf	131,w,c	;volatile
  4619  000E60  1802               	xorwf	??_DATABUS^0,w,c
  4620  000E62  0BDF               	andlw	-33
  4621  000E64  1802               	xorwf	??_DATABUS^0,w,c
  4622  000E66  6E83               	movwf	131,c	;volatile
  4623                           
  4624                           ;lm629.c: 236:     PORTDbits.RD6 = ((byte0 & 0x10) >> 4);
  4625  000E68  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4626  000E6C  3A02               	swapf	??_DATABUS^0,f,c
  4627  000E6E  0E0F               	movlw	15
  4628  000E70  1602               	andwf	??_DATABUS^0,f,c
  4629  000E72  0E01               	movlw	1
  4630  000E74  1602               	andwf	??_DATABUS^0,f,c
  4631  000E76  3A02               	swapf	??_DATABUS^0,f,c
  4632  000E78  4602               	rlncf	??_DATABUS^0,f,c
  4633  000E7A  4602               	rlncf	??_DATABUS^0,f,c
  4634  000E7C  5083               	movf	131,w,c	;volatile
  4635  000E7E  1802               	xorwf	??_DATABUS^0,w,c
  4636  000E80  0BBF               	andlw	-65
  4637  000E82  1802               	xorwf	??_DATABUS^0,w,c
  4638  000E84  6E83               	movwf	131,c	;volatile
  4639                           
  4640                           ;lm629.c: 237:     PORTDbits.RD7 = ((byte0 & 0x20) >> 5);
  4641  000E86  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4642  000E8A  0E05               	movlw	5
  4643  000E8C  6E03               	movwf	(??_DATABUS+1)^0,c
  4644  000E8E                     u515:
  4645  000E8E  90D8               	bcf	status,0,c
  4646  000E90  3202               	rrcf	??_DATABUS^0,f,c
  4647  000E92  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  4648  000E94  D7FC               	goto	u515
  4649  000E96  0E01               	movlw	1
  4650  000E98  1602               	andwf	??_DATABUS^0,f,c
  4651  000E9A  3202               	rrcf	??_DATABUS^0,f,c
  4652  000E9C  3202               	rrcf	??_DATABUS^0,f,c
  4653  000E9E  5083               	movf	131,w,c	;volatile
  4654  000EA0  1802               	xorwf	??_DATABUS^0,w,c
  4655  000EA2  0B7F               	andlw	-129
  4656  000EA4  1802               	xorwf	??_DATABUS^0,w,c
  4657  000EA6  6E83               	movwf	131,c	;volatile
  4658                           
  4659                           ;lm629.c: 238:     PORTBbits.RB0 = ((byte0 & 0x40) >> 6);
  4660  000EA8  C001  F002         	movff	DATABUS@byte0,??_DATABUS
  4661  000EAC  0E06               	movlw	6
  4662  000EAE  6E03               	movwf	(??_DATABUS+1)^0,c
  4663  000EB0                     u525:
  4664  000EB0  90D8               	bcf	status,0,c
  4665  000EB2  3202               	rrcf	??_DATABUS^0,f,c
  4666  000EB4  2E03               	decfsz	(??_DATABUS+1)^0,f,c
  4667  000EB6  D7FC               	goto	u525
  4668  000EB8  0E01               	movlw	1
  4669  000EBA  1602               	andwf	??_DATABUS^0,f,c
  4670  000EBC  5081               	movf	129,w,c	;volatile
  4671  000EBE  1802               	xorwf	??_DATABUS^0,w,c
  4672  000EC0  0BFE               	andlw	-2
  4673  000EC2  1802               	xorwf	??_DATABUS^0,w,c
  4674  000EC4  6E81               	movwf	129,c	;volatile
  4675                           
  4676                           ;lm629.c: 239:     PORTBbits.RB1 = ((byte0 & 0x80) >> 7);
  4677  000EC6  6A02               	clrf	??_DATABUS^0,c
  4678  000EC8  AE01               	btfss	DATABUS@byte0^0,7,c
  4679  000ECA  D001               	bra	u535
  4680  000ECC  2A02               	incf	??_DATABUS^0,f,c
  4681  000ECE                     u535:
  4682  000ECE  0E01               	movlw	1
  4683  000ED0  1602               	andwf	??_DATABUS^0,f,c
  4684  000ED2  4602               	rlncf	??_DATABUS^0,f,c
  4685  000ED4  5081               	movf	129,w,c	;volatile
  4686  000ED6  1802               	xorwf	??_DATABUS^0,w,c
  4687  000ED8  0BFD               	andlw	-3
  4688  000EDA  1802               	xorwf	??_DATABUS^0,w,c
  4689  000EDC  6E81               	movwf	129,c	;volatile
  4690                           
  4691                           ;lm629.c: 240:     x=0;
  4692  000EDE  0E00               	movlw	0
  4693  000EE0  6E05               	movwf	DATABUS@x^0,c
  4694                           
  4695                           ;lm629.c: 241: }
  4696  000EE2  D04B               	goto	l1307
  4697  000EE4                     l1303:
  4698  000EE4  2804               	incf	DATABUS@dir1^0,w,c
  4699  000EE6  A4D8               	btfss	status,2,c
  4700  000EE8  D048               	goto	l1307
  4701                           
  4702                           ;lm629.c: 244: {;lm629.c: 245:     x |= (PORTBbits.RB1 << 7);
  4703  000EEA  A281               	btfss	129,1,c	;volatile
  4704  000EEC  D003               	goto	u550
  4705  000EEE  0E80               	movlw	128
  4706  000EF0  6E02               	movwf	??_DATABUS^0,c
  4707  000EF2  D001               	goto	u565
  4708  000EF4                     u550:
  4709  000EF4  6A02               	clrf	??_DATABUS^0,c
  4710  000EF6                     u565:
  4711  000EF6  5002               	movf	??_DATABUS^0,w,c
  4712  000EF8  1205               	iorwf	DATABUS@x^0,f,c
  4713                           
  4714                           ;lm629.c: 246:     x |= (PORTBbits.RB0 << 6);
  4715  000EFA  A081               	btfss	129,0,c	;volatile
  4716  000EFC  D003               	goto	u570
  4717  000EFE  0E40               	movlw	64
  4718  000F00  6E02               	movwf	??_DATABUS^0,c
  4719  000F02  D001               	goto	u585
  4720  000F04                     u570:
  4721  000F04  6A02               	clrf	??_DATABUS^0,c
  4722  000F06                     u585:
  4723  000F06  5002               	movf	??_DATABUS^0,w,c
  4724  000F08  1205               	iorwf	DATABUS@x^0,f,c
  4725                           
  4726                           ;lm629.c: 247:     x |= (PORTDbits.RD7 << 5);
  4727  000F0A  AE83               	btfss	131,7,c	;volatile
  4728  000F0C  D003               	goto	u590
  4729  000F0E  0E20               	movlw	32
  4730  000F10  6E02               	movwf	??_DATABUS^0,c
  4731  000F12  D001               	goto	u605
  4732  000F14                     u590:
  4733  000F14  6A02               	clrf	??_DATABUS^0,c
  4734  000F16                     u605:
  4735  000F16  5002               	movf	??_DATABUS^0,w,c
  4736  000F18  1205               	iorwf	DATABUS@x^0,f,c
  4737                           
  4738                           ;lm629.c: 248:     x |= (PORTDbits.RD6 << 4);
  4739  000F1A  AC83               	btfss	131,6,c	;volatile
  4740  000F1C  D003               	goto	u610
  4741  000F1E  6A02               	clrf	??_DATABUS^0,c
  4742  000F20  2A02               	incf	??_DATABUS^0,f,c
  4743  000F22  D001               	goto	u618
  4744  000F24                     u610:
  4745  000F24  6A02               	clrf	??_DATABUS^0,c
  4746  000F26                     u618:
  4747  000F26  3802               	swapf	??_DATABUS^0,w,c
  4748  000F28  0BF0               	andlw	240
  4749  000F2A  1205               	iorwf	DATABUS@x^0,f,c
  4750                           
  4751                           ;lm629.c: 249:     x |= (PORTDbits.RD5 << 3);
  4752  000F2C  AA83               	btfss	131,5,c	;volatile
  4753  000F2E  D003               	goto	u620
  4754  000F30  6A02               	clrf	??_DATABUS^0,c
  4755  000F32  2A02               	incf	??_DATABUS^0,f,c
  4756  000F34  D001               	goto	u628
  4757  000F36                     u620:
  4758  000F36  6A02               	clrf	??_DATABUS^0,c
  4759  000F38                     u628:
  4760  000F38  90D8               	bcf	status,0,c
  4761  000F3A  3602               	rlcf	??_DATABUS^0,f,c
  4762  000F3C  90D8               	bcf	status,0,c
  4763  000F3E  3602               	rlcf	??_DATABUS^0,f,c
  4764  000F40  90D8               	bcf	status,0,c
  4765  000F42  3402               	rlcf	??_DATABUS^0,w,c
  4766  000F44  1205               	iorwf	DATABUS@x^0,f,c
  4767                           
  4768                           ;lm629.c: 250:     x |= (PORTDbits.RD4 << 2);
  4769  000F46  A883               	btfss	131,4,c	;volatile
  4770  000F48  D003               	goto	u630
  4771  000F4A  6A02               	clrf	??_DATABUS^0,c
  4772  000F4C  2A02               	incf	??_DATABUS^0,f,c
  4773  000F4E  D001               	goto	u638
  4774  000F50                     u630:
  4775  000F50  6A02               	clrf	??_DATABUS^0,c
  4776  000F52                     u638:
  4777  000F52  90D8               	bcf	status,0,c
  4778  000F54  3602               	rlcf	??_DATABUS^0,f,c
  4779  000F56  90D8               	bcf	status,0,c
  4780  000F58  3402               	rlcf	??_DATABUS^0,w,c
  4781  000F5A  1205               	iorwf	DATABUS@x^0,f,c
  4782                           
  4783                           ;lm629.c: 251:     x |= (PORTCbits.RC7 << 1);
  4784  000F5C  AE82               	btfss	130,7,c	;volatile
  4785  000F5E  D003               	goto	u640
  4786  000F60  6A02               	clrf	??_DATABUS^0,c
  4787  000F62  2A02               	incf	??_DATABUS^0,f,c
  4788  000F64  D001               	goto	u648
  4789  000F66                     u640:
  4790  000F66  6A02               	clrf	??_DATABUS^0,c
  4791  000F68                     u648:
  4792  000F68  90D8               	bcf	status,0,c
  4793  000F6A  3402               	rlcf	??_DATABUS^0,w,c
  4794  000F6C  1205               	iorwf	DATABUS@x^0,f,c
  4795                           
  4796                           ;lm629.c: 252:     x |= PORTCbits.RC6;
  4797  000F6E  AC82               	btfss	130,6,c	;volatile
  4798  000F70  D002               	goto	u650
  4799  000F72  0E01               	movlw	1
  4800  000F74  D001               	goto	u656
  4801  000F76                     u650:
  4802  000F76  0E00               	movlw	0
  4803  000F78                     u656:
  4804  000F78  1205               	iorwf	DATABUS@x^0,f,c
  4805  000F7A                     l1307:
  4806                           
  4807                           ;lm629.c: 266: return x;
  4808  000F7A  5005               	movf	DATABUS@x^0,w,c
  4809  000F7C  0012               	return		;funcret
  4810  000F7E                     __end_of_DATABUS:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function _chip_select *****************
  4814 ;; Defined at:
  4815 ;;		line 269 in file "lm629.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  chip            1    wreg     unsigned char 
  4818 ;; Auto vars:     Size  Location     Type
  4819 ;;  chip            1    0[COMRAM] unsigned char 
  4820 ;; Return value:  Size  Location     Type
  4821 ;;                  1    wreg      void 
  4822 ;; Registers used:
  4823 ;;		wreg, status,2, status,0
  4824 ;; Tracked objects:
  4825 ;;		On entry : 0/F
  4826 ;;		On exit  : 0/0
  4827 ;;		Unchanged: 0/0
  4828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;Total ram usage:        1 bytes
  4834 ;; Hardware stack levels used: 1
  4835 ;; Hardware stack levels required when called: 1
  4836 ;; This function calls:
  4837 ;;		Nothing
  4838 ;; This function is called by:
  4839 ;;		_LM629_init
  4840 ;;		_all_break
  4841 ;;		_all_off
  4842 ;;		_forward
  4843 ;;		_reverse
  4844 ;;		_right
  4845 ;;		_left
  4846 ;;		_forward_left
  4847 ;;		_forward_right
  4848 ;;		_reverse_left
  4849 ;;		_reverse_right
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text23
  4854  0012DA                     __ptext23:
  4855                           	callstack 0
  4856  0012DA                     _chip_select:
  4857                           	callstack 28
  4858                           
  4859                           ;incstack = 0
  4860                           ;chip_select@chip stored from wreg
  4861  0012DA  6E01               	movwf	chip_select@chip^0,c
  4862                           
  4863                           ;lm629.c: 269: void chip_select(unsigned char chip);lm629.c: 270: {;lm629.c: 271:  if(ch
      +                          ip==0)
  4864  0012DC  5001               	movf	chip_select@chip^0,w,c
  4865  0012DE  A4D8               	btfss	status,2,c
  4866  0012E0  D002               	goto	l1397
  4867                           
  4868                           ;lm629.c: 272:  {;lm629.c: 273:   PORTDbits.RD3=0;
  4869  0012E2  9683               	bcf	131,3,c	;volatile
  4870  0012E4  D018               	goto	L1
  4871  0012E6                     l1397:
  4872  0012E6  0401               	decf	chip_select@chip^0,w,c
  4873  0012E8  A4D8               	btfss	status,2,c
  4874  0012EA  D003               	goto	l1401
  4875                           
  4876                           ;lm629.c: 279:  {;lm629.c: 280:   PORTDbits.RD3=1;
  4877  0012EC  8683               	bsf	131,3,c	;volatile
  4878                           
  4879                           ;lm629.c: 281:   PORTBbits.RB2=0;
  4880  0012EE  9481               	bcf	129,2,c	;volatile
  4881  0012F0  D013               	goto	L2
  4882  0012F2                     l1401:
  4883  0012F2  0E02               	movlw	2
  4884  0012F4  1801               	xorwf	chip_select@chip^0,w,c
  4885  0012F6  A4D8               	btfss	status,2,c
  4886  0012F8  D004               	goto	l1405
  4887                           
  4888                           ;lm629.c: 286:  {;lm629.c: 287:   PORTDbits.RD3=1;
  4889  0012FA  8683               	bsf	131,3,c	;volatile
  4890                           
  4891                           ;lm629.c: 288:   PORTBbits.RB2=1;
  4892  0012FC  8481               	bsf	129,2,c	;volatile
  4893                           
  4894                           ;lm629.c: 289:   PORTAbits.RA0=0;
  4895  0012FE  9080               	bcf	128,0,c	;volatile
  4896  001300  D00C               	goto	L3
  4897  001302                     l1405:
  4898  001302  0E03               	movlw	3
  4899  001304  1801               	xorwf	chip_select@chip^0,w,c
  4900  001306  A4D8               	btfss	status,2,c
  4901  001308  D005               	goto	l181
  4902                           
  4903                           ;lm629.c: 293:  {;lm629.c: 294:   PORTDbits.RD3=1;
  4904  00130A  8683               	bsf	131,3,c	;volatile
  4905                           
  4906                           ;lm629.c: 295:   PORTBbits.RB2=1;
  4907  00130C  8481               	bsf	129,2,c	;volatile
  4908                           
  4909                           ;lm629.c: 296:   PORTAbits.RA0=1;
  4910  00130E  8080               	bsf	128,0,c	;volatile
  4911                           
  4912                           ;lm629.c: 297:   PORTBbits.RB4=0;
  4913  001310  9881               	bcf	129,4,c	;volatile
  4914                           
  4915                           ;lm629.c: 298:  }
  4916  001312  D004               	goto	l1409
  4917  001314                     l181:
  4918                           
  4919                           ;lm629.c: 300:  {;lm629.c: 301:   PORTDbits.RD3=1;
  4920  001314  8683               	bsf	131,3,c	;volatile
  4921  001316                     L1:
  4922                           
  4923                           ;lm629.c: 302:   PORTBbits.RB2=1;
  4924  001316  8481               	bsf	129,2,c	;volatile
  4925  001318                     L2:
  4926                           
  4927                           ;lm629.c: 303:   PORTAbits.RA0=1;
  4928  001318  8080               	bsf	128,0,c	;volatile
  4929  00131A                     L3:
  4930                           
  4931                           ;lm629.c: 304:   PORTBbits.RB4=1;
  4932  00131A  8881               	bsf	129,4,c	;volatile
  4933  00131C                     l1409:
  4934                           
  4935                           ;lm629.c: 307:  _delay((unsigned long)((10)*(64000000/4000000.0)));
  4936  00131C  0E35               	movlw	53
  4937  00131E                     u1087:
  4938  00131E  2EE8               	decfsz	wreg,f,c
  4939  001320  D7FE               	bra	u1087
  4940  001322  F000               	nop	
  4941  001324  0012               	return		;funcret
  4942  001326                     __end_of_chip_select:
  4943                           	callstack 0
  4944                           
  4945 ;; *************** function _SPI_ISR *****************
  4946 ;; Defined at:
  4947 ;;		line 31 in file "spi.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;		None
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;Total ram usage:        0 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		Interrupt level 2
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           
  4974                           	psect	intcode
  4975  000008                     __pintcode:
  4976                           	callstack 0
  4977  000008                     _SPI_ISR:
  4978                           	callstack 25
  4979                           
  4980                           ;incstack = 0
  4981  000008  820C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4982                           
  4983                           ;spi.c: 33:     if(SSPIF)
  4984  00000A  A69E               	btfss	3998,3,c	;volatile
  4985  00000C  D005               	goto	i2l271
  4986                           
  4987                           ;spi.c: 34:     {;spi.c: 35:         SSP1IF=0;
  4988  00000E  969E               	bcf	3998,3,c	;volatile
  4989                           
  4990                           ;spi.c: 36:         spi_read_data=SSP1BUF;
  4991  000010  CFC9 F00B          	movff	4041,_spi_read_data	;volatile
  4992                           
  4993                           ;spi.c: 37:         SSP1BUF = 0x55;
  4994  000014  0E55               	movlw	85
  4995  000016  6EC9               	movwf	201,c	;volatile
  4996  000018                     i2l271:
  4997  000018  920C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4998  00001A  0011               	retfie		f
  4999  00001C                     __end_of_SPI_ISR:
  5000                           	callstack 0
  5001  0000                     
  5002                           	psect	rparam
  5003  0000                     
  5004                           	psect	temp
  5005  00000C                     btemp:
  5006                           	callstack 0
  5007  00000C                     	ds	1
  5008  0000                     int$flags	set	btemp
  5009  0000                     wtemp8	set	btemp+1
  5010  0000                     ttemp5	set	btemp+1
  5011  0000                     ttemp6	set	btemp+4
  5012  0000                     ttemp7	set	btemp+8
  5013                           
  5014                           	psect	idloc
  5015                           
  5016                           ;Config register IDLOC0 @ 0x200000
  5017                           ;	unspecified, using default values
  5018  200000                     	org	2097152
  5019  200000  FF                 	db	255
  5020                           
  5021                           ;Config register IDLOC1 @ 0x200001
  5022                           ;	unspecified, using default values
  5023  200001                     	org	2097153
  5024  200001  FF                 	db	255
  5025                           
  5026                           ;Config register IDLOC2 @ 0x200002
  5027                           ;	unspecified, using default values
  5028  200002                     	org	2097154
  5029  200002  FF                 	db	255
  5030                           
  5031                           ;Config register IDLOC3 @ 0x200003
  5032                           ;	unspecified, using default values
  5033  200003                     	org	2097155
  5034  200003  FF                 	db	255
  5035                           
  5036                           ;Config register IDLOC4 @ 0x200004
  5037                           ;	unspecified, using default values
  5038  200004                     	org	2097156
  5039  200004  FF                 	db	255
  5040                           
  5041                           ;Config register IDLOC5 @ 0x200005
  5042                           ;	unspecified, using default values
  5043  200005                     	org	2097157
  5044  200005  FF                 	db	255
  5045                           
  5046                           ;Config register IDLOC6 @ 0x200006
  5047                           ;	unspecified, using default values
  5048  200006                     	org	2097158
  5049  200006  FF                 	db	255
  5050                           
  5051                           ;Config register IDLOC7 @ 0x200007
  5052                           ;	unspecified, using default values
  5053  200007                     	org	2097159
  5054  200007  FF                 	db	255
  5055                           
  5056                           	psect	config
  5057                           
  5058                           ; Padding undefined space
  5059  300000                     	org	3145728
  5060  300000  FF                 	db	255
  5061                           
  5062                           ;Config register CONFIG1H @ 0x300001
  5063                           ;	Oscillator Selection bits
  5064                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  5065                           ;	4X PLL Enable
  5066                           ;	PLLCFG = ON, Oscillator multiplied by 4
  5067                           ;	Primary clock enable bit
  5068                           ;	PRICLKEN = ON, Primary clock is always enabled
  5069                           ;	Fail-Safe Clock Monitor Enable bit
  5070                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5071                           ;	Internal/External Oscillator Switchover bit
  5072                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5073  300001                     	org	3145729
  5074  300001  32                 	db	50
  5075                           
  5076                           ;Config register CONFIG2L @ 0x300002
  5077                           ;	Power-up Timer Enable bit
  5078                           ;	PWRTEN = OFF, Power up timer disabled
  5079                           ;	Brown-out Reset Enable bits
  5080                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5081                           ;	Brown Out Reset Voltage bits
  5082                           ;	BORV = 0x3, unprogrammed default
  5083  300002                     	org	3145730
  5084  300002  19                 	db	25
  5085                           
  5086                           ;Config register CONFIG2H @ 0x300003
  5087                           ;	Watchdog Timer Enable bits
  5088                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5089                           ;	Watchdog Timer Postscale Select bits
  5090                           ;	WDTPS = 0xF, unprogrammed default
  5091  300003                     	org	3145731
  5092  300003  3C                 	db	60
  5093                           
  5094                           ; Padding undefined space
  5095  300004                     	org	3145732
  5096  300004  FF                 	db	255
  5097                           
  5098                           ;Config register CONFIG3H @ 0x300005
  5099                           ;	CCP2 MUX bit
  5100                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5101                           ;	PORTB A/D Enable bit
  5102                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  5103                           ;	P3A/CCP3 Mux bit
  5104                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  5105                           ;	HFINTOSC Fast Start-up
  5106                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  5107                           ;	Timer3 Clock input mux bit
  5108                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5109                           ;	ECCP2 B output mux bit
  5110                           ;	P2BMX = PORTC0, P2B is on RC0
  5111                           ;	MCLR Pin Enable bit
  5112                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5113  300005                     	org	3145733
  5114  300005  91                 	db	145
  5115                           
  5116                           ;Config register CONFIG4L @ 0x300006
  5117                           ;	Stack Full/Underflow Reset Enable bit
  5118                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5119                           ;	Single-Supply ICSP Enable bit
  5120                           ;	LVP = OFF, Single-Supply ICSP disabled
  5121                           ;	Extended Instruction Set Enable bit
  5122                           ;	XINST = 0x0, unprogrammed default
  5123                           ;	Background Debug
  5124                           ;	DEBUG = OFF, Disabled
  5125  300006                     	org	3145734
  5126  300006  81                 	db	129
  5127                           
  5128                           ; Padding undefined space
  5129  300007                     	org	3145735
  5130  300007  FF                 	db	255
  5131                           
  5132                           ;Config register CONFIG5L @ 0x300008
  5133                           ;	Code Protection Block 0
  5134                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5135                           ;	Code Protection Block 1
  5136                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5137                           ;	Code Protection Block 2
  5138                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5139                           ;	Code Protection Block 3
  5140                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5141  300008                     	org	3145736
  5142  300008  0F                 	db	15
  5143                           
  5144                           ;Config register CONFIG5H @ 0x300009
  5145                           ;	Boot Block Code Protection bit
  5146                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5147                           ;	Data EEPROM Code Protection bit
  5148                           ;	CPD = OFF, Data EEPROM not code-protected
  5149  300009                     	org	3145737
  5150  300009  C0                 	db	192
  5151                           
  5152                           ;Config register CONFIG6L @ 0x30000A
  5153                           ;	Write Protection Block 0
  5154                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5155                           ;	Write Protection Block 1
  5156                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5157                           ;	Write Protection Block 2
  5158                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5159                           ;	Write Protection Block 3
  5160                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5161  30000A                     	org	3145738
  5162  30000A  0F                 	db	15
  5163                           
  5164                           ;Config register CONFIG6H @ 0x30000B
  5165                           ;	Configuration Register Write Protection bit
  5166                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5167                           ;	Boot Block Write Protection bit
  5168                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5169                           ;	Data EEPROM Write Protection bit
  5170                           ;	WRTD = OFF, Data EEPROM not write-protected
  5171  30000B                     	org	3145739
  5172  30000B  E0                 	db	224
  5173                           
  5174                           ;Config register CONFIG7L @ 0x30000C
  5175                           ;	Table Read Protection Block 0
  5176                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5177                           ;	Table Read Protection Block 1
  5178                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5179                           ;	Table Read Protection Block 2
  5180                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5181                           ;	Table Read Protection Block 3
  5182                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5183  30000C                     	org	3145740
  5184  30000C  0F                 	db	15
  5185                           
  5186                           ;Config register CONFIG7H @ 0x30000D
  5187                           ;	Boot Block Table Read Protection bit
  5188                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5189  30000D                     	org	3145741
  5190  30000D  40                 	db	64
  5191                           tosu	equ	0xFFF
  5192                           tosh	equ	0xFFE
  5193                           tosl	equ	0xFFD
  5194                           stkptr	equ	0xFFC
  5195                           pclatu	equ	0xFFB
  5196                           pclath	equ	0xFFA
  5197                           pcl	equ	0xFF9
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           prodh	equ	0xFF4
  5203                           prodl	equ	0xFF3
  5204                           indf0	equ	0xFEF
  5205                           postinc0	equ	0xFEE
  5206                           postdec0	equ	0xFED
  5207                           preinc0	equ	0xFEC
  5208                           plusw0	equ	0xFEB
  5209                           fsr0h	equ	0xFEA
  5210                           fsr0l	equ	0xFE9
  5211                           wreg	equ	0xFE8
  5212                           indf1	equ	0xFE7
  5213                           postinc1	equ	0xFE6
  5214                           postdec1	equ	0xFE5
  5215                           preinc1	equ	0xFE4
  5216                           plusw1	equ	0xFE3
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           bsr	equ	0xFE0
  5220                           indf2	equ	0xFDF
  5221                           postinc2	equ	0xFDE
  5222                           postdec2	equ	0xFDD
  5223                           preinc2	equ	0xFDC
  5224                           plusw2	equ	0xFDB
  5225                           fsr2h	equ	0xFDA
  5226                           fsr2l	equ	0xFD9
  5227                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     10      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LM629_init
    _right->_check_busy
    _right->_write_data
    _reverse_right->_check_busy
    _reverse_right->_write_data
    _reverse_left->_check_busy
    _reverse_left->_write_data
    _reverse->_check_busy
    _reverse->_write_data
    _left->_check_busy
    _left->_write_data
    _forward_right->_check_busy
    _forward_right->_write_data
    _forward_left->_check_busy
    _forward_left->_write_data
    _forward->_check_busy
    _forward->_write_data
    _motor_off->_check_busy
    _motor_off->_write_data
    _motor_break->_check_busy
    _motor_break->_write_data
    _LM629_init->_check_busy
    _LM629_init->_write_data
    _filter_module->_check_busy
    _filter_module->_write_data
    _write_data->_DATABUS
    _write_command->_DATABUS
    _check_busy->_read_status
    _read_status->_DATABUS

Critical Paths under _SPI_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SPI_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SPI_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SPI_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SPI_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SPI_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SPI_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SPI_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SPI_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SPI_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _SPI_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SPI_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _SPI_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  324076
                                              9 COMRAM     1     1      0
                         _LM629_init
                          _all_break
                            _all_off
                            _forward
                       _forward_left
                      _forward_right
                               _left
                            _reverse
                       _reverse_left
                      _reverse_right
                              _right
                           _spi_data
                     _spi_slave_init
 ---------------------------------------------------------------------------------
 (1) _spi_slave_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _right                                                0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_right                                        0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse_left                                         0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _reverse                                              0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _left                                                 0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_right                                        0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward_left                                         0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _forward                                              0     0      0   32268
                         _check_busy
                        _chip_select
                          _motor_off
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_off                                              0     0      0   16178
                        _chip_select
                          _motor_off
 ---------------------------------------------------------------------------------
 (2) _motor_off                                            0     0      0   16090
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _all_break                                            0     0      0   16178
                        _chip_select
                        _motor_break
 ---------------------------------------------------------------------------------
 (2) _motor_break                                          0     0      0   16090
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (1) _LM629_init                                           2     2      0   33287
                                              7 COMRAM     2     2      0
                         _check_busy
                        _chip_select
                      _filter_module
                        _read_status
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _filter_module                                        0     0      0   16090
                         _check_busy
                      _write_command
                         _write_data
 ---------------------------------------------------------------------------------
 (2) _write_data                                           2     1      1   14571
                                              5 COMRAM     2     1      1
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (2) _write_command                                        1     1      0     747
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _check_busy                                           1     1      0     772
                                              6 COMRAM     1     1      0
                        _read_status
 ---------------------------------------------------------------------------------
 (4) _read_status                                          1     1      0     748
                                              5 COMRAM     1     1      0
                            _DATABUS
                        _DATABUS_DIR
 ---------------------------------------------------------------------------------
 (3) _DATABUS_DIR                                          1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DATABUS                                              5     4      1     681
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _chip_select                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _SPI_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LM629_init
     _check_busy
       _read_status
         _DATABUS
         _DATABUS_DIR
     _chip_select
     _filter_module
       _check_busy
       _write_command
         _DATABUS
         _DATABUS_DIR
       _write_data
         _DATABUS
         _DATABUS_DIR
     _read_status
     _write_command
     _write_data
   _all_break
     _chip_select
     _motor_break
       _check_busy
       _write_command
       _write_data
   _all_off
     _chip_select
     _motor_off
       _check_busy
       _write_command
       _write_data
   _forward
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _forward_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_left
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _reverse_right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _right
     _check_busy
     _chip_select
     _motor_off
     _write_command
     _write_data
   _spi_data
   _spi_slave_init

 _SPI_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      A       B       1       11.7%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRlllhh      24      0       0      48        0.0%
BITBIGSFRllhhhh     22      0       0      43        0.0%
BITBIGSFRhl         21      0       0      38        0.0%
BITBIGSFRllhhhl      E      0       0      45        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhl        B      0       0      47        0.0%
BITBIGSFRllhhhh      6      0       0      44        0.0%
BITBIGSFRllhhl       6      0       0      46        0.0%
BITBIGSFRlhh         4      0       0      39        0.0%
BITBIGSFRlllll       4      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRllllh       2      0       0      50        0.0%
BITBIGSFRlhlh        1      0       0      40        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRlhll        1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      33        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 10 22:15:26 2022

          _filter_module 1222                      l181 1314                      _GIE 007F97  
                    u610 0F24                      u515 0E8E                      u620 0F36  
                    u605 0F16                      u525 0EB0                      u630 0F50  
                    u550 0EF4                      u535 0ECE                      u640 0F66  
                    u650 0F76                      u618 0F26                      u570 0F04  
                    u628 0F38                      u565 0EF6                      u638 0F52  
                    u590 0F14                      u656 0F78                      u648 0F68  
                    u585 0F06                      u870 11C0                      u957 0F98  
                    u967 0FA2                      u977 0FB0                      u987 1008  
                    u997 1012          __end_of_DATABUS 0F7E                      wreg 000FE8  
                   l1303 0EE4                     l1401 12F2                     l1307 0F7A  
                   l1405 1302                     l1409 131C                     l1523 10E0  
                   l1515 10AE                     l1435 0F96                     l1611 11EC  
                   l1603 11D4                     l1293 13F6                     l1463 1000  
                   l1455 0FCE                     l1615 11FE                     l1465 1006  
                   l1619 1210                     l1397 12E6                     l1493 1070  
                   l1485 103E                     l1495 1076                     l1591 11A6  
                   l1583 1182                     l1577 116C                     l1595 11B8  
                   l1587 1194          ?_spi_slave_init 0001                     l1599 11C6  
                   u1007 1020                     u1017 1078                     u1027 1082  
                   u1037 1090                     u1047 1282                     u1057 12B2  
                   u1067 1356                     u1077 136E                     u1087 131E  
                   _IPEN 007E87                     _PEIE 007F96                     _main 110A  
                   _left 0708          __end_of_SPI_ISR 001C                     btemp 000C  
                   start 001C             ___param_bank 000000          spi_data@tx_data 0001  
         ?_filter_module 0001                    ?_main 0001                    ?_left 0001  
                  i2l271 0018                    _PORTB 000F81                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _SSPIF 007CF3          __end_of_all_off 13B6          __end_of_forward 0DF0  
                  _right 0020             ?_read_status 0001          __end_of_reverse 0708  
                  ttemp5 000D                    ttemp6 0010                    ttemp7 0014  
                  status 000FD8                    wtemp8 000D          write_data@byte1 0007  
        write_data@byte2 0006          __initialization 1476             __end_of_main 1222  
           __end_of_left 08C2                ??_DATABUS 0002                   ??_main 000A  
                 ??_left 0008            __activetblptr 000000        main@received_data 000A  
                 _ADCON0 000FC2                   _ADCON1 000FC1                ??_SPI_ISR 0001  
                 ?_right 0001                   _ANSELA 000F38                   _ANSELB 000F39  
                 _ANSELC 000F3A                   _ANSELD 000F3B                   _ANSELE 000F3C  
                 _INTCON 000FF2        read_status@status 0006                   _SRCON0 000F47  
                 _SSP1IE 007CEB                   _SSP1IF 007CF3            ?_forward_left 0001  
        ??_filter_module 0008                ??_all_off 0008                   isa$std 000001  
           ?_motor_break 0001             ??_LM629_init 0008                ??_forward 0008  
       __end_of_spi_data 1496                ??_reverse 0008               __accesstop 0060  
__end_of__initialization 1478     write_command@command 0006            ___rparam_used 000001  
         ??_forward_left 0008           __pcstackCOMRAM 0001       __end_of_LM629_init 110A  
          __end_of_right 01DA         ??_spi_slave_init 0001                  ??_right 0008  
             _check_busy 1482    __end_of_reverse_right 0394            _forward_right 08C2  
                _CM1CON0 000F79                  _CM2CON0 000F78                  _DATABUS 0DF0  
                _HLVDCON 000F9C            ??_DATABUS_DIR 0001                  _SSP1BUF 000FC9  
                _SSPCON1 000FC6                  _SPI_ISR 0008                  _SSPSTAT 000FC7  
      __end_of_all_break 13E0            _write_command 1326           ?_forward_right 0001  
                __Hparam 0000                  __Lparam 0000                ?_spi_data 0001  
           DATABUS@byte0 0001                  __pcinit 1476                  _all_off 138C  
                __ramtop 1000                  __ptext0 110A                  __ptext1 140A  
                __ptext2 148E                  __ptext3 0020                  __ptext4 01DA  
                __ptext5 0394                  __ptext6 054E                  __ptext7 0708  
                __ptext8 08C2                  __ptext9 0A7C                  _forward 0C36  
          ?_reverse_left 0001     __end_of_forward_left 0C36                  _reverse 054E  
   end_of_initialization 1478              ?_check_busy 0001      __end_of_DATABUS_DIR 140A  
         ?_write_command 0001        __end_of_motor_off 1452            ??_chip_select 0001  
             ??_spi_data 0001                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82                _PORTDbits 000F83           ??_reverse_left 0008  
        chip_select@chip 0001                _TRISAbits 000F92                _TRISCbits 000F94  
        ??_forward_right 0008               _write_data 127E    __end_of_filter_module 127E  
    __end_of_chip_select 1326      start_initialization 1476              _DATABUS_DIR 13E0  
        ??_write_command 0006                 DATABUS@x 0005                 ?_DATABUS 0001  
            __pbssCOMRAM 000B            ??_read_status 0006                 ?_SPI_ISR 0001  
         DATABUS_DIR@dir 0001     __end_of_reverse_left 054E                _all_break 13B6  
           _forward_left 0A7C              _chip_select 12DA                __pintcode 0008  
            ?_write_data 0006                 ?_all_off 0001                 ?_forward 0001  
               ?_reverse 0001              DATABUS@dir1 0004             ??_check_busy 0007  
               _CTMUCONH 000F45      __end_of_read_status 138C               ?_all_break 0001  
              _motor_off 142E                 _SSP1CON1 000FC6                 _SSP1CON3 000FCB  
               _SSP2CON1 000F6C                 _VREFCON0 000F42                 _VREFCON1 000F41  
          ??_motor_break 0008       __end_of_check_busy 148E                 __Hrparam 0000  
          _reverse_right 01DA                 __Lrparam 0000               ?_motor_off 0001  
            check_busy@x 0007               _LM629_init 0F7E      __end_of_motor_break 1476  
           ?_DATABUS_DIR 0001                 __ptext10 0C36                 __ptext11 138C  
               __ptext20 135E                 __ptext12 142E                 __ptext21 13E0  
               __ptext13 13B6                 __ptext22 0DF0                 __ptext14 1452  
               __ptext23 12DA                 __ptext15 0F7E                 __ptext16 1222  
               __ptext17 127E                 __ptext18 1326                 __ptext19 1482  
            _read_status 135E           ?_reverse_right 0001    __end_of_forward_right 0A7C  
            ??_all_break 0008                 isa$xinst 000000                 _spi_data 148E  
               int$flags 000C              LM629_init@x 0009             _reverse_left 0394  
               intlevel2 0000           _spi_slave_init 140A    __end_of_write_command 135E  
          _spi_read_data 000B             ?_chip_select 0001              ??_motor_off 0008  
           ??_write_data 0007              _motor_break 1452              ?_LM629_init 0001  
 __end_of_spi_slave_init 142E          ??_reverse_right 0008       __end_of_write_data 12DA  
