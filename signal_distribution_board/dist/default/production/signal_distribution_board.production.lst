

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Oct 23 21:50:07 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Version 2.40
    33                           ; Generated 17/11/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F46K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   000648                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _ticks_per_frame
    73   000648  03E8               	dw	1000
    74                           
    75                           ;initializer for _new_frame
    76   00064A  01                 	db	1
    77                           
    78                           ;initializer for _text1
    79   00064B  48                 	db	72
    80   00064C  65                 	db	101
    81   00064D  6C                 	db	108
    82   00064E  6C                 	db	108
    83   00064F  6F                 	db	111
    84   000650  2C                 	db	44
    85   000651  20                 	db	32
    86   000652  57                 	db	87
    87   000653  65                 	db	101
    88   000654  6C                 	db	108
    89   000655  63                 	db	99
    90   000656  6F                 	db	111
    91   000657  6D                 	db	109
    92   000658  65                 	db	101
    93   000659  21                 	db	33
    94   00065A  00                 	db	0
    95                           
    96                           ;initializer for _wii_classic_packet
    97   00065B  68                 	db	104
    98   00065C  65                 	db	101
    99   00065D  6C                 	db	108
   100   00065E  6C                 	db	108
   101   00065F  6F                 	db	111
   102   000660  21                 	db	33
   103   000661  21                 	db	33
   104   000662  00                 	db	0
   105                           
   106                           	psect	idataBANK0
   107   000456                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _instructions3
   111   000456  50                 	db	80
   112   000457  72                 	db	114
   113   000458  65                 	db	101
   114   000459  73                 	db	115
   115   00045A  73                 	db	115
   116   00045B  20                 	db	32
   117   00045C  27                 	db	39
   118   00045D  71                 	db	113
   119   00045E  27                 	db	39
   120   00045F  20                 	db	32
   121   000460  61                 	db	97
   122   000461  6E                 	db	110
   123   000462  64                 	db	100
   124   000463  20                 	db	32
   125   000464  27                 	db	39
   126   000465  65                 	db	101
   127   000466  27                 	db	39
   128   000467  20                 	db	32
   129   000468  74                 	db	116
   130   000469  6F                 	db	111
   131   00046A  20                 	db	32
   132   00046B  74                 	db	116
   133   00046C  75                 	db	117
   134   00046D  72                 	db	114
   135   00046E  6E                 	db	110
   136   00046F  20                 	db	32
   137   000470  6C                 	db	108
   138   000471  69                 	db	105
   139   000472  67                 	db	103
   140   000473  68                 	db	104
   141   000474  74                 	db	116
   142   000475  20                 	db	32
   143   000476  62                 	db	98
   144   000477  65                 	db	101
   145   000478  61                 	db	97
   146   000479  6D                 	db	109
   147   00047A  20                 	db	32
   148   00047B  6F                 	db	111
   149   00047C  66                 	db	102
   150   00047D  66                 	db	102
   151   00047E  20                 	db	32
   152   00047F  61                 	db	97
   153   000480  6E                 	db	110
   154   000481  64                 	db	100
   155   000482  20                 	db	32
   156   000483  6F                 	db	111
   157   000484  6E                 	db	110
   158   000485  00                 	db	0
   159                           
   160                           ;initializer for _instructions2
   161   000486  55                 	db	85
   162   000487  73                 	db	115
   163   000488  65                 	db	101
   164   000489  20                 	db	32
   165   00048A  72                 	db	114
   166   00048B  69                 	db	105
   167   00048C  67                 	db	103
   168   00048D  68                 	db	104
   169   00048E  74                 	db	116
   170   00048F  20                 	db	32
   171   000490  6A                 	db	106
   172   000491  6F                 	db	111
   173   000492  79                 	db	121
   174   000493  73                 	db	115
   175   000494  74                 	db	116
   176   000495  69                 	db	105
   177   000496  63                 	db	99
   178   000497  6B                 	db	107
   179   000498  20                 	db	32
   180   000499  74                 	db	116
   181   00049A  6F                 	db	111
   182   00049B  20                 	db	32
   183   00049C  6D                 	db	109
   184   00049D  6F                 	db	111
   185   00049E  76                 	db	118
   186   00049F  65                 	db	101
   187   0004A0  20                 	db	32
   188   0004A1  72                 	db	114
   189   0004A2  69                 	db	105
   190   0004A3  67                 	db	103
   191   0004A4  68                 	db	104
   192   0004A5  74                 	db	116
   193   0004A6  20                 	db	32
   194   0004A7  77                 	db	119
   195   0004A8  68                 	db	104
   196   0004A9  65                 	db	101
   197   0004AA  65                 	db	101
   198   0004AB  6C                 	db	108
   199   0004AC  00                 	db	0
   200                           
   201                           ;initializer for _instructions1
   202   0004AD  55                 	db	85
   203   0004AE  73                 	db	115
   204   0004AF  65                 	db	101
   205   0004B0  20                 	db	32
   206   0004B1  6C                 	db	108
   207   0004B2  65                 	db	101
   208   0004B3  66                 	db	102
   209   0004B4  74                 	db	116
   210   0004B5  20                 	db	32
   211   0004B6  6A                 	db	106
   212   0004B7  6F                 	db	111
   213   0004B8  79                 	db	121
   214   0004B9  73                 	db	115
   215   0004BA  74                 	db	116
   216   0004BB  69                 	db	105
   217   0004BC  63                 	db	99
   218   0004BD  6B                 	db	107
   219   0004BE  20                 	db	32
   220   0004BF  74                 	db	116
   221   0004C0  6F                 	db	111
   222   0004C1  20                 	db	32
   223   0004C2  6D                 	db	109
   224   0004C3  6F                 	db	111
   225   0004C4  76                 	db	118
   226   0004C5  65                 	db	101
   227   0004C6  20                 	db	32
   228   0004C7  6C                 	db	108
   229   0004C8  65                 	db	101
   230   0004C9  66                 	db	102
   231   0004CA  74                 	db	116
   232   0004CB  20                 	db	32
   233   0004CC  77                 	db	119
   234   0004CD  68                 	db	104
   235   0004CE  65                 	db	101
   236   0004CF  65                 	db	101
   237   0004D0  6C                 	db	108
   238   0004D1  00                 	db	0
   239   000000                     _TMR1L	set	4046
   240   000000                     _TMR1H	set	4047
   241   000000                     _RCREG1	set	4014
   242   000000                     _TXREG1	set	4013
   243   000000                     _RCSTA2bits	set	3953
   244   000000                     _SPBRG1	set	4015
   245   000000                     _BAUDCON1bits	set	4024
   246                           
   247                           	psect	nvCOMRAM
   248   00003C                     __pnvCOMRAM:
   249                           	callstack 0
   250   00003C                     _rx_str_interrupt:
   251                           	callstack 0
   252   00003C                     	ds	2
   253   000000                     _LATA	set	3977
   254   000000                     _TRISD	set	3989
   255   000000                     _INTCONbits	set	4082
   256   000000                     _ANSELE	set	3900
   257   000000                     _ANSELD	set	3899
   258   000000                     _ANSELC	set	3898
   259   000000                     _ANSELB	set	3897
   260   000000                     _ANSELA	set	3896
   261   000000                     _BAUDCON2bits	set	3952
   262   000000                     _TXSTA2bits	set	3954
   263   000000                     _LATAbits	set	3977
   264   000000                     _IPEN	set	32391
   265   000000                     _INTCON	set	4082
   266   000000                     _LATD	set	3980
   267   000000                     _TRISAbits	set	3986
   268   000000                     _LATBbits	set	3978
   269   000000                     _TRISBbits	set	3987
   270   000000                     _TRISCbits	set	3988
   271   000000                     _TXSTA1bits	set	4012
   272   000000                     _ADCON0	set	4034
   273   000000                     _SSP1CON1bits	set	4038
   274   000000                     _SSP1STATbits	set	4039
   275   000000                     _SSP1ADD	set	4040
   276   000000                     _TXREG2	set	3955
   277   000000                     _SPBRG2	set	3957
   278   000000                     _SPBRGH1	set	4016
   279   000000                     _CM2CON0bits	set	3960
   280   000000                     _CM1CON0bits	set	3961
   281   000000                     _SPBRGH2	set	3958
   282   000000                     _PIE1bits	set	3997
   283   000000                     _RCSTA1bits	set	4011
   284   000000                     _TRISDbits	set	3989
   285   000000                     _PIR3bits	set	4004
   286   000000                     _PIR1bits	set	3998
   287   000000                     _T1CONbits	set	4045
   288   000000                     _SSP1BUF	set	4041
   289                           
   290                           ; #config settings
   291                           
   292                           	psect	cinit
   293   0004D2                     __pcinit:
   294                           	callstack 0
   295   0004D2                     start_initialization:
   296                           	callstack 0
   297   0004D2                     __initialization:
   298                           	callstack 0
   299                           
   300                           ; Initialize objects allocated to BANK0 (124 bytes)
   301                           ; load TBLPTR registers with __pidataBANK0
   302   0004D2  0E56               	movlw	low __pidataBANK0
   303   0004D4  6EF6               	movwf	tblptrl,c
   304   0004D6  0E04               	movlw	high __pidataBANK0
   305   0004D8  6EF7               	movwf	tblptrh,c
   306   0004DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   307   0004DC  6EF8               	movwf	tblptru,c
   308   0004DE  EE00  F060         	lfsr	0,__pdataBANK0
   309   0004E2  EE10 F07C          	lfsr	1,124
   310   0004E6                     copy_data0:
   311   0004E6  0009               	tblrd		*+
   312   0004E8  CFF5 FFEE          	movff	tablat,postinc0
   313   0004EC  50E5               	movf	postdec1,w,c
   314   0004EE  50E1               	movf	fsr1l,w,c
   315   0004F0  E1FA               	bnz	copy_data0
   316                           
   317                           ; Initialize objects allocated to COMRAM (27 bytes)
   318                           ; load TBLPTR registers with __pidataCOMRAM
   319   0004F2  0E48               	movlw	low __pidataCOMRAM
   320   0004F4  6EF6               	movwf	tblptrl,c
   321   0004F6  0E06               	movlw	high __pidataCOMRAM
   322   0004F8  6EF7               	movwf	tblptrh,c
   323   0004FA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   324   0004FC  6EF8               	movwf	tblptru,c
   325   0004FE  EE00  F001         	lfsr	0,__pdataCOMRAM
   326   000502  EE10 F01B          	lfsr	1,27
   327   000506                     copy_data1:
   328   000506  0009               	tblrd		*+
   329   000508  CFF5 FFEE          	movff	tablat,postinc0
   330   00050C  50E5               	movf	postdec1,w,c
   331   00050E  50E1               	movf	fsr1l,w,c
   332   000510  E1FA               	bnz	copy_data1
   333                           
   334                           ; Clear objects allocated to COMRAM (18 bytes)
   335   000512  EE00  F01C         	lfsr	0,__pbssCOMRAM
   336   000516  0E12               	movlw	18
   337   000518                     clear_0:
   338   000518  6AEE               	clrf	postinc0,c
   339   00051A  06E8               	decf	wreg,f,c
   340   00051C  E1FD               	bnz	clear_0
   341   00051E                     end_of_initialization:
   342                           	callstack 0
   343   00051E                     __end_of__initialization:
   344                           	callstack 0
   345   00051E  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   346   000520  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   347   000522  0E00               	movlw	low (__Lmediumconst shr (0+16))
   348   000524  6EF8               	movwf	tblptru,c
   349   000526  0100               	movlb	0
   350   000528  EF71  F000         	goto	_main	;jump to C main() function
   351                           
   352                           	psect	bssCOMRAM
   353   00001C                     __pbssCOMRAM:
   354                           	callstack 0
   355   00001C                     _classic_ctrl:
   356                           	callstack 0
   357   00001C                     	ds	6
   358   000022                     _act_buttons:
   359                           	callstack 0
   360   000022                     	ds	4
   361   000026                     _timer1_reg:
   362                           	callstack 0
   363   000026                     	ds	2
   364   000028                     _tick_counter:
   365                           	callstack 0
   366   000028                     	ds	2
   367   00002A                     _timer1_reg_l:
   368                           	callstack 0
   369   00002A                     	ds	1
   370   00002B                     _timer1_reg_h:
   371                           	callstack 0
   372   00002B                     	ds	1
   373   00002C                     _recording_on:
   374                           	callstack 0
   375   00002C                     	ds	1
   376   00002D                     _rx_char:
   377                           	callstack 0
   378   00002D                     	ds	1
   379                           
   380                           	psect	dataCOMRAM
   381   000001                     __pdataCOMRAM:
   382                           	callstack 0
   383   000001                     _ticks_per_frame:
   384                           	callstack 0
   385   000001                     	ds	2
   386   000003                     _new_frame:
   387                           	callstack 0
   388   000003                     	ds	1
   389   000004                     _text1:
   390                           	callstack 0
   391   000004                     	ds	16
   392   000014                     _wii_classic_packet:
   393                           	callstack 0
   394   000014                     	ds	8
   395                           
   396                           	psect	dataBANK0
   397   000060                     __pdataBANK0:
   398                           	callstack 0
   399   000060                     _instructions3:
   400                           	callstack 0
   401   000060                     	ds	48
   402   000090                     _instructions2:
   403                           	callstack 0
   404   000090                     	ds	39
   405   0000B7                     _instructions1:
   406                           	callstack 0
   407   0000B7                     	ds	37
   408                           
   409                           	psect	cstackCOMRAM
   410   00002E                     __pcstackCOMRAM:
   411                           	callstack 0
   412   00002E                     ??_UART_ISR:
   413                           
   414                           ; 1 bytes @ 0x0
   415   00002E                     	ds	6
   416   000034                     ??_high_beams_on:
   417   000034                     ??_high_beams_off:
   418   000034                     tx1@data1:
   419                           	callstack 0
   420   000034                     tx2@data2:
   421                           	callstack 0
   422   000034                     spi_data@tx_data:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x6
   426   000034                     	ds	1
   427   000035                     spi_data@data_read:
   428                           	callstack 0
   429   000035                     uart_wr_str@str:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x7
   433   000035                     	ds	1
   434   000036                     spi_data@device:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x8
   438   000036                     	ds	1
   439   000037                     ??_uart_wr_str:
   440                           
   441                           ; 1 bytes @ 0x9
   442   000037                     	ds	2
   443   000039                     uart_wr_str@port:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0xB
   447   000039                     	ds	1
   448   00003A                     ??_main:
   449                           
   450                           ; 1 bytes @ 0xC
   451   00003A                     	ds	2
   452                           
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 60 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  dummy_spi_tx    1    0        unsigned char 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:        2 bytes
   477 ;; Hardware stack levels required when called: 3
   478 ;; This function calls:
   479 ;;		_gpio_init
   480 ;;		_high_beams_off
   481 ;;		_high_beams_on
   482 ;;		_rx1_overrun_detect_reset
   483 ;;		_spi_data
   484 ;;		_spi_master_init
   485 ;;		_tx1
   486 ;;		_tx2
   487 ;;		_uart_init
   488 ;;		_uart_wr_str
   489 ;; This function is called by:
   490 ;;		Startup code after reset
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           	psect	text0
   495   0000E2                     __ptext0:
   496                           	callstack 0
   497   0000E2                     _main:
   498                           	callstack 28
   499   0000E2                     
   500                           ;main.c: 62:     uint8_t dummy_spi_tx;;main.c: 63:     rx_str_interrupt = &wii_classic_p
      +                          acket;
   501   0000E2  0E14               	movlw	low _wii_classic_packet
   502   0000E4  6E3C               	movwf	_rx_str_interrupt^0,c
   503   0000E6  0E00               	movlw	high _wii_classic_packet
   504   0000E8  6E3D               	movwf	(_rx_str_interrupt+1)^0,c
   505   0000EA                     
   506                           ;main.c: 64:     IPEN=0;
   507   0000EA  9ED0               	bcf	4048,7,c	;volatile
   508   0000EC                     
   509                           ;main.c: 65:     INTCON=0b00000000;
   510   0000EC  0E00               	movlw	0
   511   0000EE  6EF2               	movwf	242,c	;volatile
   512   0000F0                     
   513                           ;main.c: 66:     gpio_init();
   514   0000F0  ECC8  F002         	call	_gpio_init	;wreg free
   515                           
   516                           ;main.c: 67:     spi_master_init();
   517   0000F4  ECB0  F002         	call	_spi_master_init	;wreg free
   518                           
   519                           ;main.c: 68:     uart_init();
   520   0000F8  EC96  F002         	call	_uart_init	;wreg free
   521   0000FC                     
   522                           ;main.c: 70:     INTCONbits.GIE = 1;
   523   0000FC  8EF2               	bsf	242,7,c	;volatile
   524   0000FE                     
   525                           ;main.c: 71:     INTCONbits.PEIE = 1;
   526   0000FE  8CF2               	bsf	242,6,c	;volatile
   527   000100  0E6F               	movlw	111
   528   000102  6E34               	movwf	spi_data@tx_data^0,c
   529   000104  0E03               	movlw	3
   530   000106  ECCA  F001         	call	_spi_data
   531   00010A                     
   532                           ;main.c: 74:     uart_wr_str(1, text1);
   533   00010A  0E04               	movlw	low _text1
   534   00010C  6E35               	movwf	uart_wr_str@str^0,c
   535   00010E  0E00               	movlw	high _text1
   536   000110  6E36               	movwf	(uart_wr_str@str+1)^0,c
   537   000112  0E01               	movlw	1
   538   000114  EC69  F001         	call	_uart_wr_str
   539   000118                     
   540                           ;main.c: 75:     tx1('\n');
   541   000118  0E0A               	movlw	10
   542   00011A  EC07  F003         	call	_tx1
   543   00011E                     
   544                           ;main.c: 76:     tx1('\r');
   545   00011E  0E0D               	movlw	13
   546   000120  EC07  F003         	call	_tx1
   547   000124                     
   548                           ;main.c: 77:     uart_wr_str(1, instructions1);
   549   000124  0EB7               	movlw	low _instructions1
   550   000126  6E35               	movwf	uart_wr_str@str^0,c
   551   000128  0E00               	movlw	high _instructions1
   552   00012A  6E36               	movwf	(uart_wr_str@str+1)^0,c
   553   00012C  0E01               	movlw	1
   554   00012E  EC69  F001         	call	_uart_wr_str
   555   000132                     
   556                           ;main.c: 78:     tx1('\n');
   557   000132  0E0A               	movlw	10
   558   000134  EC07  F003         	call	_tx1
   559   000138                     
   560                           ;main.c: 79:     tx1('\r');
   561   000138  0E0D               	movlw	13
   562   00013A  EC07  F003         	call	_tx1
   563   00013E                     
   564                           ;main.c: 80:     uart_wr_str(1, instructions2);
   565   00013E  0E90               	movlw	low _instructions2
   566   000140  6E35               	movwf	uart_wr_str@str^0,c
   567   000142  0E00               	movlw	high _instructions2
   568   000144  6E36               	movwf	(uart_wr_str@str+1)^0,c
   569   000146  0E01               	movlw	1
   570   000148  EC69  F001         	call	_uart_wr_str
   571   00014C                     
   572                           ;main.c: 81:     tx1('\n');
   573   00014C  0E0A               	movlw	10
   574   00014E  EC07  F003         	call	_tx1
   575   000152                     
   576                           ;main.c: 82:     tx1('\r');
   577   000152  0E0D               	movlw	13
   578   000154  EC07  F003         	call	_tx1
   579   000158                     
   580                           ;main.c: 83:     uart_wr_str(1, instructions3);
   581   000158  0E60               	movlw	low _instructions3
   582   00015A  6E35               	movwf	uart_wr_str@str^0,c
   583   00015C  0E00               	movlw	high _instructions3
   584   00015E  6E36               	movwf	(uart_wr_str@str+1)^0,c
   585   000160  0E01               	movlw	1
   586   000162  EC69  F001         	call	_uart_wr_str
   587   000166                     
   588                           ;main.c: 84:     tx1('\n');
   589   000166  0E0A               	movlw	10
   590   000168  EC07  F003         	call	_tx1
   591   00016C                     
   592                           ;main.c: 85:     tx1('\r');
   593   00016C  0E0D               	movlw	13
   594   00016E  EC07  F003         	call	_tx1
   595   000172                     l1515:
   596                           
   597                           ;main.c: 88:     {;main.c: 90:         classic_ctrl.lx_joystick = wii_classic_packet[1] 
      +                          - 33;
   598   000172  5015               	movf	(_wii_classic_packet+1)^0,w,c
   599   000174  0FDF               	addlw	223
   600   000176  6E1C               	movwf	_classic_ctrl^0,c
   601   000178                     
   602                           ;main.c: 91:         classic_ctrl.ly_joystick = wii_classic_packet[2] - 33;
   603   000178  5016               	movf	(_wii_classic_packet+2)^0,w,c
   604   00017A  0FDF               	addlw	223
   605   00017C  6E1D               	movwf	(_classic_ctrl+1)^0,c
   606   00017E                     
   607                           ;main.c: 92:         classic_ctrl.rx_joystick = wii_classic_packet[3] - 33;
   608   00017E  5017               	movf	(_wii_classic_packet+3)^0,w,c
   609   000180  0FDF               	addlw	223
   610   000182  6E1E               	movwf	(_classic_ctrl+2)^0,c
   611   000184                     
   612                           ;main.c: 93:         classic_ctrl.ry_joystick = wii_classic_packet[4] - 33;
   613   000184  5018               	movf	(_wii_classic_packet+4)^0,w,c
   614   000186  0FDF               	addlw	223
   615   000188  6E1F               	movwf	(_classic_ctrl+3)^0,c
   616   00018A                     
   617                           ;main.c: 94:         classic_ctrl.d_pad = wii_classic_packet[5] - 33;
   618   00018A  5019               	movf	(_wii_classic_packet+5)^0,w,c
   619   00018C  0FDF               	addlw	223
   620   00018E  6E20               	movwf	(_classic_ctrl+4)^0,c
   621   000190                     
   622                           ;main.c: 95:         classic_ctrl.action_buttons = wii_classic_packet[6] - 33;
   623   000190  501A               	movf	(_wii_classic_packet+6)^0,w,c
   624   000192  0FDF               	addlw	223
   625   000194  6E21               	movwf	(_classic_ctrl+5)^0,c
   626   000196                     
   627                           ;main.c: 96:         wii_classic_packet[7] = '\0';
   628   000196  0E00               	movlw	0
   629   000198  6E1B               	movwf	(_wii_classic_packet+7)^0,c
   630   00019A                     
   631                           ;main.c: 99:         tx2(classic_ctrl.d_pad);
   632   00019A  5020               	movf	(_classic_ctrl+4)^0,w,c
   633   00019C  EC32  F003         	call	_tx2
   634   0001A0                     
   635                           ;main.c: 101:         uart_wr_str(1,wii_classic_packet);
   636   0001A0  0E14               	movlw	low _wii_classic_packet
   637   0001A2  6E35               	movwf	uart_wr_str@str^0,c
   638   0001A4  0E00               	movlw	high _wii_classic_packet
   639   0001A6  6E36               	movwf	(uart_wr_str@str+1)^0,c
   640   0001A8  0E01               	movlw	1
   641   0001AA  EC69  F001         	call	_uart_wr_str
   642   0001AE                     
   643                           ;main.c: 102:         tx1('\r');
   644   0001AE  0E0D               	movlw	13
   645   0001B0  EC07  F003         	call	_tx1
   646   0001B4  0E7A               	movlw	122
   647   0001B6  6E34               	movwf	spi_data@tx_data^0,c
   648   0001B8  0E03               	movlw	3
   649   0001BA  ECCA  F001         	call	_spi_data
   650   0001BE  0E7A               	movlw	122
   651   0001C0  6E34               	movwf	spi_data@tx_data^0,c
   652   0001C2  0E00               	movlw	0
   653   0001C4  ECCA  F001         	call	_spi_data
   654   0001C8  C01C  F034         	movff	_classic_ctrl,spi_data@tx_data
   655   0001CC  0E03               	movlw	3
   656   0001CE  ECCA  F001         	call	_spi_data
   657   0001D2  C01C  F034         	movff	_classic_ctrl,spi_data@tx_data
   658   0001D6  0E00               	movlw	0
   659   0001D8  ECCA  F001         	call	_spi_data
   660   0001DC  C01D  F034         	movff	_classic_ctrl+1,spi_data@tx_data
   661   0001E0  0E03               	movlw	3
   662   0001E2  ECCA  F001         	call	_spi_data
   663   0001E6  C01D  F034         	movff	_classic_ctrl+1,spi_data@tx_data
   664   0001EA  0E00               	movlw	0
   665   0001EC  ECCA  F001         	call	_spi_data
   666   0001F0  C01E  F034         	movff	_classic_ctrl+2,spi_data@tx_data
   667   0001F4  0E03               	movlw	3
   668   0001F6  ECCA  F001         	call	_spi_data
   669   0001FA  C01E  F034         	movff	_classic_ctrl+2,spi_data@tx_data
   670   0001FE  0E00               	movlw	0
   671   000200  ECCA  F001         	call	_spi_data
   672   000204  C01F  F034         	movff	_classic_ctrl+3,spi_data@tx_data
   673   000208  0E03               	movlw	3
   674   00020A  ECCA  F001         	call	_spi_data
   675   00020E  C01F  F034         	movff	_classic_ctrl+3,spi_data@tx_data
   676   000212  0E00               	movlw	0
   677   000214  ECCA  F001         	call	_spi_data
   678   000218  0E79               	movlw	121
   679   00021A  6E34               	movwf	spi_data@tx_data^0,c
   680   00021C  0E03               	movlw	3
   681   00021E  ECCA  F001         	call	_spi_data
   682   000222  0E79               	movlw	121
   683   000224  6E34               	movwf	spi_data@tx_data^0,c
   684   000226  0E00               	movlw	0
   685   000228  ECCA  F001         	call	_spi_data
   686   00022C                     
   687                           ;main.c: 126:         act_buttons.a = ((classic_ctrl.action_buttons & 0b00001000) >> 3);
   688   00022C  3821               	swapf	(_classic_ctrl+5)^0,w,c
   689   00022E  46E8               	rlncf	wreg,f,c
   690   000230  0B1F               	andlw	31
   691   000232  0B01               	andlw	1
   692   000234  6E22               	movwf	_act_buttons^0,c
   693   000236                     
   694                           ;main.c: 127:         act_buttons.b = ((classic_ctrl.action_buttons & 0b00000100) >> 2);
   695   000236  4021               	rrncf	(_classic_ctrl+5)^0,w,c
   696   000238  42E8               	rrncf	wreg,f,c
   697   00023A  0B3F               	andlw	63
   698   00023C  0B01               	andlw	1
   699   00023E  6E23               	movwf	(_act_buttons+1)^0,c
   700   000240                     
   701                           ;main.c: 128:         act_buttons.x = ((classic_ctrl.action_buttons & 0b00000010) >> 1);
   702   000240  90D8               	bcf	status,0,c
   703   000242  3021               	rrcf	(_classic_ctrl+5)^0,w,c
   704   000244  0B01               	andlw	1
   705   000246  6E24               	movwf	(_act_buttons+2)^0,c
   706   000248                     
   707                           ;main.c: 129:         act_buttons.y = ((classic_ctrl.action_buttons & 0b00000001) >> 0);
   708   000248  5021               	movf	(_classic_ctrl+5)^0,w,c
   709   00024A  0B01               	andlw	1
   710   00024C  6E25               	movwf	(_act_buttons+3)^0,c
   711   00024E                     
   712                           ;main.c: 133:         LATAbits.LATA0 = act_buttons.a;
   713   00024E  B022               	btfsc	_act_buttons^0,0,c
   714   000250  D002               	bra	u415
   715   000252  9089               	bcf	137,0,c	;volatile
   716   000254  D001               	bra	u416
   717   000256                     u415:
   718   000256  8089               	bsf	137,0,c	;volatile
   719   000258                     u416:
   720   000258                     
   721                           ;main.c: 134:         LATAbits.LATA1 = act_buttons.b;
   722   000258  B023               	btfsc	(_act_buttons+1)^0,0,c
   723   00025A  D002               	bra	u425
   724   00025C  9289               	bcf	137,1,c	;volatile
   725   00025E  D001               	bra	u426
   726   000260                     u425:
   727   000260  8289               	bsf	137,1,c	;volatile
   728   000262                     u426:
   729   000262                     
   730                           ;main.c: 135:         if((act_buttons.x) & (!act_buttons.y))
   731   000262  5025               	movf	(_act_buttons+3)^0,w,c
   732   000264  B4D8               	btfsc	status,2,c
   733   000266  EF37  F001         	goto	u431
   734   00026A  EF3A  F001         	goto	u430
   735   00026E                     u431:
   736   00026E  0E01               	movlw	1
   737   000270  EF3B  F001         	goto	u440
   738   000274                     u430:
   739   000274  0E00               	movlw	0
   740   000276                     u440:
   741   000276  1424               	andwf	(_act_buttons+2)^0,w,c
   742   000278  0900               	iorlw	0
   743   00027A  B4D8               	btfsc	status,2,c
   744   00027C  EF42  F001         	goto	u451
   745   000280  EF44  F001         	goto	u450
   746   000284                     u451:
   747   000284  EF48  F001         	goto	l1575
   748   000288                     u450:
   749   000288                     
   750                           ;main.c: 136:         {;main.c: 137:             high_beams_on();
   751   000288  ECDF  F002         	call	_high_beams_on	;wreg free
   752                           
   753                           ;main.c: 138:         }
   754   00028C  EF63  F001         	goto	l1579
   755   000290                     l1575:
   756   000290  5024               	movf	(_act_buttons+2)^0,w,c
   757   000292  B4D8               	btfsc	status,2,c
   758   000294  EF4E  F001         	goto	u461
   759   000298  EF51  F001         	goto	u460
   760   00029C                     u461:
   761   00029C  0E01               	movlw	1
   762   00029E  EF52  F001         	goto	u470
   763   0002A2                     u460:
   764   0002A2  0E00               	movlw	0
   765   0002A4                     u470:
   766   0002A4  6E3A               	movwf	??_main^0,c
   767   0002A6  6A3B               	clrf	(??_main+1)^0,c
   768   0002A8  5025               	movf	(_act_buttons+3)^0,w,c
   769   0002AA  163A               	andwf	??_main^0,f,c
   770   0002AC  0E00               	movlw	0
   771   0002AE  163B               	andwf	(??_main+1)^0,f,c
   772   0002B0  503A               	movf	??_main^0,w,c
   773   0002B2  103B               	iorwf	(??_main+1)^0,w,c
   774   0002B4  B4D8               	btfsc	status,2,c
   775   0002B6  EF5F  F001         	goto	u481
   776   0002BA  EF61  F001         	goto	u480
   777   0002BE                     u481:
   778   0002BE  EF63  F001         	goto	l1579
   779   0002C2                     u480:
   780   0002C2                     
   781                           ;main.c: 140:         {;main.c: 141:             high_beams_off();
   782   0002C2  ECF3  F002         	call	_high_beams_off	;wreg free
   783   0002C6                     l1579:
   784                           
   785                           ;main.c: 149:       rx1_overrun_detect_reset();
   786   0002C6  EC16  F003         	call	_rx1_overrun_detect_reset	;wreg free
   787   0002CA  EFB9  F000         	goto	l1515
   788   0002CE  EF6F  F000         	goto	start
   789   0002D2                     __end_of_main:
   790                           	callstack 0
   791                           
   792 ;; *************** function _uart_wr_str *****************
   793 ;; Defined at:
   794 ;;		line 70 in file "uart.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  port            1    wreg     unsigned char 
   797 ;;  str             2    7[COMRAM] PTR unsigned char 
   798 ;;		 -> instructions3(48), instructions2(39), instructions1(37), text1(16), 
   799 ;;		 -> wii_classic_packet(8), 
   800 ;; Auto vars:     Size  Location     Type
   801 ;;  port            1   11[COMRAM] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      void 
   804 ;; Registers used:
   805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:        5 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 2
   818 ;; This function calls:
   819 ;;		_tx1
   820 ;;		_tx2
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text1
   827   0002D2                     __ptext1:
   828                           	callstack 0
   829   0002D2                     _uart_wr_str:
   830                           	callstack 28
   831                           
   832                           ;incstack = 0
   833                           ;uart_wr_str@port stored from wreg
   834   0002D2  6E39               	movwf	uart_wr_str@port^0,c
   835   0002D4                     
   836                           ;uart.c: 70: void uart_wr_str(uint8_t port, uint8_t *str);uart.c: 71: {;uart.c: 72:     
      +                          switch(port)
   837   0002D4  EFB1  F001         	goto	l1455
   838   0002D8                     l1435:
   839                           
   840                           ;uart.c: 76:             {;uart.c: 77:                 tx1(*str++);
   841   0002D8  C035  FFD9         	movff	uart_wr_str@str,fsr2l
   842   0002DC  C036  FFDA         	movff	uart_wr_str@str+1,fsr2h
   843   0002E0  50DF               	movf	indf2,w,c
   844   0002E2  EC07  F003         	call	_tx1
   845   0002E6  4A35               	infsnz	uart_wr_str@str^0,f,c
   846   0002E8  2A36               	incf	(uart_wr_str@str+1)^0,f,c
   847   0002EA                     l1439:
   848                           
   849                           ;uart.c: 75:             while(*str != '\0')
   850   0002EA  C035  FFD9         	movff	uart_wr_str@str,fsr2l
   851   0002EE  C036  FFDA         	movff	uart_wr_str@str+1,fsr2h
   852   0002F2  50DF               	movf	indf2,w,c
   853   0002F4  A4D8               	btfss	status,2,c
   854   0002F6  EF7F  F001         	goto	u371
   855   0002FA  EF81  F001         	goto	u370
   856   0002FE                     u371:
   857   0002FE  EF6C  F001         	goto	l1435
   858   000302                     u370:
   859   000302  EFC6  F001         	goto	l1457
   860   000306                     l1441:
   861                           
   862                           ;uart.c: 82:             {;uart.c: 83:                 tx2(*str++);
   863   000306  C035  FFD9         	movff	uart_wr_str@str,fsr2l
   864   00030A  C036  FFDA         	movff	uart_wr_str@str+1,fsr2h
   865   00030E  50DF               	movf	indf2,w,c
   866   000310  EC32  F003         	call	_tx2
   867   000314  4A35               	infsnz	uart_wr_str@str^0,f,c
   868   000316  2A36               	incf	(uart_wr_str@str+1)^0,f,c
   869   000318                     l1445:
   870                           
   871                           ;uart.c: 81:             while(*str != '\0')
   872   000318  C035  FFD9         	movff	uart_wr_str@str,fsr2l
   873   00031C  C036  FFDA         	movff	uart_wr_str@str+1,fsr2h
   874   000320  50DF               	movf	indf2,w,c
   875   000322  A4D8               	btfss	status,2,c
   876   000324  EF96  F001         	goto	u381
   877   000328  EF98  F001         	goto	u380
   878   00032C                     u381:
   879   00032C  EF83  F001         	goto	l1441
   880   000330                     u380:
   881   000330  EFC6  F001         	goto	l1457
   882   000334                     l1447:
   883                           
   884                           ;uart.c: 88:             {;uart.c: 89:                 tx1(*str++);
   885   000334  C035  FFD9         	movff	uart_wr_str@str,fsr2l
   886   000338  C036  FFDA         	movff	uart_wr_str@str+1,fsr2h
   887   00033C  50DF               	movf	indf2,w,c
   888   00033E  EC07  F003         	call	_tx1
   889   000342  4A35               	infsnz	uart_wr_str@str^0,f,c
   890   000344  2A36               	incf	(uart_wr_str@str+1)^0,f,c
   891   000346                     l1451:
   892                           
   893                           ;uart.c: 87:             while(*str != '\0')
   894   000346  C035  FFD9         	movff	uart_wr_str@str,fsr2l
   895   00034A  C036  FFDA         	movff	uart_wr_str@str+1,fsr2h
   896   00034E  50DF               	movf	indf2,w,c
   897   000350  A4D8               	btfss	status,2,c
   898   000352  EFAD  F001         	goto	u391
   899   000356  EFAF  F001         	goto	u390
   900   00035A                     u391:
   901   00035A  EF9A  F001         	goto	l1447
   902   00035E                     u390:
   903   00035E  EFC6  F001         	goto	l1457
   904   000362                     l1455:
   905   000362  5039               	movf	uart_wr_str@port^0,w,c
   906   000364  6E37               	movwf	??_uart_wr_str^0,c
   907   000366  6A38               	clrf	(??_uart_wr_str+1)^0,c
   908                           
   909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   910                           ; Switch size 1, requested type "simple"
   911                           ; Number of cases is 1, Range of values is 0 to 0
   912                           ; switch strategies available:
   913                           ; Name         Instructions Cycles
   914                           ; simple_byte            4     3 (average)
   915                           ;	Chosen strategy is simple_byte
   916   000368  5038               	movf	(??_uart_wr_str+1)^0,w,c
   917   00036A  0A00               	xorlw	0	; case 0
   918   00036C  B4D8               	btfsc	status,2,c
   919   00036E  EFBB  F001         	goto	l1649
   920   000372  EFA3  F001         	goto	l1451
   921   000376                     l1649:
   922                           
   923                           ; Switch size 1, requested type "simple"
   924                           ; Number of cases is 2, Range of values is 1 to 2
   925                           ; switch strategies available:
   926                           ; Name         Instructions Cycles
   927                           ; simple_byte            7     4 (average)
   928                           ;	Chosen strategy is simple_byte
   929   000376  5037               	movf	??_uart_wr_str^0,w,c
   930   000378  0A01               	xorlw	1	; case 1
   931   00037A  B4D8               	btfsc	status,2,c
   932   00037C  EF75  F001         	goto	l1439
   933   000380  0A03               	xorlw	3	; case 2
   934   000382  B4D8               	btfsc	status,2,c
   935   000384  EF8C  F001         	goto	l1445
   936   000388  EFA3  F001         	goto	l1451
   937   00038C                     l1457:
   938                           
   939                           ;uart.c: 93:             tx1('\0');
   940   00038C  0E00               	movlw	0
   941   00038E  EC07  F003         	call	_tx1
   942   000392  0012               	return		;funcret
   943   000394                     __end_of_uart_wr_str:
   944                           	callstack 0
   945                           
   946 ;; *************** function _tx2 *****************
   947 ;; Defined at:
   948 ;;		line 60 in file "uart.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;  data2           1    wreg     unsigned char 
   951 ;; Auto vars:     Size  Location     Type
   952 ;;  data2           1    6[COMRAM] unsigned char 
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		wreg
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;Total ram usage:        1 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;;		_uart_wr_str
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text2
   978   000664                     __ptext2:
   979                           	callstack 0
   980   000664                     _tx2:
   981                           	callstack 28
   982                           
   983                           ;incstack = 0
   984                           ;tx2@data2 stored from wreg
   985   000664  6E34               	movwf	tx2@data2^0,c
   986   000666                     l114:
   987   000666  A8A4               	btfss	164,4,c	;volatile
   988   000668  EF38  F003         	goto	u281
   989   00066C  EF3A  F003         	goto	u280
   990   000670                     u281:
   991   000670  EF33  F003         	goto	l114
   992   000674                     u280:
   993   000674                     
   994                           ;uart.c: 63:     TXREG2=data2;
   995   000674  C034  FF73         	movff	tx2@data2,3955	;volatile
   996   000678  0012               	return		;funcret
   997   00067A                     __end_of_tx2:
   998                           	callstack 0
   999                           
  1000 ;; *************** function _tx1 *****************
  1001 ;; Defined at:
  1002 ;;		line 52 in file "uart.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  data1           1    wreg     unsigned char 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  data1           1    6[COMRAM] unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels used: 1
  1022 ;; Hardware stack levels required when called: 1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;;		_uart_wr_str
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text3
  1032   00060E                     __ptext3:
  1033                           	callstack 0
  1034   00060E                     _tx1:
  1035                           	callstack 28
  1036                           
  1037                           ;incstack = 0
  1038                           ;tx1@data1 stored from wreg
  1039   00060E  6E34               	movwf	tx1@data1^0,c
  1040   000610                     l108:
  1041   000610  A89E               	btfss	158,4,c	;volatile
  1042   000612  EF0D  F003         	goto	u271
  1043   000616  EF0F  F003         	goto	u270
  1044   00061A                     u271:
  1045   00061A  EF08  F003         	goto	l108
  1046   00061E                     u270:
  1047   00061E                     
  1048                           ;uart.c: 55:     TXREG1=data1;
  1049   00061E  C034  FFAD         	movff	tx1@data1,4013	;volatile
  1050   000622                     
  1051                           ;uart.c: 56:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  1052   000622  0E05               	movlw	5
  1053   000624                     u527:
  1054   000624  2EE8               	decfsz	wreg,f,c
  1055   000626  D7FE               	bra	u527
  1056   000628  F000               	nop	
  1057   00062A  0012               	return		;funcret
  1058   00062C                     __end_of_tx1:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _uart_init *****************
  1062 ;; Defined at:
  1063 ;;		line 17 in file "uart.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1081 ;;Total ram usage:        0 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_main
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text4
  1092   00052C                     __ptext4:
  1093                           	callstack 0
  1094   00052C                     _uart_init:
  1095                           	callstack 29
  1096   00052C                     
  1097                           ;uart.c: 19:     TXSTA1bits.BRGH=1;
  1098   00052C  84AC               	bsf	172,2,c	;volatile
  1099                           
  1100                           ;uart.c: 20:     BAUDCON1bits.BRG16=1;
  1101   00052E  86B8               	bsf	184,3,c	;volatile
  1102                           
  1103                           ;uart.c: 21:     TXSTA2bits.BRGH=1;
  1104   000530  8472               	bsf	114,2,c	;volatile
  1105                           
  1106                           ;uart.c: 22:     BAUDCON2bits.BRG16=1;
  1107   000532  8670               	bsf	112,3,c	;volatile
  1108   000534                     
  1109                           ;uart.c: 23:     SPBRG1=0x8A;
  1110   000534  0E8A               	movlw	138
  1111   000536  6EAF               	movwf	175,c	;volatile
  1112                           
  1113                           ;uart.c: 24:     SPBRGH1=0x00;
  1114   000538  0E00               	movlw	0
  1115   00053A  6EB0               	movwf	176,c	;volatile
  1116                           
  1117                           ;uart.c: 27:     SPBRG2=0x8A;
  1118   00053C  0E8A               	movlw	138
  1119   00053E  6E75               	movwf	117,c	;volatile
  1120                           
  1121                           ;uart.c: 28:     SPBRGH2=0x00;
  1122   000540  0E00               	movlw	0
  1123   000542  6E76               	movwf	118,c	;volatile
  1124   000544                     
  1125                           ;uart.c: 29:     TRISCbits.RC6=1;
  1126   000544  8C94               	bsf	148,6,c	;volatile
  1127   000546                     
  1128                           ;uart.c: 30:     TRISCbits.RC7=1;
  1129   000546  8E94               	bsf	148,7,c	;volatile
  1130   000548                     
  1131                           ;uart.c: 31:     TRISDbits.RD6=1;
  1132   000548  8C95               	bsf	149,6,c	;volatile
  1133   00054A                     
  1134                           ;uart.c: 32:     TRISDbits.RD7=1;
  1135   00054A  8E95               	bsf	149,7,c	;volatile
  1136   00054C                     
  1137                           ;uart.c: 33:     TXSTA1bits.SYNC=0;
  1138   00054C  98AC               	bcf	172,4,c	;volatile
  1139   00054E                     
  1140                           ;uart.c: 34:     TXSTA2bits.SYNC=0;
  1141   00054E  9872               	bcf	114,4,c	;volatile
  1142   000550                     
  1143                           ;uart.c: 35:     RCSTA1bits.SPEN=1;
  1144   000550  8EAB               	bsf	171,7,c	;volatile
  1145   000552                     
  1146                           ;uart.c: 36:     RCSTA2bits.SPEN=1;
  1147   000552  8E71               	bsf	113,7,c	;volatile
  1148   000554                     
  1149                           ;uart.c: 37:     TXSTA1bits.TXEN=1;
  1150   000554  8AAC               	bsf	172,5,c	;volatile
  1151   000556                     
  1152                           ;uart.c: 38:     TXSTA2bits.TXEN=1;
  1153   000556  8A72               	bsf	114,5,c	;volatile
  1154   000558                     
  1155                           ;uart.c: 44:     PIE1bits.RC1IE=1;
  1156   000558  8A9D               	bsf	157,5,c	;volatile
  1157   00055A                     
  1158                           ;uart.c: 47:     RCSTA1bits.CREN=1;
  1159   00055A  88AB               	bsf	171,4,c	;volatile
  1160   00055C                     
  1161                           ;uart.c: 48:     RCSTA2bits.CREN=1;
  1162   00055C  8871               	bsf	113,4,c	;volatile
  1163   00055E  0012               	return		;funcret
  1164   000560                     __end_of_uart_init:
  1165                           	callstack 0
  1166                           
  1167 ;; *************** function _spi_master_init *****************
  1168 ;; Defined at:
  1169 ;;		line 18 in file "spi_master.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;		None
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;Total ram usage:        0 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; Hardware stack levels required when called: 1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text5
  1198   000560                     __ptext5:
  1199                           	callstack 0
  1200   000560                     _spi_master_init:
  1201                           	callstack 29
  1202   000560                     
  1203                           ;spi_master.c: 20:     SSP1ADD= 31;
  1204   000560  0E1F               	movlw	31
  1205   000562  6EC8               	movwf	200,c	;volatile
  1206   000564                     
  1207                           ;spi_master.c: 21:     SSP1STATbits.SMP = 0;
  1208   000564  9EC7               	bcf	199,7,c	;volatile
  1209   000566                     
  1210                           ;spi_master.c: 22:     SSP1STATbits.CKE = 1;
  1211   000566  8CC7               	bsf	199,6,c	;volatile
  1212   000568                     
  1213                           ;spi_master.c: 23:     SSP1CON1bits.CKP = 0;
  1214   000568  98C6               	bcf	198,4,c	;volatile
  1215                           
  1216                           ;spi_master.c: 24:     SSP1CON1bits.SSPM = 0x0A;
  1217   00056A  50C6               	movf	198,w,c	;volatile
  1218   00056C  0BF0               	andlw	-16
  1219   00056E  090A               	iorlw	10
  1220   000570  6EC6               	movwf	198,c	;volatile
  1221                           
  1222                           ;spi_master.c: 25:     ADCON0=0x00;
  1223   000572  0E00               	movlw	0
  1224   000574  6EC2               	movwf	194,c	;volatile
  1225   000576                     
  1226                           ;spi_master.c: 26:     TRISBbits.RB2=0;
  1227   000576  9493               	bcf	147,2,c	;volatile
  1228   000578                     
  1229                           ;spi_master.c: 27:     TRISBbits.RB3=0;
  1230   000578  9693               	bcf	147,3,c	;volatile
  1231   00057A                     
  1232                           ;spi_master.c: 28:     TRISBbits.RB4=0;
  1233   00057A  9893               	bcf	147,4,c	;volatile
  1234   00057C                     
  1235                           ;spi_master.c: 29:     TRISBbits.RB5=0;
  1236   00057C  9A93               	bcf	147,5,c	;volatile
  1237   00057E                     
  1238                           ;spi_master.c: 30:     TRISCbits.RC3=0;
  1239   00057E  9694               	bcf	148,3,c	;volatile
  1240   000580                     
  1241                           ;spi_master.c: 31:     TRISCbits.RC4=1;
  1242   000580  8894               	bsf	148,4,c	;volatile
  1243   000582                     
  1244                           ;spi_master.c: 32:     TRISCbits.RC5=0;
  1245   000582  9A94               	bcf	148,5,c	;volatile
  1246   000584                     
  1247                           ;spi_master.c: 33:     LATBbits.LATB2=1;
  1248   000584  848A               	bsf	138,2,c	;volatile
  1249   000586                     
  1250                           ;spi_master.c: 34:     LATBbits.LATB3=1;
  1251   000586  868A               	bsf	138,3,c	;volatile
  1252   000588                     
  1253                           ;spi_master.c: 35:     LATBbits.LATB4=1;
  1254   000588  888A               	bsf	138,4,c	;volatile
  1255   00058A                     
  1256                           ;spi_master.c: 36:     LATBbits.LATB5=1;
  1257   00058A  8A8A               	bsf	138,5,c	;volatile
  1258   00058C                     
  1259                           ;spi_master.c: 37:     SSP1CON1bits.SSPEN = 1;
  1260   00058C  8AC6               	bsf	198,5,c	;volatile
  1261   00058E  0012               	return		;funcret
  1262   000590                     __end_of_spi_master_init:
  1263                           	callstack 0
  1264                           
  1265 ;; *************** function _spi_data *****************
  1266 ;; Defined at:
  1267 ;;		line 46 in file "spi_master.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;  device          1    wreg     unsigned char 
  1270 ;;  tx_data         1    6[COMRAM] unsigned char 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;  device          1    8[COMRAM] unsigned char 
  1273 ;;  data_read       1    7[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  1    wreg      unsigned char 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1283 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1287 ;;Total ram usage:        3 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; Hardware stack levels required when called: 1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text6
  1298   000394                     __ptext6:
  1299                           	callstack 0
  1300   000394                     _spi_data:
  1301                           	callstack 29
  1302                           
  1303                           ;incstack = 0
  1304                           ;spi_data@device stored from wreg
  1305   000394  6E36               	movwf	spi_data@device^0,c
  1306   000396                     
  1307                           ;spi_master.c: 46: unsigned char spi_data(unsigned char device, unsigned char tx_data);s
      +                          pi_master.c: 47: {;spi_master.c: 48:     char data_read;;spi_master.c: 49:     if(device
      +                          ==0)
  1308   000396  5036               	movf	spi_data@device^0,w,c
  1309   000398  A4D8               	btfss	status,2,c
  1310   00039A  EFD1  F001         	goto	u291
  1311   00039E  EFD3  F001         	goto	u290
  1312   0003A2                     u291:
  1313   0003A2  EFE2  F001         	goto	l1417
  1314   0003A6                     u290:
  1315   0003A6                     
  1316                           ;spi_master.c: 50:     {;spi_master.c: 51:         LATBbits.LATB2=0;
  1317   0003A6  948A               	bcf	138,2,c	;volatile
  1318                           
  1319                           ;spi_master.c: 52:         SSP1BUF=tx_data;
  1320   0003A8  C034  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1321   0003AC                     l176:
  1322   0003AC  A0C7               	btfss	199,0,c	;volatile
  1323   0003AE  EFDB  F001         	goto	u301
  1324   0003B2  EFDD  F001         	goto	u300
  1325   0003B6                     u301:
  1326   0003B6  EFD6  F001         	goto	l176
  1327   0003BA                     u300:
  1328   0003BA                     
  1329                           ;spi_master.c: 54:         LATBbits.LATB2=1;
  1330   0003BA  848A               	bsf	138,2,c	;volatile
  1331                           
  1332                           ;spi_master.c: 55:         data_read=SSP1BUF;
  1333   0003BC  CFC9 F035          	movff	4041,spi_data@data_read	;volatile
  1334                           
  1335                           ;spi_master.c: 56:     }
  1336   0003C0  EF29  F002         	goto	l1429
  1337   0003C4                     l1417:
  1338   0003C4  0436               	decf	spi_data@device^0,w,c
  1339   0003C6  A4D8               	btfss	status,2,c
  1340   0003C8  EFE8  F001         	goto	u311
  1341   0003CC  EFEA  F001         	goto	u310
  1342   0003D0                     u311:
  1343   0003D0  EFF9  F001         	goto	l1421
  1344   0003D4                     u310:
  1345   0003D4                     
  1346                           ;spi_master.c: 59:     {;spi_master.c: 60:         LATBbits.LATB3=0;
  1347   0003D4  968A               	bcf	138,3,c	;volatile
  1348                           
  1349                           ;spi_master.c: 61:         SSP1BUF=tx_data;
  1350   0003D6  C034  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1351   0003DA                     l181:
  1352   0003DA  A0C7               	btfss	199,0,c	;volatile
  1353   0003DC  EFF2  F001         	goto	u321
  1354   0003E0  EFF4  F001         	goto	u320
  1355   0003E4                     u321:
  1356   0003E4  EFED  F001         	goto	l181
  1357   0003E8                     u320:
  1358   0003E8                     
  1359                           ;spi_master.c: 63:         LATBbits.LATB3=1;
  1360   0003E8  868A               	bsf	138,3,c	;volatile
  1361                           
  1362                           ;spi_master.c: 64:         data_read=SSP1BUF;
  1363   0003EA  CFC9 F035          	movff	4041,spi_data@data_read	;volatile
  1364                           
  1365                           ;spi_master.c: 65:     }
  1366   0003EE  EF29  F002         	goto	l1429
  1367   0003F2                     l1421:
  1368   0003F2  0E02               	movlw	2
  1369   0003F4  1836               	xorwf	spi_data@device^0,w,c
  1370   0003F6  A4D8               	btfss	status,2,c
  1371   0003F8  EF00  F002         	goto	u331
  1372   0003FC  EF02  F002         	goto	u330
  1373   000400                     u331:
  1374   000400  EF11  F002         	goto	l1425
  1375   000404                     u330:
  1376   000404                     
  1377                           ;spi_master.c: 68:     {;spi_master.c: 69:         LATBbits.LATB4=0;
  1378   000404  988A               	bcf	138,4,c	;volatile
  1379                           
  1380                           ;spi_master.c: 70:         SSP1BUF=tx_data;
  1381   000406  C034  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1382   00040A                     l186:
  1383   00040A  A0C7               	btfss	199,0,c	;volatile
  1384   00040C  EF0A  F002         	goto	u341
  1385   000410  EF0C  F002         	goto	u340
  1386   000414                     u341:
  1387   000414  EF05  F002         	goto	l186
  1388   000418                     u340:
  1389   000418                     
  1390                           ;spi_master.c: 72:         LATBbits.LATB4=1;
  1391   000418  888A               	bsf	138,4,c	;volatile
  1392                           
  1393                           ;spi_master.c: 73:         data_read=SSP1BUF;
  1394   00041A  CFC9 F035          	movff	4041,spi_data@data_read	;volatile
  1395                           
  1396                           ;spi_master.c: 74:     }
  1397   00041E  EF29  F002         	goto	l1429
  1398   000422                     l1425:
  1399   000422  0E03               	movlw	3
  1400   000424  1836               	xorwf	spi_data@device^0,w,c
  1401   000426  A4D8               	btfss	status,2,c
  1402   000428  EF18  F002         	goto	u351
  1403   00042C  EF1A  F002         	goto	u350
  1404   000430                     u351:
  1405   000430  EF29  F002         	goto	l184
  1406   000434                     u350:
  1407   000434                     
  1408                           ;spi_master.c: 77:     {;spi_master.c: 78:         LATBbits.LATB5=0;
  1409   000434  9A8A               	bcf	138,5,c	;volatile
  1410                           
  1411                           ;spi_master.c: 79:         SSP1BUF=tx_data;
  1412   000436  C034  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1413   00043A                     l191:
  1414   00043A  A0C7               	btfss	199,0,c	;volatile
  1415   00043C  EF22  F002         	goto	u361
  1416   000440  EF24  F002         	goto	u360
  1417   000444                     u361:
  1418   000444  EF1D  F002         	goto	l191
  1419   000448                     u360:
  1420   000448                     
  1421                           ;spi_master.c: 81:         LATBbits.LATB5=1;
  1422   000448  8A8A               	bsf	138,5,c	;volatile
  1423                           
  1424                           ;spi_master.c: 82:         data_read=SSP1BUF;
  1425   00044A  CFC9 F035          	movff	4041,spi_data@data_read	;volatile
  1426   00044E  EF29  F002         	goto	l1429
  1427   000452                     l184:
  1428   000452                     l1429:
  1429                           
  1430                           ;spi_master.c: 85:     return data_read;
  1431   000452  5035               	movf	spi_data@data_read^0,w,c
  1432   000454  0012               	return		;funcret
  1433   000456                     __end_of_spi_data:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _rx1_overrun_detect_reset *****************
  1437 ;; Defined at:
  1438 ;;		line 98 in file "uart.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; Hardware stack levels required when called: 1
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_main
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text7
  1467   00062C                     __ptext7:
  1468                           	callstack 0
  1469   00062C                     _rx1_overrun_detect_reset:
  1470                           	callstack 29
  1471   00062C                     
  1472                           ;uart.c: 100:           if(RCSTA1bits.OERR)
  1473   00062C  A2AB               	btfss	171,1,c	;volatile
  1474   00062E  EF1B  F003         	goto	u401
  1475   000632  EF1D  F003         	goto	u400
  1476   000636                     u401:
  1477   000636  EF23  F003         	goto	l138
  1478   00063A                     u400:
  1479   00063A                     
  1480                           ;uart.c: 101:           {;uart.c: 102:               RCSTA1bits.CREN = 0;
  1481   00063A  98AB               	bcf	171,4,c	;volatile
  1482   00063C                     
  1483                           ;uart.c: 103:               _delay((unsigned long)((4)*(64000000/4000000.0)));
  1484   00063C  0E15               	movlw	21
  1485   00063E                     u537:
  1486   00063E  2EE8               	decfsz	wreg,f,c
  1487   000640  D7FE               	bra	u537
  1488   000642  F000               	nop	
  1489   000644                     
  1490                           ;uart.c: 104:               RCSTA1bits.CREN = 1;
  1491   000644  88AB               	bsf	171,4,c	;volatile
  1492   000646                     l138:
  1493   000646  0012               	return		;funcret
  1494   000648                     __end_of_rx1_overrun_detect_reset:
  1495                           	callstack 0
  1496                           
  1497 ;; *************** function _high_beams_on *****************
  1498 ;; Defined at:
  1499 ;;		line 30 in file "gpio.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;Total ram usage:        1 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text8
  1528   0005BE                     __ptext8:
  1529                           	callstack 0
  1530   0005BE                     _high_beams_on:
  1531                           	callstack 29
  1532   0005BE                     
  1533                           ;gpio.c: 32:     LATD=0b00000010;
  1534   0005BE  0E02               	movlw	2
  1535   0005C0  6E8C               	movwf	140,c	;volatile
  1536   0005C2                     
  1537                           ;gpio.c: 33:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1538   0005C2  0ED0               	movlw	208
  1539   0005C4  6E34               	movwf	??_high_beams_on^0,c
  1540   0005C6  0ECA               	movlw	202
  1541   0005C8                     u547:
  1542   0005C8  2EE8               	decfsz	wreg,f,c
  1543   0005CA  D7FE               	bra	u547
  1544   0005CC  2E34               	decfsz	??_high_beams_on^0,f,c
  1545   0005CE  D7FC               	bra	u547
  1546   0005D0                     
  1547                           ;gpio.c: 34:     _delay((unsigned long)((5)*(64000000/4000.0)));
  1548   0005D0  0E68               	movlw	104
  1549   0005D2  6E34               	movwf	??_high_beams_on^0,c
  1550   0005D4  0EE4               	movlw	228
  1551   0005D6                     u557:
  1552   0005D6  2EE8               	decfsz	wreg,f,c
  1553   0005D8  D7FE               	bra	u557
  1554   0005DA  2E34               	decfsz	??_high_beams_on^0,f,c
  1555   0005DC  D7FC               	bra	u557
  1556   0005DE  D000               	nop2	
  1557                           
  1558                           ;gpio.c: 35:     LATD=0;
  1559   0005E0  0E00               	movlw	0
  1560   0005E2  6E8C               	movwf	140,c	;volatile
  1561   0005E4  0012               	return		;funcret
  1562   0005E6                     __end_of_high_beams_on:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _gpio_init *****************
  1566 ;; Defined at:
  1567 ;;		line 12 in file "gpio.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 2
  1588 ;; This function calls:
  1589 ;;		_debug_leds_off
  1590 ;;		_high_beams_off
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text9
  1597   000590                     __ptext9:
  1598                           	callstack 0
  1599   000590                     _gpio_init:
  1600                           	callstack 28
  1601   000590                     
  1602                           ;gpio.c: 14:     ANSELA=0;
  1603   000590  0E00               	movlw	0
  1604   000592  010F               	movlb	15	; () banked
  1605   000594  6F38               	movwf	56,b	;volatile
  1606                           
  1607                           ;gpio.c: 15:     ANSELB=0;
  1608   000596  0E00               	movlw	0
  1609   000598  6F39               	movwf	57,b	;volatile
  1610                           
  1611                           ;gpio.c: 16:     ANSELC=0;
  1612   00059A  0E00               	movlw	0
  1613   00059C  6F3A               	movwf	58,b	;volatile
  1614                           
  1615                           ;gpio.c: 17:     ANSELD=0;
  1616   00059E  0E00               	movlw	0
  1617   0005A0  6F3B               	movwf	59,b	;volatile
  1618                           
  1619                           ;gpio.c: 18:     ANSELE=0;
  1620   0005A2  0E00               	movlw	0
  1621   0005A4  6F3C               	movwf	60,b	;volatile
  1622   0005A6                     
  1623                           ; BSR set to: 15
  1624                           ;gpio.c: 19:    CM1CON0bits.C1ON=0;
  1625   0005A6  9E79               	bcf	121,7,c	;volatile
  1626   0005A8                     
  1627                           ; BSR set to: 15
  1628                           ;gpio.c: 20:    CM2CON0bits.C2ON=0;
  1629   0005A8  9E78               	bcf	120,7,c	;volatile
  1630   0005AA                     
  1631                           ; BSR set to: 15
  1632                           ;gpio.c: 21:    TRISAbits.TRISA0 = 0;
  1633   0005AA  9092               	bcf	146,0,c	;volatile
  1634   0005AC                     
  1635                           ; BSR set to: 15
  1636                           ;gpio.c: 22:    TRISAbits.TRISA1 = 0;
  1637   0005AC  9292               	bcf	146,1,c	;volatile
  1638   0005AE                     
  1639                           ; BSR set to: 15
  1640                           ;gpio.c: 23:    TRISAbits.TRISA2 = 0;
  1641   0005AE  9492               	bcf	146,2,c	;volatile
  1642   0005B0                     
  1643                           ; BSR set to: 15
  1644                           ;gpio.c: 24:    TRISD &= 0xFC;
  1645   0005B0  0EFC               	movlw	252
  1646   0005B2  1695               	andwf	149,f,c	;volatile
  1647   0005B4                     
  1648                           ; BSR set to: 15
  1649                           ;gpio.c: 25:    debug_leds_off();
  1650   0005B4  EC3D  F003         	call	_debug_leds_off	;wreg free
  1651                           
  1652                           ;gpio.c: 26:    high_beams_off();
  1653   0005B8  ECF3  F002         	call	_high_beams_off	;wreg free
  1654   0005BC  0012               	return		;funcret
  1655   0005BE                     __end_of_gpio_init:
  1656                           	callstack 0
  1657                           
  1658 ;; *************** function _high_beams_off *****************
  1659 ;; Defined at:
  1660 ;;		line 39 in file "gpio.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;		None
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1677 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1678 ;;Total ram usage:        1 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;;		_gpio_init
  1686 ;; This function uses a non-reentrant model
  1687 ;;
  1688                           
  1689                           	psect	text10
  1690   0005E6                     __ptext10:
  1691                           	callstack 0
  1692   0005E6                     _high_beams_off:
  1693                           	callstack 29
  1694   0005E6                     
  1695                           ;gpio.c: 41:     LATD = 0b00000001;
  1696   0005E6  0E01               	movlw	1
  1697   0005E8  6E8C               	movwf	140,c	;volatile
  1698   0005EA                     
  1699                           ;gpio.c: 42:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1700   0005EA  0ED0               	movlw	208
  1701   0005EC  6E34               	movwf	??_high_beams_off^0,c
  1702   0005EE  0ECA               	movlw	202
  1703   0005F0                     u567:
  1704   0005F0  2EE8               	decfsz	wreg,f,c
  1705   0005F2  D7FE               	bra	u567
  1706   0005F4  2E34               	decfsz	??_high_beams_off^0,f,c
  1707   0005F6  D7FC               	bra	u567
  1708   0005F8                     
  1709                           ;gpio.c: 43:     _delay((unsigned long)((5)*(64000000/4000.0)));
  1710   0005F8  0E68               	movlw	104
  1711   0005FA  6E34               	movwf	??_high_beams_off^0,c
  1712   0005FC  0EE4               	movlw	228
  1713   0005FE                     u577:
  1714   0005FE  2EE8               	decfsz	wreg,f,c
  1715   000600  D7FE               	bra	u577
  1716   000602  2E34               	decfsz	??_high_beams_off^0,f,c
  1717   000604  D7FC               	bra	u577
  1718   000606  D000               	nop2	
  1719                           
  1720                           ;gpio.c: 44:     LATD=0;
  1721   000608  0E00               	movlw	0
  1722   00060A  6E8C               	movwf	140,c	;volatile
  1723   00060C  0012               	return		;funcret
  1724   00060E                     __end_of_high_beams_off:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _debug_leds_off *****************
  1728 ;; Defined at:
  1729 ;;		line 54 in file "gpio.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;Total ram usage:        0 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 1
  1750 ;; This function calls:
  1751 ;;		Nothing
  1752 ;; This function is called by:
  1753 ;;		_gpio_init
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text11
  1758   00067A                     __ptext11:
  1759                           	callstack 0
  1760   00067A                     _debug_leds_off:
  1761                           	callstack 28
  1762   00067A                     
  1763                           ;gpio.c: 56:    LATA &= 0xF8;
  1764   00067A  0EF8               	movlw	248
  1765   00067C  1689               	andwf	137,f,c	;volatile
  1766   00067E  0012               	return		;funcret
  1767   000680                     __end_of_debug_leds_off:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _UART_ISR *****************
  1771 ;; Defined at:
  1772 ;;		line 180 in file "uart.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        6 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		Interrupt level 2
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	intcode
  1800   000008                     __pintcode:
  1801                           	callstack 0
  1802   000008                     _UART_ISR:
  1803                           	callstack 28
  1804                           
  1805                           ;incstack = 0
  1806   000008  823E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1807   00000A  CFE1 F030          	movff	fsr1l,??_UART_ISR+2
  1808   00000E  CFE2 F031          	movff	fsr1h,??_UART_ISR+3
  1809   000012  CFD9 F032          	movff	fsr2l,??_UART_ISR+4
  1810   000016  CFDA F033          	movff	fsr2h,??_UART_ISR+5
  1811   00001A                     
  1812                           ;uart.c: 182:     if(PIR1bits.RC1IF)
  1813   00001A  AA9E               	btfss	158,5,c	;volatile
  1814   00001C  EF12  F000         	goto	i2u49_41
  1815   000020  EF14  F000         	goto	i2u49_40
  1816   000024                     i2u49_41:
  1817   000024  EF64  F000         	goto	i2l143
  1818   000028                     i2u49_40:
  1819   000028                     
  1820                           ;uart.c: 183:     {;uart.c: 184:         rx_char=RCREG1;
  1821   000028  CFAE F02D          	movff	4014,_rx_char	;volatile
  1822                           
  1823                           ;uart.c: 185:         PIR1bits.RC1IF=0;
  1824   00002C  9A9E               	bcf	158,5,c	;volatile
  1825   00002E                     
  1826                           ;uart.c: 186:         if(rx_char == 'z')
  1827   00002E  0E7A               	movlw	122
  1828   000030  182D               	xorwf	_rx_char^0,w,c	;volatile
  1829   000032  A4D8               	btfss	status,2,c
  1830   000034  EF1E  F000         	goto	i2u50_41
  1831   000038  EF20  F000         	goto	i2u50_40
  1832   00003C                     i2u50_41:
  1833   00003C  EF24  F000         	goto	i2l1589
  1834   000040                     i2u50_40:
  1835   000040                     
  1836                           ;uart.c: 187:         {;uart.c: 188:             recording_on = 1;
  1837   000040  0E01               	movlw	1
  1838   000042  6E2C               	movwf	_recording_on^0,c	;volatile
  1839                           
  1840                           ;uart.c: 189:         }
  1841   000044  EF4F  F000         	goto	i2l1603
  1842   000048                     i2l1589:
  1843   000048  0E79               	movlw	121
  1844   00004A  182D               	xorwf	_rx_char^0,w,c	;volatile
  1845   00004C  A4D8               	btfss	status,2,c
  1846   00004E  EF2B  F000         	goto	i2u51_41
  1847   000052  EF2D  F000         	goto	i2u51_40
  1848   000056                     i2u51_41:
  1849   000056  EF31  F000         	goto	i2l145
  1850   00005A                     i2u51_40:
  1851   00005A                     
  1852                           ;uart.c: 191:         {;uart.c: 192:             recording_on = 0;
  1853   00005A  0E00               	movlw	0
  1854   00005C  6E2C               	movwf	_recording_on^0,c	;volatile
  1855                           
  1856                           ;uart.c: 193:         }
  1857   00005E  EF4F  F000         	goto	i2l1603
  1858   000062                     i2l145:
  1859                           
  1860                           ;uart.c: 199:         switch (recording_on)
  1861   000062  EF4F  F000         	goto	i2l1603
  1862   000066                     i2l1593:
  1863                           
  1864                           ;uart.c: 202:                 rx_str_interrupt = &wii_classic_packet;
  1865   000066  0E14               	movlw	low _wii_classic_packet
  1866   000068  6E3C               	movwf	_rx_str_interrupt^0,c
  1867   00006A  0E00               	movlw	high _wii_classic_packet
  1868   00006C  6E3D               	movwf	(_rx_str_interrupt+1)^0,c
  1869                           
  1870                           ;uart.c: 203:                 break;
  1871   00006E  EF64  F000         	goto	i2l143
  1872   000072                     i2l1595:
  1873                           
  1874                           ;uart.c: 205:                 *rx_str_interrupt++ = rx_char;
  1875   000072  C03C  FFD9         	movff	_rx_str_interrupt,fsr2l
  1876   000076  C03D  FFDA         	movff	_rx_str_interrupt+1,fsr2h
  1877   00007A  C02D  FFDF         	movff	_rx_char,indf2	;volatile
  1878   00007E  4A3C               	infsnz	_rx_str_interrupt^0,f,c
  1879   000080  2A3D               	incf	(_rx_str_interrupt+1)^0,f,c
  1880                           
  1881                           ;uart.c: 206:                 break;
  1882   000082  EF64  F000         	goto	i2l143
  1883   000086                     i2l1599:
  1884                           
  1885                           ;uart.c: 208:                 *rx_str_interrupt = *rx_str_interrupt;
  1886   000086  C03C  FFD9         	movff	_rx_str_interrupt,fsr2l
  1887   00008A  C03D  FFDA         	movff	_rx_str_interrupt+1,fsr2h
  1888   00008E  C03C  FFE1         	movff	_rx_str_interrupt,fsr1l
  1889   000092  C03D  FFE2         	movff	_rx_str_interrupt+1,fsr1h
  1890   000096  CFDF FFE7          	movff	indf2,indf1
  1891                           
  1892                           ;uart.c: 209:                 break;
  1893   00009A  EF64  F000         	goto	i2l143
  1894   00009E                     i2l1603:
  1895   00009E  502C               	movf	_recording_on^0,w,c	;volatile
  1896   0000A0  6E2E               	movwf	??_UART_ISR^0,c
  1897   0000A2  6A2F               	clrf	(??_UART_ISR+1)^0,c
  1898                           
  1899                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1900                           ; Switch size 1, requested type "simple"
  1901                           ; Number of cases is 1, Range of values is 0 to 0
  1902                           ; switch strategies available:
  1903                           ; Name         Instructions Cycles
  1904                           ; simple_byte            4     3 (average)
  1905                           ;	Chosen strategy is simple_byte
  1906   0000A4  502F               	movf	(??_UART_ISR+1)^0,w,c
  1907   0000A6  0A00               	xorlw	0	; case 0
  1908   0000A8  B4D8               	btfsc	status,2,c
  1909   0000AA  EF59  F000         	goto	i2l1651
  1910   0000AE  EF43  F000         	goto	i2l1599
  1911   0000B2                     i2l1651:
  1912                           
  1913                           ; Switch size 1, requested type "simple"
  1914                           ; Number of cases is 2, Range of values is 0 to 1
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte            7     4 (average)
  1918                           ;	Chosen strategy is simple_byte
  1919   0000B2  502E               	movf	??_UART_ISR^0,w,c
  1920   0000B4  0A00               	xorlw	0	; case 0
  1921   0000B6  B4D8               	btfsc	status,2,c
  1922   0000B8  EF33  F000         	goto	i2l1593
  1923   0000BC  0A01               	xorlw	1	; case 1
  1924   0000BE  B4D8               	btfsc	status,2,c
  1925   0000C0  EF39  F000         	goto	i2l1595
  1926   0000C4  EF43  F000         	goto	i2l1599
  1927   0000C8                     i2l143:
  1928                           
  1929                           ;uart.c: 213:     PIR1bits.RC1IF = 0;
  1930   0000C8  9A9E               	bcf	158,5,c	;volatile
  1931   0000CA  C033  FFDA         	movff	??_UART_ISR+5,fsr2h
  1932   0000CE  C032  FFD9         	movff	??_UART_ISR+4,fsr2l
  1933   0000D2  C031  FFE2         	movff	??_UART_ISR+3,fsr1h
  1934   0000D6  C030  FFE1         	movff	??_UART_ISR+2,fsr1l
  1935   0000DA  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1936   0000DC  0011               	retfie		f
  1937   0000DE                     __end_of_UART_ISR:
  1938                           	callstack 0
  1939   000000                     
  1940                           	psect	rparam
  1941   000000                     
  1942                           	psect	temp
  1943   00003E                     btemp:
  1944                           	callstack 0
  1945   00003E                     	ds	1
  1946   000000                     int$flags	set	btemp
  1947   000000                     wtemp8	set	btemp+1
  1948   000000                     ttemp5	set	btemp+1
  1949   000000                     ttemp6	set	btemp+4
  1950   000000                     ttemp7	set	btemp+8
  1951                           
  1952                           	psect	idloc
  1953                           
  1954                           ;Config register IDLOC0 @ 0x200000
  1955                           ;	unspecified, using default values
  1956   200000                     	org	2097152
  1957   200000  FF                 	db	255
  1958                           
  1959                           ;Config register IDLOC1 @ 0x200001
  1960                           ;	unspecified, using default values
  1961   200001                     	org	2097153
  1962   200001  FF                 	db	255
  1963                           
  1964                           ;Config register IDLOC2 @ 0x200002
  1965                           ;	unspecified, using default values
  1966   200002                     	org	2097154
  1967   200002  FF                 	db	255
  1968                           
  1969                           ;Config register IDLOC3 @ 0x200003
  1970                           ;	unspecified, using default values
  1971   200003                     	org	2097155
  1972   200003  FF                 	db	255
  1973                           
  1974                           ;Config register IDLOC4 @ 0x200004
  1975                           ;	unspecified, using default values
  1976   200004                     	org	2097156
  1977   200004  FF                 	db	255
  1978                           
  1979                           ;Config register IDLOC5 @ 0x200005
  1980                           ;	unspecified, using default values
  1981   200005                     	org	2097157
  1982   200005  FF                 	db	255
  1983                           
  1984                           ;Config register IDLOC6 @ 0x200006
  1985                           ;	unspecified, using default values
  1986   200006                     	org	2097158
  1987   200006  FF                 	db	255
  1988                           
  1989                           ;Config register IDLOC7 @ 0x200007
  1990                           ;	unspecified, using default values
  1991   200007                     	org	2097159
  1992   200007  FF                 	db	255
  1993                           
  1994                           	psect	config
  1995                           
  1996                           ; Padding undefined space
  1997   300000                     	org	3145728
  1998   300000  FF                 	db	255
  1999                           
  2000                           ;Config register CONFIG1H @ 0x300001
  2001                           ;	Oscillator Selection bits
  2002                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  2003                           ;	4X PLL Enable
  2004                           ;	PLLCFG = ON, Oscillator multiplied by 4
  2005                           ;	Primary clock enable bit
  2006                           ;	PRICLKEN = ON, Primary clock is always enabled
  2007                           ;	Fail-Safe Clock Monitor Enable bit
  2008                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2009                           ;	Internal/External Oscillator Switchover bit
  2010                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2011   300001                     	org	3145729
  2012   300001  32                 	db	50
  2013                           
  2014                           ;Config register CONFIG2L @ 0x300002
  2015                           ;	Power-up Timer Enable bit
  2016                           ;	PWRTEN = OFF, Power up timer disabled
  2017                           ;	Brown-out Reset Enable bits
  2018                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2019                           ;	Brown Out Reset Voltage bits
  2020                           ;	BORV = 0x3, unprogrammed default
  2021   300002                     	org	3145730
  2022   300002  19                 	db	25
  2023                           
  2024                           ;Config register CONFIG2H @ 0x300003
  2025                           ;	Watchdog Timer Enable bits
  2026                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2027                           ;	Watchdog Timer Postscale Select bits
  2028                           ;	WDTPS = 0xF, unprogrammed default
  2029   300003                     	org	3145731
  2030   300003  3C                 	db	60
  2031                           
  2032                           ; Padding undefined space
  2033   300004                     	org	3145732
  2034   300004  FF                 	db	255
  2035                           
  2036                           ;Config register CONFIG3H @ 0x300005
  2037                           ;	CCP2 MUX bit
  2038                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2039                           ;	PORTB A/D Enable bit
  2040                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  2041                           ;	P3A/CCP3 Mux bit
  2042                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2043                           ;	HFINTOSC Fast Start-up
  2044                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  2045                           ;	Timer3 Clock input mux bit
  2046                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2047                           ;	ECCP2 B output mux bit
  2048                           ;	P2BMX = PORTC0, P2B is on RC0
  2049                           ;	MCLR Pin Enable bit
  2050                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2051   300005                     	org	3145733
  2052   300005  91                 	db	145
  2053                           
  2054                           ;Config register CONFIG4L @ 0x300006
  2055                           ;	Stack Full/Underflow Reset Enable bit
  2056                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2057                           ;	Single-Supply ICSP Enable bit
  2058                           ;	LVP = OFF, Single-Supply ICSP disabled
  2059                           ;	Extended Instruction Set Enable bit
  2060                           ;	XINST = 0x0, unprogrammed default
  2061                           ;	Background Debug
  2062                           ;	DEBUG = OFF, Disabled
  2063   300006                     	org	3145734
  2064   300006  81                 	db	129
  2065                           
  2066                           ; Padding undefined space
  2067   300007                     	org	3145735
  2068   300007  FF                 	db	255
  2069                           
  2070                           ;Config register CONFIG5L @ 0x300008
  2071                           ;	Code Protection Block 0
  2072                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2073                           ;	Code Protection Block 1
  2074                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2075                           ;	Code Protection Block 2
  2076                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2077                           ;	Code Protection Block 3
  2078                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2079   300008                     	org	3145736
  2080   300008  0F                 	db	15
  2081                           
  2082                           ;Config register CONFIG5H @ 0x300009
  2083                           ;	Boot Block Code Protection bit
  2084                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2085                           ;	Data EEPROM Code Protection bit
  2086                           ;	CPD = OFF, Data EEPROM not code-protected
  2087   300009                     	org	3145737
  2088   300009  C0                 	db	192
  2089                           
  2090                           ;Config register CONFIG6L @ 0x30000A
  2091                           ;	Write Protection Block 0
  2092                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2093                           ;	Write Protection Block 1
  2094                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2095                           ;	Write Protection Block 2
  2096                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2097                           ;	Write Protection Block 3
  2098                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2099   30000A                     	org	3145738
  2100   30000A  0F                 	db	15
  2101                           
  2102                           ;Config register CONFIG6H @ 0x30000B
  2103                           ;	Configuration Register Write Protection bit
  2104                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2105                           ;	Boot Block Write Protection bit
  2106                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2107                           ;	Data EEPROM Write Protection bit
  2108                           ;	WRTD = OFF, Data EEPROM not write-protected
  2109   30000B                     	org	3145739
  2110   30000B  E0                 	db	224
  2111                           
  2112                           ;Config register CONFIG7L @ 0x30000C
  2113                           ;	Table Read Protection Block 0
  2114                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2115                           ;	Table Read Protection Block 1
  2116                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2117                           ;	Table Read Protection Block 2
  2118                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2119                           ;	Table Read Protection Block 3
  2120                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2121   30000C                     	org	3145740
  2122   30000C  0F                 	db	15
  2123                           
  2124                           ;Config register CONFIG7H @ 0x30000D
  2125                           ;	Boot Block Table Read Protection bit
  2126                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2127   30000D                     	org	3145741
  2128   30000D  40                 	db	64
  2129                           tosu	equ	0xFFF
  2130                           tosh	equ	0xFFE
  2131                           tosl	equ	0xFFD
  2132                           stkptr	equ	0xFFC
  2133                           pclatu	equ	0xFFB
  2134                           pclath	equ	0xFFA
  2135                           pcl	equ	0xFF9
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           prodh	equ	0xFF4
  2141                           prodl	equ	0xFF3
  2142                           indf0	equ	0xFEF
  2143                           postinc0	equ	0xFEE
  2144                           postdec0	equ	0xFED
  2145                           preinc0	equ	0xFEC
  2146                           plusw0	equ	0xFEB
  2147                           fsr0h	equ	0xFEA
  2148                           fsr0l	equ	0xFE9
  2149                           wreg	equ	0xFE8
  2150                           indf1	equ	0xFE7
  2151                           postinc1	equ	0xFE6
  2152                           postdec1	equ	0xFE5
  2153                           preinc1	equ	0xFE4
  2154                           plusw1	equ	0xFE3
  2155                           fsr1h	equ	0xFE2
  2156                           fsr1l	equ	0xFE1
  2157                           bsr	equ	0xFE0
  2158                           indf2	equ	0xFDF
  2159                           postinc2	equ	0xFDE
  2160                           postdec2	equ	0xFDD
  2161                           preinc2	equ	0xFDC
  2162                           plusw2	equ	0xFDB
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        151
    BSS         18
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      61
    BANK0           160      0     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    uart_wr_str@str	PTR unsigned char  size(2) Largest target is 48
		 -> instructions3(BANK0[48]), instructions2(BANK0[39]), instructions1(BANK0[37]), text1(COMRAM[16]), 
		 -> wii_classic_packet(COMRAM[8]), 

    rx_str_interrupt	PTR volatile unsigned char  size(2) Largest target is 8
		 -> NULL(NULL[0]), wii_classic_packet(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_uart_wr_str
    _uart_wr_str->_tx1
    _uart_wr_str->_tx2
    _gpio_init->_high_beams_off

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1828
                                             12 COMRAM     2     2      0
                          _gpio_init
                     _high_beams_off
                      _high_beams_on
           _rx1_overrun_detect_reset
                           _spi_data
                    _spi_master_init
                                _tx1
                                _tx2
                          _uart_init
                        _uart_wr_str
 ---------------------------------------------------------------------------------
 (1) _uart_wr_str                                          5     3      2     581
                                              7 COMRAM     5     3      2
                                _tx1
                                _tx2
 ---------------------------------------------------------------------------------
 (2) _tx2                                                  1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _tx1                                                  1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             3     2      1    1190
                                              6 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rx1_overrun_detect_reset                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _high_beams_on                                        1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
                     _debug_leds_off
                     _high_beams_off
 ---------------------------------------------------------------------------------
 (1) _high_beams_off                                       1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_leds_off                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _UART_ISR                                             6     6      0       0
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_init
     _debug_leds_off
     _high_beams_off
   _high_beams_off
   _high_beams_on
   _rx1_overrun_detect_reset
   _spi_data
   _spi_master_init
   _tx1
   _tx2
   _uart_init
   _uart_wr_str
     _tx1
     _tx2

 _UART_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      E      3D       1       64.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRllll       33      0       0      51        0.0%
BITBIGSFRhl         21      0       0      38        0.0%
BITBIGSFRllhhh       F      0       0      48        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhhll      9      0       0      41        0.0%
BITBIGSFRlhlhl       7      0       0      45        0.0%
BITBIGSFRlhhlh       7      0       0      42        0.0%
BITBIGSFRlhlhhh      6      0       0      43        0.0%
BITBIGSFRlhllh       5      0       0      46        0.0%
BITBIGSFRlhlhhl      5      0       0      44        0.0%
BITBIGSFRlhhhlh      3      0       0      40        0.0%
BITBIGSFRlhhhhl      3      0       0      39        0.0%
BITBIGSFRllhhl       1      0       0      49        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BITBIGSFRlhlll       1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B9      33        0.0%
DATA                 0      0      B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Oct 23 21:50:07 2022

                  uart_wr_str@str 0035          _rx1_overrun_detect_reset 062C  
                 uart_wr_str@port 0039                               l111 062A  
                             l105 055E                               l114 0666  
                             l108 0610                               l117 0678  
                             l134 0392                               l138 0646  
                             l172 058E                               l181 03DA  
                             l263 05BC                               l191 043A  
                             l183 03E8                               l184 0452  
                             l176 03AC                               l193 0448  
                             l266 05E4                               l194 0454  
                             l186 040A                               l178 03BA  
                             l275 067E                               l188 0418  
                             l269 060C                               u300 03BA  
                             u301 03B6                               u310 03D4  
                             u311 03D0                               u400 063A  
                             u320 03E8                               u401 0636  
                             u321 03E4                               u330 0404  
                             u331 0400                               u340 0418  
                             u341 0414                               u350 0434  
                             u270 061E                               u430 0274  
                             u351 0430                               u271 061A  
                             u431 026E                               u415 0256  
                             u360 0448                               u280 0674  
                             u440 0276                               u416 0258  
                             u361 0444                               u281 0670  
                             u425 0260                               u290 03A6  
                             u370 0302                               u450 0288  
                             u426 0262                               u291 03A2  
                             u371 02FE                               u451 0284  
                             u380 0330                               u460 02A2  
                             u381 032C                               u461 029C  
                             u390 035E                               u470 02A4  
                             u527 0624                               u391 035A  
                             u480 02C2                               u537 063E  
                             u481 02BE                               u547 05C8  
                             u557 05D6                               u567 05F0  
                             u577 05FE                    spi_data@device 0036  
                             _tx1 060E                               _tx2 0664  
                             wreg 000FE8                        _TXSTA1bits 000FAC  
                      _TXSTA2bits 000F72                              l1401 0552  
                            l1321 0622                              l1331 05F8  
                            l1411 055C                              l1403 0554  
                            l1323 0666                              l1333 067A  
                            l1341 05AA                              l1421 03F2  
                            l1413 0396                              l1405 0556  
                            l1317 0610                              l1325 0674  
                            l1501 0138                              l1327 05E6  
                            l1343 05AC                              l1335 0590  
                            l1423 0404                              l1415 03A6  
                            l1351 0560                              l1407 0558  
                            l1319 061E                              l1511 0166  
                            l1503 013E                              l1329 05EA  
                            l1345 05AE                              l1337 05A6  
                            l1425 0422                              l1417 03C4  
                            l1361 0578                              l1353 0564  
                            l1409 055A                              l1441 0306  
                            l1433 02D4                              l1521 0184  
                            l1513 016C                              l1505 014C  
                            l1347 05B0                              l1339 05A8  
                            l1427 0434                              l1419 03D4  
                            l1371 0582                              l1363 057A  
                            l1355 0566                              l1451 0346  
                            l1443 0314                              l1435 02D8  
                            l1531 01A0                              l1523 018A  
                            l1515 0172                              l1507 0152  
                            l1349 05B4                              l1429 0452  
                            l1381 058C                              l1373 0584  
                            l1365 057C                              l1357 0568  
                            l1445 0318                              l1437 02E6  
                            l1541 01D2                              l1533 01AE  
                            l1525 0190                              l1517 0178  
                            l1509 0158                              l1463 05BE  
                            l1471 063A                              l1375 0586  
                            l1367 057E                              l1359 0576  
                            l1391 0548                              l1383 052C  
                            l1447 0334                              l1439 02EA  
                            l1455 0362                              l1551 0204  
                            l1543 01DC                              l1535 01B4  
                            l1527 0196                              l1519 017E  
                            l1465 05C2                              l1473 063C  
                            l1377 0588                              l1369 0580  
                            l1393 054A                              l1385 0534  
                            l1449 0342                              l1457 038C  
                            l1561 0236                              l1553 020E  
                            l1545 01E6                              l1537 01BE  
                            l1529 019A                              l1481 00EC  
                            l1467 05D0                              l1475 0644  
                            l1379 058A                              l1395 054C  
                            l1387 0544                              l1571 0262  
                            l1563 0240                              l1555 0218  
                            l1547 01F0                              l1539 01C8  
                            l1491 010A                              l1483 00F0  
                            l1469 062C                              l1397 054E  
                            l1389 0546                              l1573 0288  
                            l1565 0248                              l1557 0222  
                            l1549 01FA                              l1493 0118  
                            l1485 00FC                              l1477 00E2  
                            l1399 0550                              l1575 0290  
                            l1567 024E                              l1559 022C  
                            l1495 011E                              l1487 00FE  
                            l1479 00EA                              l1649 0376  
                            l1577 02C2                              l1569 0258  
                            l1497 0124                              l1489 0100  
                            l1579 02C6                              l1499 0132  
                            ?_tx1 002E                              ?_tx2 002E  
                            _LATA 000F89                              _LATD 000F8C  
                            _IPEN 007E87                              _main 00E2  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              fsr2l 000FD9  
                            btemp 003E                              start 00DE  
                    ___param_bank 000000                   spi_data@tx_data 0034  
                           ??_tx1 0034                             ??_tx2 0034  
                    _BAUDCON1bits 000FB8                      _BAUDCON2bits 000F70  
                           ?_main 002E                   _ticks_per_frame 0001  
                           i2l143 00C8                             i2l153 00CA  
                           i2l145 0062                             _TMR1H 000FCF  
                           _TMR1L 000FCE                             _TRISD 000F95  
                 ??_high_beams_on 0034                  __end_of_UART_ISR 00DE  
                           _text1 0004                             tablat 000FF5  
                           ttemp5 003F                             ttemp6 0042  
                           ttemp7 0046                             status 000FD8  
                           wtemp8 003F                    _debug_leds_off 067A  
                 __initialization 04D2                      __end_of_main 02D2  
                          ??_main 003A                     __activetblptr 000002  
                          _ADCON0 000FC2                            _ANSELA 000F38  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                          _ANSELD 000F3B                            _ANSELE 000F3C  
                          i2l1603 009E                            i2l1651 00B2  
                          i2l1581 001A                            i2l1591 005A  
                          i2l1583 0028                            i2l1593 0066  
                          i2l1585 002E                            i2l1595 0072  
                          i2l1587 0040                            i2l1597 007E  
                          i2l1589 0048                            i2l1599 0086  
                          _INTCON 000FF2                            _RCREG1 000FAE  
                          _SPBRG1 000FAF                            _SPBRG2 000F75  
          __end_of_debug_leds_off 0680                            _TXREG1 000FAD  
                          _TXREG2 000F73                 spi_data@data_read 0035  
                ??_high_beams_off 0034                            clear_0 0518  
                          isa$std 000001                      __pdataCOMRAM 0001  
                __end_of_spi_data 0456                      ?_uart_wr_str 0035  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                        __accesstop 0060  
         __end_of__initialization 051E        ??_rx1_overrun_detect_reset 0034  
                 ?_debug_leds_off 002E                     ___rparam_used 000001  
                  __pcstackCOMRAM 002E                      __pidataBANK0 0456  
                       ?_UART_ISR 002E                        __pnvCOMRAM 003C  
                      ??_UART_ISR 002E                           i2u50_40 0040  
                         i2u50_41 003C                           i2u51_40 005A  
                         i2u51_41 0056                           i2u49_40 0028  
                         i2u49_41 0024                           _SPBRGH1 000FB0  
                         _SPBRGH2 000F76                           _SSP1ADD 000FC8  
                         _SSP1BUF 000FC9                      _classic_ctrl 001C  
                         __Hparam 0000                           __Lparam 0000  
                _rx_str_interrupt 003C                         ?_spi_data 0034  
                         __pcinit 04D2                           __ramtop 1000  
                         __ptext0 00E2                           __ptext1 02D2  
                         __ptext2 0664                           __ptext3 060E  
                         __ptext4 052C                           __ptext5 0560  
                         __ptext6 0394                           __ptext7 062C  
                         __ptext8 05BE                           __ptext9 0590  
               __end_of_gpio_init 05BE                         _T1CONbits 000FCD  
                         _rx_char 002D             __end_of_high_beams_on 05E6  
            end_of_initialization 051E  __end_of_rx1_overrun_detect_reset 0648  
                   __Lmediumconst 0000                 __end_of_uart_init 0560  
                      ??_spi_data 0035                           postdec1 000FE5  
                      _timer1_reg 0026                           postinc0 000FEE  
               ??_spi_master_init 0034                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                  ??_debug_leds_off 0034  
                     _CM1CON0bits 000F79                       _CM2CON0bits 000F78  
                   __pidataCOMRAM 0648               start_initialization 04D2  
                     __end_of_tx1 062C                       __end_of_tx2 067A  
                   _instructions1 00B7                     _instructions2 0090  
                   _instructions3 0060                       __pdataBANK0 0060  
                     _act_buttons 0022         ?_rx1_overrun_detect_reset 002E  
                     __pbssCOMRAM 001C                _wii_classic_packet 0014  
                       __pintcode 0008                         _gpio_init 0590  
                       _new_frame 0003                   _spi_master_init 0560  
                        _LATAbits 000F89                          _LATBbits 000F8A  
                        _PIE1bits 000F9D                          _PIR1bits 000F9E  
                        _PIR3bits 000FA4                          _UART_ISR 0008  
                       _uart_init 052C                     ??_uart_wr_str 0037  
                      ?_gpio_init 002E                      _recording_on 002C  
                       copy_data0 04E6                         copy_data1 0506  
                        __Hrparam 0000                          __Lrparam 0000  
                      ?_uart_init 002E                    _high_beams_off 05E6  
         __end_of_spi_master_init 0590                          __ptext10 05E6  
                        __ptext11 067A                      _SSP1CON1bits 000FC6  
             __end_of_uart_wr_str 0394                      _tick_counter 0028  
                        isa$xinst 000000                          _spi_data 0394  
                        int$flags 003E            __end_of_high_beams_off 060E  
                    _SSP1STATbits 000FC7                          tx1@data1 0034  
                        tx2@data2 0034                      _timer1_reg_h 002B  
                    _timer1_reg_l 002A                        _INTCONbits 000FF2  
                     ??_gpio_init 0035                     _high_beams_on 05BE  
                        intlevel2 0000                        _RCSTA1bits 000FAB  
                      _RCSTA2bits 000F71                       ??_uart_init 0034  
                 ?_high_beams_off 002E                       _uart_wr_str 02D2  
                ?_spi_master_init 002E                    ?_high_beams_on 002E  
