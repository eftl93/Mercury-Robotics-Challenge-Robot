

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Oct 24 19:46:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Version 2.40
    33                           ; Generated 17/11/2021 GMT
    34                           ; 
    35                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F46K22 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     
    68                           	psect	idataCOMRAM
    69   0007BC                     __pidataCOMRAM:
    70                           	callstack 0
    71                           
    72                           ;initializer for _ticks_per_frame
    73   0007BC  03E8               	dw	1000
    74                           
    75                           ;initializer for _new_frame
    76   0007BE  01                 	db	1
    77                           
    78                           ;initializer for _text1
    79   0007BF  48                 	db	72
    80   0007C0  65                 	db	101
    81   0007C1  6C                 	db	108
    82   0007C2  6C                 	db	108
    83   0007C3  6F                 	db	111
    84   0007C4  2C                 	db	44
    85   0007C5  20                 	db	32
    86   0007C6  57                 	db	87
    87   0007C7  65                 	db	101
    88   0007C8  6C                 	db	108
    89   0007C9  63                 	db	99
    90   0007CA  6F                 	db	111
    91   0007CB  6D                 	db	109
    92   0007CC  65                 	db	101
    93   0007CD  21                 	db	33
    94   0007CE  00                 	db	0
    95                           
    96                           ;initializer for _wii_classic_packet
    97   0007CF  68                 	db	104
    98   0007D0  65                 	db	101
    99   0007D1  6C                 	db	108
   100   0007D2  6C                 	db	108
   101   0007D3  6F                 	db	111
   102   0007D4  21                 	db	33
   103   0007D5  21                 	db	33
   104   0007D6  21                 	db	33
   105   0007D7  00                 	db	0
   106                           
   107                           ;initializer for _debouncing_flag
   108   0007D8  01                 	db	1
   109                           
   110                           	psect	idataBANK0
   111   0005E6                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _instructions3
   115   0005E6  50                 	db	80
   116   0005E7  72                 	db	114
   117   0005E8  65                 	db	101
   118   0005E9  73                 	db	115
   119   0005EA  73                 	db	115
   120   0005EB  20                 	db	32
   121   0005EC  27                 	db	39
   122   0005ED  71                 	db	113
   123   0005EE  27                 	db	39
   124   0005EF  20                 	db	32
   125   0005F0  61                 	db	97
   126   0005F1  6E                 	db	110
   127   0005F2  64                 	db	100
   128   0005F3  20                 	db	32
   129   0005F4  27                 	db	39
   130   0005F5  65                 	db	101
   131   0005F6  27                 	db	39
   132   0005F7  20                 	db	32
   133   0005F8  74                 	db	116
   134   0005F9  6F                 	db	111
   135   0005FA  20                 	db	32
   136   0005FB  74                 	db	116
   137   0005FC  75                 	db	117
   138   0005FD  72                 	db	114
   139   0005FE  6E                 	db	110
   140   0005FF  20                 	db	32
   141   000600  6C                 	db	108
   142   000601  69                 	db	105
   143   000602  67                 	db	103
   144   000603  68                 	db	104
   145   000604  74                 	db	116
   146   000605  20                 	db	32
   147   000606  62                 	db	98
   148   000607  65                 	db	101
   149   000608  61                 	db	97
   150   000609  6D                 	db	109
   151   00060A  20                 	db	32
   152   00060B  6F                 	db	111
   153   00060C  66                 	db	102
   154   00060D  66                 	db	102
   155   00060E  20                 	db	32
   156   00060F  61                 	db	97
   157   000610  6E                 	db	110
   158   000611  64                 	db	100
   159   000612  20                 	db	32
   160   000613  6F                 	db	111
   161   000614  6E                 	db	110
   162   000615  00                 	db	0
   163                           
   164                           ;initializer for _instructions2
   165   000616  55                 	db	85
   166   000617  73                 	db	115
   167   000618  65                 	db	101
   168   000619  20                 	db	32
   169   00061A  72                 	db	114
   170   00061B  69                 	db	105
   171   00061C  67                 	db	103
   172   00061D  68                 	db	104
   173   00061E  74                 	db	116
   174   00061F  20                 	db	32
   175   000620  6A                 	db	106
   176   000621  6F                 	db	111
   177   000622  79                 	db	121
   178   000623  73                 	db	115
   179   000624  74                 	db	116
   180   000625  69                 	db	105
   181   000626  63                 	db	99
   182   000627  6B                 	db	107
   183   000628  20                 	db	32
   184   000629  74                 	db	116
   185   00062A  6F                 	db	111
   186   00062B  20                 	db	32
   187   00062C  6D                 	db	109
   188   00062D  6F                 	db	111
   189   00062E  76                 	db	118
   190   00062F  65                 	db	101
   191   000630  20                 	db	32
   192   000631  72                 	db	114
   193   000632  69                 	db	105
   194   000633  67                 	db	103
   195   000634  68                 	db	104
   196   000635  74                 	db	116
   197   000636  20                 	db	32
   198   000637  77                 	db	119
   199   000638  68                 	db	104
   200   000639  65                 	db	101
   201   00063A  65                 	db	101
   202   00063B  6C                 	db	108
   203   00063C  00                 	db	0
   204                           
   205                           ;initializer for _instructions1
   206   00063D  55                 	db	85
   207   00063E  73                 	db	115
   208   00063F  65                 	db	101
   209   000640  20                 	db	32
   210   000641  6C                 	db	108
   211   000642  65                 	db	101
   212   000643  66                 	db	102
   213   000644  74                 	db	116
   214   000645  20                 	db	32
   215   000646  6A                 	db	106
   216   000647  6F                 	db	111
   217   000648  79                 	db	121
   218   000649  73                 	db	115
   219   00064A  74                 	db	116
   220   00064B  69                 	db	105
   221   00064C  63                 	db	99
   222   00064D  6B                 	db	107
   223   00064E  20                 	db	32
   224   00064F  74                 	db	116
   225   000650  6F                 	db	111
   226   000651  20                 	db	32
   227   000652  6D                 	db	109
   228   000653  6F                 	db	111
   229   000654  76                 	db	118
   230   000655  65                 	db	101
   231   000656  20                 	db	32
   232   000657  6C                 	db	108
   233   000658  65                 	db	101
   234   000659  66                 	db	102
   235   00065A  74                 	db	116
   236   00065B  20                 	db	32
   237   00065C  77                 	db	119
   238   00065D  68                 	db	104
   239   00065E  65                 	db	101
   240   00065F  65                 	db	101
   241   000660  6C                 	db	108
   242   000661  00                 	db	0
   243   000000                     _TMR1L	set	4046
   244   000000                     _TMR1H	set	4047
   245   000000                     _RCREG1	set	4014
   246   000000                     _TXREG1	set	4013
   247   000000                     _RCSTA2bits	set	3953
   248   000000                     _SPBRG1	set	4015
   249   000000                     _BAUDCON1bits	set	4024
   250                           
   251                           	psect	nvCOMRAM
   252   000055                     __pnvCOMRAM:
   253                           	callstack 0
   254   000055                     _rx_str_interrupt:
   255                           	callstack 0
   256   000055                     	ds	2
   257   000000                     _LATA	set	3977
   258   000000                     _TRISD	set	3989
   259   000000                     _INTCONbits	set	4082
   260   000000                     _ANSELE	set	3900
   261   000000                     _ANSELD	set	3899
   262   000000                     _ANSELC	set	3898
   263   000000                     _ANSELB	set	3897
   264   000000                     _ANSELA	set	3896
   265   000000                     _BAUDCON2bits	set	3952
   266   000000                     _TXSTA2bits	set	3954
   267   000000                     _LATAbits	set	3977
   268   000000                     _IPEN	set	32391
   269   000000                     _INTCON	set	4082
   270   000000                     _LATD	set	3980
   271   000000                     _TRISAbits	set	3986
   272   000000                     _LATBbits	set	3978
   273   000000                     _TRISBbits	set	3987
   274   000000                     _TRISCbits	set	3988
   275   000000                     _TXSTA1bits	set	4012
   276   000000                     _ADCON0	set	4034
   277   000000                     _SSP1CON1bits	set	4038
   278   000000                     _SSP1STATbits	set	4039
   279   000000                     _SSP1ADD	set	4040
   280   000000                     _TXREG2	set	3955
   281   000000                     _SPBRG2	set	3957
   282   000000                     _SPBRGH1	set	4016
   283   000000                     _CM2CON0bits	set	3960
   284   000000                     _CM1CON0bits	set	3961
   285   000000                     _SPBRGH2	set	3958
   286   000000                     _PIE1bits	set	3997
   287   000000                     _RCSTA1bits	set	4011
   288   000000                     _TRISDbits	set	3989
   289   000000                     _PIR3bits	set	4004
   290   000000                     _PIR1bits	set	3998
   291   000000                     _T1CONbits	set	4045
   292   000000                     _SSP1BUF	set	4041
   293                           
   294                           ; #config settings
   295                           
   296                           	psect	cinit
   297   000662                     __pcinit:
   298                           	callstack 0
   299   000662                     start_initialization:
   300                           	callstack 0
   301   000662                     __initialization:
   302                           	callstack 0
   303                           
   304                           ; Initialize objects allocated to BANK0 (124 bytes)
   305                           ; load TBLPTR registers with __pidataBANK0
   306   000662  0EE6               	movlw	low __pidataBANK0
   307   000664  6EF6               	movwf	tblptrl,c
   308   000666  0E05               	movlw	high __pidataBANK0
   309   000668  6EF7               	movwf	tblptrh,c
   310   00066A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   311   00066C  6EF8               	movwf	tblptru,c
   312   00066E  EE00  F060         	lfsr	0,__pdataBANK0
   313   000672  EE10 F07C          	lfsr	1,124
   314   000676                     copy_data0:
   315   000676  0009               	tblrd		*+
   316   000678  CFF5 FFEE          	movff	tablat,postinc0
   317   00067C  50E5               	movf	postdec1,w,c
   318   00067E  50E1               	movf	fsr1l,w,c
   319   000680  E1FA               	bnz	copy_data0
   320                           
   321                           ; Initialize objects allocated to COMRAM (29 bytes)
   322                           ; load TBLPTR registers with __pidataCOMRAM
   323   000682  0EBC               	movlw	low __pidataCOMRAM
   324   000684  6EF6               	movwf	tblptrl,c
   325   000686  0E07               	movlw	high __pidataCOMRAM
   326   000688  6EF7               	movwf	tblptrh,c
   327   00068A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   328   00068C  6EF8               	movwf	tblptru,c
   329   00068E  EE00  F027         	lfsr	0,__pdataCOMRAM
   330   000692  EE10 F01D          	lfsr	1,29
   331   000696                     copy_data1:
   332   000696  0009               	tblrd		*+
   333   000698  CFF5 FFEE          	movff	tablat,postinc0
   334   00069C  50E5               	movf	postdec1,w,c
   335   00069E  50E1               	movf	fsr1l,w,c
   336   0006A0  E1FA               	bnz	copy_data1
   337                           
   338                           ; Clear objects allocated to COMRAM (38 bytes)
   339   0006A2  EE00  F001         	lfsr	0,__pbssCOMRAM
   340   0006A6  0E26               	movlw	38
   341   0006A8                     clear_0:
   342   0006A8  6AEE               	clrf	postinc0,c
   343   0006AA  06E8               	decf	wreg,f,c
   344   0006AC  E1FD               	bnz	clear_0
   345   0006AE                     end_of_initialization:
   346                           	callstack 0
   347   0006AE                     __end_of__initialization:
   348                           	callstack 0
   349   0006AE  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   350   0006B0  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   351   0006B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   352   0006B4  6EF8               	movwf	tblptru,c
   353   0006B6  0100               	movlb	0
   354   0006B8  EF71  F000         	goto	_main	;jump to C main() function
   355                           
   356                           	psect	bssCOMRAM
   357   000001                     __pbssCOMRAM:
   358                           	callstack 0
   359   000001                     _classic_ctrl:
   360                           	callstack 0
   361   000001                     	ds	7
   362   000008                     _aux_buttons:
   363                           	callstack 0
   364   000008                     	ds	6
   365   00000E                     _shoulder_buttons:
   366                           	callstack 0
   367   00000E                     	ds	6
   368   000014                     _arrow_buttons:
   369                           	callstack 0
   370   000014                     	ds	4
   371   000018                     _act_buttons:
   372                           	callstack 0
   373   000018                     	ds	4
   374   00001C                     _timer1_reg:
   375                           	callstack 0
   376   00001C                     	ds	2
   377   00001E                     _tick_counter:
   378                           	callstack 0
   379   00001E                     	ds	2
   380   000020                     _timer1_reg_l:
   381                           	callstack 0
   382   000020                     	ds	1
   383   000021                     _timer1_reg_h:
   384                           	callstack 0
   385   000021                     	ds	1
   386   000022                     _recording_on:
   387                           	callstack 0
   388   000022                     	ds	1
   389   000023                     _rx_char:
   390                           	callstack 0
   391   000023                     	ds	1
   392   000024                     _demuxed_controller_signals:
   393                           	callstack 0
   394   000024                     	ds	1
   395   000025                     _debouncing_counter:
   396                           	callstack 0
   397   000025                     	ds	1
   398   000026                     _servo_controller_tx:
   399                           	callstack 0
   400   000026                     	ds	1
   401                           
   402                           	psect	dataCOMRAM
   403   000027                     __pdataCOMRAM:
   404                           	callstack 0
   405   000027                     _ticks_per_frame:
   406                           	callstack 0
   407   000027                     	ds	2
   408   000029                     _new_frame:
   409                           	callstack 0
   410   000029                     	ds	1
   411   00002A                     _text1:
   412                           	callstack 0
   413   00002A                     	ds	16
   414   00003A                     _wii_classic_packet:
   415                           	callstack 0
   416   00003A                     	ds	9
   417   000043                     _debouncing_flag:
   418                           	callstack 0
   419   000043                     	ds	1
   420                           
   421                           	psect	dataBANK0
   422   000060                     __pdataBANK0:
   423                           	callstack 0
   424   000060                     _instructions3:
   425                           	callstack 0
   426   000060                     	ds	48
   427   000090                     _instructions2:
   428                           	callstack 0
   429   000090                     	ds	39
   430   0000B7                     _instructions1:
   431                           	callstack 0
   432   0000B7                     	ds	37
   433                           
   434                           	psect	cstackCOMRAM
   435   000044                     __pcstackCOMRAM:
   436                           	callstack 0
   437   000044                     ??_UART_ISR:
   438                           
   439                           ; 1 bytes @ 0x0
   440   000044                     	ds	6
   441   00004A                     ??_high_beams_on:
   442   00004A                     ??_high_beams_off:
   443   00004A                     tx1@data1:
   444                           	callstack 0
   445   00004A                     tx2@data2:
   446                           	callstack 0
   447   00004A                     spi_data@tx_data:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x6
   451   00004A                     	ds	1
   452   00004B                     spi_data@data_read:
   453                           	callstack 0
   454   00004B                     uart_wr_str@str:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x7
   458   00004B                     	ds	1
   459   00004C                     spi_data@device:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x8
   463   00004C                     	ds	1
   464   00004D                     ??_uart_wr_str:
   465                           
   466                           ; 1 bytes @ 0x9
   467   00004D                     	ds	2
   468   00004F                     uart_wr_str@port:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0xB
   472   00004F                     	ds	1
   473   000050                     ??_main:
   474                           
   475                           ; 1 bytes @ 0xC
   476   000050                     	ds	5
   477                           
   478 ;;
   479 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   480 ;;
   481 ;; *************** function _main *****************
   482 ;; Defined at:
   483 ;;		line 86 in file "main.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  dummy_spi_tx    1    0        unsigned char 
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;Total ram usage:        5 bytes
   502 ;; Hardware stack levels required when called: 3
   503 ;; This function calls:
   504 ;;		_gpio_init
   505 ;;		_high_beams_off
   506 ;;		_high_beams_on
   507 ;;		_rx1_overrun_detect_reset
   508 ;;		_spi_data
   509 ;;		_spi_master_init
   510 ;;		_tx1
   511 ;;		_tx2
   512 ;;		_uart_init
   513 ;;		_uart_wr_str
   514 ;; This function is called by:
   515 ;;		Startup code after reset
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           	psect	text0
   520   0000E2                     __ptext0:
   521                           	callstack 0
   522   0000E2                     _main:
   523                           	callstack 28
   524   0000E2                     
   525                           ;main.c: 88:     uint8_t dummy_spi_tx;;main.c: 89:     rx_str_interrupt = &wii_classic_p
      +                          acket;
   526   0000E2  0E3A               	movlw	low _wii_classic_packet
   527   0000E4  6E55               	movwf	_rx_str_interrupt^0,c
   528   0000E6  0E00               	movlw	high _wii_classic_packet
   529   0000E8  6E56               	movwf	(_rx_str_interrupt+1)^0,c
   530   0000EA                     
   531                           ;main.c: 90:     IPEN=0;
   532   0000EA  9ED0               	bcf	4048,7,c	;volatile
   533   0000EC                     
   534                           ;main.c: 91:     INTCON=0b00000000;
   535   0000EC  0E00               	movlw	0
   536   0000EE  6EF2               	movwf	242,c	;volatile
   537   0000F0                     
   538                           ;main.c: 92:     gpio_init();
   539   0000F0  EC90  F003         	call	_gpio_init	;wreg free
   540                           
   541                           ;main.c: 93:     spi_master_init();
   542   0000F4  EC78  F003         	call	_spi_master_init	;wreg free
   543                           
   544                           ;main.c: 94:     uart_init();
   545   0000F8  EC5E  F003         	call	_uart_init	;wreg free
   546   0000FC                     
   547                           ;main.c: 96:     INTCONbits.GIE = 1;
   548   0000FC  8EF2               	bsf	242,7,c	;volatile
   549   0000FE                     
   550                           ;main.c: 97:     INTCONbits.PEIE = 1;
   551   0000FE  8CF2               	bsf	242,6,c	;volatile
   552   000100  0E6F               	movlw	111
   553   000102  6E4A               	movwf	spi_data@tx_data^0,c
   554   000104  0E03               	movlw	3
   555   000106  EC92  F002         	call	_spi_data
   556   00010A                     
   557                           ;main.c: 100:     uart_wr_str(1, text1);
   558   00010A  0E2A               	movlw	low _text1
   559   00010C  6E4B               	movwf	uart_wr_str@str^0,c
   560   00010E  0E00               	movlw	high _text1
   561   000110  6E4C               	movwf	(uart_wr_str@str+1)^0,c
   562   000112  0E01               	movlw	1
   563   000114  EC31  F002         	call	_uart_wr_str
   564   000118                     
   565                           ;main.c: 101:     tx1('\n');
   566   000118  0E0A               	movlw	10
   567   00011A  ECCF  F003         	call	_tx1
   568   00011E                     
   569                           ;main.c: 102:     tx1('\r');
   570   00011E  0E0D               	movlw	13
   571   000120  ECCF  F003         	call	_tx1
   572   000124                     
   573                           ;main.c: 103:     uart_wr_str(1, instructions1);
   574   000124  0EB7               	movlw	low _instructions1
   575   000126  6E4B               	movwf	uart_wr_str@str^0,c
   576   000128  0E00               	movlw	high _instructions1
   577   00012A  6E4C               	movwf	(uart_wr_str@str+1)^0,c
   578   00012C  0E01               	movlw	1
   579   00012E  EC31  F002         	call	_uart_wr_str
   580   000132                     
   581                           ;main.c: 104:     tx1('\n');
   582   000132  0E0A               	movlw	10
   583   000134  ECCF  F003         	call	_tx1
   584   000138                     
   585                           ;main.c: 105:     tx1('\r');
   586   000138  0E0D               	movlw	13
   587   00013A  ECCF  F003         	call	_tx1
   588   00013E                     
   589                           ;main.c: 106:     uart_wr_str(1, instructions2);
   590   00013E  0E90               	movlw	low _instructions2
   591   000140  6E4B               	movwf	uart_wr_str@str^0,c
   592   000142  0E00               	movlw	high _instructions2
   593   000144  6E4C               	movwf	(uart_wr_str@str+1)^0,c
   594   000146  0E01               	movlw	1
   595   000148  EC31  F002         	call	_uart_wr_str
   596   00014C                     
   597                           ;main.c: 107:     tx1('\n');
   598   00014C  0E0A               	movlw	10
   599   00014E  ECCF  F003         	call	_tx1
   600   000152                     
   601                           ;main.c: 108:     tx1('\r');
   602   000152  0E0D               	movlw	13
   603   000154  ECCF  F003         	call	_tx1
   604   000158                     
   605                           ;main.c: 109:     uart_wr_str(1, instructions3);
   606   000158  0E60               	movlw	low _instructions3
   607   00015A  6E4B               	movwf	uart_wr_str@str^0,c
   608   00015C  0E00               	movlw	high _instructions3
   609   00015E  6E4C               	movwf	(uart_wr_str@str+1)^0,c
   610   000160  0E01               	movlw	1
   611   000162  EC31  F002         	call	_uart_wr_str
   612   000166                     
   613                           ;main.c: 110:     tx1('\n');
   614   000166  0E0A               	movlw	10
   615   000168  ECCF  F003         	call	_tx1
   616   00016C                     
   617                           ;main.c: 111:     tx1('\r');
   618   00016C  0E0D               	movlw	13
   619   00016E  ECCF  F003         	call	_tx1
   620   000172                     l1628:
   621                           
   622                           ;main.c: 114:     {;main.c: 116:         classic_ctrl.lx_joystick = wii_classic_packet[1
      +                          ] - 33;
   623   000172  503B               	movf	(_wii_classic_packet+1)^0,w,c
   624   000174  0FDF               	addlw	223
   625   000176  6E01               	movwf	_classic_ctrl^0,c
   626   000178                     
   627                           ;main.c: 117:         classic_ctrl.ly_joystick = wii_classic_packet[2] - 33;
   628   000178  503C               	movf	(_wii_classic_packet+2)^0,w,c
   629   00017A  0FDF               	addlw	223
   630   00017C  6E02               	movwf	(_classic_ctrl+1)^0,c
   631   00017E                     
   632                           ;main.c: 118:         classic_ctrl.rx_joystick = wii_classic_packet[3] - 33;
   633   00017E  503D               	movf	(_wii_classic_packet+3)^0,w,c
   634   000180  0FDF               	addlw	223
   635   000182  6E03               	movwf	(_classic_ctrl+2)^0,c
   636   000184                     
   637                           ;main.c: 119:         classic_ctrl.ry_joystick = wii_classic_packet[4] - 33;
   638   000184  503E               	movf	(_wii_classic_packet+4)^0,w,c
   639   000186  0FDF               	addlw	223
   640   000188  6E04               	movwf	(_classic_ctrl+3)^0,c
   641   00018A                     
   642                           ;main.c: 120:         classic_ctrl.d_pad = wii_classic_packet[5] - 33;
   643   00018A  503F               	movf	(_wii_classic_packet+5)^0,w,c
   644   00018C  0FDF               	addlw	223
   645   00018E  6E05               	movwf	(_classic_ctrl+4)^0,c
   646   000190                     
   647                           ;main.c: 121:         classic_ctrl.action_buttons = wii_classic_packet[6] - 33;
   648   000190  5040               	movf	(_wii_classic_packet+6)^0,w,c
   649   000192  0FDF               	addlw	223
   650   000194  6E06               	movwf	(_classic_ctrl+5)^0,c
   651   000196                     
   652                           ;main.c: 122:         classic_ctrl.shoulder_plus_minus = wii_classic_packet[7] - 33;
   653   000196  5041               	movf	(_wii_classic_packet+7)^0,w,c
   654   000198  0FDF               	addlw	223
   655   00019A  6E07               	movwf	(_classic_ctrl+6)^0,c
   656                           
   657                           ;main.c: 123:         wii_classic_packet[8] = '\0';
   658   00019C  0E00               	movlw	0
   659   00019E  6E42               	movwf	(_wii_classic_packet+8)^0,c
   660   0001A0                     
   661                           ;main.c: 124:         uart_wr_str(1,wii_classic_packet);
   662   0001A0  0E3A               	movlw	low _wii_classic_packet
   663   0001A2  6E4B               	movwf	uart_wr_str@str^0,c
   664   0001A4  0E00               	movlw	high _wii_classic_packet
   665   0001A6  6E4C               	movwf	(uart_wr_str@str+1)^0,c
   666   0001A8  0E01               	movlw	1
   667   0001AA  EC31  F002         	call	_uart_wr_str
   668   0001AE                     
   669                           ;main.c: 125:         tx1('\r');
   670   0001AE  0E0D               	movlw	13
   671   0001B0  ECCF  F003         	call	_tx1
   672   0001B4  0E7A               	movlw	122
   673   0001B6  6E4A               	movwf	spi_data@tx_data^0,c
   674   0001B8  0E03               	movlw	3
   675   0001BA  EC92  F002         	call	_spi_data
   676   0001BE  0E7A               	movlw	122
   677   0001C0  6E4A               	movwf	spi_data@tx_data^0,c
   678   0001C2  0E00               	movlw	0
   679   0001C4  EC92  F002         	call	_spi_data
   680   0001C8  C001  F04A         	movff	_classic_ctrl,spi_data@tx_data
   681   0001CC  0E03               	movlw	3
   682   0001CE  EC92  F002         	call	_spi_data
   683   0001D2  C001  F04A         	movff	_classic_ctrl,spi_data@tx_data
   684   0001D6  0E00               	movlw	0
   685   0001D8  EC92  F002         	call	_spi_data
   686   0001DC  C002  F04A         	movff	_classic_ctrl+1,spi_data@tx_data
   687   0001E0  0E03               	movlw	3
   688   0001E2  EC92  F002         	call	_spi_data
   689   0001E6  C002  F04A         	movff	_classic_ctrl+1,spi_data@tx_data
   690   0001EA  0E00               	movlw	0
   691   0001EC  EC92  F002         	call	_spi_data
   692   0001F0  C003  F04A         	movff	_classic_ctrl+2,spi_data@tx_data
   693   0001F4  0E03               	movlw	3
   694   0001F6  EC92  F002         	call	_spi_data
   695   0001FA  C003  F04A         	movff	_classic_ctrl+2,spi_data@tx_data
   696   0001FE  0E00               	movlw	0
   697   000200  EC92  F002         	call	_spi_data
   698   000204  C004  F04A         	movff	_classic_ctrl+3,spi_data@tx_data
   699   000208  0E03               	movlw	3
   700   00020A  EC92  F002         	call	_spi_data
   701   00020E  C004  F04A         	movff	_classic_ctrl+3,spi_data@tx_data
   702   000212  0E00               	movlw	0
   703   000214  EC92  F002         	call	_spi_data
   704   000218  0E79               	movlw	121
   705   00021A  6E4A               	movwf	spi_data@tx_data^0,c
   706   00021C  0E03               	movlw	3
   707   00021E  EC92  F002         	call	_spi_data
   708   000222  0E79               	movlw	121
   709   000224  6E4A               	movwf	spi_data@tx_data^0,c
   710   000226  0E00               	movlw	0
   711   000228  EC92  F002         	call	_spi_data
   712   00022C                     
   713                           ;main.c: 143:         act_buttons.a = ((classic_ctrl.action_buttons & 0b00001000) >> 3);
   714   00022C  3806               	swapf	(_classic_ctrl+5)^0,w,c
   715   00022E  46E8               	rlncf	wreg,f,c
   716   000230  0B1F               	andlw	31
   717   000232  0B01               	andlw	1
   718   000234  6E18               	movwf	_act_buttons^0,c
   719   000236                     
   720                           ;main.c: 144:         act_buttons.b = ((classic_ctrl.action_buttons & 0b00000100) >> 2);
   721   000236  4006               	rrncf	(_classic_ctrl+5)^0,w,c
   722   000238  42E8               	rrncf	wreg,f,c
   723   00023A  0B3F               	andlw	63
   724   00023C  0B01               	andlw	1
   725   00023E  6E19               	movwf	(_act_buttons+1)^0,c
   726   000240                     
   727                           ;main.c: 145:         act_buttons.x = ((classic_ctrl.action_buttons & 0b00000010) >> 1);
   728   000240  90D8               	bcf	status,0,c
   729   000242  3006               	rrcf	(_classic_ctrl+5)^0,w,c
   730   000244  0B01               	andlw	1
   731   000246  6E1A               	movwf	(_act_buttons+2)^0,c
   732   000248                     
   733                           ;main.c: 146:         act_buttons.y = ((classic_ctrl.action_buttons & 0b00000001) >> 0);
   734   000248  5006               	movf	(_classic_ctrl+5)^0,w,c
   735   00024A  0B01               	andlw	1
   736   00024C  6E1B               	movwf	(_act_buttons+3)^0,c
   737   00024E                     
   738                           ;main.c: 149:         arrow_buttons.up = ((classic_ctrl.d_pad & 0b00001000) >> 3);
   739   00024E  3805               	swapf	(_classic_ctrl+4)^0,w,c
   740   000250  46E8               	rlncf	wreg,f,c
   741   000252  0B1F               	andlw	31
   742   000254  0B01               	andlw	1
   743   000256  6E14               	movwf	_arrow_buttons^0,c
   744   000258                     
   745                           ;main.c: 150:         arrow_buttons.down = ((classic_ctrl.d_pad & 0b00000100) >> 2);
   746   000258  4005               	rrncf	(_classic_ctrl+4)^0,w,c
   747   00025A  42E8               	rrncf	wreg,f,c
   748   00025C  0B3F               	andlw	63
   749   00025E  0B01               	andlw	1
   750   000260  6E15               	movwf	(_arrow_buttons+1)^0,c
   751   000262                     
   752                           ;main.c: 151:         arrow_buttons.left = ((classic_ctrl.d_pad & 0b00000010) >> 1);
   753   000262  90D8               	bcf	status,0,c
   754   000264  3005               	rrcf	(_classic_ctrl+4)^0,w,c
   755   000266  0B01               	andlw	1
   756   000268  6E16               	movwf	(_arrow_buttons+2)^0,c
   757   00026A                     
   758                           ;main.c: 152:         arrow_buttons.right = ((classic_ctrl.d_pad & 0b00000001) >> 0);
   759   00026A  5005               	movf	(_classic_ctrl+4)^0,w,c
   760   00026C  0B01               	andlw	1
   761   00026E  6E17               	movwf	(_arrow_buttons+3)^0,c
   762   000270                     
   763                           ;main.c: 155:         shoulder_buttons.zl = ((classic_ctrl.shoulder_plus_minus & 0b00100
      +                          000) >> 5);
   764   000270  3807               	swapf	(_classic_ctrl+6)^0,w,c
   765   000272  42E8               	rrncf	wreg,f,c
   766   000274  0B07               	andlw	7
   767   000276  0B01               	andlw	1
   768   000278  6E0E               	movwf	_shoulder_buttons^0,c
   769   00027A                     
   770                           ;main.c: 156:         shoulder_buttons.zr = ((classic_ctrl.shoulder_plus_minus & 0b00010
      +                          000) >> 4);
   771   00027A  3807               	swapf	(_classic_ctrl+6)^0,w,c
   772   00027C  0B0F               	andlw	15
   773   00027E  0B01               	andlw	1
   774   000280  6E0F               	movwf	(_shoulder_buttons+1)^0,c
   775   000282                     
   776                           ;main.c: 157:         shoulder_buttons.lt = ((classic_ctrl.shoulder_plus_minus & 0b00001
      +                          000) >> 3);
   777   000282  3807               	swapf	(_classic_ctrl+6)^0,w,c
   778   000284  46E8               	rlncf	wreg,f,c
   779   000286  0B1F               	andlw	31
   780   000288  0B01               	andlw	1
   781   00028A  6E10               	movwf	(_shoulder_buttons+2)^0,c
   782   00028C                     
   783                           ;main.c: 158:         shoulder_buttons.rt = ((classic_ctrl.shoulder_plus_minus & 0b00000
      +                          100) >> 2);
   784   00028C  4007               	rrncf	(_classic_ctrl+6)^0,w,c
   785   00028E  42E8               	rrncf	wreg,f,c
   786   000290  0B3F               	andlw	63
   787   000292  0B01               	andlw	1
   788   000294  6E11               	movwf	(_shoulder_buttons+3)^0,c
   789   000296                     
   790                           ;main.c: 161:         aux_buttons.minus = ((classic_ctrl.shoulder_plus_minus & 0b0000001
      +                          0) >> 1);
   791   000296  90D8               	bcf	status,0,c
   792   000298  3007               	rrcf	(_classic_ctrl+6)^0,w,c
   793   00029A  0B01               	andlw	1
   794   00029C  6E0C               	movwf	(_aux_buttons+4)^0,c
   795   00029E                     
   796                           ;main.c: 162:         aux_buttons.plus = ((classic_ctrl.shoulder_plus_minus & 0b00000001
      +                          ) >> 0);
   797   00029E  5007               	movf	(_classic_ctrl+6)^0,w,c
   798   0002A0  0B01               	andlw	1
   799   0002A2  6E0D               	movwf	(_aux_buttons+5)^0,c
   800   0002A4                     
   801                           ;main.c: 165:         debouncing_counter++;
   802   0002A4  2A25               	incf	_debouncing_counter^0,f,c
   803   0002A6                     
   804                           ;main.c: 166:         if(debouncing_counter == 0x00)
   805   0002A6  5025               	movf	_debouncing_counter^0,w,c
   806   0002A8  A4D8               	btfss	status,2,c
   807   0002AA  EF59  F001         	goto	u451
   808   0002AE  EF5B  F001         	goto	u450
   809   0002B2                     u451:
   810   0002B2  EF5F  F001         	goto	l1704
   811   0002B6                     u450:
   812   0002B6                     
   813                           ;main.c: 167:         {;main.c: 168:             debouncing_flag = (0x03 << 6);
   814   0002B6  0EC0               	movlw	192
   815   0002B8  6E43               	movwf	_debouncing_flag^0,c
   816                           
   817                           ;main.c: 169:         }
   818   0002BA  EF6B  F001         	goto	l1710
   819   0002BE                     l1704:
   820                           
   821                           ;main.c: 171:         {;main.c: 172:             debouncing_flag = 0x00;
   822   0002BE  0E00               	movlw	0
   823   0002C0  6E43               	movwf	_debouncing_flag^0,c
   824   0002C2                     
   825                           ;main.c: 173:             if(debouncing_counter == 0x5F)
   826   0002C2  0E5F               	movlw	95
   827   0002C4  1825               	xorwf	_debouncing_counter^0,w,c
   828   0002C6  A4D8               	btfss	status,2,c
   829   0002C8  EF68  F001         	goto	u461
   830   0002CC  EF6A  F001         	goto	u460
   831   0002D0                     u461:
   832   0002D0  EF6B  F001         	goto	l1710
   833   0002D4                     u460:
   834   0002D4                     
   835                           ;main.c: 174:             {;main.c: 175:                 debouncing_counter = 0xFF;
   836   0002D4  6825               	setf	_debouncing_counter^0,c
   837   0002D6                     l1710:
   838                           
   839                           ;main.c: 178:         demuxed_controller_signals = (shoulder_buttons.zl << 7) | (shoulde
      +                          r_buttons.zr << 6) | (act_buttons.a << 5) | (act_buttons.b << 4) | (classic_ctrl.d_pad);
   840   0002D6  C019  F050         	movff	_act_buttons+1,??_main
   841   0002DA  3A50               	swapf	??_main^0,f,c
   842   0002DC  0EF0               	movlw	240
   843   0002DE  1650               	andwf	??_main^0,f,c
   844   0002E0  C018  F051         	movff	_act_buttons,??_main+1
   845   0002E4  0E05               	movlw	5
   846   0002E6  6E52               	movwf	(??_main+2)^0,c
   847   0002E8                     u475:
   848   0002E8  90D8               	bcf	status,0,c
   849   0002EA  3651               	rlcf	(??_main+1)^0,f,c
   850   0002EC  2E52               	decfsz	(??_main+2)^0,f,c
   851   0002EE  EF74  F001         	goto	u475
   852   0002F2  C00F  F053         	movff	_shoulder_buttons+1,??_main+3
   853   0002F6  0E06               	movlw	6
   854   0002F8  6E54               	movwf	(??_main+4)^0,c
   855   0002FA                     u485:
   856   0002FA  90D8               	bcf	status,0,c
   857   0002FC  3653               	rlcf	(??_main+3)^0,f,c
   858   0002FE  2E54               	decfsz	(??_main+4)^0,f,c
   859   000300  EF7D  F001         	goto	u485
   860   000304  400E               	rrncf	_shoulder_buttons^0,w,c
   861   000306  0B80               	andlw	128
   862   000308  1053               	iorwf	(??_main+3)^0,w,c
   863   00030A  1051               	iorwf	(??_main+1)^0,w,c
   864   00030C  1050               	iorwf	??_main^0,w,c
   865   00030E  1005               	iorwf	(_classic_ctrl+4)^0,w,c
   866   000310  6E24               	movwf	_demuxed_controller_signals^0,c
   867                           
   868                           ;main.c: 179:         switch(demuxed_controller_signals)
   869   000312  EFBB  F001         	goto	l1732
   870   000316                     l68:
   871                           
   872                           ;main.c: 182:                 servo_controller_tx = 0x00 | debouncing_flag;
   873   000316  C043  F026         	movff	_debouncing_flag,_servo_controller_tx
   874                           
   875                           ;main.c: 183:                 break;
   876   00031A  EFEC  F001         	goto	l1734
   877   00031E                     l1712:
   878                           
   879                           ;main.c: 185:                 servo_controller_tx = 0x01 | debouncing_flag;
   880   00031E  5043               	movf	_debouncing_flag^0,w,c
   881   000320  0901               	iorlw	1
   882   000322  6E26               	movwf	_servo_controller_tx^0,c
   883                           
   884                           ;main.c: 186:                 break;
   885   000324  EFEC  F001         	goto	l1734
   886   000328                     l1714:
   887                           
   888                           ;main.c: 188:                 servo_controller_tx = 0x02 | debouncing_flag;
   889   000328  5043               	movf	_debouncing_flag^0,w,c
   890   00032A  0902               	iorlw	2
   891   00032C  6E26               	movwf	_servo_controller_tx^0,c
   892                           
   893                           ;main.c: 189:                 break;
   894   00032E  EFEC  F001         	goto	l1734
   895   000332                     l1716:
   896                           
   897                           ;main.c: 191:                 servo_controller_tx = 0x03 | debouncing_flag;
   898   000332  5043               	movf	_debouncing_flag^0,w,c
   899   000334  0903               	iorlw	3
   900   000336  6E26               	movwf	_servo_controller_tx^0,c
   901                           
   902                           ;main.c: 192:                 break;
   903   000338  EFEC  F001         	goto	l1734
   904   00033C                     l1718:
   905                           
   906                           ;main.c: 194:                 servo_controller_tx = 0x04 | debouncing_flag;
   907   00033C  5043               	movf	_debouncing_flag^0,w,c
   908   00033E  0904               	iorlw	4
   909   000340  6E26               	movwf	_servo_controller_tx^0,c
   910                           
   911                           ;main.c: 195:                 break;
   912   000342  EFEC  F001         	goto	l1734
   913   000346                     l1720:
   914                           
   915                           ;main.c: 197:                 servo_controller_tx = 0x05 | debouncing_flag;
   916   000346  5043               	movf	_debouncing_flag^0,w,c
   917   000348  0905               	iorlw	5
   918   00034A  6E26               	movwf	_servo_controller_tx^0,c
   919                           
   920                           ;main.c: 198:                 break;
   921   00034C  EFEC  F001         	goto	l1734
   922   000350                     l1722:
   923                           
   924                           ;main.c: 200:                 servo_controller_tx = 0x06 | debouncing_flag;
   925   000350  5043               	movf	_debouncing_flag^0,w,c
   926   000352  0906               	iorlw	6
   927   000354  6E26               	movwf	_servo_controller_tx^0,c
   928                           
   929                           ;main.c: 201:                 break;
   930   000356  EFEC  F001         	goto	l1734
   931   00035A                     l1724:
   932                           
   933                           ;main.c: 203:                 servo_controller_tx = 0x07 | debouncing_flag;
   934   00035A  5043               	movf	_debouncing_flag^0,w,c
   935   00035C  0907               	iorlw	7
   936   00035E  6E26               	movwf	_servo_controller_tx^0,c
   937                           
   938                           ;main.c: 204:                 break;
   939   000360  EFEC  F001         	goto	l1734
   940   000364                     l1726:
   941                           
   942                           ;main.c: 206:                 servo_controller_tx = 0x08 | debouncing_flag;
   943   000364  5043               	movf	_debouncing_flag^0,w,c
   944   000366  0908               	iorlw	8
   945   000368  6E26               	movwf	_servo_controller_tx^0,c
   946                           
   947                           ;main.c: 207:                 break;
   948   00036A  EFEC  F001         	goto	l1734
   949   00036E                     l1728:
   950                           
   951                           ;main.c: 209:                 servo_controller_tx = 0x00;
   952   00036E  0E00               	movlw	0
   953   000370  6E26               	movwf	_servo_controller_tx^0,c
   954                           
   955                           ;main.c: 210:                 break;
   956   000372  EFEC  F001         	goto	l1734
   957   000376                     l1732:
   958   000376  5024               	movf	_demuxed_controller_signals^0,w,c
   959   000378  6E50               	movwf	??_main^0,c
   960   00037A  6A51               	clrf	(??_main+1)^0,c
   961                           
   962                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 1, Range of values is 0 to 0
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte            4     3 (average)
   968                           ;	Chosen strategy is simple_byte
   969   00037C  5051               	movf	(??_main+1)^0,w,c
   970   00037E  0A00               	xorlw	0	; case 0
   971   000380  B4D8               	btfsc	status,2,c
   972   000382  EFC5  F001         	goto	l1842
   973   000386  EFB7  F001         	goto	l1728
   974   00038A                     l1842:
   975                           
   976                           ; Switch size 1, requested type "simple"
   977                           ; Number of cases is 9, Range of values is 0 to 128
   978                           ; switch strategies available:
   979                           ; Name         Instructions Cycles
   980                           ; simple_byte           28    15 (average)
   981                           ;	Chosen strategy is simple_byte
   982   00038A  5050               	movf	??_main^0,w,c
   983   00038C  0A00               	xorlw	0	; case 0
   984   00038E  B4D8               	btfsc	status,2,c
   985   000390  EF8B  F001         	goto	l68
   986   000394  0A01               	xorlw	1	; case 1
   987   000396  B4D8               	btfsc	status,2,c
   988   000398  EF8F  F001         	goto	l1712
   989   00039C  0A03               	xorlw	3	; case 2
   990   00039E  B4D8               	btfsc	status,2,c
   991   0003A0  EF94  F001         	goto	l1714
   992   0003A4  0A06               	xorlw	6	; case 4
   993   0003A6  B4D8               	btfsc	status,2,c
   994   0003A8  EF99  F001         	goto	l1716
   995   0003AC  0A0C               	xorlw	12	; case 8
   996   0003AE  B4D8               	btfsc	status,2,c
   997   0003B0  EF9E  F001         	goto	l1718
   998   0003B4  0A18               	xorlw	24	; case 16
   999   0003B6  B4D8               	btfsc	status,2,c
  1000   0003B8  EFA3  F001         	goto	l1720
  1001   0003BC  0A30               	xorlw	48	; case 32
  1002   0003BE  B4D8               	btfsc	status,2,c
  1003   0003C0  EFA8  F001         	goto	l1722
  1004   0003C4  0A60               	xorlw	96	; case 64
  1005   0003C6  B4D8               	btfsc	status,2,c
  1006   0003C8  EFAD  F001         	goto	l1724
  1007   0003CC  0AC0               	xorlw	192	; case 128
  1008   0003CE  B4D8               	btfsc	status,2,c
  1009   0003D0  EFB2  F001         	goto	l1726
  1010   0003D4  EFB7  F001         	goto	l1728
  1011   0003D8                     l1734:
  1012                           
  1013                           ;main.c: 212:         tx2(servo_controller_tx);
  1014   0003D8  5026               	movf	_servo_controller_tx^0,w,c
  1015   0003DA  ECFB  F003         	call	_tx2
  1016   0003DE                     
  1017                           ;main.c: 216:         LATAbits.LATA0 = act_buttons.a;
  1018   0003DE  B018               	btfsc	_act_buttons^0,0,c
  1019   0003E0  D002               	bra	u495
  1020   0003E2  9089               	bcf	137,0,c	;volatile
  1021   0003E4  D001               	bra	u496
  1022   0003E6                     u495:
  1023   0003E6  8089               	bsf	137,0,c	;volatile
  1024   0003E8                     u496:
  1025   0003E8                     
  1026                           ;main.c: 217:         LATAbits.LATA1 = act_buttons.b;
  1027   0003E8  B019               	btfsc	(_act_buttons+1)^0,0,c
  1028   0003EA  D002               	bra	u505
  1029   0003EC  9289               	bcf	137,1,c	;volatile
  1030   0003EE  D001               	bra	u506
  1031   0003F0                     u505:
  1032   0003F0  8289               	bsf	137,1,c	;volatile
  1033   0003F2                     u506:
  1034   0003F2                     
  1035                           ;main.c: 218:         if((act_buttons.x) & (!act_buttons.y))
  1036   0003F2  501B               	movf	(_act_buttons+3)^0,w,c
  1037   0003F4  B4D8               	btfsc	status,2,c
  1038   0003F6  EFFF  F001         	goto	u511
  1039   0003FA  EF02  F002         	goto	u510
  1040   0003FE                     u511:
  1041   0003FE  0E01               	movlw	1
  1042   000400  EF03  F002         	goto	u520
  1043   000404                     u510:
  1044   000404  0E00               	movlw	0
  1045   000406                     u520:
  1046   000406  141A               	andwf	(_act_buttons+2)^0,w,c
  1047   000408  0900               	iorlw	0
  1048   00040A  B4D8               	btfsc	status,2,c
  1049   00040C  EF0A  F002         	goto	u531
  1050   000410  EF0C  F002         	goto	u530
  1051   000414                     u531:
  1052   000414  EF10  F002         	goto	l1744
  1053   000418                     u530:
  1054   000418                     
  1055                           ;main.c: 219:         {;main.c: 220:             high_beams_on();
  1056   000418  ECA7  F003         	call	_high_beams_on	;wreg free
  1057                           
  1058                           ;main.c: 221:         }
  1059   00041C  EF2B  F002         	goto	l1748
  1060   000420                     l1744:
  1061   000420  501A               	movf	(_act_buttons+2)^0,w,c
  1062   000422  B4D8               	btfsc	status,2,c
  1063   000424  EF16  F002         	goto	u541
  1064   000428  EF19  F002         	goto	u540
  1065   00042C                     u541:
  1066   00042C  0E01               	movlw	1
  1067   00042E  EF1A  F002         	goto	u550
  1068   000432                     u540:
  1069   000432  0E00               	movlw	0
  1070   000434                     u550:
  1071   000434  6E50               	movwf	??_main^0,c
  1072   000436  6A51               	clrf	(??_main+1)^0,c
  1073   000438  501B               	movf	(_act_buttons+3)^0,w,c
  1074   00043A  1650               	andwf	??_main^0,f,c
  1075   00043C  0E00               	movlw	0
  1076   00043E  1651               	andwf	(??_main+1)^0,f,c
  1077   000440  5050               	movf	??_main^0,w,c
  1078   000442  1051               	iorwf	(??_main+1)^0,w,c
  1079   000444  B4D8               	btfsc	status,2,c
  1080   000446  EF27  F002         	goto	u561
  1081   00044A  EF29  F002         	goto	u560
  1082   00044E                     u561:
  1083   00044E  EF2B  F002         	goto	l1748
  1084   000452                     u560:
  1085   000452                     
  1086                           ;main.c: 223:         {;main.c: 224:             high_beams_off();
  1087   000452  ECBB  F003         	call	_high_beams_off	;wreg free
  1088   000456                     l1748:
  1089                           
  1090                           ;main.c: 232:       rx1_overrun_detect_reset();
  1091   000456  ECED  F003         	call	_rx1_overrun_detect_reset	;wreg free
  1092   00045A  EFB9  F000         	goto	l1628
  1093   00045E  EF6F  F000         	goto	start
  1094   000462                     __end_of_main:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _uart_wr_str *****************
  1098 ;; Defined at:
  1099 ;;		line 70 in file "uart.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;  port            1    wreg     unsigned char 
  1102 ;;  str             2    7[COMRAM] PTR unsigned char 
  1103 ;;		 -> instructions3(48), instructions2(39), instructions1(37), text1(16), 
  1104 ;;		 -> wii_classic_packet(9), 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  port            1   11[COMRAM] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;Total ram usage:        5 bytes
  1121 ;; Hardware stack levels used: 1
  1122 ;; Hardware stack levels required when called: 2
  1123 ;; This function calls:
  1124 ;;		_tx1
  1125 ;;		_tx2
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text1
  1132   000462                     __ptext1:
  1133                           	callstack 0
  1134   000462                     _uart_wr_str:
  1135                           	callstack 28
  1136                           
  1137                           ;incstack = 0
  1138                           ;uart_wr_str@port stored from wreg
  1139   000462  6E4F               	movwf	uart_wr_str@port^0,c
  1140   000464                     
  1141                           ;uart.c: 70: void uart_wr_str(uint8_t port, uint8_t *str);uart.c: 71: {;uart.c: 72:     
      +                          switch(port)
  1142   000464  EF79  F002         	goto	l1568
  1143   000468                     l1548:
  1144                           
  1145                           ;uart.c: 76:             {;uart.c: 77:                 tx1(*str++);
  1146   000468  C04B  FFD9         	movff	uart_wr_str@str,fsr2l
  1147   00046C  C04C  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1148   000470  50DF               	movf	indf2,w,c
  1149   000472  ECCF  F003         	call	_tx1
  1150   000476  4A4B               	infsnz	uart_wr_str@str^0,f,c
  1151   000478  2A4C               	incf	(uart_wr_str@str+1)^0,f,c
  1152   00047A                     l1552:
  1153                           
  1154                           ;uart.c: 75:             while(*str != '\0')
  1155   00047A  C04B  FFD9         	movff	uart_wr_str@str,fsr2l
  1156   00047E  C04C  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1157   000482  50DF               	movf	indf2,w,c
  1158   000484  A4D8               	btfss	status,2,c
  1159   000486  EF47  F002         	goto	u411
  1160   00048A  EF49  F002         	goto	u410
  1161   00048E                     u411:
  1162   00048E  EF34  F002         	goto	l1548
  1163   000492                     u410:
  1164   000492  EF8E  F002         	goto	l1570
  1165   000496                     l1554:
  1166                           
  1167                           ;uart.c: 82:             {;uart.c: 83:                 tx2(*str++);
  1168   000496  C04B  FFD9         	movff	uart_wr_str@str,fsr2l
  1169   00049A  C04C  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1170   00049E  50DF               	movf	indf2,w,c
  1171   0004A0  ECFB  F003         	call	_tx2
  1172   0004A4  4A4B               	infsnz	uart_wr_str@str^0,f,c
  1173   0004A6  2A4C               	incf	(uart_wr_str@str+1)^0,f,c
  1174   0004A8                     l1558:
  1175                           
  1176                           ;uart.c: 81:             while(*str != '\0')
  1177   0004A8  C04B  FFD9         	movff	uart_wr_str@str,fsr2l
  1178   0004AC  C04C  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1179   0004B0  50DF               	movf	indf2,w,c
  1180   0004B2  A4D8               	btfss	status,2,c
  1181   0004B4  EF5E  F002         	goto	u421
  1182   0004B8  EF60  F002         	goto	u420
  1183   0004BC                     u421:
  1184   0004BC  EF4B  F002         	goto	l1554
  1185   0004C0                     u420:
  1186   0004C0  EF8E  F002         	goto	l1570
  1187   0004C4                     l1560:
  1188                           
  1189                           ;uart.c: 88:             {;uart.c: 89:                 tx1(*str++);
  1190   0004C4  C04B  FFD9         	movff	uart_wr_str@str,fsr2l
  1191   0004C8  C04C  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1192   0004CC  50DF               	movf	indf2,w,c
  1193   0004CE  ECCF  F003         	call	_tx1
  1194   0004D2  4A4B               	infsnz	uart_wr_str@str^0,f,c
  1195   0004D4  2A4C               	incf	(uart_wr_str@str+1)^0,f,c
  1196   0004D6                     l1564:
  1197                           
  1198                           ;uart.c: 87:             while(*str != '\0')
  1199   0004D6  C04B  FFD9         	movff	uart_wr_str@str,fsr2l
  1200   0004DA  C04C  FFDA         	movff	uart_wr_str@str+1,fsr2h
  1201   0004DE  50DF               	movf	indf2,w,c
  1202   0004E0  A4D8               	btfss	status,2,c
  1203   0004E2  EF75  F002         	goto	u431
  1204   0004E6  EF77  F002         	goto	u430
  1205   0004EA                     u431:
  1206   0004EA  EF62  F002         	goto	l1560
  1207   0004EE                     u430:
  1208   0004EE  EF8E  F002         	goto	l1570
  1209   0004F2                     l1568:
  1210   0004F2  504F               	movf	uart_wr_str@port^0,w,c
  1211   0004F4  6E4D               	movwf	??_uart_wr_str^0,c
  1212   0004F6  6A4E               	clrf	(??_uart_wr_str+1)^0,c
  1213                           
  1214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 1, Range of values is 0 to 0
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            4     3 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221   0004F8  504E               	movf	(??_uart_wr_str+1)^0,w,c
  1222   0004FA  0A00               	xorlw	0	; case 0
  1223   0004FC  B4D8               	btfsc	status,2,c
  1224   0004FE  EF83  F002         	goto	l1844
  1225   000502  EF6B  F002         	goto	l1564
  1226   000506                     l1844:
  1227                           
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 2, Range of values is 1 to 2
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte            7     4 (average)
  1233                           ;	Chosen strategy is simple_byte
  1234   000506  504D               	movf	??_uart_wr_str^0,w,c
  1235   000508  0A01               	xorlw	1	; case 1
  1236   00050A  B4D8               	btfsc	status,2,c
  1237   00050C  EF3D  F002         	goto	l1552
  1238   000510  0A03               	xorlw	3	; case 2
  1239   000512  B4D8               	btfsc	status,2,c
  1240   000514  EF54  F002         	goto	l1558
  1241   000518  EF6B  F002         	goto	l1564
  1242   00051C                     l1570:
  1243                           
  1244                           ;uart.c: 93:             tx1('\0');
  1245   00051C  0E00               	movlw	0
  1246   00051E  ECCF  F003         	call	_tx1
  1247   000522  0012               	return		;funcret
  1248   000524                     __end_of_uart_wr_str:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _tx2 *****************
  1252 ;; Defined at:
  1253 ;;		line 60 in file "uart.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  data2           1    wreg     unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  data2           1    6[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_main
  1278 ;;		_uart_wr_str
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text2
  1283   0007F6                     __ptext2:
  1284                           	callstack 0
  1285   0007F6                     _tx2:
  1286                           	callstack 28
  1287                           
  1288                           ;incstack = 0
  1289                           ;tx2@data2 stored from wreg
  1290   0007F6  6E4A               	movwf	tx2@data2^0,c
  1291   0007F8                     l143:
  1292   0007F8  A8A4               	btfss	164,4,c	;volatile
  1293   0007FA  EF01  F004         	goto	u321
  1294   0007FE  EF03  F004         	goto	u320
  1295   000802                     u321:
  1296   000802  EFFC  F003         	goto	l143
  1297   000806                     u320:
  1298   000806                     
  1299                           ;uart.c: 63:     TXREG2=data2;
  1300   000806  C04A  FF73         	movff	tx2@data2,3955	;volatile
  1301   00080A  0012               	return		;funcret
  1302   00080C                     __end_of_tx2:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _tx1 *****************
  1306 ;; Defined at:
  1307 ;;		line 52 in file "uart.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  data1           1    wreg     unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  data1           1    6[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        1 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 1
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;;		_uart_wr_str
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text3
  1337   00079E                     __ptext3:
  1338                           	callstack 0
  1339   00079E                     _tx1:
  1340                           	callstack 28
  1341                           
  1342                           ;incstack = 0
  1343                           ;tx1@data1 stored from wreg
  1344   00079E  6E4A               	movwf	tx1@data1^0,c
  1345   0007A0                     l137:
  1346   0007A0  A89E               	btfss	158,4,c	;volatile
  1347   0007A2  EFD5  F003         	goto	u311
  1348   0007A6  EFD7  F003         	goto	u310
  1349   0007AA                     u311:
  1350   0007AA  EFD0  F003         	goto	l137
  1351   0007AE                     u310:
  1352   0007AE                     
  1353                           ;uart.c: 55:     TXREG1=data1;
  1354   0007AE  C04A  FFAD         	movff	tx1@data1,4013	;volatile
  1355   0007B2                     
  1356                           ;uart.c: 56:     _delay((unsigned long)((1)*(64000000/4000000.0)));
  1357   0007B2  0E05               	movlw	5
  1358   0007B4                     u607:
  1359   0007B4  2EE8               	decfsz	wreg,f,c
  1360   0007B6  D7FE               	bra	u607
  1361   0007B8  F000               	nop	
  1362   0007BA  0012               	return		;funcret
  1363   0007BC                     __end_of_tx1:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _uart_init *****************
  1367 ;; Defined at:
  1368 ;;		line 17 in file "uart.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;		None
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;Total ram usage:        0 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 1
  1389 ;; This function calls:
  1390 ;;		Nothing
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text4
  1397   0006BC                     __ptext4:
  1398                           	callstack 0
  1399   0006BC                     _uart_init:
  1400                           	callstack 29
  1401   0006BC                     
  1402                           ;uart.c: 19:     TXSTA1bits.BRGH=1;
  1403   0006BC  84AC               	bsf	172,2,c	;volatile
  1404                           
  1405                           ;uart.c: 20:     BAUDCON1bits.BRG16=1;
  1406   0006BE  86B8               	bsf	184,3,c	;volatile
  1407                           
  1408                           ;uart.c: 21:     TXSTA2bits.BRGH=1;
  1409   0006C0  8472               	bsf	114,2,c	;volatile
  1410                           
  1411                           ;uart.c: 22:     BAUDCON2bits.BRG16=1;
  1412   0006C2  8670               	bsf	112,3,c	;volatile
  1413   0006C4                     
  1414                           ;uart.c: 23:     SPBRG1=0x8A;
  1415   0006C4  0E8A               	movlw	138
  1416   0006C6  6EAF               	movwf	175,c	;volatile
  1417                           
  1418                           ;uart.c: 24:     SPBRGH1=0x00;
  1419   0006C8  0E00               	movlw	0
  1420   0006CA  6EB0               	movwf	176,c	;volatile
  1421                           
  1422                           ;uart.c: 27:     SPBRG2=0x8A;
  1423   0006CC  0E8A               	movlw	138
  1424   0006CE  6E75               	movwf	117,c	;volatile
  1425                           
  1426                           ;uart.c: 28:     SPBRGH2=0x00;
  1427   0006D0  0E00               	movlw	0
  1428   0006D2  6E76               	movwf	118,c	;volatile
  1429   0006D4                     
  1430                           ;uart.c: 29:     TRISCbits.RC6=1;
  1431   0006D4  8C94               	bsf	148,6,c	;volatile
  1432   0006D6                     
  1433                           ;uart.c: 30:     TRISCbits.RC7=1;
  1434   0006D6  8E94               	bsf	148,7,c	;volatile
  1435   0006D8                     
  1436                           ;uart.c: 31:     TRISDbits.RD6=1;
  1437   0006D8  8C95               	bsf	149,6,c	;volatile
  1438   0006DA                     
  1439                           ;uart.c: 32:     TRISDbits.RD7=1;
  1440   0006DA  8E95               	bsf	149,7,c	;volatile
  1441   0006DC                     
  1442                           ;uart.c: 33:     TXSTA1bits.SYNC=0;
  1443   0006DC  98AC               	bcf	172,4,c	;volatile
  1444   0006DE                     
  1445                           ;uart.c: 34:     TXSTA2bits.SYNC=0;
  1446   0006DE  9872               	bcf	114,4,c	;volatile
  1447   0006E0                     
  1448                           ;uart.c: 35:     RCSTA1bits.SPEN=1;
  1449   0006E0  8EAB               	bsf	171,7,c	;volatile
  1450   0006E2                     
  1451                           ;uart.c: 36:     RCSTA2bits.SPEN=1;
  1452   0006E2  8E71               	bsf	113,7,c	;volatile
  1453   0006E4                     
  1454                           ;uart.c: 37:     TXSTA1bits.TXEN=1;
  1455   0006E4  8AAC               	bsf	172,5,c	;volatile
  1456   0006E6                     
  1457                           ;uart.c: 38:     TXSTA2bits.TXEN=1;
  1458   0006E6  8A72               	bsf	114,5,c	;volatile
  1459   0006E8                     
  1460                           ;uart.c: 44:     PIE1bits.RC1IE=1;
  1461   0006E8  8A9D               	bsf	157,5,c	;volatile
  1462   0006EA                     
  1463                           ;uart.c: 47:     RCSTA1bits.CREN=1;
  1464   0006EA  88AB               	bsf	171,4,c	;volatile
  1465   0006EC                     
  1466                           ;uart.c: 48:     RCSTA2bits.CREN=1;
  1467   0006EC  8871               	bsf	113,4,c	;volatile
  1468   0006EE  0012               	return		;funcret
  1469   0006F0                     __end_of_uart_init:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _spi_master_init *****************
  1473 ;; Defined at:
  1474 ;;		line 18 in file "spi_master.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text5
  1503   0006F0                     __ptext5:
  1504                           	callstack 0
  1505   0006F0                     _spi_master_init:
  1506                           	callstack 29
  1507   0006F0                     
  1508                           ;spi_master.c: 20:     SSP1ADD= 31;
  1509   0006F0  0E1F               	movlw	31
  1510   0006F2  6EC8               	movwf	200,c	;volatile
  1511   0006F4                     
  1512                           ;spi_master.c: 21:     SSP1STATbits.SMP = 0;
  1513   0006F4  9EC7               	bcf	199,7,c	;volatile
  1514   0006F6                     
  1515                           ;spi_master.c: 22:     SSP1STATbits.CKE = 1;
  1516   0006F6  8CC7               	bsf	199,6,c	;volatile
  1517   0006F8                     
  1518                           ;spi_master.c: 23:     SSP1CON1bits.CKP = 0;
  1519   0006F8  98C6               	bcf	198,4,c	;volatile
  1520                           
  1521                           ;spi_master.c: 24:     SSP1CON1bits.SSPM = 0x0A;
  1522   0006FA  50C6               	movf	198,w,c	;volatile
  1523   0006FC  0BF0               	andlw	-16
  1524   0006FE  090A               	iorlw	10
  1525   000700  6EC6               	movwf	198,c	;volatile
  1526                           
  1527                           ;spi_master.c: 25:     ADCON0=0x00;
  1528   000702  0E00               	movlw	0
  1529   000704  6EC2               	movwf	194,c	;volatile
  1530   000706                     
  1531                           ;spi_master.c: 26:     TRISBbits.RB2=0;
  1532   000706  9493               	bcf	147,2,c	;volatile
  1533   000708                     
  1534                           ;spi_master.c: 27:     TRISBbits.RB3=0;
  1535   000708  9693               	bcf	147,3,c	;volatile
  1536   00070A                     
  1537                           ;spi_master.c: 28:     TRISBbits.RB4=0;
  1538   00070A  9893               	bcf	147,4,c	;volatile
  1539   00070C                     
  1540                           ;spi_master.c: 29:     TRISBbits.RB5=0;
  1541   00070C  9A93               	bcf	147,5,c	;volatile
  1542   00070E                     
  1543                           ;spi_master.c: 30:     TRISCbits.RC3=0;
  1544   00070E  9694               	bcf	148,3,c	;volatile
  1545   000710                     
  1546                           ;spi_master.c: 31:     TRISCbits.RC4=1;
  1547   000710  8894               	bsf	148,4,c	;volatile
  1548   000712                     
  1549                           ;spi_master.c: 32:     TRISCbits.RC5=0;
  1550   000712  9A94               	bcf	148,5,c	;volatile
  1551   000714                     
  1552                           ;spi_master.c: 33:     LATBbits.LATB2=1;
  1553   000714  848A               	bsf	138,2,c	;volatile
  1554   000716                     
  1555                           ;spi_master.c: 34:     LATBbits.LATB3=1;
  1556   000716  868A               	bsf	138,3,c	;volatile
  1557   000718                     
  1558                           ;spi_master.c: 35:     LATBbits.LATB4=1;
  1559   000718  888A               	bsf	138,4,c	;volatile
  1560   00071A                     
  1561                           ;spi_master.c: 36:     LATBbits.LATB5=1;
  1562   00071A  8A8A               	bsf	138,5,c	;volatile
  1563   00071C                     
  1564                           ;spi_master.c: 37:     SSP1CON1bits.SSPEN = 1;
  1565   00071C  8AC6               	bsf	198,5,c	;volatile
  1566   00071E  0012               	return		;funcret
  1567   000720                     __end_of_spi_master_init:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _spi_data *****************
  1571 ;; Defined at:
  1572 ;;		line 46 in file "spi_master.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  device          1    wreg     unsigned char 
  1575 ;;  tx_data         1    6[COMRAM] unsigned char 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  device          1    8[COMRAM] unsigned char 
  1578 ;;  data_read       1    7[COMRAM] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      unsigned char 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1588 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;Total ram usage:        3 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 1
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text6
  1603   000524                     __ptext6:
  1604                           	callstack 0
  1605   000524                     _spi_data:
  1606                           	callstack 29
  1607                           
  1608                           ;incstack = 0
  1609                           ;spi_data@device stored from wreg
  1610   000524  6E4C               	movwf	spi_data@device^0,c
  1611   000526                     
  1612                           ;spi_master.c: 46: unsigned char spi_data(unsigned char device, unsigned char tx_data);s
      +                          pi_master.c: 47: {;spi_master.c: 48:     char data_read;;spi_master.c: 49:     if(device
      +                          ==0)
  1613   000526  504C               	movf	spi_data@device^0,w,c
  1614   000528  A4D8               	btfss	status,2,c
  1615   00052A  EF99  F002         	goto	u331
  1616   00052E  EF9B  F002         	goto	u330
  1617   000532                     u331:
  1618   000532  EFAA  F002         	goto	l1530
  1619   000536                     u330:
  1620   000536                     
  1621                           ;spi_master.c: 50:     {;spi_master.c: 51:         LATBbits.LATB2=0;
  1622   000536  948A               	bcf	138,2,c	;volatile
  1623                           
  1624                           ;spi_master.c: 52:         SSP1BUF=tx_data;
  1625   000538  C04A  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1626   00053C                     l205:
  1627   00053C  A0C7               	btfss	199,0,c	;volatile
  1628   00053E  EFA3  F002         	goto	u341
  1629   000542  EFA5  F002         	goto	u340
  1630   000546                     u341:
  1631   000546  EF9E  F002         	goto	l205
  1632   00054A                     u340:
  1633   00054A                     
  1634                           ;spi_master.c: 54:         LATBbits.LATB2=1;
  1635   00054A  848A               	bsf	138,2,c	;volatile
  1636                           
  1637                           ;spi_master.c: 55:         data_read=SSP1BUF;
  1638   00054C  CFC9 F04B          	movff	4041,spi_data@data_read	;volatile
  1639                           
  1640                           ;spi_master.c: 56:     }
  1641   000550  EFF1  F002         	goto	l1542
  1642   000554                     l1530:
  1643   000554  044C               	decf	spi_data@device^0,w,c
  1644   000556  A4D8               	btfss	status,2,c
  1645   000558  EFB0  F002         	goto	u351
  1646   00055C  EFB2  F002         	goto	u350
  1647   000560                     u351:
  1648   000560  EFC1  F002         	goto	l1534
  1649   000564                     u350:
  1650   000564                     
  1651                           ;spi_master.c: 59:     {;spi_master.c: 60:         LATBbits.LATB3=0;
  1652   000564  968A               	bcf	138,3,c	;volatile
  1653                           
  1654                           ;spi_master.c: 61:         SSP1BUF=tx_data;
  1655   000566  C04A  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1656   00056A                     l210:
  1657   00056A  A0C7               	btfss	199,0,c	;volatile
  1658   00056C  EFBA  F002         	goto	u361
  1659   000570  EFBC  F002         	goto	u360
  1660   000574                     u361:
  1661   000574  EFB5  F002         	goto	l210
  1662   000578                     u360:
  1663   000578                     
  1664                           ;spi_master.c: 63:         LATBbits.LATB3=1;
  1665   000578  868A               	bsf	138,3,c	;volatile
  1666                           
  1667                           ;spi_master.c: 64:         data_read=SSP1BUF;
  1668   00057A  CFC9 F04B          	movff	4041,spi_data@data_read	;volatile
  1669                           
  1670                           ;spi_master.c: 65:     }
  1671   00057E  EFF1  F002         	goto	l1542
  1672   000582                     l1534:
  1673   000582  0E02               	movlw	2
  1674   000584  184C               	xorwf	spi_data@device^0,w,c
  1675   000586  A4D8               	btfss	status,2,c
  1676   000588  EFC8  F002         	goto	u371
  1677   00058C  EFCA  F002         	goto	u370
  1678   000590                     u371:
  1679   000590  EFD9  F002         	goto	l1538
  1680   000594                     u370:
  1681   000594                     
  1682                           ;spi_master.c: 68:     {;spi_master.c: 69:         LATBbits.LATB4=0;
  1683   000594  988A               	bcf	138,4,c	;volatile
  1684                           
  1685                           ;spi_master.c: 70:         SSP1BUF=tx_data;
  1686   000596  C04A  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1687   00059A                     l215:
  1688   00059A  A0C7               	btfss	199,0,c	;volatile
  1689   00059C  EFD2  F002         	goto	u381
  1690   0005A0  EFD4  F002         	goto	u380
  1691   0005A4                     u381:
  1692   0005A4  EFCD  F002         	goto	l215
  1693   0005A8                     u380:
  1694   0005A8                     
  1695                           ;spi_master.c: 72:         LATBbits.LATB4=1;
  1696   0005A8  888A               	bsf	138,4,c	;volatile
  1697                           
  1698                           ;spi_master.c: 73:         data_read=SSP1BUF;
  1699   0005AA  CFC9 F04B          	movff	4041,spi_data@data_read	;volatile
  1700                           
  1701                           ;spi_master.c: 74:     }
  1702   0005AE  EFF1  F002         	goto	l1542
  1703   0005B2                     l1538:
  1704   0005B2  0E03               	movlw	3
  1705   0005B4  184C               	xorwf	spi_data@device^0,w,c
  1706   0005B6  A4D8               	btfss	status,2,c
  1707   0005B8  EFE0  F002         	goto	u391
  1708   0005BC  EFE2  F002         	goto	u390
  1709   0005C0                     u391:
  1710   0005C0  EFF1  F002         	goto	l213
  1711   0005C4                     u390:
  1712   0005C4                     
  1713                           ;spi_master.c: 77:     {;spi_master.c: 78:         LATBbits.LATB5=0;
  1714   0005C4  9A8A               	bcf	138,5,c	;volatile
  1715                           
  1716                           ;spi_master.c: 79:         SSP1BUF=tx_data;
  1717   0005C6  C04A  FFC9         	movff	spi_data@tx_data,4041	;volatile
  1718   0005CA                     l220:
  1719   0005CA  A0C7               	btfss	199,0,c	;volatile
  1720   0005CC  EFEA  F002         	goto	u401
  1721   0005D0  EFEC  F002         	goto	u400
  1722   0005D4                     u401:
  1723   0005D4  EFE5  F002         	goto	l220
  1724   0005D8                     u400:
  1725   0005D8                     
  1726                           ;spi_master.c: 81:         LATBbits.LATB5=1;
  1727   0005D8  8A8A               	bsf	138,5,c	;volatile
  1728                           
  1729                           ;spi_master.c: 82:         data_read=SSP1BUF;
  1730   0005DA  CFC9 F04B          	movff	4041,spi_data@data_read	;volatile
  1731   0005DE  EFF1  F002         	goto	l1542
  1732   0005E2                     l213:
  1733   0005E2                     l1542:
  1734                           
  1735                           ;spi_master.c: 85:     return data_read;
  1736   0005E2  504B               	movf	spi_data@data_read^0,w,c
  1737   0005E4  0012               	return		;funcret
  1738   0005E6                     __end_of_spi_data:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _rx1_overrun_detect_reset *****************
  1742 ;; Defined at:
  1743 ;;		line 98 in file "uart.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text7
  1772   0007DA                     __ptext7:
  1773                           	callstack 0
  1774   0007DA                     _rx1_overrun_detect_reset:
  1775                           	callstack 29
  1776   0007DA                     
  1777                           ;uart.c: 100:           if(RCSTA1bits.OERR)
  1778   0007DA  A2AB               	btfss	171,1,c	;volatile
  1779   0007DC  EFF2  F003         	goto	u441
  1780   0007E0  EFF4  F003         	goto	u440
  1781   0007E4                     u441:
  1782   0007E4  EFFA  F003         	goto	l167
  1783   0007E8                     u440:
  1784   0007E8                     
  1785                           ;uart.c: 101:           {;uart.c: 102:               RCSTA1bits.CREN = 0;
  1786   0007E8  98AB               	bcf	171,4,c	;volatile
  1787   0007EA                     
  1788                           ;uart.c: 103:               _delay((unsigned long)((4)*(64000000/4000000.0)));
  1789   0007EA  0E15               	movlw	21
  1790   0007EC                     u617:
  1791   0007EC  2EE8               	decfsz	wreg,f,c
  1792   0007EE  D7FE               	bra	u617
  1793   0007F0  F000               	nop	
  1794   0007F2                     
  1795                           ;uart.c: 104:               RCSTA1bits.CREN = 1;
  1796   0007F2  88AB               	bsf	171,4,c	;volatile
  1797   0007F4                     l167:
  1798   0007F4  0012               	return		;funcret
  1799   0007F6                     __end_of_rx1_overrun_detect_reset:
  1800                           	callstack 0
  1801                           
  1802 ;; *************** function _high_beams_on *****************
  1803 ;; Defined at:
  1804 ;;		line 30 in file "gpio.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, status,2
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;Total ram usage:        1 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 1
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text8
  1833   00074E                     __ptext8:
  1834                           	callstack 0
  1835   00074E                     _high_beams_on:
  1836                           	callstack 29
  1837   00074E                     
  1838                           ;gpio.c: 32:     LATD=0b00000010;
  1839   00074E  0E02               	movlw	2
  1840   000750  6E8C               	movwf	140,c	;volatile
  1841   000752                     
  1842                           ;gpio.c: 33:     _delay((unsigned long)((10)*(64000000/4000.0)));
  1843   000752  0ED0               	movlw	208
  1844   000754  6E4A               	movwf	??_high_beams_on^0,c
  1845   000756  0ECA               	movlw	202
  1846   000758                     u627:
  1847   000758  2EE8               	decfsz	wreg,f,c
  1848   00075A  D7FE               	bra	u627
  1849   00075C  2E4A               	decfsz	??_high_beams_on^0,f,c
  1850   00075E  D7FC               	bra	u627
  1851   000760                     
  1852                           ;gpio.c: 34:     _delay((unsigned long)((5)*(64000000/4000.0)));
  1853   000760  0E68               	movlw	104
  1854   000762  6E4A               	movwf	??_high_beams_on^0,c
  1855   000764  0EE4               	movlw	228
  1856   000766                     u637:
  1857   000766  2EE8               	decfsz	wreg,f,c
  1858   000768  D7FE               	bra	u637
  1859   00076A  2E4A               	decfsz	??_high_beams_on^0,f,c
  1860   00076C  D7FC               	bra	u637
  1861   00076E  D000               	nop2	
  1862                           
  1863                           ;gpio.c: 35:     LATD=0;
  1864   000770  0E00               	movlw	0
  1865   000772  6E8C               	movwf	140,c	;volatile
  1866   000774  0012               	return		;funcret
  1867   000776                     __end_of_high_beams_on:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _gpio_init *****************
  1871 ;; Defined at:
  1872 ;;		line 12 in file "gpio.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;		None
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;Total ram usage:        0 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; Hardware stack levels required when called: 2
  1893 ;; This function calls:
  1894 ;;		_debug_leds_off
  1895 ;;		_high_beams_off
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text9
  1902   000720                     __ptext9:
  1903                           	callstack 0
  1904   000720                     _gpio_init:
  1905                           	callstack 28
  1906   000720                     
  1907                           ;gpio.c: 14:     ANSELA=0;
  1908   000720  0E00               	movlw	0
  1909   000722  010F               	movlb	15	; () banked
  1910   000724  6F38               	movwf	56,b	;volatile
  1911                           
  1912                           ;gpio.c: 15:     ANSELB=0;
  1913   000726  0E00               	movlw	0
  1914   000728  6F39               	movwf	57,b	;volatile
  1915                           
  1916                           ;gpio.c: 16:     ANSELC=0;
  1917   00072A  0E00               	movlw	0
  1918   00072C  6F3A               	movwf	58,b	;volatile
  1919                           
  1920                           ;gpio.c: 17:     ANSELD=0;
  1921   00072E  0E00               	movlw	0
  1922   000730  6F3B               	movwf	59,b	;volatile
  1923                           
  1924                           ;gpio.c: 18:     ANSELE=0;
  1925   000732  0E00               	movlw	0
  1926   000734  6F3C               	movwf	60,b	;volatile
  1927   000736                     
  1928                           ; BSR set to: 15
  1929                           ;gpio.c: 19:    CM1CON0bits.C1ON=0;
  1930   000736  9E79               	bcf	121,7,c	;volatile
  1931   000738                     
  1932                           ; BSR set to: 15
  1933                           ;gpio.c: 20:    CM2CON0bits.C2ON=0;
  1934   000738  9E78               	bcf	120,7,c	;volatile
  1935   00073A                     
  1936                           ; BSR set to: 15
  1937                           ;gpio.c: 21:    TRISAbits.TRISA0 = 0;
  1938   00073A  9092               	bcf	146,0,c	;volatile
  1939   00073C                     
  1940                           ; BSR set to: 15
  1941                           ;gpio.c: 22:    TRISAbits.TRISA1 = 0;
  1942   00073C  9292               	bcf	146,1,c	;volatile
  1943   00073E                     
  1944                           ; BSR set to: 15
  1945                           ;gpio.c: 23:    TRISAbits.TRISA2 = 0;
  1946   00073E  9492               	bcf	146,2,c	;volatile
  1947   000740                     
  1948                           ; BSR set to: 15
  1949                           ;gpio.c: 24:    TRISD &= 0xFC;
  1950   000740  0EFC               	movlw	252
  1951   000742  1695               	andwf	149,f,c	;volatile
  1952   000744                     
  1953                           ; BSR set to: 15
  1954                           ;gpio.c: 25:    debug_leds_off();
  1955   000744  EC06  F004         	call	_debug_leds_off	;wreg free
  1956                           
  1957                           ;gpio.c: 26:    high_beams_off();
  1958   000748  ECBB  F003         	call	_high_beams_off	;wreg free
  1959   00074C  0012               	return		;funcret
  1960   00074E                     __end_of_gpio_init:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _high_beams_off *****************
  1964 ;; Defined at:
  1965 ;;		line 39 in file "gpio.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;Total ram usage:        1 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 1
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;;		_gpio_init
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text10
  1995   000776                     __ptext10:
  1996                           	callstack 0
  1997   000776                     _high_beams_off:
  1998                           	callstack 29
  1999   000776                     
  2000                           ;gpio.c: 41:     LATD = 0b00000001;
  2001   000776  0E01               	movlw	1
  2002   000778  6E8C               	movwf	140,c	;volatile
  2003   00077A                     
  2004                           ;gpio.c: 42:     _delay((unsigned long)((10)*(64000000/4000.0)));
  2005   00077A  0ED0               	movlw	208
  2006   00077C  6E4A               	movwf	??_high_beams_off^0,c
  2007   00077E  0ECA               	movlw	202
  2008   000780                     u647:
  2009   000780  2EE8               	decfsz	wreg,f,c
  2010   000782  D7FE               	bra	u647
  2011   000784  2E4A               	decfsz	??_high_beams_off^0,f,c
  2012   000786  D7FC               	bra	u647
  2013   000788                     
  2014                           ;gpio.c: 43:     _delay((unsigned long)((5)*(64000000/4000.0)));
  2015   000788  0E68               	movlw	104
  2016   00078A  6E4A               	movwf	??_high_beams_off^0,c
  2017   00078C  0EE4               	movlw	228
  2018   00078E                     u657:
  2019   00078E  2EE8               	decfsz	wreg,f,c
  2020   000790  D7FE               	bra	u657
  2021   000792  2E4A               	decfsz	??_high_beams_off^0,f,c
  2022   000794  D7FC               	bra	u657
  2023   000796  D000               	nop2	
  2024                           
  2025                           ;gpio.c: 44:     LATD=0;
  2026   000798  0E00               	movlw	0
  2027   00079A  6E8C               	movwf	140,c	;volatile
  2028   00079C  0012               	return		;funcret
  2029   00079E                     __end_of_high_beams_off:
  2030                           	callstack 0
  2031                           
  2032 ;; *************** function _debug_leds_off *****************
  2033 ;; Defined at:
  2034 ;;		line 54 in file "gpio.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;		None
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  1    wreg      void 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;Total ram usage:        0 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_gpio_init
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text11
  2063   00080C                     __ptext11:
  2064                           	callstack 0
  2065   00080C                     _debug_leds_off:
  2066                           	callstack 28
  2067   00080C                     
  2068                           ;gpio.c: 56:    LATA &= 0xF8;
  2069   00080C  0EF8               	movlw	248
  2070   00080E  1689               	andwf	137,f,c	;volatile
  2071   000810  0012               	return		;funcret
  2072   000812                     __end_of_debug_leds_off:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _UART_ISR *****************
  2076 ;; Defined at:
  2077 ;;		line 180 in file "uart.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;Total ram usage:        6 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		Interrupt level 2
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           	psect	intcode
  2105   000008                     __pintcode:
  2106                           	callstack 0
  2107   000008                     _UART_ISR:
  2108                           	callstack 28
  2109                           
  2110                           ;incstack = 0
  2111   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2112   00000A  CFE1 F046          	movff	fsr1l,??_UART_ISR+2
  2113   00000E  CFE2 F047          	movff	fsr1h,??_UART_ISR+3
  2114   000012  CFD9 F048          	movff	fsr2l,??_UART_ISR+4
  2115   000016  CFDA F049          	movff	fsr2h,??_UART_ISR+5
  2116   00001A                     
  2117                           ;uart.c: 182:     if(PIR1bits.RC1IF)
  2118   00001A  AA9E               	btfss	158,5,c	;volatile
  2119   00001C  EF12  F000         	goto	i2u57_41
  2120   000020  EF14  F000         	goto	i2u57_40
  2121   000024                     i2u57_41:
  2122   000024  EF64  F000         	goto	i2l172
  2123   000028                     i2u57_40:
  2124   000028                     
  2125                           ;uart.c: 183:     {;uart.c: 184:         rx_char=RCREG1;
  2126   000028  CFAE F023          	movff	4014,_rx_char	;volatile
  2127                           
  2128                           ;uart.c: 185:         PIR1bits.RC1IF=0;
  2129   00002C  9A9E               	bcf	158,5,c	;volatile
  2130   00002E                     
  2131                           ;uart.c: 186:         if(rx_char == 'z')
  2132   00002E  0E7A               	movlw	122
  2133   000030  1823               	xorwf	_rx_char^0,w,c	;volatile
  2134   000032  A4D8               	btfss	status,2,c
  2135   000034  EF1E  F000         	goto	i2u58_41
  2136   000038  EF20  F000         	goto	i2u58_40
  2137   00003C                     i2u58_41:
  2138   00003C  EF24  F000         	goto	i2l1762
  2139   000040                     i2u58_40:
  2140   000040                     
  2141                           ;uart.c: 187:         {;uart.c: 188:             recording_on = 1;
  2142   000040  0E01               	movlw	1
  2143   000042  6E22               	movwf	_recording_on^0,c	;volatile
  2144                           
  2145                           ;uart.c: 189:         }
  2146   000044  EF4F  F000         	goto	i2l1776
  2147   000048                     i2l1762:
  2148   000048  0E79               	movlw	121
  2149   00004A  1823               	xorwf	_rx_char^0,w,c	;volatile
  2150   00004C  A4D8               	btfss	status,2,c
  2151   00004E  EF2B  F000         	goto	i2u59_41
  2152   000052  EF2D  F000         	goto	i2u59_40
  2153   000056                     i2u59_41:
  2154   000056  EF31  F000         	goto	i2l174
  2155   00005A                     i2u59_40:
  2156   00005A                     
  2157                           ;uart.c: 191:         {;uart.c: 192:             recording_on = 0;
  2158   00005A  0E00               	movlw	0
  2159   00005C  6E22               	movwf	_recording_on^0,c	;volatile
  2160                           
  2161                           ;uart.c: 193:         }
  2162   00005E  EF4F  F000         	goto	i2l1776
  2163   000062                     i2l174:
  2164                           
  2165                           ;uart.c: 199:         switch (recording_on)
  2166   000062  EF4F  F000         	goto	i2l1776
  2167   000066                     i2l1766:
  2168                           
  2169                           ;uart.c: 202:                 rx_str_interrupt = &wii_classic_packet;
  2170   000066  0E3A               	movlw	low _wii_classic_packet
  2171   000068  6E55               	movwf	_rx_str_interrupt^0,c
  2172   00006A  0E00               	movlw	high _wii_classic_packet
  2173   00006C  6E56               	movwf	(_rx_str_interrupt+1)^0,c
  2174                           
  2175                           ;uart.c: 203:                 break;
  2176   00006E  EF64  F000         	goto	i2l172
  2177   000072                     i2l1768:
  2178                           
  2179                           ;uart.c: 205:                 *rx_str_interrupt++ = rx_char;
  2180   000072  C055  FFD9         	movff	_rx_str_interrupt,fsr2l
  2181   000076  C056  FFDA         	movff	_rx_str_interrupt+1,fsr2h
  2182   00007A  C023  FFDF         	movff	_rx_char,indf2	;volatile
  2183   00007E  4A55               	infsnz	_rx_str_interrupt^0,f,c
  2184   000080  2A56               	incf	(_rx_str_interrupt+1)^0,f,c
  2185                           
  2186                           ;uart.c: 206:                 break;
  2187   000082  EF64  F000         	goto	i2l172
  2188   000086                     i2l1772:
  2189                           
  2190                           ;uart.c: 208:                 *rx_str_interrupt = *rx_str_interrupt;
  2191   000086  C055  FFD9         	movff	_rx_str_interrupt,fsr2l
  2192   00008A  C056  FFDA         	movff	_rx_str_interrupt+1,fsr2h
  2193   00008E  C055  FFE1         	movff	_rx_str_interrupt,fsr1l
  2194   000092  C056  FFE2         	movff	_rx_str_interrupt+1,fsr1h
  2195   000096  CFDF FFE7          	movff	indf2,indf1
  2196                           
  2197                           ;uart.c: 209:                 break;
  2198   00009A  EF64  F000         	goto	i2l172
  2199   00009E                     i2l1776:
  2200   00009E  5022               	movf	_recording_on^0,w,c	;volatile
  2201   0000A0  6E44               	movwf	??_UART_ISR^0,c
  2202   0000A2  6A45               	clrf	(??_UART_ISR+1)^0,c
  2203                           
  2204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2205                           ; Switch size 1, requested type "simple"
  2206                           ; Number of cases is 1, Range of values is 0 to 0
  2207                           ; switch strategies available:
  2208                           ; Name         Instructions Cycles
  2209                           ; simple_byte            4     3 (average)
  2210                           ;	Chosen strategy is simple_byte
  2211   0000A4  5045               	movf	(??_UART_ISR+1)^0,w,c
  2212   0000A6  0A00               	xorlw	0	; case 0
  2213   0000A8  B4D8               	btfsc	status,2,c
  2214   0000AA  EF59  F000         	goto	i2l1846
  2215   0000AE  EF43  F000         	goto	i2l1772
  2216   0000B2                     i2l1846:
  2217                           
  2218                           ; Switch size 1, requested type "simple"
  2219                           ; Number of cases is 2, Range of values is 0 to 1
  2220                           ; switch strategies available:
  2221                           ; Name         Instructions Cycles
  2222                           ; simple_byte            7     4 (average)
  2223                           ;	Chosen strategy is simple_byte
  2224   0000B2  5044               	movf	??_UART_ISR^0,w,c
  2225   0000B4  0A00               	xorlw	0	; case 0
  2226   0000B6  B4D8               	btfsc	status,2,c
  2227   0000B8  EF33  F000         	goto	i2l1766
  2228   0000BC  0A01               	xorlw	1	; case 1
  2229   0000BE  B4D8               	btfsc	status,2,c
  2230   0000C0  EF39  F000         	goto	i2l1768
  2231   0000C4  EF43  F000         	goto	i2l1772
  2232   0000C8                     i2l172:
  2233                           
  2234                           ;uart.c: 213:     PIR1bits.RC1IF = 0;
  2235   0000C8  9A9E               	bcf	158,5,c	;volatile
  2236   0000CA  C049  FFDA         	movff	??_UART_ISR+5,fsr2h
  2237   0000CE  C048  FFD9         	movff	??_UART_ISR+4,fsr2l
  2238   0000D2  C047  FFE2         	movff	??_UART_ISR+3,fsr1h
  2239   0000D6  C046  FFE1         	movff	??_UART_ISR+2,fsr1l
  2240   0000DA  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2241   0000DC  0011               	retfie		f
  2242   0000DE                     __end_of_UART_ISR:
  2243                           	callstack 0
  2244   000000                     
  2245                           	psect	rparam
  2246   000000                     
  2247                           	psect	temp
  2248   000057                     btemp:
  2249                           	callstack 0
  2250   000057                     	ds	1
  2251   000000                     int$flags	set	btemp
  2252   000000                     wtemp8	set	btemp+1
  2253   000000                     ttemp5	set	btemp+1
  2254   000000                     ttemp6	set	btemp+4
  2255   000000                     ttemp7	set	btemp+8
  2256                           
  2257                           	psect	idloc
  2258                           
  2259                           ;Config register IDLOC0 @ 0x200000
  2260                           ;	unspecified, using default values
  2261   200000                     	org	2097152
  2262   200000  FF                 	db	255
  2263                           
  2264                           ;Config register IDLOC1 @ 0x200001
  2265                           ;	unspecified, using default values
  2266   200001                     	org	2097153
  2267   200001  FF                 	db	255
  2268                           
  2269                           ;Config register IDLOC2 @ 0x200002
  2270                           ;	unspecified, using default values
  2271   200002                     	org	2097154
  2272   200002  FF                 	db	255
  2273                           
  2274                           ;Config register IDLOC3 @ 0x200003
  2275                           ;	unspecified, using default values
  2276   200003                     	org	2097155
  2277   200003  FF                 	db	255
  2278                           
  2279                           ;Config register IDLOC4 @ 0x200004
  2280                           ;	unspecified, using default values
  2281   200004                     	org	2097156
  2282   200004  FF                 	db	255
  2283                           
  2284                           ;Config register IDLOC5 @ 0x200005
  2285                           ;	unspecified, using default values
  2286   200005                     	org	2097157
  2287   200005  FF                 	db	255
  2288                           
  2289                           ;Config register IDLOC6 @ 0x200006
  2290                           ;	unspecified, using default values
  2291   200006                     	org	2097158
  2292   200006  FF                 	db	255
  2293                           
  2294                           ;Config register IDLOC7 @ 0x200007
  2295                           ;	unspecified, using default values
  2296   200007                     	org	2097159
  2297   200007  FF                 	db	255
  2298                           
  2299                           	psect	config
  2300                           
  2301                           ; Padding undefined space
  2302   300000                     	org	3145728
  2303   300000  FF                 	db	255
  2304                           
  2305                           ;Config register CONFIG1H @ 0x300001
  2306                           ;	Oscillator Selection bits
  2307                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
  2308                           ;	4X PLL Enable
  2309                           ;	PLLCFG = ON, Oscillator multiplied by 4
  2310                           ;	Primary clock enable bit
  2311                           ;	PRICLKEN = ON, Primary clock is always enabled
  2312                           ;	Fail-Safe Clock Monitor Enable bit
  2313                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2314                           ;	Internal/External Oscillator Switchover bit
  2315                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2316   300001                     	org	3145729
  2317   300001  32                 	db	50
  2318                           
  2319                           ;Config register CONFIG2L @ 0x300002
  2320                           ;	Power-up Timer Enable bit
  2321                           ;	PWRTEN = OFF, Power up timer disabled
  2322                           ;	Brown-out Reset Enable bits
  2323                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2324                           ;	Brown Out Reset Voltage bits
  2325                           ;	BORV = 0x3, unprogrammed default
  2326   300002                     	org	3145730
  2327   300002  19                 	db	25
  2328                           
  2329                           ;Config register CONFIG2H @ 0x300003
  2330                           ;	Watchdog Timer Enable bits
  2331                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  2332                           ;	Watchdog Timer Postscale Select bits
  2333                           ;	WDTPS = 0xF, unprogrammed default
  2334   300003                     	org	3145731
  2335   300003  3C                 	db	60
  2336                           
  2337                           ; Padding undefined space
  2338   300004                     	org	3145732
  2339   300004  FF                 	db	255
  2340                           
  2341                           ;Config register CONFIG3H @ 0x300005
  2342                           ;	CCP2 MUX bit
  2343                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  2344                           ;	PORTB A/D Enable bit
  2345                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  2346                           ;	P3A/CCP3 Mux bit
  2347                           ;	CCP3MX = PORTE0, P3A/CCP3 input/output is mulitplexed with RE0
  2348                           ;	HFINTOSC Fast Start-up
  2349                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  2350                           ;	Timer3 Clock input mux bit
  2351                           ;	T3CMX = PORTC0, T3CKI is on RC0
  2352                           ;	ECCP2 B output mux bit
  2353                           ;	P2BMX = PORTC0, P2B is on RC0
  2354                           ;	MCLR Pin Enable bit
  2355                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  2356   300005                     	org	3145733
  2357   300005  91                 	db	145
  2358                           
  2359                           ;Config register CONFIG4L @ 0x300006
  2360                           ;	Stack Full/Underflow Reset Enable bit
  2361                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2362                           ;	Single-Supply ICSP Enable bit
  2363                           ;	LVP = OFF, Single-Supply ICSP disabled
  2364                           ;	Extended Instruction Set Enable bit
  2365                           ;	XINST = 0x0, unprogrammed default
  2366                           ;	Background Debug
  2367                           ;	DEBUG = OFF, Disabled
  2368   300006                     	org	3145734
  2369   300006  81                 	db	129
  2370                           
  2371                           ; Padding undefined space
  2372   300007                     	org	3145735
  2373   300007  FF                 	db	255
  2374                           
  2375                           ;Config register CONFIG5L @ 0x300008
  2376                           ;	Code Protection Block 0
  2377                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2378                           ;	Code Protection Block 1
  2379                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2380                           ;	Code Protection Block 2
  2381                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2382                           ;	Code Protection Block 3
  2383                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2384   300008                     	org	3145736
  2385   300008  0F                 	db	15
  2386                           
  2387                           ;Config register CONFIG5H @ 0x300009
  2388                           ;	Boot Block Code Protection bit
  2389                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2390                           ;	Data EEPROM Code Protection bit
  2391                           ;	CPD = OFF, Data EEPROM not code-protected
  2392   300009                     	org	3145737
  2393   300009  C0                 	db	192
  2394                           
  2395                           ;Config register CONFIG6L @ 0x30000A
  2396                           ;	Write Protection Block 0
  2397                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2398                           ;	Write Protection Block 1
  2399                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2400                           ;	Write Protection Block 2
  2401                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2402                           ;	Write Protection Block 3
  2403                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  2404   30000A                     	org	3145738
  2405   30000A  0F                 	db	15
  2406                           
  2407                           ;Config register CONFIG6H @ 0x30000B
  2408                           ;	Configuration Register Write Protection bit
  2409                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2410                           ;	Boot Block Write Protection bit
  2411                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2412                           ;	Data EEPROM Write Protection bit
  2413                           ;	WRTD = OFF, Data EEPROM not write-protected
  2414   30000B                     	org	3145739
  2415   30000B  E0                 	db	224
  2416                           
  2417                           ;Config register CONFIG7L @ 0x30000C
  2418                           ;	Table Read Protection Block 0
  2419                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  2420                           ;	Table Read Protection Block 1
  2421                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2422                           ;	Table Read Protection Block 2
  2423                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  2424                           ;	Table Read Protection Block 3
  2425                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  2426   30000C                     	org	3145740
  2427   30000C  0F                 	db	15
  2428                           
  2429                           ;Config register CONFIG7H @ 0x30000D
  2430                           ;	Boot Block Table Read Protection bit
  2431                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2432   30000D                     	org	3145741
  2433   30000D  40                 	db	64
  2434                           tosu	equ	0xFFF
  2435                           tosh	equ	0xFFE
  2436                           tosl	equ	0xFFD
  2437                           stkptr	equ	0xFFC
  2438                           pclatu	equ	0xFFB
  2439                           pclath	equ	0xFFA
  2440                           pcl	equ	0xFF9
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodh	equ	0xFF4
  2446                           prodl	equ	0xFF3
  2447                           indf0	equ	0xFEF
  2448                           postinc0	equ	0xFEE
  2449                           postdec0	equ	0xFED
  2450                           preinc0	equ	0xFEC
  2451                           plusw0	equ	0xFEB
  2452                           fsr0h	equ	0xFEA
  2453                           fsr0l	equ	0xFE9
  2454                           wreg	equ	0xFE8
  2455                           indf1	equ	0xFE7
  2456                           postinc1	equ	0xFE6
  2457                           postdec1	equ	0xFE5
  2458                           preinc1	equ	0xFE4
  2459                           plusw1	equ	0xFE3
  2460                           fsr1h	equ	0xFE2
  2461                           fsr1l	equ	0xFE1
  2462                           bsr	equ	0xFE0
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           preinc2	equ	0xFDC
  2467                           plusw2	equ	0xFDB
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        153
    BSS         38
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      86
    BANK0           160      0     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    uart_wr_str@str	PTR unsigned char  size(2) Largest target is 48
		 -> instructions3(BANK0[48]), instructions2(BANK0[39]), instructions1(BANK0[37]), text1(COMRAM[16]), 
		 -> wii_classic_packet(COMRAM[9]), 

    rx_str_interrupt	PTR volatile unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), wii_classic_packet(COMRAM[9]), 


Critical Paths under _main in COMRAM

    _main->_uart_wr_str
    _uart_wr_str->_tx1
    _uart_wr_str->_tx2
    _gpio_init->_high_beams_off

Critical Paths under _UART_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _UART_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _UART_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _UART_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _UART_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _UART_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _UART_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _UART_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _UART_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1828
                                             12 COMRAM     5     5      0
                          _gpio_init
                     _high_beams_off
                      _high_beams_on
           _rx1_overrun_detect_reset
                           _spi_data
                    _spi_master_init
                                _tx1
                                _tx2
                          _uart_init
                        _uart_wr_str
 ---------------------------------------------------------------------------------
 (1) _uart_wr_str                                          5     3      2     581
                                              7 COMRAM     5     3      2
                                _tx1
                                _tx2
 ---------------------------------------------------------------------------------
 (2) _tx2                                                  1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _tx1                                                  1     1      0      22
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_data                                             3     2      1    1190
                                              6 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _rx1_overrun_detect_reset                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _high_beams_on                                        1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _gpio_init                                            0     0      0       0
                     _debug_leds_off
                     _high_beams_off
 ---------------------------------------------------------------------------------
 (1) _high_beams_off                                       1     1      0       0
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _debug_leds_off                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _UART_ISR                                             6     6      0       0
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_init
     _debug_leds_off
     _high_beams_off
   _high_beams_off
   _high_beams_on
   _rx1_overrun_detect_reset
   _spi_data
   _spi_master_init
   _tx1
   _tx2
   _uart_init
   _uart_wr_str
     _tx1
     _tx2

 _UART_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      52        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      34        0.0%
BANK14             100      0       0      32        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      7C       5       77.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      56       1       91.5%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITBIGSFRllll       33      0       0      51        0.0%
BITBIGSFRhl         21      0       0      38        0.0%
BITBIGSFRllhhh       F      0       0      48        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlhhhll      9      0       0      41        0.0%
BITBIGSFRlhlhl       7      0       0      45        0.0%
BITBIGSFRlhhlh       7      0       0      42        0.0%
BITBIGSFRlhlhhh      6      0       0      43        0.0%
BITBIGSFRlhllh       5      0       0      46        0.0%
BITBIGSFRlhlhhl      5      0       0      44        0.0%
BITBIGSFRlhhhlh      3      0       0      40        0.0%
BITBIGSFRlhhhhl      3      0       0      39        0.0%
BITBIGSFRllhhl       1      0       0      49        0.0%
BITBIGSFRllhl        1      0       0      50        0.0%
BITBIGSFRlhlll       1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2      33        0.0%
DATA                 0      0      D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Oct 24 19:46:53 2022

                  uart_wr_str@str 004B          _rx1_overrun_detect_reset 07DA  
                 uart_wr_str@port 004F                                l68 0316  
                             l201 071E                               l210 056A  
                             l220 05CA                               l212 0578  
                             l140 07BA                               l213 05E2  
                             l205 053C                               l222 05D8  
                             l134 06EE                               l223 05E4  
                             l215 059A                               l207 054A  
                             l143 07F8                               l304 0810  
                             l217 05A8                               l137 07A0  
                             l146 080A                               l163 0522  
                             l167 07F4                               l292 074C  
                             l295 0774                               l298 079C  
                             u310 07AE                               u311 07AA  
                             u400 05D8                               u320 0806  
                             u401 05D4                               u321 0802  
                             u330 0536                               u410 0492  
                             u331 0532                               u411 048E  
                             u340 054A                               u420 04C0  
                             u341 0546                               u421 04BC  
                             u350 0564                               u430 04EE  
                             u510 0404                               u351 0560  
                             u431 04EA                               u511 03FE  
                             u440 07E8                               u360 0578  
                             u520 0406                               u441 07E4  
                             u361 0574                               u505 03F0  
                             u370 0594                               u530 0418  
                             u506 03F2                               u450 02B6  
                             u371 0590                               u531 0414  
                             u451 02B2                               u380 05A8  
                             u540 0432                               u460 02D4  
                             u381 05A4                               u541 042C  
                             u461 02D0                               u390 05C4  
                             u550 0434                               u391 05C0  
                             u607 07B4                               u560 0452  
                             u617 07EC                               u561 044E  
                             u627 0758                               u475 02E8  
                             u637 0766                               u485 02FA  
                             u647 0780                               u495 03E6  
                             u496 03E8                               u657 078E  
                  spi_data@device 004C                               _tx1 079E  
                             _tx2 07F6                               wreg 000FE8  
                      _TXSTA1bits 000FAC                        _TXSTA2bits 000F72  
                            l1500 06D4                              l1510 06DE  
                            l1502 06D6                              l1430 07A0  
                            l1440 0776                              l1520 06E8  
                            l1512 06E0                              l1504 06D8  
                            l1432 07AE                              l1600 00FE  
                            l1442 077A                              l1450 0736  
                            l1530 0554                              l1522 06EA  
                            l1514 06E2                              l1506 06DA  
                            l1434 07B2                              l1610 0124  
                            l1602 0100                              l1444 0788  
                            l1460 0740                              l1452 0738  
                            l1540 05C4                              l1532 0564  
                            l1524 06EC                              l1516 06E4  
                            l1508 06DC                              l1436 07F8  
                            l1700 02A6                              l1620 0152  
                            l1612 0132                              l1604 010A  
                            l1446 080C                              l1462 0744  
                            l1454 073A                              l1534 0582  
                            l1542 05E2                              l1526 0526  
                            l1470 06F8                              l1518 06E6  
                            l1438 0806                              l1550 0476  
                            l1710 02D6                              l1702 02B6  
                            l1630 0178                              l1622 0158  
                            l1614 0138                              l1606 0118  
                            l1456 073C                              l1448 0720  
                            l1536 0594                              l1528 0536  
                            l1480 070E                              l1472 0706  
                            l1464 06F0                              l1560 04C4  
                            l1552 047A                              l1720 0346  
                            l1712 031E                              l1704 02BE  
                            l1640 0196                              l1632 017E  
                            l1624 0166                              l1616 013E  
                            l1608 011E                              l1458 073E  
                            l1538 05B2                              l1490 0718  
                            l1482 0710                              l1474 0708  
                            l1466 06F4                              l1562 04D2  
                            l1554 0496                              l1570 051C  
                            l1546 0464                              l1722 0350  
                            l1714 0328                              l1706 02C2  
                            l1650 01C8                              l1642 01A0  
                            l1634 0184                              l1626 016C  
                            l1618 014C                              l1580 0760  
                            l1492 071A                              l1484 0712  
                            l1476 070A                              l1468 06F6  
                            l1564 04D6                              l1556 04A4  
                            l1548 0468                              l1740 03F2  
                            l1724 035A                              l1716 0332  
                            l1732 0376                              l1708 02D4  
                            l1660 01FA                              l1652 01D2  
                            l1644 01AE                              l1636 018A  
                            l1628 0172                              l1582 07DA  
                            l1494 071C                              l1486 0714  
                            l1478 070C                              l1558 04A8  
                            l1742 0418                              l1726 0364  
                            l1718 033C                              l1734 03D8  
                            l1670 022C                              l1662 0204  
                            l1654 01DC                              l1646 01B4  
                            l1638 0190                              l1590 00E2  
                            l1576 074E                              l1584 07E8  
                            l1488 0716                              l1496 06BC  
                            l1568 04F2                              l1744 0420  
                            l1736 03DE                              l1728 036E  
                            l1680 0258                              l1672 0236  
                            l1664 020E                              l1656 01E6  
                            l1648 01BE                              l1592 00EA  
                            l1578 0752                              l1586 07EA  
                            l1498 06C4                              l1746 0452  
                            l1738 03E8                              l1842 038A  
                            l1690 0282                              l1682 0262  
                            l1674 0240                              l1666 0218  
                            l1658 01F0                              l1594 00EC  
                            l1588 07F2                              l1844 0506  
                            l1748 0456                              l1692 028C  
                            l1684 026A                              l1676 0248  
                            l1668 0222                              l1596 00F0  
                            l1694 0296                              l1686 0270  
                            l1678 024E                              l1598 00FC  
                            l1696 029E                              l1688 027A  
                            l1698 02A4                              ?_tx1 0044  
                            ?_tx2 0044                              _LATA 000F89  
                            _LATD 000F8C                              _IPEN 007E87  
                            _main 00E2                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            fsr2l 000FD9                              btemp 0057  
                            start 00DE                      ___param_bank 000000  
                 spi_data@tx_data 004A                             ??_tx1 004A  
                           ??_tx2 004A                      _BAUDCON1bits 000FB8  
                    _BAUDCON2bits 000F70                             ?_main 0044  
                 _ticks_per_frame 0027                             i2l172 00C8  
                           i2l182 00CA                             i2l174 0062  
                   _arrow_buttons 0014                             _TMR1H 000FCF  
                           _TMR1L 000FCE                             _TRISD 000F95  
                 ??_high_beams_on 004A                  __end_of_UART_ISR 00DE  
                           _text1 002A                             tablat 000FF5  
                           ttemp5 0058                             ttemp6 005B  
                           ttemp7 005F                             status 000FD8  
                           wtemp8 0058                    _debug_leds_off 080C  
              _debouncing_counter 0025                   __initialization 0662  
                    __end_of_main 0462               _servo_controller_tx 0026  
                          ??_main 0050                     __activetblptr 000002  
                          _ADCON0 000FC2                            _ANSELA 000F38  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                          _ANSELD 000F3B                            _ANSELE 000F3C  
                          i2l1760 0040                            i2l1770 007E  
                          i2l1762 0048                            i2l1754 001A  
                          i2l1772 0086                            i2l1764 005A  
                          i2l1756 0028                            i2l1846 00B2  
                          i2l1766 0066                            i2l1758 002E  
                          i2l1768 0072                            i2l1776 009E  
                          _INTCON 000FF2                            _RCREG1 000FAE  
                          _SPBRG1 000FAF                            _SPBRG2 000F75  
          __end_of_debug_leds_off 0812                            _TXREG1 000FAD  
                          _TXREG2 000F73                 spi_data@data_read 004B  
                ??_high_beams_off 004A                            clear_0 06A8  
                          isa$std 000001                      __pdataCOMRAM 0027  
                __end_of_spi_data 05E6                      ?_uart_wr_str 004B  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                        __accesstop 0060  
         __end_of__initialization 06AE        ??_rx1_overrun_detect_reset 004A  
                 ?_debug_leds_off 0044                     ___rparam_used 000001  
                  __pcstackCOMRAM 0044                      __pidataBANK0 05E6  
                       ?_UART_ISR 0044                        __pnvCOMRAM 0055  
                      ??_UART_ISR 0044                           i2u57_40 0028  
                         i2u57_41 0024                           i2u58_40 0040  
                         i2u58_41 003C                           i2u59_40 005A  
                         i2u59_41 0056                           _SPBRGH1 000FB0  
                         _SPBRGH2 000F76                           _SSP1ADD 000FC8  
                         _SSP1BUF 000FC9                      _classic_ctrl 0001  
                 _debouncing_flag 0043                           __Hparam 0000  
                         __Lparam 0000                  _rx_str_interrupt 0055  
                       ?_spi_data 004A                           __pcinit 0662  
                         __ramtop 1000                           __ptext0 00E2  
                         __ptext1 0462                           __ptext2 07F6  
                         __ptext3 079E                           __ptext4 06BC  
                         __ptext5 06F0                           __ptext6 0524  
                         __ptext7 07DA                           __ptext8 074E  
                         __ptext9 0720                 __end_of_gpio_init 074E  
                       _T1CONbits 000FCD                           _rx_char 0023  
           __end_of_high_beams_on 0776              end_of_initialization 06AE  
                _shoulder_buttons 000E  __end_of_rx1_overrun_detect_reset 07F6  
                   __Lmediumconst 0000                 __end_of_uart_init 06F0  
                      ??_spi_data 004B                           postdec1 000FE5  
                      _timer1_reg 001C                           postinc0 000FEE  
               ??_spi_master_init 004A                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                  ??_debug_leds_off 004A  
                     _CM1CON0bits 000F79                       _CM2CON0bits 000F78  
                   __pidataCOMRAM 07BC               start_initialization 0662  
                     __end_of_tx1 07BC                       __end_of_tx2 080C  
                   _instructions1 00B7                     _instructions2 0090  
                   _instructions3 0060                       __pdataBANK0 0060  
                     _act_buttons 0018         ?_rx1_overrun_detect_reset 0044  
                     __pbssCOMRAM 0001                _wii_classic_packet 003A  
                       __pintcode 0008                         _gpio_init 0720  
                       _new_frame 0029                   _spi_master_init 06F0  
                        _LATAbits 000F89                          _LATBbits 000F8A  
                        _PIE1bits 000F9D                          _PIR1bits 000F9E  
                        _PIR3bits 000FA4                          _UART_ISR 0008  
                       _uart_init 06BC                     ??_uart_wr_str 004D  
                      ?_gpio_init 0044                      _recording_on 0022  
                       copy_data0 0676                         copy_data1 0696  
                     _aux_buttons 0008                          __Hrparam 0000  
                        __Lrparam 0000                        ?_uart_init 0044  
                  _high_beams_off 0776        _demuxed_controller_signals 0024  
         __end_of_spi_master_init 0720                          __ptext10 0776  
                        __ptext11 080C                      _SSP1CON1bits 000FC6  
             __end_of_uart_wr_str 0524                      _tick_counter 001E  
                        isa$xinst 000000                          _spi_data 0524  
                        int$flags 0057            __end_of_high_beams_off 079E  
                    _SSP1STATbits 000FC7                          tx1@data1 004A  
                        tx2@data2 004A                      _timer1_reg_h 0021  
                    _timer1_reg_l 0020                        _INTCONbits 000FF2  
                     ??_gpio_init 004B                     _high_beams_on 074E  
                        intlevel2 0000                        _RCSTA1bits 000FAB  
                      _RCSTA2bits 000F71                       ??_uart_init 004A  
                 ?_high_beams_off 0044                       _uart_wr_str 0462  
                ?_spi_master_init 0044                    ?_high_beams_on 0044  
